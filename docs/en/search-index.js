antoraSearch.initSearch(lunr, {"index":{"version":"2.3.8","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,27.908,1,38.835,2,40.098]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[3,22.909,4,36.306,5,24.246,6,33.741,7,32.413]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[8,30.558,9,34.974,10,33.845]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[11,38.599,12,62.838]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1",[]],["name/1",[0,0.22]],["text/1",[4,4.803,6,7.281,7,6.353,9,2.341,10,3.493,13,5.774,14,2.895,15,4.167,16,3.209,17,4.167,18,3.34,19,4.372,20,2.458,21,4.891,22,4.803,23,2.64,24,3.449,25,3.318,26,3.613,27,2.599,28,4.071,29,2.836,30,6.49,31,2.426,32,3.318,33,4.167,34,2.781,35,3.449,36,2.836,37,3.033,38,2.731,39,2.64,40,5.707,41,4.167,42,3.209,43,2.895,44,3.033,45,2.96,46,3.569,47,2.525,48,2.525,49,3.449,50,2.96,51,2.731,52,3.209,53,3.033,54,4.288,55,3.613,56,4.167,57,3.115,58,4.167,59,4.167,60,3.033,61,2.781,62,4.509,63,3.115,64,5.115,65,3.115,66,3.318,67,4.167,68,2.49,69,1.966,70,2.684,71,3.209,72,3.033,73,3.033,74,2.895,75,3.115,76,3.449,77,3.613,78,3.033,79,5.115,80,4.372,81,5.571,82,3.128,83,3.833,84,4.167,85,3.449,86,2.731,87,2.781,88,4.167,89,4.167,90,3.033,91,1.922,92,2.781,93,4.167,94,2.29,95,2.836,96,2.397,97,3.833,98,4.167,99,2.96,100,3.449,101,2.895,102,2.895,103,2.895,104,2.458,105,3.209,106,2.458,107,3.449,108,3.833,109,3.209,110,3.209,111,2.836,112,2.895,113,2.64,114,3.209,115,3.318,116,4.167,117,2.561,118,4.167,119,2.063,120,2.341,121,4.167,122,3.833,123,4.167,124,3.833,125,4.167,126,2.96,127,2.731,128,3.033,129,2.599,130,3.033,131,3.115,132,2.08,133,3.833,134,3.318,135,3.115,136,3.833,137,3.833,138,2.561,139,3.209,140,3.833,141,2.561,142,2.49,143,2.96,144,3.833,145,3.318,146,4.167,147,2.525,148,4.167,149,4.167,150,3.833,151,4.167,152,4.167,153,4.167,154,2.96,155,4.167,156,3.833,157,4.167,158,4.167,159,7.841,160,4.167,161,4.167,162,4.167,163,4.167,164,4.167,165,4.167,166,4.167,167,4.167,168,4.167,169,4.167,170,4.167,171,4.167]],["component/1",[18,0.186,172,0.252]],["title/2-1",[0,27.908,2,40.098,173,39.446]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[3,29.366,173,39.446,174,62.26]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[8,23.84,18,18.41,132,24.246,173,30.773,175,25.369]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[69,29.366,176,46.538,177,38.261]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[38,35.757,69,25.739,119,27.009,178,42.015]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2-6",[119,30.815,179,57.27,180,49.568]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["title/2-7",[119,27.009,181,50.197,182,50.197,183,39.718]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["title/2-8",[119,27.009,175,28.502,184,50.197,185,47.316]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["title/2-9",[119,24.04,185,42.114,186,44.678,187,34.504,188,21.476]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["title/2-10",[119,30.815,189,51.528,190,53.983]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["title/2-11",[9,30.654,177,33.535,191,40.79,192,38.766]],["name/2-11",[]],["text/2-11",[]],["component/2-11",[]],["title/2-12",[46,26.979,190,42.114,193,40.199,194,32.413,195,31.282]],["name/2-12",[]],["text/2-12",[]],["component/2-12",[]],["title/2-13",[196,57.27,197,33.496,198,39.446]],["name/2-13",[]],["text/2-13",[]],["component/2-13",[]],["title/2-14",[173,34.574,199,50.197,200,38.766,201,54.57]],["name/2-14",[]],["text/2-14",[]],["component/2-14",[]],["title/2-15",[46,26.979,194,32.413,195,31.282,202,44.678,203,40.199]],["name/2-15",[]],["text/2-15",[]],["component/2-15",[]],["title/2-16",[194,32.413,203,40.199,204,44.678,205,28.643,206,25.131]],["name/2-16",[]],["text/2-16",[]],["component/2-16",[]],["title/2-17",[18,16.587,69,20.64,207,37.943,208,22.035,209,40.253,210,33.692]],["name/2-17",[]],["text/2-17",[]],["component/2-17",[]],["title/2-18",[11,33.159,173,39.446,211,62.26]],["name/2-18",[]],["text/2-18",[]],["component/2-18",[]],["title/2-19",[46,30.312,195,35.145,212,40.79,213,36.416]],["name/2-19",[]],["text/2-19",[]],["component/2-19",[]],["title/2-20",[19,42.362,64,49.568,214,35.806]],["name/2-20",[]],["text/2-20",[]],["component/2-20",[]],["title/2-21",[195,31.282,213,32.413,215,38.669,216,37.396,217,29.848]],["name/2-21",[]],["text/2-21",[]],["component/2-21",[]],["title/2-22",[213,41.548,217,38.261,218,51.528]],["name/2-22",[]],["text/2-22",[]],["component/2-22",[]],["title/2-23",[46,30.312,78,39.718,213,36.416,219,47.316]],["name/2-23",[]],["text/2-23",[]],["component/2-23",[]],["title/2-24",[206,32.213,213,41.548,220,53.983]],["name/2-24",[]],["text/2-24",[]],["component/2-24",[]],["title/2-25",[206,32.213,221,37.204,222,43.251]],["name/2-25",[]],["text/2-25",[]],["component/2-25",[]],["title/2-26",[173,34.574,223,33.535,224,35.145,225,45.164]],["name/2-26",[]],["text/2-26",[]],["component/2-26",[]],["title/2",[173,45.917,226,55.799]],["name/2",[227,0.306]],["text/2",[0,3.601,1,1.29,3,3.225,5,6.162,6,0.776,8,0.548,9,1.623,10,1.96,11,0.31,13,0.732,18,2.252,19,0.396,20,0.95,21,2.451,22,0.835,23,0.708,26,0.504,27,1.005,28,0.708,29,0.76,31,0.339,34,1.075,39,0.708,40,0.423,44,0.813,45,1.144,46,4.843,47,0.352,48,2.184,51,0.732,54,0.388,62,4.19,63,0.435,69,1.701,70,1.861,72,0.423,73,0.813,74,0.404,75,0.835,78,3.85,80,0.76,82,0.283,86,0.381,87,0.745,91,2.918,92,2.175,94,1.588,101,1.119,103,0.776,104,2.126,106,3.119,113,0.368,117,1.271,119,1.43,120,1.401,122,1.027,128,0.423,129,0.363,132,4.476,138,0.357,141,0.357,143,0.413,147,0.976,154,1.47,173,4.525,175,3.731,180,5.314,182,1.482,183,0.813,185,1.794,187,1.144,188,0.494,190,5.788,191,0.435,192,0.413,194,5.984,195,0.719,198,1.311,200,2.315,203,3.742,205,1.704,206,2.968,208,4.1,209,5.076,213,1.38,214,2.6,216,3.481,217,4.389,221,3.427,222,0.404,223,0.357,224,2.322,225,0.481,227,0.697,228,1.271,229,0.448,230,1.664,231,0.396,232,0.388,233,4.121,234,0.582,235,0.582,236,1.664,237,0.347,238,0.448,239,0.535,240,0.423,241,2.065,242,0.582,243,0.423,244,0.481,245,1.037,246,0.504,247,0.86,248,0.435,249,1.511,250,0.582,251,0.582,252,1.985,253,0.924,254,3.148,255,0.504,256,1.546,257,0.413,258,1.096,259,0.435,260,0.582,261,0.95,262,1.117,263,0.582,264,0.719,265,0.504,266,1.593,267,0.423,268,4.012,269,0.343,270,1.49,271,0.448,272,0.448,273,0.448,274,0.582,275,0.448,276,1.861,277,0.535,278,0.423,279,0.423,280,0.719,281,0.274,282,2.695,283,2.16,284,1.546,285,0.889,286,3.6,287,1.546,288,1.482,289,0.582,290,0.423,291,1.397,292,0.413,293,3.966,294,0.404,295,1.172,296,2.644,297,0.535,298,0.381,299,0.264,300,0.404,301,0.582,302,0.463,303,0.835,304,1.58,305,2.945,306,3.93,307,1.611,308,0.65,309,0.413,310,0.463,311,4.86,312,1.611,313,1.647,314,1.732,315,3.582,316,2.531,317,1.005,318,1.117,319,1.22,320,0.582,321,3.26,322,0.976,323,1.075,324,0.381,325,0.413,326,2.702,327,0.86,328,0.76,329,1.075,330,1.397,331,2.069,332,2.776,333,0.924,334,0.504,335,0.375,336,0.368,337,0.582,338,0.481,339,0.435,340,1.117,341,0.582,342,0.582,343,1.794,344,0.435,345,0.582,346,0.582,347,0.381,348,0.535,349,0.535,350,0.504,351,0.535,352,0.504,353,1.144,354,0.686,355,0.582,356,0.582,357,0.582,358,0.582,359,0.535,360,0.776,361,0.423,362,0.582,363,0.86,364,0.535,365,0.504,366,1.204,367,0.582,368,0.404,369,0.535,370,1.117,371,0.582,372,1.021,373,0.582,374,0.404,375,0.582,376,0.582,377,1.117,378,0.381,379,0.582,380,0.481,381,0.582,382,0.448,383,0.404,384,1.647,385,0.435,386,0.582,387,1.117,388,1.712,389,1.611,390,1.647,391,1.117,392,2.069,393,1.117,394,0.582,395,0.428,396,0.582,397,0.582,398,0.582,399,0.582,400,1.117,401,0.582,402,0.582,403,0.582,404,0.582,405,1.117,406,0.582,407,0.582,408,0.582,409,0.463,410,0.582,411,2.003,412,0.423,413,1.611,414,1.117,415,0.582,416,0.481,417,1.117,418,1.611,419,0.582,420,1.117,421,0.582,422,0.582,423,0.388,424,0.582,425,0.504,426,0.404,427,0.582,428,0.582,429,0.582,430,0.582,431,0.582,432,0.582,433,0.835,434,0.388,435,0.582,436,0.582,437,0.582,438,0.582,439,0.582,440,0.504,441,0.582,442,0.582,443,0.504,444,2.069,445,0.463,446,1.117,447,0.582,448,1.92,449,0.582,450,0.582,451,0.889,452,0.968,453,1.119,454,4.798,455,1.776,456,0.396,457,0.582,458,1.021,459,0.582,460,1.397,461,0.582,462,0.86,463,1.117,464,0.582,465,1.117,466,0.582,467,1.117,468,1.117,469,1.117,470,0.835,471,1.117,472,1.117,473,0.582,474,1.117,475,1.117,476,3.466,477,1.117,478,1.021,479,1.49,480,0.448,481,0.396,482,0.835,483,0.793,484,1.283,485,0.448,486,0.835,487,0.813,488,0.481,489,1.546,490,0.463,491,0.504,492,0.697,493,0.381,494,0.396,495,0.363,496,0.413,497,0.435,498,0.413,499,0.835,500,0.582,501,3.683,502,0.582,503,1.117,504,1.117,505,1.333,506,0.435,507,0.404,508,0.481,509,1.776,510,0.463,511,0.481,512,0.396,513,1.056,514,0.435,515,0.347,516,1.437,517,1.056,518,0.582,519,0.582,520,2.069,521,6.838,522,0.582,523,0.582,524,0.423,525,0.582,526,0.582,527,1.075,528,0.463,529,2.792,530,5.492,531,0.535,532,0.535,533,0.504,534,0.582,535,0.745,536,1.283,537,2.698,538,0.423,539,0.435,540,0.481,541,0.423,542,2.998,543,0.504,544,0.448,545,1.333,546,0.582,547,0.889,548,1.355,549,1.593,550,0.968,551,0.463,552,0.535,553,0.357,554,0.423,555,0.582,556,0.582,557,0.582,558,1.47,559,0.582,560,0.582,561,0.582,562,0.448,563,0.504,564,0.448,565,0.677,566,0.582,567,1.119,568,0.381,569,1.24,570,1.24,571,0.535,572,0.448,573,0.504,574,0.423,575,0.535,576,0.535,577,0.448,578,0.339,579,0.404,580,0.535,581,0.413,582,0.582,583,0.582,584,0.404,585,3.026,586,0.582,587,0.448,588,0.582,589,0.582,590,0.582,591,0.423,592,1.611,593,1.117,594,1.611,595,1.611,596,0.463,597,0.582,598,1.611,599,0.535,600,0.481,601,1.117,602,0.582,603,0.481,604,1.117,605,0.535,606,0.448,607,0.413,608,0.582,609,1.117,610,0.924,611,0.396,612,0.463,613,0.582,614,0.582,615,1.027,616,1.593,617,0.76,618,0.435,619,0.481,620,0.481,621,0.423,622,0.889,623,0.481,624,0.582,625,0.582,626,3.605,627,0.582,628,1.117,629,1.027,630,0.732,631,0.535,632,1.611,633,0.582,634,0.582,635,0.582,636,0.582,637,1.611,638,0.582,639,5.048,640,2.069,641,2.998,642,2.998,643,2.998,644,1.611,645,0.582,646,0.582,647,0.582,648,0.582,649,0.582,650,0.582,651,1.482,652,0.582,653,0.582,654,1.117,655,1.117,656,0.582,657,0.582,658,5.942,659,6.239,660,6.646,661,0.582,662,6.139,663,5.736,664,0.582,665,0.582,666,1.117,667,0.582,668,0.582,669,1.117,670,0.582,671,0.582,672,1.117,673,1.611,674,0.582,675,0.582,676,0.582,677,0.582,678,0.582,679,0.582,680,1.117,681,0.582,682,0.582,683,0.582,684,0.582,685,0.582,686,1.117,687,0.582,688,0.582,689,0.582,690,0.582,691,0.582,692,0.582,693,0.582,694,1.117,695,1.117,696,0.413,697,0.535,698,0.889,699,0.582,700,0.582,701,0.535,702,0.504,703,0.582,704,0.481,705,1.408,706,0.448,707,0.448,708,0.423,709,0.504,710,0.504,711,0.396,712,2.494,713,2.162,714,0.404,715,0.504,716,1.027,717,1.027,718,0.504,719,0.86,720,0.582,721,0.448,722,0.375,723,0.435,724,0.463,725,0.404,726,0.582,727,2.069,728,0.582,729,0.582,730,0.582,731,0.582,732,0.582,733,0.582,734,0.582,735,0.582,736,0.404,737,0.582,738,0.582,739,0.463,740,0.582,741,0.582,742,2.16,743,0.582,744,0.582,745,0.582,746,1.117,747,0.448,748,0.835,749,0.435,750,0.404,751,0.357,752,0.396,753,0.448,754,3.582,755,1.117,756,1.117,757,1.117,758,0.582,759,0.582,760,1.204,761,0.404,762,0.582,763,0.582,764,0.582,765,0.582,766,0.504,767,0.413,768,1.117,769,0.582,770,0.582,771,1.117,772,0.582,773,0.463,774,0.582,775,0.968,776,0.582]],["component/2",[18,0.186,172,0.252]],["title/3-1",[0,32.486,2,46.675]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[3,34.182,119,35.87]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[9,30.654,10,29.665,119,27.009,777,37.909]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3-4",[1,27.296,8,21.478,86,28.674,208,22.035,778,34.839,779,34.839]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["title/3-5",[11,38.599,296,34.718]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["title/3",[779,69.02]],["name/3",[453,0.341]],["text/3",[0,2,1,2.783,5,6.578,9,2.506,10,2.425,18,3.1,20,1.564,21,1.655,29,3.928,31,1.544,38,1.738,48,6.607,51,1.738,68,1.585,69,3.193,86,2.923,91,1.223,117,1.63,119,5.85,127,1.738,132,1.324,134,2.112,138,1.63,147,1.607,191,1.983,194,5.803,198,1.681,203,4.778,205,1.564,208,2.246,256,1.983,268,1.49,281,1.251,296,1.271,299,2.028,305,5.611,308,2.597,323,1.77,326,1.585,334,2.3,335,1.708,336,1.681,338,2.195,339,1.983,348,2.44,354,1.63,378,1.738,388,7.198,390,6.924,411,1.63,454,1.607,455,2.742,493,1.738,501,6.338,529,1.884,773,4.596,779,8.395,780,1.738,781,2.3,782,1.983,783,3.718,784,1.931,785,2.195,786,2.3,787,3.035,788,2.195,789,1.931,790,2.44,791,2.195,792,4.461,793,4.461,794,4.104,795,2.653,796,2.653,797,2.3,798,4.104,799,2.653,800,2.195,801,2.653,802,2.653,803,2.653,804,2.653,805,8.697,806,5.773,807,8,808,2.653,809,5.773,810,4.461,811,8.697,812,2.653,813,2.653,814,1.931,815,2.653,816,2.653,817,2.653,818,2.653,819,2.3,820,4.461,821,2.44,822,2.112,823,2.653,824,2.653,825,2.653,826,5.773,827,2.653,828,4.461,829,6.226,830,2.653,831,5.773,832,2.653,833,4.461,834,4.461,835,5.773,836,2.653,837,2.653,838,5.773,839,2.653,840,4.461,841,4.104,842,2.653,843,2.653,844,2.653,845,2.653,846,4.461,847,5.773,848,4.461,849,2.653,850,2.653,851,2.653,852,2.3,853,2.653,854,2.653,855,4.461,856,6.226,857,2.653,858,2.653,859,2.653,860,2.653,861,4.461,862,5.773,863,2.653,864,2.653,865,2.653,866,2.653,867,2.653,868,2.653,869,2.653,870,2.44,871,2.44,872,2.653,873,2.631,874,1.983,875,1.738,876,2.653,877,2.653,878,2.653,879,2.653,880,2.653,881,2.653,882,2.653,883,2.112]],["component/3",[18,0.186,172,0.252]],["title/4-1",[0,32.486,2,46.675]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[3,34.182,884,54.171]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[777,50.345,885,66.664]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4-4",[886,51.483,887,66.664]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["title/4-5",[8,35.571,119,35.87]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["title/4-6",[9,30.654,10,29.665,119,27.009,176,40.79]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["title/4-7",[11,33.159,175,32.519,281,29.366]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["title/4-8",[206,32.213,212,46.538,268,34.974]],["name/4-8",[]],["text/4-8",[]],["component/4-8",[]],["title/4-9",[19,42.362,888,47.936,889,39.446]],["name/4-9",[]],["text/4-9",[]],["component/4-9",[]],["title/4-10",[215,57.698,316,46.675]],["name/4-10",[]],["text/4-10",[]],["component/4-10",[]],["title/4-11",[91,33.424,890,72.473]],["name/4-11",[]],["text/4-11",[]],["component/4-11",[]],["title/4",[891,79.745]],["name/4",[423,0.328]],["text/4",[0,1.71,1,1.378,3,1.8,5,5.679,9,1.241,10,1.201,11,2.032,18,3.765,20,2.25,21,3.742,22,1.651,23,1.399,27,3.143,29,1.503,31,1.286,39,2.418,46,2.12,47,1.338,48,2.312,61,4.003,62,1.27,69,1.042,74,1.534,86,5.208,87,2.546,91,1.76,94,1.213,104,2.25,117,3.096,119,3.353,126,1.569,127,1.447,128,1.607,129,1.378,132,2.515,141,1.357,173,1.399,175,4.151,188,0.976,194,1.474,195,1.422,197,1.188,200,1.569,205,2.971,206,4.348,208,4.428,213,1.474,221,1.32,224,1.422,228,2.345,233,3.192,240,1.607,241,1.399,245,1.422,249,2.312,252,1.758,268,1.241,270,1.32,276,2.458,281,1.8,295,1.607,296,2.874,299,1.735,300,1.534,308,3.493,309,1.569,311,5.408,316,2.458,317,2.38,319,3.538,324,1.447,326,3.011,328,1.503,354,3.687,368,1.534,372,1.399,383,1.534,390,1.758,411,1.357,434,3.362,452,1.915,454,1.338,455,2.345,456,1.503,479,1.32,483,2.711,493,1.447,498,3.579,509,2.345,514,1.651,515,2.28,530,2.38,548,2.5,553,1.357,558,3.579,568,2.5,606,1.7,607,1.569,611,1.503,617,1.503,621,1.607,705,2.596,736,1.534,767,3.579,780,2.5,781,1.915,782,1.651,783,1.422,786,1.915,788,1.828,870,2.031,873,1.302,875,1.447,884,1.651,885,6.819,887,4.634,891,8.403,892,9.934,893,2.031,894,2.208,895,2.208,896,2.208,897,2.852,898,1.828,899,2.208,900,1.7,901,3.038,902,3.879,903,2.208,904,3.038,905,3.667,906,1.915,907,1.915,908,1.915,909,1.503,910,1.828,911,1.534,912,1.447,913,2.711,914,4.776,915,2.596,916,3.816,917,2.208,918,2.031,919,1.758,920,1.828,921,1.7,922,1.758,923,1.915,924,3.038,925,1.758,926,2.208,927,1.915,928,1.828,929,2.031,930,2.208,931,1.915,932,2.596,933,2.031,934,1.828,935,1.447,936,1.828,937,1.399,938,1.651,939,1.474,940,1.7,941,2.938,942,2.938,943,1.534,944,6.774,945,1.607,946,1.915,947,3.667,948,2.208,949,1.32,950,2.208,951,2.5,952,3.51,953,2.208,954,2.208,955,1.7,956,1.828,957,3.51,958,3.816,959,1.607,960,1.651,961,7.948,962,5.999,963,2.208,964,1.828,965,2.208,966,1.7,967,1.651,968,1.607,969,1.534,970,1.534,971,1.758,972,2.208,973,3.51,974,2.651,975,2.208,976,1.651,977,2.208,978,2.031,979,1.828,980,2.031,981,1.569,982,1.828,983,3.038,984,1.651,985,2.208,986,1.828,987,1.915,988,2.208,989,1.651,990,2.208,991,1.828,992,1.758,993,1.828,994,2.208,995,2.208,996,3.158,997,3.038,998,3.816,999,2.208,1000,1.569,1001,1.503,1002,1.828,1003,1.828,1004,1.378,1005,3.51,1006,5.038,1007,2.458,1008,2.208,1009,1.534,1010,2.208,1011,3.879,1012,2.208,1013,4.17,1014,2.208,1015,3.816,1016,2.208,1017,3.816,1018,3.51,1019,5.999,1020,2.208,1021,2.031,1022,1.534,1023,1.7,1024,6.774,1025,3.51,1026,2.777,1027,4.484,1028,2.651,1029,3.816,1030,3.51,1031,2.208,1032,2.651,1033,2.208,1034,1.569,1035,2.208,1036,2.208]],["component/4",[18,0.186,172,0.252]],["title/5-1",[0,32.486,91,33.424]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[495,34.039,579,37.909,1004,34.039,1034,38.766]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[183,39.718,495,34.039,1037,37.13,1038,47.316]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5-4",[316,31.282,383,33.741,1039,35.352,1040,30.297,1041,35.352]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["title/5",[18,23.599,495,38.835,1042,49.568]],["name/5",[541,0.357]],["text/5",[18,3.25,21,6.973,61,5.721,62,5.664,68,3.689,94,4.71,104,5.808,138,3.794,141,6.052,175,6.043,183,4.494,197,5.299,231,4.201,258,6.701,269,6.275,281,5.273,293,4.12,296,4.107,299,2.807,322,5.194,324,4.046,486,6.408,492,3.851,515,5.123,1004,6.973,1005,5.679,1034,6.09,1038,7.434,1040,3.851,1041,4.494,1042,6.826,1043,6.601,1044,6.701,1045,6.174,1046,5.679,1047,6.174,1048,6.826,1049,5.11,1050,4.916,1051,6.701,1052,4.916,1053,4.615,1054,5.679,1055,4.386,1056,4.201,1057,4.754,1058,4.289,1059,4.754,1060,6.174]],["component/5",[18,0.186,172,0.252]],["title/6-1",[0,24.461,70,35.145,261,32.18,1061,43.446]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[579,50.345,913,51.483]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[261,36.715,1037,42.362,1062,62.26]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[395,27.763,1039,52.748]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6-5",[1063,72.473,1064,66.664]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["title/6",[1042,57.698,1061,57.698]],["name/6",[1065,0.391]],["text/6",[0,4.324,3,3.167,5,5.136,8,1.85,9,1.223,10,1.183,11,1.159,14,6.07,16,1.676,18,3.657,46,2.768,51,2.469,62,5.685,68,3.55,70,5.848,94,1.196,104,2.939,106,4.336,132,4.533,141,2.316,175,3.841,187,1.546,188,1.666,197,1.171,198,2.388,206,3.074,208,2.509,217,4.848,221,2.978,223,1.338,227,1.358,228,1.338,238,1.676,258,1.481,268,3.337,281,3.936,282,1.627,292,1.546,296,1.043,299,3.794,304,3.764,305,4.126,308,2.901,317,6.018,319,1.284,322,3.599,323,1.453,324,5.726,329,1.453,336,1.379,385,1.627,411,1.338,423,1.453,453,1.512,454,4.068,455,3.062,478,4.254,479,3.55,494,1.481,495,1.358,497,4.441,512,1.481,515,3.55,524,1.584,527,1.453,530,4.587,539,1.627,541,1.584,578,2.194,607,1.546,761,4.665,873,5.689,875,6.742,889,1.379,913,1.546,935,1.426,939,3.326,943,2.618,949,4.012,951,3.265,983,1.733,1001,1.481,1004,1.358,1040,2.351,1042,1.733,1043,1.676,1053,2.817,1061,6.644,1064,5.465,1065,4.73,1066,1.512,1067,4.22,1068,1.888,1069,1.676,1070,1.802,1071,2.177,1072,1.481,1073,2.002,1074,2.177,1075,2.177,1076,2.177,1077,2.177,1078,2.177,1079,2.177,1080,2.564,1081,1.802,1082,1.137,1083,3.769,1084,5.929,1085,7.764,1086,2.177,1087,2.177,1088,5.95,1089,7.353,1090,2.177,1091,2.177,1092,1.584,1093,1.402,1094,1.627,1095,1.546,1096,2.002,1097,2.618,1098,1.453,1099,2.177,1100,1.733,1101,3.265,1102,3.627,1103,4.584,1104,3.54,1105,3.54,1106,2.177,1107,7.353,1108,3.268,1109,4.124,1110,4.321,1111,1.546,1112,1.888,1113,1.802,1114,2.177,1115,2.177,1116,1.802,1117,2.177,1118,1.627,1119,2.177,1120,1.888,1121,2.177,1122,2.177,1123,2.427,1124,2.177,1125,1.358,1126,2.177,1127,2.177,1128,2.177,1129,2.177,1130,2.177,1131,2.177,1132,2.177,1133,2.177,1134,2.177,1135,2.177,1136,2.177,1137,1.627,1138,5.941,1139,7.889,1140,1.888,1141,2.177,1142,4.584,1143,6.715,1144,3.967,1145,2.002,1146,1.584,1147,2.002,1148,2.177,1149,3.467,1150,2.177,1151,1.733,1152,3.769,1153,4.983,1154,2.177,1155,1.584,1156,1.546,1157,1.546,1158,2.002,1159,1.733,1160,2.002]],["component/6",[18,0.186,172,0.252]],["title/7-1",[0,32.486,214,41.679]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[3,34.182,91,33.424]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[94,21.876,322,24.121,515,23.793,777,27.66,1098,26.571,1161,28.285,1162,34.523]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[132,27.241,553,33.535,886,38.766,1101,35.757]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[94,34.207,296,29.825,1163,47.936]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7",[47,29.425,94,26.686,495,30.297,1098,32.413,1164,34.504]],["name/7",[344,0.367]],["text/7",[0,4.74,3,1.347,5,6.456,8,0.78,18,4.728,37,4.43,46,6.398,47,1.73,51,6.694,54,1.061,62,5.712,94,3.344,106,0.937,111,6.65,132,0.793,141,0.977,175,2.03,187,1.129,188,0.703,206,0.822,208,4.922,248,4.549,255,1.378,281,0.75,299,2.157,454,4.964,455,7.577,458,6.473,494,1.081,495,0.991,501,1.905,512,2.645,515,2.323,530,5.611,553,0.977,630,1.041,873,2.798,949,0.95,1053,2.905,1056,6.951,1061,3.777,1096,3.575,1098,3.166,1101,1.041,1137,7.306,1157,7.257,1161,1.129,1162,4.113,1164,5.589,1165,1.157,1166,1.129,1167,4.744,1168,4.846,1169,3.926,1170,4.549,1171,5.599,1172,2.905,1173,3.575,1174,5.029,1175,6.521,1176,2.626,1177,2.273,1178,1.157,1179,1.061,1180,1.589,1181,1.589,1182,1.589,1183,1.315,1184,1.129,1185,1.589,1186,3.887,1187,2.905,1188,1.589,1189,9.624,1190,1.589,1191,1.589,1192,7.867,1193,8.274,1194,8.488,1195,7.502,1196,1.589,1197,1.589,1198,1.589,1199,7.502,1200,8.194,1201,8.194,1202,1.589,1203,1.589,1204,1.589,1205,6.086,1206,7.867,1207,6.086]],["component/7",[18,0.186,172,0.252]],["title/8-1",[0,32.486,214,41.679]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[3,34.182,91,33.424]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[8,30.558,94,34.207,197,33.496]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[495,38.835,515,37.204,1034,44.229]],["name/8",[1208,0.406]],["text/8",[18,2.269,20,3.53,54,3.994,132,4.835,138,3.678,141,3.678,175,6.457,187,7.852,206,5.012,228,3.678,232,3.994,236,3.994,241,5.316,269,3.53,270,3.577,281,5.663,296,2.867,299,4.403,322,5.083,323,3.994,329,3.994,506,4.474,515,7.69,761,4.158,780,3.922,947,4.357,1080,4.073,1082,3.126,1101,7.243,1178,8.045,1209,6.137,1210,8.822,1211,4.609,1212,5.986,1213,4.073,1214,5.986,1215,4.765,1216,3.325,1217,5.986,1218,5.986,1219,4.609,1220,5.986,1221,6.591]],["component/8",[18,0.186,172,0.252]],["title/9-1",[0,32.486,214,41.679]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[3,29.366,91,28.714,1082,32.519]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[8,30.558,94,34.207,197,33.496]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9",[175,37.853,281,34.182]],["name/9",[1222,0.391]],["text/9",[5,6.751,8,1.191,11,2.881,14,1.686,18,1.569,20,1.431,31,1.413,46,1.348,117,1.492,126,1.724,132,1.212,175,2.161,197,1.306,208,2.084,243,1.767,268,3.59,270,1.45,281,1.145,283,1.814,296,1.982,298,1.59,308,1.413,317,3.986,319,3.768,344,1.814,454,4.344,455,4.407,479,3.232,512,2.816,516,3.758,527,1.62,530,1.514,565,1.47,873,3.768,1007,6.459,1011,6.011,1044,1.652,1093,3.484,1094,1.814,1116,3.425,1118,1.814,1137,3.093,1155,1.767,1165,1.767,1223,1.869,1224,2.233,1225,5.878,1226,2.427,1227,1.932,1228,1.932,1229,2.233,1230,1.724,1231,2.105,1232,2.427,1233,9.489,1234,9.776,1235,4.138,1236,8.993,1237,8.993,1238,7.807,1239,2.427,1240,10.067,1241,10.067,1242,2.427,1243,2.427,1244,2.427,1245,2.427,1246,2.427,1247,2.427,1248,2.427,1249,2.427,1250,2.427,1251,2.427,1252,2.427,1253,6.39,1254,6.39,1255,9.932,1256,6.39,1257,9.782,1258,6.39,1259,6.39,1260,6.39,1261,6.39,1262,6.39,1263,5.409,1264,5.409,1265,5.409,1266,5.409,1267,6.39,1268,6.39,1269,6.39,1270,6.39,1271,2.233]],["component/9",[18,0.186,172,0.252]],["title/10-1",[0,32.486,214,41.679]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[3,29.366,91,28.714,1082,32.519]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[8,30.558,94,34.207,197,33.496]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10",[175,28.502,281,25.739,888,42.015,889,34.574]],["name/10",[1272,0.452]],["text/10",[5,5.554,10,4.617,18,3.219,23,3.86,31,4.945,91,2.81,94,4.667,104,3.592,132,3.041,141,3.744,175,3.182,192,4.328,195,3.923,208,3.068,214,3.503,227,5.298,233,6.195,237,3.64,254,3.8,269,5.009,270,3.64,280,3.923,281,4.612,294,5.9,298,3.992,316,3.923,323,4.065,325,4.328,326,5.075,434,5.668,491,8.479,495,3.8,507,5.9,509,3.744,548,5.565,551,6.762,630,3.992,752,4.145,888,8.145,889,6.703,935,3.992,1023,6.54,1026,7.7,1027,8.612,1044,4.145,1088,3.992,1165,4.434,1213,4.145,1273,4.69,1274,5.282,1275,4.69,1276,5.282,1277,4.328,1278,9.173,1279,5.604,1280,5.282,1281,4.232,1282,5.604]],["component/10",[18,0.186,172,0.252]],["title/11-1",[0,27.908,18,23.599,1283,51.528]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[2,46.675,579,50.345]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[247,42.015,1037,37.13,1284,45.164,1285,50.197]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[1039,45.315,1286,45.315,1287,40.796]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11-5",[1288,49.568,1289,62.26,1290,51.528]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["title/11-6",[619,51.528,1291,51.528,1292,62.26]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["title/11-7",[245,35.145,1286,39.718,1293,50.197,1294,42.015]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["title/11-8",[3,25.739,130,39.718,1230,38.766,1287,35.757]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["title/11-9",[8,30.558,175,32.519,281,29.366]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["title/11",[]],["name/11",[3,0.232]],["text/11",[0,0.996,3,1.048,4,1.661,5,3.008,8,1.091,9,4.179,10,2.752,11,1.184,13,1.456,16,1.711,18,4.05,20,2.263,21,5.713,23,3.208,39,1.408,48,2.325,57,1.661,61,1.483,62,2.207,91,3.887,94,1.221,95,3.445,104,2.263,117,3.703,120,1.249,126,1.579,127,3.948,129,2.394,130,1.618,132,5.17,135,2.868,173,3.818,175,5.656,187,2.726,200,1.579,205,1.311,206,5.447,214,2.207,217,1.366,221,1.328,223,1.366,227,1.386,228,1.366,230,1.483,236,2.561,240,3.685,245,3.261,249,1.347,252,4.797,254,4.242,261,1.311,264,1.432,268,2.844,269,3.553,270,4.765,275,1.711,276,2.471,280,1.432,281,5.107,290,1.618,291,1.927,292,1.579,295,2.793,296,3.258,298,1.456,299,3.382,300,1.544,314,1.544,316,2.471,319,1.311,328,1.512,336,1.408,347,3.318,354,3.111,360,2.666,368,1.544,372,1.408,374,1.544,382,1.711,383,1.544,384,1.77,395,0.852,423,1.483,433,2.868,453,1.544,478,1.408,479,1.328,487,1.618,495,2.394,507,2.666,509,2.358,511,1.84,514,1.661,515,4.446,528,1.77,532,2.045,565,1.347,568,3.318,578,1.294,584,1.544,591,2.793,621,2.793,630,3.948,696,1.579,705,2.611,722,1.432,736,1.544,751,2.358,779,1.77,780,2.514,781,1.927,782,1.661,784,2.793,787,3.445,873,2.263,884,1.661,888,1.711,889,1.408,900,5.236,901,1.77,909,1.512,911,1.544,912,1.456,932,1.512,937,1.408,938,1.661,939,1.483,940,1.711,945,1.618,949,2.293,960,1.661,973,2.045,1004,1.386,1028,1.544,1034,1.579,1040,2.394,1041,1.618,1042,1.77,1044,4.628,1053,4.504,1056,1.512,1058,2.666,1061,4.031,1067,1.579,1070,3.176,1072,1.512,1080,1.512,1095,1.579,1098,1.483,1101,2.514,1123,1.432,1125,1.386,1165,2.793,1179,1.483,1209,3.208,1210,4.639,1286,2.793,1287,4.456,1294,3.898,1295,1.77,1296,1.618,1297,5.961,1298,2.223,1299,1.579,1300,1.711,1301,2.793,1302,1.661,1303,2.223,1304,3.837,1305,2.223,1306,3.837,1307,3.837,1308,2.045,1309,3.327,1310,1.77,1311,2.561,1312,1.579,1313,1.711,1314,2.793,1315,1.77,1316,1.927,1317,2.223,1318,2.045,1319,2.045,1320,2.223,1321,1.661,1322,1.77,1323,1.927,1324,1.927,1325,1.77,1326,2.045,1327,2.223,1328,1.483,1329,2.045,1330,2.045,1331,3.176,1332,1.927,1333,1.711,1334,2.223,1335,2.223,1336,1.618,1337,1.711,1338,2.223,1339,3.176,1340,2.045,1341,1.618,1342,2.223,1343,1.544,1344,1.77,1345,2.223,1346,3.837,1347,1.661,1348,2.223,1349,2.223,1350,1.927,1351,2.223,1352,1.927,1353,1.84,1354,2.223,1355,1.294,1356,2.223,1357,1.711,1358,2.223,1359,1.77,1360,1.711,1361,1.661,1362,2.223,1363,3.837,1364,1.84,1365,2.223,1366,2.223,1367,2.223,1368,2.045,1369,2.223,1370,1.84,1371,2.223,1372,2.223,1373,3.176,1374,1.711,1375,1.77,1376,2.045,1377,1.77,1378,2.223,1379,1.927,1380,2.223,1381,1.711,1382,1.77,1383,1.544,1384,2.045,1385,1.661,1386,1.77,1387,1.618]],["component/11",[18,0.186,172,0.252]],["title/12-1",[0,32.486,214,41.679]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[3,29.366,91,28.714,1082,32.519]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[8,30.558,94,34.207,197,33.496]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12",[91,22.401,175,25.369,281,22.909,316,31.282,509,29.848]],["name/12",[540,0.406]],["text/12",[5,5.769,18,1.408,31,2.164,39,5.246,68,2.22,70,2.393,91,5.771,92,3.92,94,3.228,138,2.284,175,1.941,208,6.201,217,2.284,227,4.545,232,2.48,233,6.363,269,7.343,270,7.311,281,1.753,294,4.081,296,1.78,299,3.764,308,4.242,316,7.696,322,4.414,326,3.511,328,2.528,372,3.722,383,2.581,434,3.92,491,3.222,507,4.081,509,6.171,511,3.075,527,3.92,548,3.849,708,4.276,748,2.778,783,2.393,935,2.435,1023,6.375,1026,6.564,1027,7.783,1032,2.581,1056,2.528,1156,4.173,1209,2.354,1223,2.861,1228,4.677,1277,2.64,1278,7.18,1279,3.418,1280,3.222,1281,2.581,1282,3.418,1328,2.48,1388,3.418,1389,5.875,1390,4.862,1391,4.677,1392,5.875,1393,2.958,1394,3.716,1395,5.875,1396,5.404,1397,3.716,1398,3.716,1399,3.716,1400,3.716,1401,3.716,1402,2.958,1403,3.418,1404,3.418,1405,2.861,1406,3.418,1407,3.716]],["component/12",[18,0.186,172,0.252]],["title/13-1",[0,24.461,206,28.235,268,30.654,347,35.757]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[3,29.366,91,28.714,347,40.796]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[8,26.784,91,25.168,347,35.757,1082,28.502]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13",[91,22.401,206,25.131,268,27.284,347,47.276]],["name/13",[1408,0.452]],["text/13",[0,4.984,3,0.251,5,4.515,8,1.135,11,0.791,14,6.745,18,0.563,20,1.128,23,0.651,37,1.393,43,0.713,46,1.063,61,0.992,62,0.591,63,1.43,68,0.318,69,0.251,80,0.699,82,0.5,86,0.349,91,5.106,94,4.891,102,0.713,129,0.332,132,1.836,138,5.328,192,1.056,197,4.664,205,0.606,206,2.198,208,0.517,217,1.176,221,0.888,223,0.328,227,2.65,228,0.328,230,0.356,231,1.302,233,0.338,254,1.443,268,2.533,270,4.613,276,0.343,281,0.251,296,0.712,299,3.654,304,0.338,308,0.598,317,2.65,319,4.963,322,1.159,324,0.349,329,0.356,336,1.465,351,0.49,354,0.328,395,0.393,411,1.421,423,0.356,453,0.713,454,6.491,455,6.709,456,1.011,458,0.651,476,1.254,478,1.702,479,5.319,482,1.111,494,1.574,499,0.768,509,0.631,512,4.834,516,5.907,527,4.351,538,1.081,541,0.388,563,0.462,564,1.144,565,1.159,567,0.713,578,4.68,581,0.729,616,5.02,617,0.363,651,0.49,702,0.462,722,3.216,725,0.37,752,0.699,786,0.462,814,0.747,822,1.183,873,3.75,915,0.363,921,0.791,935,0.349,937,0.941,943,0.37,949,0.888,951,1.254,955,0.791,960,0.768,967,0.768,968,0.388,969,1.032,981,1.909,1007,0.957,1028,2.951,1032,5.439,1034,7.316,1037,0.363,1068,0.462,1072,0.699,1080,2.067,1082,0.278,1088,2.602,1093,5.042,1097,5.846,1098,0.356,1108,1.288,1109,1.23,1110,1.659,1111,0.379,1116,5.767,1118,2.517,1120,0.462,1123,0.957,1144,0.818,1161,0.379,1170,0.768,1172,1.729,1177,0.424,1187,0.398,1208,0.85,1209,2.134,1216,2.505,1222,0.424,1225,0.49,1227,5.433,1236,1.76,1237,1.76,1240,2.006,1257,2.472,1277,3.858,1296,1.393,1301,0.388,1336,0.747,1343,0.37,1409,0.533,1410,0.533,1411,2.593,1412,3.044,1413,5.513,1414,2.392,1415,1.367,1416,0.388,1417,2.33,1418,1.659,1419,1.659,1420,1.659,1421,1.659,1422,1.914,1423,1.914,1424,2.128,1425,0.89,1426,1.486,1427,2.006,1428,1.027,1429,5.431,1430,1.027,1431,2.687,1432,2.687,1433,2.687,1434,3.161,1435,3.368,1436,0.533,1437,2.687,1438,3.038,1439,3.038,1440,1.486,1441,2.006,1442,2.33,1443,2.006,1444,1.659,1445,1.659,1446,0.89,1447,0.89,1448,1.914,1449,1.914,1450,2.313,1451,1.288,1452,1.288,1453,2.33,1454,1.486,1455,1.914,1456,1.027,1457,3.038,1458,1.486,1459,1.914,1460,1.367,1461,1.486,1462,0.533,1463,6.825,1464,6.774,1465,4.593,1466,0.441,1467,0.41,1468,0.533,1469,0.462,1470,0.533,1471,0.533,1472,0.533,1473,0.533,1474,1.76,1475,0.41,1476,0.533,1477,0.533,1478,0.533,1479,0.89,1480,0.441,1481,0.533,1482,0.533,1483,0.49,1484,1.43,1485,0.747,1486,2.472,1487,2.514,1488,0.441,1489,0.533,1490,0.49,1491,0.533,1492,0.533,1493,2.139,1494,0.41,1495,0.462,1496,0.89,1497,0.533,1498,1.027,1499,1.027,1500,0.533,1501,0.533,1502,0.533,1503,2.224,1504,0.533,1505,0.398,1506,0.533,1507,0.533,1508,0.533,1509,0.533,1510,0.533,1511,0.533,1512,0.533,1513,0.89,1514,0.533,1515,0.533,1516,0.533,1517,3.383,1518,0.41,1519,1.523,1520,1.027,1521,0.533,1522,0.791,1523,0.768,1524,0.533,1525,3.098,1526,0.533,1527,0.533,1528,0.462,1529,1.027,1530,1.027,1531,1.111,1532,1.027,1533,0.533,1534,1.914,1535,4.487,1536,1.76,1537,1.288,1538,0.533,1539,0.533,1540,3.678,1541,2.128,1542,0.533,1543,1.027,1544,0.533,1545,0.533,1546,0.388,1547,0.533,1548,1.027,1549,0.533,1550,0.533,1551,0.533,1552,2.65,1553,1.729,1554,2.313,1555,2.687,1556,2.313,1557,0.533,1558,0.533,1559,0.533,1560,3.368,1561,1.027,1562,0.818,1563,1.111,1564,1.027,1565,1.027,1566,0.533,1567,0.533,1568,0.533,1569,0.533,1570,1.914,1571,0.533,1572,0.533,1573,1.027,1574,0.533,1575,0.533,1576,0.533,1577,0.533,1578,0.533,1579,0.533,1580,0.533,1581,0.533,1582,0.533,1583,0.533,1584,0.533,1585,0.533,1586,0.85,1587,1.027,1588,1.027,1589,0.533,1590,1.027,1591,0.533,1592,0.533,1593,0.533,1594,0.533,1595,0.533,1596,0.533,1597,0.533,1598,1.144,1599,1.032,1600,0.533,1601,0.533,1602,1.027,1603,0.533,1604,0.533,1605,0.533,1606,1.027,1607,0.533,1608,0.533,1609,0.49,1610,0.533,1611,0.533,1612,0.533,1613,0.533,1614,0.379,1615,2.687,1616,1.027,1617,1.027,1618,0.533,1619,1.111,1620,0.533,1621,1.027,1622,0.49,1623,1.027,1624,0.533,1625,1.027,1626,1.288,1627,0.533,1628,0.533,1629,0.533,1630,0.533,1631,0.533,1632,0.49,1633,1.914,1634,4.248,1635,1.914,1636,0.533,1637,0.533,1638,0.533,1639,0.533,1640,5.431,1641,0.533,1642,0.533,1643,0.533,1644,0.533,1645,0.533,1646,0.533,1647,0.533,1648,0.533,1649,0.533,1650,0.533,1651,0.533,1652,0.533,1653,0.533,1654,0.533,1655,0.533,1656,1.027,1657,0.533,1658,0.533,1659,0.49,1660,1.183,1661,1.486,1662,1.027,1663,0.533,1664,0.533,1665,1.027,1666,0.533,1667,0.49,1668,0.533,1669,0.533,1670,0.533,1671,0.533,1672,0.533,1673,0.533,1674,0.533,1675,0.533,1676,0.533,1677,0.533,1678,0.533,1679,0.533,1680,0.533,1681,1.76,1682,0.533,1683,0.533,1684,0.533,1685,0.462,1686,0.945,1687,0.533,1688,0.533,1689,0.533,1690,0.533,1691,1.027,1692,0.533,1693,0.49,1694,0.533,1695,0.533,1696,0.533,1697,0.441,1698,0.441,1699,2.313,1700,2.313,1701,0.533,1702,1.027,1703,0.533,1704,0.533,1705,0.49,1706,0.533,1707,0.533,1708,0.533,1709,0.533,1710,0.533,1711,0.533,1712,0.533,1713,0.791,1714,2.006,1715,0.533,1716,0.533,1717,0.533,1718,1.027,1719,0.533,1720,0.533,1721,0.533,1722,0.533,1723,0.533,1724,0.533,1725,1.027,1726,0.533,1727,0.533,1728,0.533,1729,0.533,1730,0.49,1731,0.533,1732,0.533,1733,0.533,1734,0.533,1735,0.533,1736,0.533,1737,0.533,1738,2.687,1739,2.472,1740,2.224,1741,1.027,1742,1.027,1743,0.533,1744,0.533,1745,0.533,1746,0.945,1747,0.945,1748,1.027,1749,0.533,1750,0.533,1751,0.533,1752,0.49,1753,0.945,1754,0.533,1755,1.027,1756,0.533,1757,0.398,1758,0.533,1759,0.533,1760,0.533,1761,0.533,1762,0.533,1763,0.533,1764,0.533,1765,0.533,1766,0.533,1767,0.441,1768,0.533,1769,0.533,1770,0.533,1771,1.914,1772,2.128,1773,0.533,1774,0.49,1775,0.533,1776,0.533,1777,0.533,1778,0.533,1779,3.098,1780,0.533,1781,0.533,1782,0.533,1783,0.533,1784,1.729,1785,0.85,1786,0.89,1787,0.533,1788,0.533,1789,0.533,1790,0.388,1791,0.533,1792,0.37,1793,0.441,1794,0.41,1795,0.533,1796,0.533,1797,0.533]],["component/13",[18,0.186,172,0.252]],["title/14-1",[0,32.486,214,41.679]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[3,34.182,91,33.424]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[8,30.558,197,33.496,783,40.098]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14",[175,22.856,281,20.64,515,26.149,1004,27.296,1040,27.296,1385,32.71]],["name/14",[1798,0.426]],["text/14",[5,4.874,91,4.503,104,5.757,141,4.602,175,3.911,187,5.32,198,6.186,206,5.051,228,4.602,240,5.451,257,6.935,261,4.416,299,3.404,305,6,767,5.32,915,5.095,949,5.834,1000,5.32,1004,7.18,1178,5.451,1209,4.745,1216,4.16,1221,6.643,1357,5.766,1385,7.298,1799,6.198,1800,5.202,1801,7.489,1802,7.489,1803,9.763,1804,7.489,1805,5.766,1806,5.962,1807,6.935,1808,7.489,1809,7.106,1810,8.08,1811,6.493,1812,7.489]],["component/14",[18,0.186,172,0.252]],["title/15-1",[0,32.486,1813,59.98]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[579,50.345,1814,62.838]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[884,46.538,1037,42.362,1815,57.27]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[787,37.13,1039,39.718,1082,28.502,1816,50.197]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[3,29.366,226,47.936,1817,62.26]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[142,32.608,177,33.535,777,37.909,1818,37.13]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[1216,34.583,1819,57.27,1820,41.548]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15-8",[18,20.684,142,32.608,363,42.015,1821,50.197]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["title/15-9",[48,37.718,142,37.204,886,44.229]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["title/15-10",[10,33.845,142,37.204,1822,57.27]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["title/15-11",[31,31.772,1823,50.197,1824,54.57,1825,54.57]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["title/15-12",[18,18.41,25,38.669,147,29.425,197,26.132,1826,44.678]],["name/15-12",[]],["text/15-12",[]],["component/15-12",[]],["title/15-13",[18,18.41,135,36.306,966,37.396,1827,44.678,1828,38.669]],["name/15-13",[]],["text/15-13",[]],["component/15-13",[]],["title/15-14",[27,30.297,1829,44.678,1830,44.678,1831,37.396,1832,42.114]],["name/15-14",[]],["text/15-14",[]],["component/15-14",[]],["title/15-15",[142,37.204,1833,62.26,1834,57.27]],["name/15-15",[]],["text/15-15",[]],["component/15-15",[]],["title/15-16",[142,43.306,1163,55.799]],["name/15-16",[]],["text/15-16",[]],["component/15-16",[]],["title/15-17",[10,33.845,1835,57.27,1836,53.983]],["name/15-17",[]],["text/15-17",[]],["component/15-17",[]],["title/15-18",[21,30.297,68,29.024,245,31.282,272,37.396,1837,44.678]],["name/15-18",[]],["text/15-18",[]],["component/15-18",[]],["title/15-19",[143,44.229,1838,57.27,1839,53.983]],["name/15-19",[]],["text/15-19",[]],["component/15-19",[]],["title/15-20",[143,44.229,145,49.568,1840,57.27]],["name/15-20",[]],["text/15-20",[]],["component/15-20",[]],["title/15-21",[131,40.79,487,39.718,751,33.535,1841,50.197]],["name/15-21",[]],["text/15-21",[]],["component/15-21",[]],["title/15-22",[7,41.548,8,30.558,1842,45.315]],["name/15-22",[]],["text/15-22",[]],["component/15-22",[]],["title/15-23",[7,32.413,176,36.306,261,28.643,378,31.826,722,31.282]],["name/15-23",[]],["text/15-23",[]],["component/15-23",[]],["title/15-24",[7,36.416,268,30.654,1843,50.197,1844,54.57]],["name/15-24",[]],["text/15-24",[]],["component/15-24",[]],["title/15-25",[1343,43.251,1842,45.315,1845,57.27]],["name/15-25",[]],["text/15-25",[]],["component/15-25",[]],["title/15-26",[10,33.845,11,33.159,142,37.204]],["name/15-26",[]],["text/15-26",[]],["component/15-26",[]],["title/15-27",[212,36.306,722,31.282,1375,38.669,1846,38.669,1847,48.571]],["name/15-27",[]],["text/15-27",[]],["component/15-27",[]],["title/15-28",[19,33.048,567,33.741,992,38.669,1375,38.669,1414,34.504]],["name/15-28",[]],["text/15-28",[]],["component/15-28",[]],["title/15-29",[208,24.458,215,38.669,261,28.643,993,40.199,1343,33.741]],["name/15-29",[]],["text/15-29",[]],["component/15-29",[]],["title/15-30",[10,23.789,31,25.479,218,36.217,304,27.725,489,32.71,1848,37.943]],["name/15-30",[]],["text/15-30",[]],["component/15-30",[]],["title/15-31",[219,47.316,224,35.145,751,33.535,1536,50.197]],["name/15-31",[]],["text/15-31",[]],["component/15-31",[]],["title/15-32",[220,37.943,233,27.725,1466,36.217,1849,43.761,1850,32.71,1851,33.692]],["name/15-32",[]],["text/15-32",[]],["component/15-32",[]],["title/15-33",[208,24.458,989,36.306,1383,33.741,1852,44.678,1853,48.571]],["name/15-33",[]],["text/15-33",[]],["component/15-33",[]],["title/15-34",[221,37.204,1842,45.315,1854,51.528]],["name/15-34",[]],["text/15-34",[]],["component/15-34",[]],["title/15-35",[989,40.79,1383,37.909,1855,47.316,1856,54.57]],["name/15-35",[]],["text/15-35",[]],["component/15-35",[]],["title/15-36",[937,34.574,1854,45.164,1857,47.316,1858,54.57]],["name/15-36",[]],["text/15-36",[]],["component/15-36",[]],["title/15-37",[1854,51.528,1859,57.27,1860,62.26]],["name/15-37",[]],["text/15-37",[]],["component/15-37",[]],["title/15-38",[31,36.25,223,38.261,489,46.538]],["name/15-38",[]],["text/15-38",[]],["component/15-38",[]],["title/15-39",[177,44.537,1861,66.664]],["name/15-39",[]],["text/15-39",[]],["component/15-39",[]],["title/15-40",[142,43.306,1862,66.664]],["name/15-40",[]],["text/15-40",[]],["component/15-40",[]],["title/15-41",[492,45.206,1863,66.664]],["name/15-41",[]],["text/15-41",[]],["component/15-41",[]],["title/15-42",[395,27.763,1864,72.473]],["name/15-42",[]],["text/15-42",[]],["component/15-42",[]],["title/15-43",[177,38.261,1865,62.26,1866,57.27]],["name/15-43",[]],["text/15-43",[]],["component/15-43",[]],["title/15-44",[224,35.145,378,35.757,1867,54.57,1868,47.316]],["name/15-44",[]],["text/15-44",[]],["component/15-44",[]],["title/15-45",[1123,40.098,1842,45.315,1869,53.983]],["name/15-45",[]],["text/15-45",[]],["component/15-45",[]],["title/15-46",[177,44.537,1870,62.838]],["name/15-46",[]],["text/15-46",[]],["component/15-46",[]],["title/15-47",[1871,62.838,1872,72.473]],["name/15-47",[]],["text/15-47",[]],["component/15-47",[]],["title/15-48",[142,43.306,1873,62.838]],["name/15-48",[]],["text/15-48",[]],["component/15-48",[]],["title/15-49",[492,45.206,1874,66.664]],["name/15-49",[]],["text/15-49",[]],["component/15-49",[]],["title/15-50",[492,38.835,1842,45.315,1875,57.27]],["name/15-50",[]],["text/15-50",[]],["component/15-50",[]],["title/15-51",[1869,53.983,1876,57.27,1877,40.098]],["name/15-51",[]],["text/15-51",[]],["component/15-51",[]],["title/15-52",[135,40.79,142,32.608,226,42.015,1125,34.039]],["name/15-52",[]],["text/15-52",[]],["component/15-52",[]],["title/15-53",[142,43.306,1878,62.838]],["name/15-53",[]],["text/15-53",[]],["component/15-53",[]],["title/15-54",[304,39.446,513,40.796,1879,51.528]],["name/15-54",[]],["text/15-54",[]],["component/15-54",[]],["title/15-55",[378,40.796,949,37.204,1880,53.983]],["name/15-55",[]],["text/15-55",[]],["component/15-55",[]],["title/15-56",[197,38.991,1881,66.664]],["name/15-56",[]],["text/15-56",[]],["component/15-56",[]],["title/15-57",[246,47.316,378,35.757,1868,47.316,1882,50.197]],["name/15-57",[]],["text/15-57",[]],["component/15-57",[]],["title/15-58",[1883,72.473,1884,55.799]],["name/15-58",[]],["text/15-58",[]],["component/15-58",[]],["title/15",[18,20.684,142,32.608,226,42.015,787,37.13]],["name/15",[600,0.406]],["text/15",[0,3.289,1,2.837,3,2.917,4,0.673,5,5.885,6,1.175,7,1.812,8,2.233,9,2.158,10,3.928,11,1.446,12,1.78,13,0.857,16,0.693,18,3.382,19,0.316,20,0.531,21,1.28,23,1.072,25,1.905,27,4.362,28,3.505,29,3.095,31,4.91,32,1.905,34,0.873,37,1.231,38,0.305,39,0.295,40,0.655,43,0.323,44,0.952,45,4.053,47,1.829,48,2.004,51,0.305,52,0.358,53,0.338,54,0.31,60,0.338,61,0.601,64,0.717,68,2.584,69,0.219,80,0.612,85,0.385,87,2.015,91,1.652,99,0.639,103,0.323,104,2.809,106,3.263,112,0.625,117,1.261,119,0.837,120,0.261,124,1.556,127,1.779,128,1.742,129,0.816,130,0.338,131,3.861,132,0.232,133,1.203,134,1.634,135,1.265,136,1.203,137,1.203,138,3.8,141,1.855,142,3.603,143,0.33,145,4.112,147,0.545,172,0.867,177,0.804,180,0.37,187,0.33,188,0.206,192,0.929,197,1.288,205,1.951,208,1.034,217,0.553,221,1.011,222,1.175,223,0.804,224,1.541,225,1.083,227,0.562,228,1.04,230,4.225,231,1.628,232,2.207,233,0.829,238,0.358,241,1.516,243,0.655,246,0.403,249,0.545,254,0.29,257,0.33,258,1.628,261,2.265,264,1.09,267,0.952,268,0.261,272,0.693,273,0.358,279,0.338,280,0.299,292,0.33,293,0.601,294,0.323,296,3.462,298,0.305,300,0.625,303,1.534,304,3.615,305,0.286,308,2.237,309,0.639,317,0.562,322,0.793,324,0.59,328,1.628,329,1.37,335,0.299,336,0.57,344,0.673,347,0.305,353,1.458,354,3.706,360,1.175,361,0.655,363,2.09,366,0.348,368,1.663,372,0.295,374,0.625,378,2.517,384,1.634,390,2.161,395,3.139,411,0.804,412,0.338,423,0.601,425,1.467,433,0.673,434,0.31,440,1.467,453,0.625,458,0.57,470,0.978,478,2.434,479,1.43,480,0.358,481,0.612,483,1.202,484,3.255,485,0.358,489,1.265,492,0.562,493,0.857,494,1.151,495,0.29,496,1.458,498,1.929,501,0.873,507,0.625,509,0.286,513,3.384,516,5.859,517,0.59,524,0.655,527,0.601,529,1.202,530,0.29,539,0.348,540,0.745,541,0.655,544,0.358,548,0.59,551,0.37,554,0.655,567,0.625,568,0.59,569,0.358,574,0.338,578,0.985,584,2.097,596,0.37,611,0.612,616,0.693,618,1.534,630,2.167,696,0.639,705,1.847,711,0.316,722,2.633,723,0.673,736,0.323,747,0.693,749,0.978,750,2.84,751,2.513,752,1.628,760,1.534,761,1.175,766,0.781,773,0.37,780,2.679,783,0.299,784,0.655,787,3.764,789,1.231,873,0.274,874,0.673,875,0.305,884,0.348,889,3.148,893,0.428,897,0.348,904,0.37,905,0.952,907,0.403,909,0.89,911,0.323,912,0.305,913,0.33,915,0.316,932,0.316,935,2.167,936,0.385,937,1.072,939,0.601,941,0.358,943,0.323,945,0.338,949,2.14,951,0.305,959,0.655,960,0.348,966,0.693,968,0.655,969,0.625,970,0.625,971,0.717,981,4.967,982,0.745,989,4.001,991,4.991,992,1.634,993,1.981,997,0.37,1000,0.33,1004,0.562,1007,0.843,1018,0.428,1026,0.338,1028,0.625,1040,1.693,1052,0.37,1055,0.33,1058,0.323,1065,0.717,1066,0.323,1072,0.316,1073,1.556,1082,0.243,1088,3.256,1092,2.607,1097,0.323,1102,1.231,1105,0.639,1111,1.458,1123,0.843,1125,0.562,1156,0.639,1157,2.35,1161,0.639,1164,1.458,1168,0.37,1170,0.673,1172,0.673,1184,1.7,1208,0.745,1210,1.007,1216,1.14,1222,0.717,1230,0.33,1255,0.428,1272,0.828,1275,0.358,1281,0.625,1286,1.976,1287,0.857,1295,0.717,1297,3.4,1299,0.639,1302,0.978,1310,1.347,1311,2.015,1312,1.929,1314,0.338,1318,0.428,1319,0.428,1321,0.673,1322,0.37,1325,0.37,1326,0.428,1341,0.338,1343,0.323,1347,0.978,1352,1.78,1357,1.007,1374,0.358,1375,3.622,1383,3.588,1408,0.828,1412,0.385,1413,0.403,1414,0.33,1416,0.338,1466,1.981,1467,1.303,1484,0.978,1485,0.338,1505,0.978,1523,4.732,1531,0.348,1552,0.31,1553,1.265,1562,0.37,1563,2.029,1614,1.458,1740,0.385,1790,0.338,1792,0.625,1793,2.499,1798,0.403,1800,0.909,1805,0.693,1815,0.828,1818,3.241,1820,1.129,1828,1.634,1831,1.007,1832,2.075,1834,1.203,1839,1.134,1842,4.027,1846,2.633,1848,0.403,1850,2.472,1851,0.358,1854,2.247,1868,1.134,1869,4.13,1877,0.58,1885,4.924,1886,3.749,1887,0.428,1888,2.677,1889,1.534,1890,1.467,1891,0.465,1892,1.007,1893,0.385,1894,0.465,1895,1.692,1896,0.403,1897,0.693,1898,0.428,1899,0.358,1900,0.37,1901,0.693,1902,0.465,1903,0.465,1904,0.9,1905,0.358,1906,0.358,1907,0.358,1908,1.699,1909,0.428,1910,0.465,1911,0.465,1912,1.556,1913,0.465,1914,0.465,1915,0.465,1916,0.428,1917,0.338,1918,0.465,1919,0.465,1920,0.465,1921,0.465,1922,0.465,1923,0.465,1924,0.348,1925,0.385,1926,0.37,1927,0.828,1928,0.37,1929,0.693,1930,0.403,1931,0.673,1932,0.465,1933,0.348,1934,0.465,1935,0.403,1936,1.556,1937,7.758,1938,0.693,1939,0.348,1940,0.465,1941,0.358,1942,0.717,1943,0.828,1944,0.358,1945,0.428,1946,0.428,1947,1.699,1948,0.673,1949,0.37,1950,0.385,1951,1.083,1952,0.828,1953,0.403,1954,0.385,1955,0.358,1956,0.385,1957,0.693,1958,0.358,1959,0.978,1960,0.673,1961,0.428,1962,0.385,1963,0.428,1964,0.428,1965,0.358,1966,1.692,1967,3.581,1968,5.165,1969,5.165,1970,1.692,1971,0.465,1972,0.465,1973,0.465,1974,1.265,1975,0.465,1976,0.465,1977,0.403,1978,1.4,1979,0.428,1980,0.385,1981,0.348,1982,0.428,1983,0.37,1984,0.428,1985,0.781,1986,0.428,1987,0.385,1988,0.358,1989,0.338,1990,0.385,1991,0.37,1992,0.428,1993,0.978,1994,0.428,1995,0.385,1996,0.428,1997,0.428,1998,0.385,1999,1.303,2000,0.428,2001,0.403,2002,0.385,2003,0.403,2004,0.428,2005,0.403,2006,0.428,2007,0.348,2008,0.428,2009,0.385,2010,1.467,2011,0.693,2012,0.403,2013,0.37,2014,0.428,2015,0.828,2016,0.428,2017,0.37,2018,0.385,2019,1.556,2020,0.37,2021,0.978,2022,0.428,2023,1.789,2024,0.428,2025,0.428,2026,0.428,2027,0.385,2028,0.428,2029,0.428,2030,0.358,2031,0.323,2032,0.428,2033,0.428,2034,0.428,2035,0.348,2036,0.37,2037,0.828,2038,0.428,2039,0.358,2040,0.348,2041,0.828,2042,0.428,2043,0.37,2044,0.403,2045,0.33,2046,0.385,2047,0.428,2048,0.37,2049,0.465,2050,4.089,2051,0.428,2052,0.465,2053,0.465,2054,0.465,2055,0.465,2056,0.952,2057,0.428,2058,0.428,2059,0.465,2060,0.37,2061,2.715,2062,0.828,2063,0.717,2064,0.37,2065,0.9,2066,0.465,2067,0.465,2068,0.465,2069,0.465,2070,0.828,2071,0.348,2072,0.9,2073,4.089,2074,0.385,2075,0.358,2076,2.393,2077,1.308,2078,0.465,2079,0.929,2080,0.348,2081,0.465,2082,0.465,2083,4.947,2084,0.403,2085,0.465,2086,4.751,2087,0.465,2088,0.428,2089,0.385,2090,0.465,2091,0.9,2092,0.403,2093,0.403,2094,0.403,2095,0.693,2096,0.717,2097,0.9,2098,0.717,2099,3.308,2100,0.403,2101,1.347,2102,1.175,2103,0.428,2104,0.37,2105,0.465,2106,1.692,2107,1.303,2108,1.042,2109,0.9,2110,0.828,2111,1.007,2112,0.9,2113,1.134,2114,0.9,2115,1.007,2116,2.404,2117,0.9,2118,1.692,2119,3.761,2120,2.354,2121,0.9,2122,0.828,2123,0.781,2124,0.9,2125,2.053,2126,2.053,2127,1.692,2128,0.828,2129,1.4,2130,1.308,2131,1.308,2132,5.688,2133,0.781,2134,0.385,2135,0.9,2136,0.385,2137,0.745,2138,0.781,2139,0.9,2140,0.465,2141,0.9,2142,0.9,2143,0.465,2144,0.465,2145,0.428,2146,0.465,2147,0.465,2148,0.465,2149,0.465,2150,0.465,2151,2.715,2152,0.338,2153,0.673,2154,0.693,2155,0.9,2156,1.692,2157,2.715,2158,1.634,2159,2.053,2160,0.693,2161,1.134,2162,0.9,2163,0.465,2164,1.692,2165,0.465,2166,0.9,2167,0.465,2168,0.428,2169,0.358,2170,0.465,2171,0.465,2172,2.053,2173,0.465,2174,0.465,2175,0.37,2176,0.828,2177,0.781,2178,2.053,2179,0.781,2180,0.465,2181,0.403,2182,0.693,2183,0.465,2184,0.465,2185,0.465,2186,0.465,2187,0.465,2188,1.308,2189,0.465,2190,0.717,2191,0.465,2192,0.465,2193,0.465,2194,0.316,2195,0.465,2196,0.465,2197,0.465,2198,0.465,2199,0.465,2200,1.308,2201,0.403,2202,0.37,2203,0.465,2204,0.465,2205,0.717,2206,0.428,2207,0.428,2208,0.403,2209,1.692,2210,0.465,2211,0.465,2212,0.465,2213,1.981,2214,0.465,2215,0.465,2216,0.465,2217,0.465,2218,0.403,2219,0.403,2220,0.403,2221,0.465,2222,0.465,2223,0.403,2224,0.428,2225,0.465]],["component/15",[18,0.186,172,0.252]],["title/16-1",[0,27.908,27,38.835,280,40.098]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[3,29.366,245,40.098,325,44.229]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[777,50.345,2226,66.664]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[1819,66.664,2227,33.671]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[188,32.044,1821,66.664]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[69,34.182,2228,72.473]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16-7",[2229,72.473,2230,48.363]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["title/16-8",[395,27.763,2231,72.473]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["title/16-9",[704,59.98,886,51.483]],["name/16-9",[]],["text/16-9",[]],["component/16-9",[]],["title/16-10",[1822,66.664,2227,33.671]],["name/16-10",[]],["text/16-10",[]],["component/16-10",[]],["title/16-11",[188,32.044,1823,66.664]],["name/16-11",[]],["text/16-11",[]],["component/16-11",[]],["title/16-12",[69,34.182,1826,66.664]],["name/16-12",[]],["text/16-12",[]],["component/16-12",[]],["title/16-13",[1827,66.664,2230,48.363]],["name/16-13",[]],["text/16-13",[]],["component/16-13",[]],["title/16-14",[395,27.763,1829,66.664]],["name/16-14",[]],["text/16-14",[]],["component/16-14",[]],["title/16-15",[1163,55.799,2232,62.838]],["name/16-15",[]],["text/16-15",[]],["component/16-15",[]],["title/16-16",[1835,66.664,2227,33.671]],["name/16-16",[]],["text/16-16",[]],["component/16-16",[]],["title/16-17",[188,32.044,1837,66.664]],["name/16-17",[]],["text/16-17",[]],["component/16-17",[]],["title/16-18",[69,34.182,1838,66.664]],["name/16-18",[]],["text/16-18",[]],["component/16-18",[]],["title/16-19",[1840,66.664,2230,48.363]],["name/16-19",[]],["text/16-19",[]],["component/16-19",[]],["title/16-20",[395,27.763,1841,66.664]],["name/16-20",[]],["text/16-20",[]],["component/16-20",[]],["title/16-21",[2233,62.838,2234,62.838]],["name/16-21",[]],["text/16-21",[]],["component/16-21",[]],["title/16-22",[2227,33.671,2235,72.473]],["name/16-22",[]],["text/16-22",[]],["component/16-22",[]],["title/16-23",[188,32.044,2236,72.473]],["name/16-23",[]],["text/16-23",[]],["component/16-23",[]],["title/16-24",[69,34.182,2237,72.473]],["name/16-24",[]],["text/16-24",[]],["component/16-24",[]],["title/16-25",[2230,48.363,2238,72.473]],["name/16-25",[]],["text/16-25",[]],["component/16-25",[]],["title/16-26",[395,27.763,2239,72.473]],["name/16-26",[]],["text/16-26",[]],["component/16-26",[]],["title/16-27",[2240,62.838,2241,62.838]],["name/16-27",[]],["text/16-27",[]],["component/16-27",[]],["title/16-28",[2227,33.671,2242,72.473]],["name/16-28",[]],["text/16-28",[]],["component/16-28",[]],["title/16-29",[188,32.044,2243,72.473]],["name/16-29",[]],["text/16-29",[]],["component/16-29",[]],["title/16-30",[69,34.182,2244,72.473]],["name/16-30",[]],["text/16-30",[]],["component/16-30",[]],["title/16-31",[2230,48.363,2245,72.473]],["name/16-31",[]],["text/16-31",[]],["component/16-31",[]],["title/16-32",[395,27.763,2246,72.473]],["name/16-32",[]],["text/16-32",[]],["component/16-32",[]],["title/16-33",[2247,66.664,2248,66.664]],["name/16-33",[]],["text/16-33",[]],["component/16-33",[]],["title/16-34",[2227,33.671,2249,72.473]],["name/16-34",[]],["text/16-34",[]],["component/16-34",[]],["title/16-35",[188,32.044,2250,72.473]],["name/16-35",[]],["text/16-35",[]],["component/16-35",[]],["title/16-36",[82,35.279,2251,72.473]],["name/16-36",[]],["text/16-36",[]],["component/16-36",[]],["title/16-37",[395,27.763,2252,72.473]],["name/16-37",[]],["text/16-37",[]],["component/16-37",[]],["title/16-38",[2253,72.473,2254,66.664]],["name/16-38",[]],["text/16-38",[]],["component/16-38",[]],["title/16-39",[2227,33.671,2255,72.473]],["name/16-39",[]],["text/16-39",[]],["component/16-39",[]],["title/16-40",[188,32.044,2256,72.473]],["name/16-40",[]],["text/16-40",[]],["component/16-40",[]],["title/16-41",[2257,72.473,2258,55.799]],["name/16-41",[]],["text/16-41",[]],["component/16-41",[]],["title/16-42",[2259,72.473,2260,59.98]],["name/16-42",[]],["text/16-42",[]],["component/16-42",[]],["title/16-43",[2227,33.671,2261,72.473]],["name/16-43",[]],["text/16-43",[]],["component/16-43",[]],["title/16-44",[188,32.044,2262,72.473]],["name/16-44",[]],["text/16-44",[]],["component/16-44",[]],["title/16-45",[69,34.182,2263,72.473]],["name/16-45",[]],["text/16-45",[]],["component/16-45",[]],["title/16-46",[82,35.279,2264,72.473]],["name/16-46",[]],["text/16-46",[]],["component/16-46",[]],["title/16-47",[395,27.763,2265,72.473]],["name/16-47",[]],["text/16-47",[]],["component/16-47",[]],["title/16-48",[2266,72.473,2267,66.664]],["name/16-48",[]],["text/16-48",[]],["component/16-48",[]],["title/16-49",[2227,33.671,2268,72.473]],["name/16-49",[]],["text/16-49",[]],["component/16-49",[]],["title/16-50",[2269,72.473,2270,62.838]],["name/16-50",[]],["text/16-50",[]],["component/16-50",[]],["title/16-51",[188,32.044,2271,72.473]],["name/16-51",[]],["text/16-51",[]],["component/16-51",[]],["title/16-52",[188,27.528,1101,40.796,2272,62.26]],["name/16-52",[]],["text/16-52",[]],["component/16-52",[]],["title/16-53",[188,27.528,2273,62.26,2274,57.27]],["name/16-53",[]],["text/16-53",[]],["component/16-53",[]],["title/16-54",[188,27.528,574,45.315,2275,62.26]],["name/16-54",[]],["text/16-54",[]],["component/16-54",[]],["title/16-55",[426,43.251,2276,62.26,2277,41.548]],["name/16-55",[]],["text/16-55",[]],["component/16-55",[]],["title/16-56",[69,34.182,2278,72.473]],["name/16-56",[]],["text/16-56",[]],["component/16-56",[]],["title/16-57",[987,62.838,2279,72.473]],["name/16-57",[]],["text/16-57",[]],["component/16-57",[]],["title/16-58",[2227,33.671,2280,72.473]],["name/16-58",[]],["text/16-58",[]],["component/16-58",[]],["title/16-59",[188,32.044,2281,72.473]],["name/16-59",[]],["text/16-59",[]],["component/16-59",[]],["title/16-60",[395,27.763,2282,72.473]],["name/16-60",[]],["text/16-60",[]],["component/16-60",[]],["title/16-61",[2283,72.473,2284,59.98]],["name/16-61",[]],["text/16-61",[]],["component/16-61",[]],["title/16-62",[2227,33.671,2285,72.473]],["name/16-62",[]],["text/16-62",[]],["component/16-62",[]],["title/16-63",[188,32.044,2286,72.473]],["name/16-63",[]],["text/16-63",[]],["component/16-63",[]],["title/16-64",[69,34.182,2287,72.473]],["name/16-64",[]],["text/16-64",[]],["component/16-64",[]],["title/16-65",[2230,48.363,2288,72.473]],["name/16-65",[]],["text/16-65",[]],["component/16-65",[]],["title/16-66",[82,35.279,2289,72.473]],["name/16-66",[]],["text/16-66",[]],["component/16-66",[]],["title/16-67",[395,27.763,2290,72.473]],["name/16-67",[]],["text/16-67",[]],["component/16-67",[]],["title/16-68",[2291,72.473,2292,57.698]],["name/16-68",[]],["text/16-68",[]],["component/16-68",[]],["title/16-69",[2227,33.671,2293,72.473]],["name/16-69",[]],["text/16-69",[]],["component/16-69",[]],["title/16-70",[188,32.044,2294,72.473]],["name/16-70",[]],["text/16-70",[]],["component/16-70",[]],["title/16-71",[69,34.182,2295,72.473]],["name/16-71",[]],["text/16-71",[]],["component/16-71",[]],["title/16-72",[82,35.279,2296,72.473]],["name/16-72",[]],["text/16-72",[]],["component/16-72",[]],["title/16-73",[395,27.763,2297,72.473]],["name/16-73",[]],["text/16-73",[]],["component/16-73",[]],["title/16-74",[2298,72.473,2299,66.664]],["name/16-74",[]],["text/16-74",[]],["component/16-74",[]],["title/16-75",[2227,33.671,2300,72.473]],["name/16-75",[]],["text/16-75",[]],["component/16-75",[]],["title/16-76",[188,32.044,2301,72.473]],["name/16-76",[]],["text/16-76",[]],["component/16-76",[]],["title/16-77",[426,43.251,2277,41.548,2302,62.26]],["name/16-77",[]],["text/16-77",[]],["component/16-77",[]],["title/16-78",[69,34.182,2303,72.473]],["name/16-78",[]],["text/16-78",[]],["component/16-78",[]],["title/16-79",[82,35.279,2304,72.473]],["name/16-79",[]],["text/16-79",[]],["component/16-79",[]],["title/16-80",[395,27.763,2305,72.473]],["name/16-80",[]],["text/16-80",[]],["component/16-80",[]],["title/16-81",[2306,72.473,2307,62.838]],["name/16-81",[]],["text/16-81",[]],["component/16-81",[]],["title/16-82",[2227,33.671,2308,72.473]],["name/16-82",[]],["text/16-82",[]],["component/16-82",[]],["title/16-83",[188,32.044,2309,72.473]],["name/16-83",[]],["text/16-83",[]],["component/16-83",[]],["title/16-84",[426,43.251,2277,41.548,2310,62.26]],["name/16-84",[]],["text/16-84",[]],["component/16-84",[]],["title/16-85",[69,34.182,2311,72.473]],["name/16-85",[]],["text/16-85",[]],["component/16-85",[]],["title/16-86",[82,35.279,2312,72.473]],["name/16-86",[]],["text/16-86",[]],["component/16-86",[]],["title/16-87",[395,27.763,2313,72.473]],["name/16-87",[]],["text/16-87",[]],["component/16-87",[]],["title/16-88",[2314,72.473,2315,62.838]],["name/16-88",[]],["text/16-88",[]],["component/16-88",[]],["title/16-89",[2227,33.671,2316,72.473]],["name/16-89",[]],["text/16-89",[]],["component/16-89",[]],["title/16-90",[188,32.044,2317,72.473]],["name/16-90",[]],["text/16-90",[]],["component/16-90",[]],["title/16-91",[69,34.182,2318,72.473]],["name/16-91",[]],["text/16-91",[]],["component/16-91",[]],["title/16-92",[82,35.279,2319,72.473]],["name/16-92",[]],["text/16-92",[]],["component/16-92",[]],["title/16-93",[2320,72.473,2321,62.838]],["name/16-93",[]],["text/16-93",[]],["component/16-93",[]],["title/16-94",[2227,33.671,2322,72.473]],["name/16-94",[]],["text/16-94",[]],["component/16-94",[]],["title/16-95",[188,32.044,2323,72.473]],["name/16-95",[]],["text/16-95",[]],["component/16-95",[]],["title/16-96",[69,34.182,2324,72.473]],["name/16-96",[]],["text/16-96",[]],["component/16-96",[]],["title/16-97",[2230,48.363,2325,72.473]],["name/16-97",[]],["text/16-97",[]],["component/16-97",[]],["title/16-98",[82,35.279,2326,72.473]],["name/16-98",[]],["text/16-98",[]],["component/16-98",[]],["title/16-99",[395,27.763,2327,72.473]],["name/16-99",[]],["text/16-99",[]],["component/16-99",[]],["title/16-100",[2328,72.473,2329,66.664]],["name/16-100",[]],["text/16-100",[]],["component/16-100",[]],["title/16-101",[2227,33.671,2330,72.473]],["name/16-101",[]],["text/16-101",[]],["component/16-101",[]],["title/16-102",[188,32.044,2331,72.473]],["name/16-102",[]],["text/16-102",[]],["component/16-102",[]],["title/16-103",[395,27.763,2332,72.473]],["name/16-103",[]],["text/16-103",[]],["component/16-103",[]],["title/16-104",[326,43.306,2333,72.473]],["name/16-104",[]],["text/16-104",[]],["component/16-104",[]],["title/16-105",[2227,33.671,2334,72.473]],["name/16-105",[]],["text/16-105",[]],["component/16-105",[]],["title/16-106",[188,32.044,2335,72.473]],["name/16-106",[]],["text/16-106",[]],["component/16-106",[]],["title/16-107",[426,43.251,2277,41.548,2336,62.26]],["name/16-107",[]],["text/16-107",[]],["component/16-107",[]],["title/16-108",[2337,72.473,2338,66.664]],["name/16-108",[]],["text/16-108",[]],["component/16-108",[]],["title/16-109",[2227,33.671,2339,72.473]],["name/16-109",[]],["text/16-109",[]],["component/16-109",[]],["title/16-110",[188,32.044,2340,72.473]],["name/16-110",[]],["text/16-110",[]],["component/16-110",[]],["title/16-111",[69,34.182,2341,72.473]],["name/16-111",[]],["text/16-111",[]],["component/16-111",[]],["title/16-112",[2230,48.363,2342,72.473]],["name/16-112",[]],["text/16-112",[]],["component/16-112",[]],["title/16-113",[82,35.279,2343,72.473]],["name/16-113",[]],["text/16-113",[]],["component/16-113",[]],["title/16-114",[395,27.763,2344,72.473]],["name/16-114",[]],["text/16-114",[]],["component/16-114",[]],["title/16-115",[2345,72.473,2346,62.838]],["name/16-115",[]],["text/16-115",[]],["component/16-115",[]],["title/16-116",[2227,33.671,2347,72.473]],["name/16-116",[]],["text/16-116",[]],["component/16-116",[]],["title/16-117",[188,32.044,2348,72.473]],["name/16-117",[]],["text/16-117",[]],["component/16-117",[]],["title/16-118",[69,34.182,2349,72.473]],["name/16-118",[]],["text/16-118",[]],["component/16-118",[]],["title/16-119",[2230,48.363,2350,72.473]],["name/16-119",[]],["text/16-119",[]],["component/16-119",[]],["title/16-120",[82,35.279,2351,72.473]],["name/16-120",[]],["text/16-120",[]],["component/16-120",[]],["title/16-121",[395,27.763,2352,72.473]],["name/16-121",[]],["text/16-121",[]],["component/16-121",[]],["title/16-122",[8,30.558,237,37.204,245,40.098]],["name/16-122",[]],["text/16-122",[]],["component/16-122",[]],["title/16-123",[176,54.171,1178,52.748]],["name/16-123",[]],["text/16-123",[]],["component/16-123",[]],["title/16-124",[1843,66.664,2227,33.671]],["name/16-124",[]],["text/16-124",[]],["component/16-124",[]],["title/16-125",[188,32.044,1845,66.664]],["name/16-125",[]],["text/16-125",[]],["component/16-125",[]],["title/16-126",[69,34.182,2353,72.473]],["name/16-126",[]],["text/16-126",[]],["component/16-126",[]],["title/16-127",[82,35.279,2354,72.473]],["name/16-127",[]],["text/16-127",[]],["component/16-127",[]],["title/16-128",[178,55.799,2355,62.838]],["name/16-128",[]],["text/16-128",[]],["component/16-128",[]],["title/16-129",[179,66.664,2227,33.671]],["name/16-129",[]],["text/16-129",[]],["component/16-129",[]],["title/16-130",[181,66.664,188,32.044]],["name/16-130",[]],["text/16-130",[]],["component/16-130",[]],["title/16-131",[69,34.182,184,66.664]],["name/16-131",[]],["text/16-131",[]],["component/16-131",[]],["title/16-132",[186,66.664,395,27.763]],["name/16-132",[]],["text/16-132",[]],["component/16-132",[]],["title/16-133",[189,59.98,2356,66.664]],["name/16-133",[]],["text/16-133",[]],["component/16-133",[]],["title/16-134",[2227,33.671,2357,72.473]],["name/16-134",[]],["text/16-134",[]],["component/16-134",[]],["title/16-135",[188,32.044,2358,72.473]],["name/16-135",[]],["text/16-135",[]],["component/16-135",[]],["title/16-136",[69,34.182,2359,72.473]],["name/16-136",[]],["text/16-136",[]],["component/16-136",[]],["title/16-137",[82,35.279,2360,72.473]],["name/16-137",[]],["text/16-137",[]],["component/16-137",[]],["title/16-138",[191,54.171,2361,66.664]],["name/16-138",[]],["text/16-138",[]],["component/16-138",[]],["title/16-139",[2227,33.671,2362,72.473]],["name/16-139",[]],["text/16-139",[]],["component/16-139",[]],["title/16-140",[69,34.182,2363,72.473]],["name/16-140",[]],["text/16-140",[]],["component/16-140",[]],["title/16-141",[193,59.98,1809,52.748]],["name/16-141",[]],["text/16-141",[]],["component/16-141",[]],["title/16-142",[196,66.664,2227,33.671]],["name/16-142",[]],["text/16-142",[]],["component/16-142",[]],["title/16-143",[188,32.044,199,66.664]],["name/16-143",[]],["text/16-143",[]],["component/16-143",[]],["title/16-144",[188,27.528,202,57.27,2364,47.936]],["name/16-144",[]],["text/16-144",[]],["component/16-144",[]],["title/16-145",[69,34.182,204,66.664]],["name/16-145",[]],["text/16-145",[]],["component/16-145",[]],["title/16-146",[106,42.737,2365,72.473]],["name/16-146",[]],["text/16-146",[]],["component/16-146",[]],["title/16-147",[395,27.763,2366,72.473]],["name/16-147",[]],["text/16-147",[]],["component/16-147",[]],["title/16-148",[237,37.204,1216,34.583,2367,62.26]],["name/16-148",[]],["text/16-148",[]],["component/16-148",[]],["title/16-149",[237,37.204,2368,62.26,2369,44.229]],["name/16-149",[]],["text/16-149",[]],["component/16-149",[]],["title/16-150",[237,37.204,1104,44.229,2370,62.26]],["name/16-150",[]],["text/16-150",[]],["component/16-150",[]],["title/16-151",[237,32.608,1084,38.766,2277,36.416,2371,54.57]],["name/16-151",[]],["text/16-151",[]],["component/16-151",[]],["title/16-152",[207,62.838,2372,66.664]],["name/16-152",[]],["text/16-152",[]],["component/16-152",[]],["title/16-153",[2227,33.671,2373,72.473]],["name/16-153",[]],["text/16-153",[]],["component/16-153",[]],["title/16-154",[188,32.044,2374,72.473]],["name/16-154",[]],["text/16-154",[]],["component/16-154",[]],["title/16-155",[69,34.182,2375,72.473]],["name/16-155",[]],["text/16-155",[]],["component/16-155",[]],["title/16-156",[82,35.279,2376,72.473]],["name/16-156",[]],["text/16-156",[]],["component/16-156",[]],["title/16-157",[107,59.98,2377,72.473]],["name/16-157",[]],["text/16-157",[]],["component/16-157",[]],["title/16-158",[2227,33.671,2378,72.473]],["name/16-158",[]],["text/16-158",[]],["component/16-158",[]],["title/16-159",[2258,55.799,2379,72.473]],["name/16-159",[]],["text/16-159",[]],["component/16-159",[]],["title/16-160",[188,32.044,2380,72.473]],["name/16-160",[]],["text/16-160",[]],["component/16-160",[]],["title/16-161",[69,34.182,2381,72.473]],["name/16-161",[]],["text/16-161",[]],["component/16-161",[]],["title/16-162",[82,35.279,2382,72.473]],["name/16-162",[]],["text/16-162",[]],["component/16-162",[]],["title/16-163",[87,48.363,2383,72.473]],["name/16-163",[]],["text/16-163",[]],["component/16-163",[]],["title/16-164",[2384,72.473,2385,66.664]],["name/16-164",[]],["text/16-164",[]],["component/16-164",[]],["title/16-165",[2227,33.671,2386,72.473]],["name/16-165",[]],["text/16-165",[]],["component/16-165",[]],["title/16-166",[188,32.044,2387,72.473]],["name/16-166",[]],["text/16-166",[]],["component/16-166",[]],["title/16-167",[69,34.182,2388,72.473]],["name/16-167",[]],["text/16-167",[]],["component/16-167",[]],["title/16-168",[2389,72.473,2390,62.838]],["name/16-168",[]],["text/16-168",[]],["component/16-168",[]],["title/16-169",[2227,33.671,2391,72.473]],["name/16-169",[]],["text/16-169",[]],["component/16-169",[]],["title/16-170",[188,32.044,841,66.664]],["name/16-170",[]],["text/16-170",[]],["component/16-170",[]],["title/16-171",[1001,49.311,2392,72.473]],["name/16-171",[]],["text/16-171",[]],["component/16-171",[]],["title/16-172",[951,40.796,2393,62.26,2394,49.568]],["name/16-172",[]],["text/16-172",[]],["component/16-172",[]],["title/16-173",[479,29.024,984,36.306,2395,48.571,2396,38.669,2397,40.199]],["name/16-173",[]],["text/16-173",[]],["component/16-173",[]],["title/16-174",[9,30.654,68,32.608,479,32.608,2398,54.57]],["name/16-174",[]],["text/16-174",[]],["component/16-174",[]],["title/16-175",[479,29.024,925,38.669,2399,48.571,2400,44.678,2401,40.199]],["name/16-175",[]],["text/16-175",[]],["component/16-175",[]],["title/16-176",[115,57.698,2402,72.473]],["name/16-176",[]],["text/16-176",[]],["component/16-176",[]],["title/16-177",[2227,33.671,2403,72.473]],["name/16-177",[]],["text/16-177",[]],["component/16-177",[]],["title/16-178",[188,32.044,2404,72.473]],["name/16-178",[]],["text/16-178",[]],["component/16-178",[]],["title/16-179",[1001,49.311,2405,72.473]],["name/16-179",[]],["text/16-179",[]],["component/16-179",[]],["title/16-180",[82,35.279,2406,72.473]],["name/16-180",[]],["text/16-180",[]],["component/16-180",[]],["title/16-181",[2407,72.473,2408,66.664]],["name/16-181",[]],["text/16-181",[]],["component/16-181",[]],["title/16-182",[2227,33.671,2409,72.473]],["name/16-182",[]],["text/16-182",[]],["component/16-182",[]],["title/16-183",[188,32.044,2410,72.473]],["name/16-183",[]],["text/16-183",[]],["component/16-183",[]],["title/16-184",[69,34.182,2411,72.473]],["name/16-184",[]],["text/16-184",[]],["component/16-184",[]],["title/16-185",[82,35.279,2412,72.473]],["name/16-185",[]],["text/16-185",[]],["component/16-185",[]],["title/16-186",[714,50.345,2413,72.473]],["name/16-186",[]],["text/16-186",[]],["component/16-186",[]],["title/16-187",[2227,33.671,2414,72.473]],["name/16-187",[]],["text/16-187",[]],["component/16-187",[]],["title/16-188",[188,32.044,2415,72.473]],["name/16-188",[]],["text/16-188",[]],["component/16-188",[]],["title/16-189",[224,40.098,2416,62.26,2417,33.496]],["name/16-189",[]],["text/16-189",[]],["component/16-189",[]],["title/16-190",[188,24.128,2418,54.57,2419,50.197,2420,40.79]],["name/16-190",[]],["text/16-190",[]],["component/16-190",[]],["title/16-191",[188,21.476,205,28.643,515,29.024,2102,33.741,2421,48.571]],["name/16-191",[]],["text/16-191",[]],["component/16-191",[]],["title/16-192",[69,34.182,2422,72.473]],["name/16-192",[]],["text/16-192",[]],["component/16-192",[]],["title/16-193",[2230,48.363,2423,72.473]],["name/16-193",[]],["text/16-193",[]],["component/16-193",[]],["title/16-194",[82,35.279,2424,72.473]],["name/16-194",[]],["text/16-194",[]],["component/16-194",[]],["title/16-195",[25,57.698,2425,72.473]],["name/16-195",[]],["text/16-195",[]],["component/16-195",[]],["title/16-196",[205,32.18,515,32.608,2102,37.909,2426,54.57]],["name/16-196",[]],["text/16-196",[]],["component/16-196",[]],["title/16-197",[395,27.763,2427,72.473]],["name/16-197",[]],["text/16-197",[]],["component/16-197",[]],["title/16",[47,43.905,280,46.675]],["name/16",[1149,0.452]],["text/16",[0,0.51,1,2.188,3,0.189,5,4.605,6,0.048,7,1.338,8,0.197,9,1.949,10,0.322,11,0.073,13,0.263,14,0.048,18,1.841,20,0.967,23,1.942,24,0.057,27,0.887,28,0.609,31,0.271,34,0.72,35,0.113,36,0.093,37,0.196,38,0.63,39,0.758,40,2.291,42,0.965,43,0.949,45,1.203,46,3.696,47,0.203,48,1.536,49,1.177,50,0.097,51,2.448,52,1.953,53,0.477,54,1.235,55,0.059,57,0.396,60,0.386,61,0.72,62,3.419,63,0.807,64,0.572,65,0.719,68,0.916,69,1.406,70,2.234,71,0.259,72,0.7,73,0.87,74,0.279,75,0.443,77,0.059,78,1.035,79,0.162,80,0.695,82,0.638,83,0.063,86,1.179,87,0.602,90,3.661,91,0.578,92,0.52,94,1.469,95,0.446,96,1.81,99,0.192,100,0.278,101,0.75,102,0.233,103,0.668,104,1.468,105,2.988,106,4.734,107,1.489,109,0.157,110,0.053,111,1.26,112,0.456,113,0.295,114,0.457,115,0.215,117,0.627,119,0.704,120,0.114,127,0.089,129,0.33,130,0.432,132,4.395,138,1.643,139,0.309,141,0.663,143,0.049,147,1.245,154,0.376,156,0.063,175,0.036,177,0.246,183,0.099,188,4.121,192,0.51,194,0.046,197,1.106,198,4.804,205,3.175,206,3.647,208,2.982,210,0.694,213,0.18,214,2.148,216,0.259,217,0.517,221,0.201,222,0.709,223,0.084,224,1.543,225,0.385,227,0.37,228,1.073,229,0.309,230,1.989,231,0.404,232,0.52,233,0.866,236,1.662,237,4.842,240,0.05,241,1.968,245,0.422,247,0.309,248,0.629,249,1.026,253,0.057,254,1.465,255,0.059,256,0.102,257,1.495,258,0.446,259,1.461,261,1.782,264,3.24,265,0.118,266,0.6,267,0.477,268,0.83,269,0.08,270,1.375,271,0.105,273,0.053,276,1.356,278,0.292,279,0.148,280,0.542,281,0.425,282,2.564,283,1.186,284,0.051,285,0.267,286,2.944,287,0.979,290,0.656,292,0.049,293,1.372,294,0.279,295,0.099,296,4.697,298,1.379,299,1.335,300,0.668,303,0.348,304,0.213,305,1.232,308,3.917,309,0.725,310,0.055,311,1.533,313,2.235,314,0.668,315,1.266,317,1.465,319,0.423,322,3.876,323,1.372,324,0.263,325,1.668,326,0.948,327,3.071,328,0.489,329,0.912,332,0.831,333,0.113,335,1.091,336,0.086,339,0.102,343,1.868,347,0.43,349,0.546,350,0.059,352,0.234,353,1.352,354,1.472,359,0.063,360,0.368,361,0.05,365,0.623,366,0.152,368,0.949,372,1.27,374,0.709,378,0.43,380,0.113,382,0.105,383,0.048,385,0.102,388,1.402,395,0.729,409,0.162,411,2.407,412,0.099,416,0.223,426,2.646,433,0.051,434,1.022,448,0.786,451,0.522,454,1.184,455,2.132,456,0.968,458,1.915,460,0.059,462,0.053,470,0.583,476,3.183,478,1.861,479,2.466,480,0.359,481,0.047,482,0.537,483,1.931,484,0.422,485,0.105,486,0.583,487,0.148,489,0.152,490,0.267,492,0.637,493,0.746,494,0.138,495,0.168,496,0.421,497,0.251,498,1.899,499,2.622,501,2.073,505,0.385,506,0.152,507,0.233,509,0.627,510,0.472,512,0.093,513,1.28,514,0.051,515,1.375,516,0.542,517,1.28,524,0.568,527,1.873,528,0.108,529,0.683,530,0.673,533,0.348,535,0.268,536,0.267,538,1.812,539,0.583,541,0.099,543,0.118,547,0.108,548,0.591,549,0.105,550,1.738,551,0.319,552,0.187,553,2.68,558,0.145,562,0.157,565,0.794,567,1.919,568,0.591,569,1.052,570,0.208,572,0.309,573,0.059,574,0.244,577,0.053,578,0.795,580,0.248,581,1.634,584,0.233,585,0.359,587,0.157,591,0.612,596,0.267,603,0.332,606,0.309,607,0.145,610,0.057,611,1.153,612,0.162,617,1.005,618,0.202,621,0.339,622,0.108,630,3.88,642,0.187,659,0.807,660,0.572,696,0.597,697,0.063,698,0.371,704,0.942,705,1.969,706,1.304,707,0.786,708,0.196,709,0.059,710,0.404,711,1.224,713,0.118,714,1.322,715,0.676,718,0.782,719,4.433,721,1.845,722,0.581,723,0.051,725,0.323,736,0.141,739,0.371,742,1.422,747,0.505,748,0.583,749,0.202,750,0.279,751,0.441,752,0.572,754,0.251,761,0.323,767,1.702,773,0.215,775,0.059,778,0.765,779,0.055,780,1.412,782,0.348,783,0.951,784,0.099,787,0.047,789,0.386,814,2.2,822,1.908,852,0.059,871,0.063,873,2.794,874,0.152,875,4.695,883,0.055,889,0.721,897,0.102,898,0.223,900,0.053,902,1.808,905,0.953,909,1.295,910,0.057,911,0.095,912,0.177,913,0.049,914,0.422,915,0.36,919,0.055,920,0.278,921,0.208,924,0.108,925,0.108,927,0.059,932,0.273,934,0.113,935,1.839,937,1.107,938,0.3,939,0.836,942,0.359,943,0.095,945,0.148,946,0.059,947,1.155,949,0.539,951,1.145,955,0.105,959,0.099,964,0.057,966,0.053,967,1.226,968,0.432,969,0.233,970,0.456,971,0.055,974,0.048,976,0.102,979,0.385,980,0.063,981,0.145,984,0.443,987,0.569,992,0.055,997,0.319,1000,0.049,1001,0.047,1002,0.223,1004,1.344,1007,0.542,1009,0.456,1011,0.157,1013,0.332,1022,0.988,1026,0.05,1027,0.3,1028,0.188,1032,0.368,1040,0.562,1043,0.053,1044,0.138,1048,0.055,1049,0.057,1050,0.108,1051,2.253,1052,0.765,1055,0.145,1056,1.364,1057,0.053,1058,0.233,1059,0.831,1066,0.668,1067,1.203,1069,0.309,1070,0.057,1072,1.364,1080,1.189,1082,0.175,1084,1.736,1085,0.113,1088,2.704,1092,0.523,1093,1.451,1094,0.102,1095,0.145,1097,0.542,1098,0.091,1100,0.669,1101,1.28,1102,1.115,1103,0.187,1104,0.597,1105,0.89,1111,0.725,1118,0.152,1125,0.085,1146,0.292,1151,0.267,1155,0.244,1156,1.05,1157,3.167,1159,0.055,1161,0.145,1164,0.725,1166,0.89,1168,0.108,1170,0.348,1171,0.063,1172,0.152,1173,0.125,1177,0.162,1178,0.912,1179,0.561,1183,2.806,1184,0.331,1187,0.051,1209,5.407,1210,0.553,1211,0.6,1213,0.695,1215,0.371,1216,1.927,1219,1.881,1221,2.334,1223,0.457,1228,0.215,1229,0.829,1230,0.049,1231,0.176,1273,0.053,1275,0.105,1277,0.331,1280,0.059,1281,0.91,1286,0.244,1287,0.347,1294,0.259,1295,0.055,1296,0.196,1297,0.102,1299,1.278,1300,0.053,1301,0.196,1302,0.051,1311,0.912,1312,0.285,1313,0.259,1314,0.148,1315,0.108,1316,0.059,1321,0.152,1323,0.118,1324,0.059,1325,0.055,1328,0.353,1330,0.125,1331,0.332,1332,0.059,1333,0.157,1336,0.432,1337,0.208,1340,0.063,1341,0.196,1343,0.095,1344,0.108,1347,0.251,1353,0.113,1355,2.322,1357,0.105,1359,0.371,1360,0.157,1361,0.251,1364,0.438,1373,0.057,1374,0.053,1377,0.055,1379,0.291,1381,0.921,1382,0.108,1383,0.584,1385,0.102,1390,2.137,1391,0.572,1393,0.055,1402,0.162,1404,0.187,1405,0.408,1411,0.309,1414,1.668,1416,0.244,1434,0.108,1467,0.053,1469,0.118,1475,0.359,1480,0.168,1484,0.851,1485,0.612,1488,0.332,1493,0.162,1494,0.053,1496,0.059,1503,0.223,1505,0.674,1513,0.118,1518,0.259,1519,0.055,1522,0.208,1523,0.3,1528,0.059,1531,0.396,1535,0.105,1546,0.339,1552,0.986,1553,0.3,1562,0.108,1563,0.583,1586,0.332,1598,0.309,1599,0.095,1614,0.285,1619,0.583,1660,0.422,1685,0.118,1697,0.438,1698,0.113,1713,0.208,1757,0.348,1767,0.223,1771,0.942,1784,0.348,1785,0.057,1790,0.786,1792,0.368,1793,0.385,1794,1.304,1800,0.368,1805,0.208,1806,0.267,1807,0.097,1809,1.604,1810,1.358,1811,0.348,1813,0.057,1814,0.059,1818,1.94,1820,0.046,1831,0.053,1842,0.05,1846,0.162,1850,0.202,1851,0.105,1877,2.209,1888,0.202,1889,0.443,1892,0.457,1893,0.168,1897,0.309,1899,0.053,1901,0.105,1905,0.6,1906,0.157,1907,0.157,1908,0.223,1917,0.656,1924,0.851,1925,0.057,1926,1.556,1928,0.055,1929,0.921,1931,0.102,1933,1.145,1938,0.309,1939,1.306,1941,0.053,1942,0.371,1944,0.309,1948,0.102,1950,0.223,1954,0.168,1955,0.157,1956,0.223,1957,0.053,1958,2.023,1959,0.348,1960,1.266,1962,0.057,1965,0.157,1974,0.629,1978,0.113,1981,0.202,1988,0.309,1989,0.656,1993,0.152,1998,0.942,1999,0.259,2007,0.051,2009,0.168,2010,0.059,2011,0.053,2017,0.108,2020,0.108,2021,0.443,2023,0.348,2030,0.786,2031,0.048,2035,0.051,2036,0.055,2040,0.49,2043,0.215,2045,0.51,2048,0.108,2056,0.523,2057,0.248,2060,0.215,2063,1.515,2064,0.215,2071,0.979,2074,0.491,2075,0.309,2079,0.767,2080,0.152,2083,0.118,2084,0.059,2089,0.332,2095,0.786,2098,0.055,2100,0.059,2101,1.391,2102,0.791,2104,0.108,2107,0.157,2108,0.319,2111,0.208,2115,1.095,2116,1.088,2120,0.059,2129,0.99,2134,0.057,2136,0.057,2137,0.278,2152,0.523,2153,0.443,2154,0.309,2158,0.162,2160,0.309,2175,0.371,2177,0.118,2179,0.059,2182,0.105,2194,0.093,2202,0.108,2205,0.055,2206,0.369,2208,0.118,2226,0.773,2230,0.836,2232,1.037,2234,0.834,2241,0.782,2248,0.661,2254,0.546,2258,0.105,2260,1.532,2267,1.459,2274,0.487,2277,1.235,2284,2.774,2292,1.22,2299,0.661,2307,1.329,2315,0.676,2321,2.621,2329,0.993,2338,0.125,2346,0.234,2355,0.176,2356,0.661,2361,0.309,2364,0.105,2369,0.85,2372,0.884,2385,0.546,2390,0.514,2394,0.422,2396,0.162,2400,0.309,2401,0.113,2408,0.125,2417,0.285,2420,0.443,2428,2.065,2429,0.113,2430,0.187,2431,0.068,2432,0.125,2433,0.543,2434,0.068,2435,0.332,2436,0.068,2437,0.522,2438,0.068,2439,1.87,2440,0.466,2441,0.472,2442,0.068,2443,0.309,2444,0.068,2445,0.063,2446,0.068,2447,0.203,2448,0.906,2449,0.068,2450,0.136,2451,0.136,2452,0.309,2453,0.068,2454,1.515,2455,0.068,2456,0.27,2457,0.942,2458,0.594,2459,0.113,2460,0.542,2461,3.408,2462,0.669,2463,0.472,2464,0.057,2465,0.901,2466,0.068,2467,0.176,2468,0.291,2469,0.068,2470,0.472,2471,0.168,2472,0.136,2473,0.168,2474,0.348,2475,0.057,2476,0.068,2477,0.068,2478,0.572,2479,0.068,2480,0.059,2481,0.125,2482,0.422,2483,0.459,2484,0.987,2485,1.556,2486,0.063,2487,0.068,2488,0.168,2489,3.155,2490,0.125,2491,0.059,2492,0.068,2493,5.443,2494,2.901,2495,0.696,2496,0.27,2497,0.118,2498,0.952,2499,0.068,2500,0.176,2501,0.369,2502,0.309,2503,0.118,2504,0.068,2505,0.157,2506,0.055,2507,0.278,2508,0.187,2509,0.203,2510,2.571,2511,0.068,2512,0.068,2513,0.683,2514,0.068,2515,0.491,2516,0.068,2517,0.661,2518,0.068,2519,0.267,2520,1.385,2521,0.829,2522,1.263,2523,0.068,2524,0.834,2525,0.234,2526,0.594,2527,0.063,2528,0.068,2529,0.594,2530,0.168,2531,0.113,2532,0.059,2533,0.176,2534,0.063,2535,0.059,2536,0.278,2537,0.068,2538,0.348,2539,0.404,2540,2.456,2541,0.068,2542,0.059,2543,0.522,2544,0.068,2545,0.203,2546,0.332,2547,0.068,2548,1.349,2549,0.063,2550,0.068,2551,0.068,2552,0.831,2553,0.203,2554,0.068,2555,0.203,2556,0.068,2557,2.44,2558,0.057,2559,0.068,2560,0.593,2561,0.27,2562,0.063,2563,0.068,2564,1.864,2565,0.176,2566,0.53,2567,0.187,2568,0.125,2569,0.168,2570,0.068,2571,0.113,2572,0.332,2573,0.068,2574,0.359,2575,0.068,2576,0.113,2577,0.063,2578,0.118,2579,0.522,2580,0.113,2581,0.068,2582,0.259,2583,0.223,2584,0.369,2585,0.063,2586,0.168,2587,0.717,2588,0.068,2589,0.118,2590,0.068,2591,0.068,2592,0.059,2593,0.291,2594,0.068,2595,0.336,2596,0.234,2597,0.068,2598,0.068,2599,0.385,2600,0.438,2601,0.068,2602,0.068,2603,0.068,2604,0.162,2605,0.055,2606,0.059,2607,0.136,2608,1.72,2609,0.422,2610,0.472,2611,0.348,2612,0.621,2613,0.336,2614,0.068,2615,0.068,2616,0.428,2617,0.457,2618,0.78,2619,0.594,2620,0.223,2621,0.063,2622,0.278,2623,0.385,2624,0.055,2625,0.168,2626,0.068,2627,0.068,2628,0.063,2629,0.176,2630,0.621,2631,0.068,2632,0.063,2633,0.059,2634,0.068,2635,0.063,2636,1.306,2637,0.059,2638,0.068,2639,0.063,2640,0.068,2641,0.215,2642,0.203,2643,0.336,2644,0.168,2645,0.057,2646,0.068,2647,0.068,2648,0.332,2649,0.063,2650,0.068,2651,0.459,2652,0.656,2653,0.063,2654,0.267,2655,0.176,2656,0.223,2657,0.068,2658,0.593,2659,0.057,2660,0.063,2661,0.176,2662,0.594,2663,0.068,2664,0.291,2665,0.645,2666,0.068,2667,0.068,2668,0.553,2669,0.136,2670,0.068,2671,0.068,2672,0.068,2673,0.176,2674,0.068,2675,0.068,2676,0.118,2677,0.187,2678,0.223,2679,0.332,2680,0.057,2681,0.068,2682,0.438,2683,0.068,2684,0.068,2685,0.319,2686,0.348,2687,0.108,2688,0.102,2689,0.196,2690,0.569,2691,0.059,2692,0.125,2693,0.063,2694,0.285,2695,0.291,2696,0.068,2697,0.063,2698,0.068,2699,0.068,2700,0.053,2701,0.319,2702,0.773,2703,0.068,2704,0.068,2705,0.168,2706,1.153,2707,1.703,2708,0.593,2709,0.645,2710,1.31,2711,0.248,2712,0.336,2713,1.153,2714,0.136,2715,0.068,2716,1.263,2717,0.53,2718,0.773,2719,1.596,2720,1.515,2721,0.718,2722,0.696,2723,1.366,2724,0.656,2725,2.099,2726,2.536,2727,0.796,2728,0.645,2729,0.841,2730,0.676,2731,0.676,2732,0.203,2733,0.543,2734,0.961,2735,1.08,2736,0.569,2737,1.138,2738,1.253,2739,0.332,2740,0.27,2741,0.068,2742,0.055,2743,0.068,2744,0.136,2745,0.063,2746,0.068,2747,0.068,2748,0.068,2749,0.068,2750,0.068,2751,0.068,2752,0.068,2753,0.068,2754,0.068,2755,0.068,2756,0.594,2757,0.53,2758,0.487,2759,0.068,2760,0.125,2761,0.234,2762,0.514,2763,0.068,2764,0.718,2765,0.466,2766,0.068,2767,0.068,2768,0.885,2769,0.203,2770,0.336,2771,0.319,2772,0.068,2773,0.068,2774,0.068,2775,0.068,2776,0.059,2777,0.057,2778,0.068,2779,0.176,2780,0.068,2781,0.068,2782,0.068,2783,0.267,2784,0.068,2785,0.068,2786,0.068,2787,0.942,2788,0.068,2789,0.291,2790,0.068,2791,0.203,2792,0.068,2793,0.068,2794,0.063,2795,0.259,2796,0.057,2797,0.215,2798,0.125,2799,0.136,2800,0.27,2801,0.136,2802,0.136,2803,0.136,2804,0.248,2805,0.068,2806,0.068,2807,0.068,2808,2.357,2809,0.136,2810,0.136,2811,0.27,2812,0.068,2813,0.068,2814,0.136,2815,0.068,2816,0.661,2817,0.068,2818,0.068,2819,0.068,2820,0.136,2821,0.136,2822,0.068,2823,0.068,2824,0.068,2825,0.068,2826,0.068,2827,0.885,2828,0.136,2829,0.187,2830,0.466,2831,0.773,2832,0.068,2833,0.27,2834,0.055,2835,0.118,2836,0.068,2837,0.068,2838,0.068,2839,0.059,2840,0.068,2841,0.068,2842,0.291,2843,0.068,2844,0.113,2845,0.404,2846,0.068,2847,0.059,2848,0.068,2849,0.057,2850,0.136,2851,0.053,2852,0.215,2853,0.136,2854,0.068,2855,0.068,2856,0.068,2857,0.068,2858,0.068,2859,0.27,2860,0.068,2861,0.068,2862,0.068,2863,0.113,2864,0.113,2865,0.965,2866,0.27,2867,0.27,2868,0.348,2869,0.168,2870,0.068,2871,0.068,2872,0.168,2873,0.068,2874,0.136,2875,0.063,2876,0.068,2877,0.068,2878,0.27,2879,0.068,2880,0.187,2881,0.068,2882,0.136,2883,0.348,2884,0.168,2885,0.068,2886,0.068,2887,0.203,2888,0.068,2889,0.068,2890,0.168,2891,0.829,2892,0.136,2893,0.125,2894,0.279,2895,0.203,2896,0.339,2897,0.063,2898,0.136,2899,0.371,2900,0.068,2901,0.068,2902,0.068,2903,0.063,2904,0.068,2905,0.068,2906,0.203,2907,0.068,2908,0.068,2909,0.068,2910,0.068,2911,0.203,2912,0.27,2913,0.27,2914,0.422,2915,0.068,2916,0.068,2917,0.068,2918,0.118,2919,0.068,2920,0.068,2921,0.746,2922,0.068,2923,0.055,2924,0.136,2925,0.136,2926,0.068,2927,0.063,2928,0.359,2929,0.068,2930,0.063,2931,0.118,2932,0.068,2933,0.068,2934,0.068,2935,0.068,2936,0.136,2937,0.068,2938,0.369,2939,0.203,2940,0.136,2941,0.136,2942,0.136,2943,0.187,2944,0.278,2945,0.063,2946,0.063,2947,0.068,2948,0.428,2949,0.136,2950,0.136,2951,0.068,2952,0.068,2953,0.068,2954,0.063,2955,0.068,2956,0.068,2957,0.068,2958,0.068,2959,0.059,2960,0.546,2961,0.068,2962,0.152,2963,0.068,2964,0.068,2965,0.068,2966,0.786,2967,0.456,2968,0.572,2969,0.176,2970,0.223,2971,0.546,2972,0.136,2973,0.187,2974,0.125,2975,0.248,2976,0.057,2977,0.118,2978,0.068,2979,0.136,2980,0.136,2981,0.063,2982,0.063,2983,0.068,2984,1.021,2985,0.068,2986,0.203,2987,0.068,2988,0.136,2989,0.068,2990,0.068,2991,0.068,2992,0.125,2993,0.063,2994,0.068,2995,0.068,2996,0.068,2997,0.068,2998,0.059,2999,0.068,3000,0.068,3001,0.068,3002,0.125,3003,0.063,3004,0.125,3005,0.063,3006,0.063,3007,0.068,3008,0.068,3009,0.234,3010,0.068,3011,0.157,3012,0.068,3013,0.068,3014,0.223,3015,0.068,3016,0.057,3017,0.203,3018,0.203,3019,0.203,3020,0.136,3021,0.203,3022,0.057,3023,0.152,3024,0.428,3025,0.187,3026,0.068,3027,0.068,3028,0.059,3029,0.057,3030,0.057,3031,0.055,3032,0.136,3033,0.136,3034,0.162,3035,0.593,3036,0.428,3037,0.136,3038,0.068,3039,0.068,3040,0.068,3041,0.068,3042,0.068,3043,0.068,3044,0.546,3045,0.466,3046,0.336,3047,0.336,3048,0.572,3049,0.404,3050,0.063,3051,0.336,3052,0.118,3053,0.176,3054,0.125,3055,0.059,3056,0.136,3057,0.136,3058,0.068,3059,0.068,3060,0.068,3061,0.068,3062,0.068,3063,0.068,3064,0.068,3065,0.068,3066,0.068,3067,0.068,3068,0.057,3069,0.432,3070,0.136,3071,0.068,3072,0.057,3073,0.068,3074,0.068,3075,0.068,3076,0.068,3077,0.136,3078,0.068,3079,0.068,3080,0.136,3081,0.136,3082,0.514,3083,0.068,3084,0.068,3085,0.223,3086,0.108,3087,0.068,3088,0.187,3089,0.068,3090,0.068,3091,0.063,3092,0.068,3093,0.068,3094,0.428,3095,0.068,3096,0.068,3097,0.068,3098,0.068,3099,0.068,3100,0.336,3101,0.125,3102,0.068,3103,0.068,3104,0.068,3105,0.068,3106,0.068,3107,0.068,3108,0.068,3109,0.063,3110,0.068,3111,0.068,3112,0.438,3113,0.113,3114,0.063,3115,0.78,3116,0.068,3117,0.068,3118,0.187,3119,0.404,3120,0.223,3121,0.782,3122,0.125,3123,0.068,3124,0.621,3125,0.168,3126,0.136,3127,0.176,3128,0.773,3129,0.136,3130,0.336,3131,0.068,3132,0.068,3133,0.068,3134,0.145,3135,0.068,3136,0.068,3137,0.068,3138,0.136,3139,0.068,3140,0.203,3141,0.059,3142,0.063,3143,0.057,3144,0.068,3145,0.057,3146,0.068,3147,0.063,3148,0.068,3149,0.267,3150,0.059,3151,0.063,3152,0.068,3153,0.27,3154,0.068,3155,0.068,3156,0.068,3157,0.068,3158,0.063,3159,0.267,3160,0.162,3161,0.068,3162,0.068,3163,0.068,3164,0.068,3165,0.068,3166,0.068,3167,0.068,3168,0.068,3169,0.063,3170,0.459,3171,0.068,3172,0.53,3173,0.068,3174,0.063,3175,0.068,3176,0.068,3177,0.215,3178,0.385,3179,0.063,3180,0.059,3181,0.068,3182,0.063,3183,0.063,3184,0.187,3185,0.278,3186,0.068,3187,0.063,3188,0.068,3189,0.068,3190,0.063,3191,0.063,3192,0.068,3193,0.068,3194,0.068,3195,0.068,3196,0.063,3197,0.118,3198,0.068,3199,0.059,3200,0.068,3201,0.118,3202,0.057,3203,0.068,3204,0.068,3205,0.068,3206,0.068,3207,0.136,3208,0.068,3209,0.068,3210,0.068,3211,0.063,3212,0.068,3213,0.068,3214,0.068,3215,0.068,3216,0.068,3217,0.136,3218,0.136,3219,0.136,3220,0.136,3221,0.136,3222,0.136,3223,0.125,3224,0.136,3225,1.043,3226,0.068,3227,0.136,3228,0.466,3229,0.068,3230,0.27,3231,0.248,3232,0.068,3233,0.669,3234,0.248,3235,0.068,3236,0.332,3237,0.136,3238,0.068,3239,0.401,3240,0.068,3241,0.068,3242,0.27,3243,0.223,3244,0.068,3245,0.068,3246,0.068,3247,0.068,3248,0.267,3249,0.068,3250,0.136,3251,0.068,3252,0.068,3253,0.068,3254,0.068,3255,0.068,3256,0.068,3257,0.068,3258,0.068,3259,0.057,3260,0.059,3261,0.068,3262,0.068,3263,0.068,3264,0.203,3265,0.068,3266,0.057,3267,0.068,3268,0.203,3269,0.068,3270,0.068,3271,0.063,3272,0.068,3273,0.068,3274,0.118,3275,0.068,3276,0.059,3277,0.068,3278,0.068,3279,0.068,3280,0.068,3281,0.057,3282,0.068,3283,0.068,3284,0.136,3285,0.068,3286,0.068,3287,0.068,3288,0.136,3289,0.068,3290,0.068,3291,0.136,3292,0.136,3293,0.136,3294,0.068,3295,0.105,3296,0.068,3297,0.068,3298,0.068,3299,0.136,3300,0.068,3301,0.108,3302,0.068,3303,0.203,3304,0.203,3305,0.068,3306,0.068,3307,0.063,3308,0.059,3309,0.248,3310,0.234,3311,0.176,3312,0.203,3313,0.203,3314,0.068,3315,0.136,3316,0.136,3317,0.136,3318,0.125,3319,0.068,3320,0.068,3321,0.068,3322,0.248,3323,0.136,3324,0.136,3325,0.108,3326,0.157,3327,0.068,3328,0.136,3329,0.068,3330,0.063,3331,0.125,3332,0.125,3333,0.113,3334,0.068,3335,0.068,3336,0.057,3337,0.136,3338,0.125,3339,0.113,3340,0.176,3341,0.125,3342,0.594,3343,0.068,3344,0.371,3345,0.068,3346,0.118,3347,0.136,3348,0.136,3349,0.136,3350,0.332,3351,0.27,3352,0.136,3353,0.113,3354,0.059,3355,0.068,3356,0.059,3357,0.068,3358,0.063,3359,0.068,3360,0.113,3361,0.059,3362,0.068,3363,0.068,3364,0.068,3365,0.068,3366,0.136,3367,0.068,3368,0.063,3369,0.057,3370,0.068,3371,0.068,3372,0.068,3373,0.068,3374,0.068,3375,0.136,3376,0.203,3377,0.136,3378,0.203,3379,0.203,3380,0.203,3381,0.404,3382,0.176,3383,0.27,3384,0.057,3385,0.063,3386,0.059,3387,0.176,3388,0.125,3389,0.187,3390,0.125,3391,0.118,3392,0.068,3393,0.203,3394,0.063,3395,0.466,3396,0.234,3397,0.118,3398,0.466,3399,0.53,3400,0.136,3401,0.136,3402,0.068,3403,0.068,3404,0.068,3405,0.068,3406,0.068,3407,0.068,3408,0.068,3409,0.068,3410,0.068,3411,0.068,3412,0.053,3413,0.068,3414,0.068,3415,0.136,3416,0.063,3417,0.068,3418,0.068,3419,0.068,3420,0.203,3421,0.187,3422,0.136,3423,0.068,3424,0.136,3425,0.068,3426,0.063,3427,0.162,3428,0.063,3429,0.063,3430,0.136,3431,0.068,3432,0.068,3433,0.068,3434,0.118,3435,0.068,3436,0.125,3437,0.118,3438,0.118,3439,0.136,3440,0.203,3441,0.136,3442,0.068,3443,0.118,3444,0.068,3445,0.068,3446,0.068,3447,0.068,3448,0.068,3449,0.068,3450,0.068,3451,0.717,3452,0.136,3453,0.068,3454,0.522,3455,0.068,3456,0.057,3457,0.068,3458,0.068,3459,0.068,3460,0.068,3461,0.068,3462,0.068,3463,0.168,3464,0.068,3465,0.176,3466,0.057,3467,0.136,3468,0.068,3469,0.068,3470,0.068,3471,0.068,3472,0.063,3473,0.068,3474,0.068,3475,0.113,3476,0.068,3477,0.068,3478,0.136,3479,0.291,3480,0.136,3481,0.068,3482,0.063,3483,0.068,3484,0.068,3485,0.068,3486,0.068,3487,0.068,3488,0.118,3489,0.068,3490,0.068,3491,0.136,3492,0.068,3493,0.068,3494,0.068,3495,0.068,3496,0.068,3497,0.068,3498,0.068,3499,0.068,3500,0.068,3501,0.068,3502,0.068,3503,0.068,3504,0.068,3505,0.057,3506,0.063,3507,0.068,3508,0.113,3509,0.068,3510,0.068,3511,0.125,3512,0.136,3513,0.068,3514,0.063,3515,0.136,3516,0.068,3517,0.059,3518,0.068,3519,0.068,3520,0.068,3521,0.063,3522,0.068,3523,0.068,3524,0.068,3525,0.063,3526,0.136,3527,0.063,3528,0.068,3529,0.057,3530,0.136,3531,0.068,3532,0.068,3533,0.068,3534,0.068,3535,0.136,3536,0.063,3537,0.068,3538,0.068,3539,0.068,3540,0.068,3541,0.136,3542,0.068,3543,0.068,3544,0.068,3545,0.068,3546,0.068,3547,0.068,3548,0.336,3549,0.068,3550,0.068,3551,0.068,3552,0.136,3553,0.068,3554,0.068,3555,0.068,3556,0.068,3557,0.068,3558,0.068,3559,0.068,3560,0.068,3561,0.068,3562,0.068,3563,0.068,3564,0.068,3565,0.068,3566,0.068,3567,0.068,3568,0.068,3569,0.068,3570,0.068,3571,0.068,3572,0.068,3573,0.068,3574,0.057,3575,0.136,3576,0.063,3577,0.068,3578,0.136,3579,0.068,3580,0.068,3581,0.068,3582,0.136,3583,0.068,3584,0.068,3585,0.068,3586,0.068,3587,0.136,3588,0.068,3589,0.068,3590,0.068,3591,0.068,3592,0.136,3593,0.068,3594,0.841,3595,0.187,3596,0.068,3597,0.063,3598,0.068,3599,0.136,3600,0.068,3601,0.136,3602,0.136,3603,0.136,3604,0.063,3605,0.068,3606,0.068,3607,0.063,3608,0.203,3609,0.068,3610,0.068,3611,0.068,3612,0.068,3613,0.068,3614,0.063,3615,0.068,3616,0.057,3617,0.068,3618,0.068,3619,0.068,3620,0.068,3621,0.059,3622,0.068,3623,0.136,3624,0.068,3625,0.136,3626,0.118,3627,0.068,3628,0.063,3629,0.059,3630,0.068,3631,0.063,3632,0.136,3633,0.125,3634,0.068,3635,0.063,3636,0.234,3637,0.068,3638,0.108,3639,0.068,3640,0.051,3641,0.063,3642,0.068,3643,0.068,3644,0.068,3645,0.068,3646,0.068,3647,0.136,3648,0.136,3649,0.068,3650,0.063,3651,0.068,3652,0.27,3653,0.068,3654,0.603,3655,0.068,3656,0.068,3657,0.068,3658,0.348,3659,0.125,3660,0.068,3661,0.234,3662,0.063,3663,0.059,3664,0.068,3665,0.068,3666,0.068,3667,0.068,3668,0.059,3669,0.068,3670,0.068,3671,0.068,3672,0.068,3673,0.068,3674,0.068,3675,0.068,3676,0.068,3677,0.068,3678,0.187,3679,0.068,3680,0.068,3681,0.118,3682,0.068,3683,0.203,3684,0.068,3685,0.136,3686,0.068,3687,0.176,3688,0.068,3689,0.068,3690,0.063,3691,0.063,3692,0.068,3693,0.068,3694,0.068,3695,0.068,3696,0.068,3697,0.068,3698,0.068,3699,0.068,3700,0.068,3701,0.063,3702,0.057,3703,0.125,3704,0.136,3705,0.063,3706,0.291,3707,0.136,3708,0.136,3709,0.068,3710,0.068,3711,0.125,3712,0.068,3713,0.068,3714,0.068,3715,0.068,3716,0.068,3717,0.068,3718,0.068,3719,0.068,3720,0.063,3721,0.059,3722,0.401,3723,0.068,3724,0.234,3725,0.068,3726,0.136,3727,0.113,3728,0.068,3729,0.057,3730,0.068,3731,0.068,3732,0.068,3733,0.068,3734,0.068,3735,0.068,3736,0.068,3737,0.068,3738,0.068,3739,0.068,3740,0.136,3741,0.063,3742,0.068,3743,0.068,3744,0.068,3745,0.068,3746,0.068,3747,0.068,3748,0.459,3749,0.068,3750,0.063,3751,0.068,3752,0.068,3753,0.068,3754,0.068,3755,0.136,3756,0.068,3757,0.187,3758,0.187,3759,0.068,3760,0.068,3761,0.068,3762,0.203,3763,0.057,3764,0.068,3765,0.068,3766,0.203,3767,0.068,3768,0.136,3769,0.068,3770,0.068,3771,0.068,3772,0.068,3773,0.068,3774,0.068,3775,0.068,3776,0.068,3777,0.068,3778,0.063,3779,0.203,3780,0.068,3781,0.068,3782,0.068,3783,0.055,3784,0.068,3785,0.113]],["component/16",[18,0.186,172,0.252]],["title/17-1",[0,32.486,142,43.306]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[3,29.366,1216,34.583,1820,41.548]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[8,26.784,18,20.684,142,32.608,363,42.015]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[10,33.845,11,33.159,1836,53.983]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[21,30.297,68,29.024,221,29.024,245,31.282,272,37.396]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[143,44.229,223,38.261,1839,53.983]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17-7",[143,44.229,145,49.568,1123,40.098]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["title/17-8",[131,40.79,487,39.718,751,33.535,1125,34.039]],["name/17-8",[]],["text/17-8",[]],["component/17-8",[]],["title/17",[369,79.745]],["name/17",[3786,0.491]],["text/17",[0,0.961,1,1.337,6,1.489,7,1.43,9,1.204,10,3.962,12,1.858,13,3.226,18,4.008,20,1.264,21,4.148,27,4.546,28,1.358,29,3.35,31,2.165,34,1.43,38,1.404,43,1.489,44,1.56,48,4.028,53,2.706,54,1.43,61,2.481,68,5.571,80,1.458,85,1.774,87,5.222,91,2.71,99,2.641,103,1.489,104,2.904,106,1.264,112,2.583,117,1.317,127,3.851,128,2.706,129,1.337,130,1.56,131,4.97,134,1.706,138,3.026,142,5.185,143,1.522,145,7.423,180,1.706,192,1.522,197,2.649,222,2.583,224,2.394,228,1.317,230,3.922,232,1.43,241,1.358,258,3.999,261,1.264,264,2.394,272,1.65,273,1.65,279,1.56,280,1.38,293,1.43,294,2.583,296,2.815,298,1.404,304,1.358,308,1.248,309,2.641,324,2.436,328,2.53,329,1.43,335,1.38,353,3.498,354,1.317,360,2.583,361,2.706,363,6.025,374,1.489,411,1.317,412,1.56,478,1.358,479,2.942,496,4.724,501,3.286,507,2.583,517,1.404,529,2.641,569,1.65,574,1.56,584,1.489,616,1.65,696,1.522,705,1.458,722,1.38,723,1.602,736,1.489,747,1.65,749,3.68,751,4.809,752,3.999,760,3.68,761,1.489,780,1.404,784,1.56,787,5.324,789,4.278,889,1.358,905,1.56,907,1.858,909,3.35,915,1.458,932,1.458,935,1.404,941,1.65,949,1.281,951,1.404,959,2.706,960,1.602,969,1.489,970,1.489,982,1.774,989,6.969,991,3.077,993,3.077,997,1.706,1004,2.319,1026,1.56,1040,1.337,1058,1.489,1066,1.489,1156,1.522,1216,1.19,1286,5.695,1299,2.641,1310,1.706,1311,3.922,1314,1.56,1321,2.779,1322,1.706,1374,1.65,1383,6.028,1416,1.56,1466,3.077,1467,2.862,1485,1.56,1552,1.43,1553,1.602,1563,1.602,1790,1.56,1800,1.489,1818,1.458,1820,3.286,1828,1.706,1831,1.65,1832,5.766,1842,4.278,1846,2.96,1877,1.38,1885,7.198,1886,5.766,1887,1.971,1888,5.448,1889,1.602,1912,4.529,1931,1.602,1936,1.971,1938,1.65,1941,1.65,1942,2.96,1943,3.42,1944,1.65,1945,1.971,1946,1.971,1947,5.503,1948,2.779,1949,1.706,1950,1.774,1951,4.075,1952,3.42,1953,1.858,1954,1.774,1955,1.65,1956,1.774,1957,2.862,1958,1.65,1959,2.779,1960,2.779,1961,1.971,1962,1.774,1963,1.971,1964,1.971,1965,1.65,1974,2.779,1977,1.858,1978,4.864,1979,1.971,1980,1.774,1981,1.602,1982,1.971,1983,1.706,1984,1.971,1985,3.223,1986,1.971,1987,1.774,1988,1.65,1989,1.56,1990,1.774,1991,1.706,1992,1.971,1993,2.779,1994,1.971,1995,1.774,1996,1.971,1997,1.971,1998,1.774,1999,3.791,2000,1.971,2001,1.858,2002,3.077,2003,1.858,2004,1.971,2005,1.858,2006,1.971,2007,1.602,2008,1.971,2009,1.774,2010,3.223,2011,2.862,2012,1.858,2013,1.706,2014,1.971,2015,3.42,2016,1.971,2017,1.706,2018,1.774,2019,5.406,2020,1.706,2021,1.602,2022,1.971,2023,3.68,2024,1.971,2025,4.529,2026,1.971,2027,1.774,2028,1.971,2029,1.971,2030,1.65,2031,1.489,2032,1.971,2033,1.971,2034,1.971,2035,1.602,2036,1.706,2037,1.971,2038,1.971,2039,1.65,2040,1.602,2041,1.971,2042,1.971,2043,1.706,2044,1.858,2045,1.522,2046,1.774,2047,1.971,2048,1.706,3124,1.706]],["component/17",[18,0.186,172,0.252]],["title/18-1",[0,32.486,214,41.679]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[3,29.366,884,46.538,1044,42.362]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[8,30.558,91,28.714,281,29.366]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[11,29.064,91,25.168,1386,43.446,2756,45.164]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[46,30.312,177,33.535,206,28.235,212,40.79]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18-6",[19,49.311,3787,66.664]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["title/18-7",[215,57.698,3788,66.664]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["title/18-8",[218,59.98,3789,66.664]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["title/18-9",[219,62.838,3790,66.664]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["title/18-10",[220,62.838,3791,66.664]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["title/18-11",[1852,66.664,3792,66.664]],["name/18-11",[]],["text/18-11",[]],["component/18-11",[]],["title/18-12",[3793,72.473,3794,66.664]],["name/18-12",[]],["text/18-12",[]],["component/18-12",[]],["title/18-13",[3795,72.473,3796,66.664]],["name/18-13",[]],["text/18-13",[]],["component/18-13",[]],["title/18-14",[3797,72.473,3798,66.664]],["name/18-14",[]],["text/18-14",[]],["component/18-14",[]],["title/18-15",[3799,72.473,3800,66.664]],["name/18-15",[]],["text/18-15",[]],["component/18-15",[]],["title/18-16",[3801,72.473,3802,66.664]],["name/18-16",[]],["text/18-16",[]],["component/18-16",[]],["title/18-17",[3803,72.473,3804,66.664]],["name/18-17",[]],["text/18-17",[]],["component/18-17",[]],["title/18",[1386,69.02]],["name/18",[1241,0.426]],["text/18",[0,4.891,3,2.862,5,5.632,8,0.911,10,1.782,11,0.988,18,4.362,20,1.933,21,3.314,28,1.176,31,1.081,34,4.049,39,1.176,46,3.722,48,1.986,62,1.885,86,2.148,91,5.338,95,1.263,101,1.289,102,1.289,104,1.094,117,3.265,126,1.318,128,1.351,129,2.746,132,0.926,173,2.077,175,3.5,195,2.111,200,1.318,205,2.596,206,3.987,208,3.374,210,1.429,214,2.532,221,1.109,222,1.289,223,1.141,227,1.158,228,3.265,230,3.546,236,3.546,241,2.077,243,1.351,258,1.263,259,1.387,267,1.351,268,2.473,269,1.094,275,1.429,281,3.415,285,2.61,295,1.351,296,4.848,298,1.216,299,2.416,300,3.058,308,1.909,317,6.312,329,1.239,336,1.176,354,1.141,360,1.289,361,1.351,382,1.429,383,3.058,411,2.014,423,1.239,453,1.289,454,5.911,455,6.112,458,2.077,478,1.176,492,1.158,493,5.55,494,1.263,499,1.387,509,1.141,512,1.263,513,3.976,516,1.289,517,1.216,527,1.239,530,3.785,538,1.351,548,3.976,568,1.216,581,1.318,611,1.263,742,1.387,780,1.216,782,1.387,797,1.609,873,1.933,904,1.478,906,1.609,908,1.609,912,1.216,913,2.329,925,2.61,932,1.263,935,1.216,938,1.387,969,1.289,974,6.299,1007,1.195,1011,1.429,1032,2.277,1034,6.442,1040,1.158,1044,2.995,1053,1.387,1058,1.289,1080,2.23,1088,2.885,1093,1.195,1105,1.318,1123,1.195,1125,1.158,1137,3.291,1140,2.842,1147,3.015,1151,1.478,1165,1.351,1209,5.14,1213,1.263,1228,2.61,1283,1.536,1301,4.416,1308,1.707,1311,1.239,1315,2.61,1336,1.351,1341,1.351,1361,1.387,1377,1.478,1386,8.915,1523,1.387,1599,2.277,1792,1.289,1818,2.23,1850,2.45,1877,1.195,1924,1.387,1953,1.609,2005,1.609,2145,3.015,2175,2.61,2190,1.478,2397,1.536,2417,0.999,2420,1.387,2428,1.387,2505,2.524,2513,1.318,2558,1.536,2694,1.318,2756,1.536,2777,1.536,2783,1.478,3134,1.318,3295,1.429,3787,1.707,3788,4.05,3789,4.05,3790,3.015,3791,3.015,3792,4.888,3794,3.015,3796,3.015,3798,3.015,3800,3.015,3802,3.015,3804,4.05,3805,1.609,3806,1.707,3807,1.856,3808,1.707,3809,1.609,3810,7.241,3811,1.856,3812,1.856,3813,3.278,3814,1.856,3815,3.278,3816,1.609,3817,1.856,3818,1.856,3819,1.707,3820,1.856,3821,5.765,3822,1.856,3823,4.402,3824,1.856,3825,1.856,3826,4.402,3827,1.856,3828,1.856,3829,1.856,3830,1.856,3831,1.856,3832,1.856,3833,3.278,3834,1.856,3835,3.278,3836,1.856,3837,3.278,3838,3.278,3839,1.856,3840,1.856,3841,1.856,3842,1.856,3843,4.402,3844,1.856,3845,1.856,3846,4.402,3847,1.856,3848,1.856,3849,1.856,3850,1.856,3851,3.278]],["component/18",[18,0.186,172,0.252]],["title/19-1",[0,32.486,214,41.679]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[3,29.366,91,28.714,1082,32.519]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[8,30.558,94,34.207,197,33.496]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19",[175,32.519,281,29.366,314,43.251]],["name/19",[3852,0.452]],["text/19",[0,4.66,18,4.526,31,3.99,46,5.114,91,3.16,92,6.143,111,6.264,132,4.596,141,5.657,175,3.579,208,4.636,214,3.941,217,5.657,227,5.742,281,3.232,296,4.98,314,8.959,372,4.342,454,5.577,455,5.657,495,4.274,535,4.573,873,4.041,915,4.663,943,4.76,1034,6.54,1104,4.868,1165,4.988,1216,3.806,1277,4.868,3853,6.304,3854,9.014,3855,6.304,3856,6.853,3857,6.853,3858,8.604,3859,9.206]],["component/19",[18,0.186,172,0.252]],["title/20-1",[0,32.486,214,41.679]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[3,29.366,91,28.714,1082,32.519]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[120,30.654,208,27.479,492,34.039,777,37.909]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[120,30.654,208,27.479,886,38.766,2194,37.13]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[92,41.548,120,34.974,1163,47.936]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20-6",[111,33.048,120,40.529,2194,33.048,2233,42.114]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["title/20-7",[50,44.229,120,34.974,2240,53.983]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["title/20-8",[120,32.555,296,17.497,326,21.826,937,23.141,2194,24.852,2247,33.598,3860,31.669]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["title/20-9",[8,30.558,94,34.207,197,33.496]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["title/20-10",[120,30.654,176,40.79,208,27.479,492,34.039]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["title/20-11",[120,30.654,178,42.015,208,27.479,2194,37.13]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["title/20-12",[92,41.548,120,34.974,189,51.528]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["title/20-13",[111,33.048,120,40.529,191,36.306,2194,33.048]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["title/20-14",[50,44.229,120,34.974,193,51.528]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["title/20-15",[120,32.555,207,31.669,296,17.497,326,21.826,937,23.141,2194,24.852,3860,31.669]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["title/20",[120,48.698]],["name/20",[1740,0.406]],["text/20",[0,1.412,3,2.004,5,6.713,11,0.945,18,4.658,21,1.107,23,1.124,26,1.538,27,3.674,31,1.033,50,3.654,60,1.291,70,1.143,81,1.538,91,3.973,92,4.351,102,3.574,104,1.046,111,4.804,117,2.61,120,7.076,132,2.12,175,1.645,188,0.785,205,1.858,208,4.729,214,3.75,217,1.09,228,1.09,231,1.207,232,1.184,233,5.256,241,2.691,243,1.291,254,2.65,261,1.046,270,1.06,281,2.004,282,5.277,296,3.124,304,1.996,308,2.995,316,5.549,322,1.908,323,1.184,326,1.882,365,5.107,434,4.711,448,3.961,454,2.573,456,1.207,458,1.124,478,1.996,492,5.174,509,2.61,513,1.163,517,1.163,578,1.033,591,2.293,600,2.607,610,1.468,708,1.291,711,4.804,875,2.783,937,1.996,949,1.06,979,1.468,1007,2.029,1023,2.425,1028,5.229,1032,5.513,1044,2.143,1056,2.89,1082,0.927,1179,2.835,1213,5.399,1277,7.582,1281,1.233,1287,1.163,1328,3.931,1381,1.366,1552,1.184,1609,2.898,1917,1.291,1933,1.326,1939,1.326,2031,1.233,2102,2.188,2153,1.326,2182,1.366,2194,6.896,2552,1.366,2574,2.425,2583,1.468,2621,1.632,2896,1.291,3011,1.366,3031,2.508,3225,1.413,3860,6.526,3861,1.184,3862,2.607,3863,1.774,3864,1.774,3865,1.774,3866,1.774,3867,1.774,3868,7.299,3869,5.89,3870,4.248,3871,5.89,3872,4.248,3873,3.15,3874,3.15,3875,1.774,3876,3.15,3877,3.15,3878,1.774,3879,1.774,3880,1.774,3881,1.774,3882,3.15,3883,3.15,3884,4.248,3885,1.774,3886,1.774,3887,1.774]],["component/20",[18,0.186,172,0.252]],["title/21-1",[0,32.486,214,41.679]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[3,29.366,91,28.714,1082,32.519]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[8,30.558,94,34.207,197,33.496]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[46,26.979,176,36.306,208,24.458,565,29.425,1387,35.352]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[178,37.396,317,30.297,565,29.425,873,28.643,1387,35.352]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[189,40.199,476,31.826,565,29.425,1387,35.352,2152,35.352]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[175,16.371,191,23.428,270,18.729,326,18.729,515,18.729,565,18.988,1221,21.326,1387,22.813,1614,22.266,3134,22.266]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21-8",[11,38.599,1022,50.345]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["title/21",[565,43.905,1387,52.748]],["name/21",[3888,0.452]],["text/21",[0,4.048,1,2.027,3,1.533,4,3.944,5,6.608,8,2.59,18,3.423,23,2.059,27,4.155,46,5.692,48,4.035,51,3.457,54,3.521,68,1.942,91,1.499,103,2.257,132,1.622,141,4.093,147,1.969,173,3.343,175,2.756,205,3.111,206,1.681,208,2.657,224,2.093,230,2.168,245,5.43,249,3.196,261,3.111,268,1.825,270,3.153,296,3.673,298,2.129,304,2.059,308,1.892,317,6.184,319,1.916,322,1.969,326,1.942,327,4.062,354,3.242,372,4.22,385,2.429,454,3.196,455,4.712,458,2.059,476,2.129,492,2.027,495,2.027,501,5.626,515,1.942,517,2.129,530,2.027,548,5.024,565,7.534,578,1.892,611,2.211,708,2.365,725,2.257,752,2.211,780,3.457,783,2.093,873,4.521,912,2.129,1025,2.989,1030,4.853,1040,2.027,1067,2.308,1069,2.502,1082,1.697,1084,2.308,1095,2.308,1137,4.979,1157,2.308,1165,2.365,1169,4.367,1209,3.343,1213,4.532,1221,3.59,1283,2.689,1287,2.129,1387,8.618,1405,2.502,1599,2.257,1614,2.308,1792,2.257,2031,3.665,2152,2.365,2470,2.587,2495,5.513,2505,2.502,2510,2.689,2655,2.817,2771,5.303,2851,2.502,2863,2.689,2928,2.502,3134,2.308,3271,2.989,3889,2.989,3890,2.989,3891,3.249,3892,3.249,3893,8.753,3894,3.249,3895,3.249,3896,2.989,3897,2.989,3898,6.661]],["component/21",[18,0.186,172,0.252]],["title/22-1",[0,27.908,241,39.446,1866,57.27]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[3,29.366,119,30.815,2169,47.936]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[119,30.815,777,43.251,3899,47.936]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[18,20.684,264,35.145,886,38.766,3900,43.446]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[8,30.558,18,23.599,198,39.446]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22",[1216,40.256,2169,55.799]],["name/22",[8,0.241]],["text/22",[0,1.132,1,1.575,5,5.587,9,2.404,11,2.967,18,4.548,22,1.888,29,2.912,47,3.973,48,1.53,62,2.462,69,2.627,70,4.224,95,1.718,96,1.452,101,1.754,104,2.524,106,3.868,119,3.946,131,1.888,132,4.461,138,1.552,154,1.794,188,3.951,194,3.717,197,1.359,198,4.155,205,4.328,208,4.015,237,3.919,241,2.712,249,1.53,254,2.67,264,4.224,268,1.419,270,1.509,276,1.627,296,2.05,299,1.946,305,2.63,308,3.819,322,1.53,326,4.386,334,2.19,335,2.757,336,1.6,338,2.09,339,1.888,344,1.888,354,3.423,411,1.552,412,1.838,426,1.754,456,1.718,458,1.6,462,4.289,476,1.655,478,1.6,489,1.888,493,1.655,496,1.794,509,1.552,513,1.655,517,2.805,530,5.3,553,1.552,578,1.47,617,1.718,630,2.805,660,2.011,705,4.994,706,3.295,711,1.718,714,6.208,722,1.627,725,1.754,750,1.754,767,3.041,783,1.627,874,1.888,875,1.655,911,1.754,937,1.6,939,1.685,949,1.509,976,1.888,986,5.428,989,1.888,996,3.542,1000,1.794,1004,1.575,1007,1.627,1022,1.754,1040,1.575,1051,1.718,1072,1.718,1095,1.794,1101,1.655,1146,3.115,1166,1.794,1178,4.054,1184,1.794,1209,3.529,1216,4.429,1221,6.336,1286,3.115,1302,1.888,1311,2.856,1405,1.945,1414,3.041,1546,1.838,1794,1.945,1809,3.115,1818,1.718,1820,1.685,1877,1.627,2007,1.888,2056,3.115,2071,1.888,2169,1.945,2213,3.542,2277,1.685,2401,2.09,2513,1.794,2599,2.09,2617,1.945,2619,4.61,2705,4.61,2716,1.945,2787,2.09,2794,2.323,2894,1.754,2944,2.09,3248,2.011,3350,2.09,3640,1.888,3899,1.945,3900,6.348,3901,2.323,3902,2.526,3903,2.526,3904,2.526,3905,2.526,3906,2.526,3907,2.526,3908,2.526,3909,2.526,3910,2.526,3911,2.526,3912,3.937,3913,2.323,3914,6.751,3915,2.323,3916,3.937,3917,3.937,3918,2.323,3919,2.323,3920,2.323,3921,2.323,3922,2.19,3923,3.711,3924,2.19,3925,2.19,3926,2.19,3927,2.19,3928,2.19,3929,2.19,3930,5.687,3931,2.323,3932,3.408,3933,2.19,3934,7.973,3935,8.497,3936,7.032,3937,2.323,3938,2.526,3939,2.526,3940,2.09,3941,2.526,3942,2.19,3943,2.526,3944,1.945,3945,3.542,3946,2.526,3947,2.526,3948,2.526,3949,2.323,3950,2.323,3951,2.323,3952,3.937,3953,5.124,3954,2.323,3955,2.323,3956,2.526,3957,2.526,3958,2.526,3959,2.526,3960,2.526,3961,2.526,3962,2.526,3963,2.526,3964,2.323,3965,2.323,3966,2.323,3967,2.19,3968,2.323,3969,2.526,3970,2.526,3971,2.323]],["component/22",[18,0.186,172,0.252]],["title/23-1",[0,24.461,132,27.241,1337,42.015,3023,40.79]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[280,35.145,579,37.909,581,38.766,2719,43.446]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[113,34.574,254,34.039,1037,37.13,3384,45.164]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[113,34.574,305,33.535,2574,42.015,3972,54.57]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[113,39.446,217,38.261,3973,62.26]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[3974,72.473,3975,62.838]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23-7",[3976,72.473,3977,59.98]],["name/23-7",[]],["text/23-7",[]],["component/23-7",[]],["title/23-8",[3978,72.473,3979,66.664]],["name/23-8",[]],["text/23-8",[]],["component/23-8",[]],["title/23-9",[3980,72.473,3981,62.838]],["name/23-9",[]],["text/23-9",[]],["component/23-9",[]],["title/23-10",[3982,72.473,3983,66.664]],["name/23-10",[]],["text/23-10",[]],["component/23-10",[]],["title/23-11",[3984,72.473,3985,66.664]],["name/23-11",[]],["text/23-11",[]],["component/23-11",[]],["title/23-12",[3986,72.473,3987,66.664]],["name/23-12",[]],["text/23-12",[]],["component/23-12",[]],["title/23-13",[3988,72.473,3989,66.664]],["name/23-13",[]],["text/23-13",[]],["component/23-13",[]],["title/23-14",[3990,72.473,3991,66.664]],["name/23-14",[]],["text/23-14",[]],["component/23-14",[]],["title/23-15",[3992,72.473,3993,66.664]],["name/23-15",[]],["text/23-15",[]],["component/23-15",[]],["title/23-16",[3994,72.473,3995,66.664]],["name/23-16",[]],["text/23-16",[]],["component/23-16",[]],["title/23-17",[3996,72.473,3997,66.664]],["name/23-17",[]],["text/23-17",[]],["component/23-17",[]],["title/23-18",[3016,59.98,3998,72.473]],["name/23-18",[]],["text/23-18",[]],["component/23-18",[]],["title/23-19",[3999,72.473,4000,62.838]],["name/23-19",[]],["text/23-19",[]],["component/23-19",[]],["title/23-20",[4001,72.473,4002,62.838]],["name/23-20",[]],["text/23-20",[]],["component/23-20",[]],["title/23-21",[4003,72.473,4004,66.664]],["name/23-21",[]],["text/23-21",[]],["component/23-21",[]],["title/23-22",[4005,72.473,4006,66.664]],["name/23-22",[]],["text/23-22",[]],["component/23-22",[]],["title/23-23",[4007,72.473,4008,66.664]],["name/23-23",[]],["text/23-23",[]],["component/23-23",[]],["title/23-24",[4009,72.473,4010,66.664]],["name/23-24",[]],["text/23-24",[]],["component/23-24",[]],["title/23-25",[4011,72.473,4012,66.664]],["name/23-25",[]],["text/23-25",[]],["component/23-25",[]],["title/23-26",[4013,72.473,4014,66.664]],["name/23-26",[]],["text/23-26",[]],["component/23-26",[]],["title/23-27",[91,28.714,113,39.446,4015,62.26]],["name/23-27",[]],["text/23-27",[]],["component/23-27",[]],["title/23-28",[217,38.261,1039,45.315,2865,47.936]],["name/23-28",[]],["text/23-28",[]],["component/23-28",[]],["title/23-29",[147,37.718,1288,49.568,2713,42.362]],["name/23-29",[]],["text/23-29",[]],["component/23-29",[]],["title/23-30",[147,33.059,856,50.197,2689,39.718,2713,37.13]],["name/23-30",[]],["text/23-30",[]],["component/23-30",[]],["title/23-31",[147,29.425,208,24.458,311,33.048,2713,33.048,4016,48.571]],["name/23-31",[]],["text/23-31",[]],["component/23-31",[]],["title/23-32",[147,33.059,2713,37.13,3069,39.718,4017,54.57]],["name/23-32",[]],["text/23-32",[]],["component/23-32",[]],["title/23-33",[147,33.059,553,33.535,2713,37.13,4018,54.57]],["name/23-33",[]],["text/23-33",[]],["component/23-33",[]],["title/23-34",[20,28.643,147,29.425,2461,34.504,2713,33.048,4019,48.571]],["name/23-34",[]],["text/23-34",[]],["component/23-34",[]],["title/23-35",[147,33.059,293,36.416,2713,37.13,4020,54.57]],["name/23-35",[]],["text/23-35",[]],["component/23-35",[]],["title/23-36",[1273,47.936,1291,51.528,3616,51.528]],["name/23-36",[]],["text/23-36",[]],["component/23-36",[]],["title/23-37",[1273,42.015,2448,43.446,3616,45.164,4021,54.57]],["name/23-37",[]],["text/23-37",[]],["component/23-37",[]],["title/23-38",[347,40.796,922,49.568,4022,62.26]],["name/23-38",[]],["text/23-38",[]],["component/23-38",[]],["title/23-39",[296,29.825,922,49.568,4023,62.26]],["name/23-39",[]],["text/23-39",[]],["component/23-39",[]],["title/23-40",[261,32.18,922,43.446,1328,36.416,4024,54.57]],["name/23-40",[]],["text/23-40",[]],["component/23-40",[]],["title/23-41",[3,25.739,1001,37.13,2967,37.909,3023,40.79]],["name/23-41",[]],["text/23-41",[]],["component/23-41",[]],["title/23-42",[777,37.909,947,39.718,1001,37.13,2967,37.909]],["name/23-42",[]],["text/23-42",[]],["component/23-42",[]],["title/23-43",[886,38.766,1296,39.718,2045,38.766,2967,37.909]],["name/23-43",[]],["text/23-43",[]],["component/23-43",[]],["title/23",[3023,64.801]],["name/23",[11,0.262]],["text/23",[0,0.824,1,0.153,3,0.172,4,0.092,5,4.19,6,0.086,7,0.398,9,0.461,10,0.505,13,0.538,14,0.17,18,0.697,20,1.028,23,1.452,25,0.098,27,0.647,28,2.371,30,0.102,31,0.072,34,0.163,35,2.504,36,0.633,37,0.178,38,0.081,39,1.044,40,0.265,42,0.716,43,0.414,44,0.265,45,0.661,46,4.231,47,0.075,48,0.291,50,0.088,51,0.39,52,1.416,53,2.312,54,2.628,55,1.258,57,0.092,60,0.178,61,0.398,62,1.465,63,1.647,65,0.183,68,1.209,70,0.158,71,0.716,72,2.366,74,0.086,76,0.202,78,0.677,80,1.438,82,0.895,86,1.205,87,0.321,90,0.09,91,2.147,92,0.082,94,0.451,95,1.438,96,2.074,97,0.113,99,0.174,101,0.17,102,0.253,103,0.334,104,0.796,105,5.784,106,3.909,109,0.095,110,0.37,111,0.633,112,2.691,113,4.307,114,0.37,117,0.83,126,0.174,127,0.16,129,0.512,130,1.128,132,3.521,138,0.366,139,0.546,141,0.295,144,0.225,147,1.925,154,0.583,175,0.064,177,0.504,183,0.35,188,0.108,195,0.158,197,0.066,198,3.219,200,0.088,205,2.167,206,2.876,208,2.015,213,0.243,214,0.717,217,3.779,222,0.721,224,0.599,228,4.515,229,0.28,230,3.522,231,0.558,232,0.243,233,0.724,236,0.321,237,3.454,241,0.657,245,0.384,248,0.775,249,1.056,254,2.249,256,0.092,257,0.258,258,0.987,259,0.359,261,1.452,264,1.849,266,0.28,267,0.832,268,1.785,270,0.62,271,0.188,273,0.095,276,1.184,278,0.09,279,0.265,280,0.079,281,0.058,282,0.53,283,0.183,284,3.797,286,0.653,287,0.092,288,0.225,290,0.09,292,0.174,293,1.411,294,0.414,295,0.09,296,3.091,298,0.39,299,0.793,300,0.086,302,0.29,303,1.712,304,0.305,305,0.83,308,1.578,309,0.504,311,5.075,313,1.234,314,1.008,315,0.092,317,0.778,319,3.305,322,0.818,323,2.218,324,0.238,325,2.309,326,0.217,328,0.247,329,0.163,332,0.459,333,0.301,335,1.899,347,0.465,352,0.107,353,1.868,354,0.953,360,0.086,361,0.09,366,0.53,368,2.691,372,2.454,374,1.008,378,1.723,380,0.398,385,0.359,395,0.478,411,0.366,423,0.082,426,0.086,434,1.1,445,0.098,454,3.749,455,0.953,456,0.166,458,0.52,462,0.095,470,0.932,476,0.817,478,1.868,479,3.833,481,0.247,482,2.087,483,0.258,486,0.183,492,1.262,493,0.465,494,0.247,496,0.174,497,0.183,498,3.019,501,0.321,505,0.587,506,0.613,508,0.102,509,0.504,510,0.29,512,0.084,513,0.238,515,0.926,516,0.414,517,3.262,524,0.516,527,3.522,528,0.195,530,0.647,535,0.082,536,1.075,537,1.032,538,0.09,539,0.092,542,0.113,544,0.188,545,0.77,547,1.961,548,0.16,549,0.188,553,1.299,554,0.265,558,0.088,562,0.459,564,1.343,565,2.718,567,1.008,568,0.465,570,0.28,572,1.558,577,0.095,578,3.692,581,0.423,584,0.086,585,1.117,587,1.269,591,0.434,596,0.29,603,0.102,606,0.37,607,0.174,611,0.405,612,0.195,617,0.987,618,0.272,621,0.265,622,0.195,623,0.102,630,0.609,641,1.862,696,0.342,711,0.084,714,2.049,721,0.459,722,0.528,723,0.445,724,0.74,725,0.17,736,0.938,750,0.334,751,0.953,752,0.084,754,1.444,760,0.092,761,1.008,778,0.098,780,0.538,782,0.092,783,0.234,787,0.247,789,0.09,814,0.09,821,0.113,822,0.195,852,0.899,873,1.247,874,0.092,875,2.623,883,0.098,888,0.095,889,2.985,897,0.092,901,0.098,902,1.487,905,1.792,906,0.212,909,1.499,911,0.17,912,0.609,914,0.098,915,0.482,919,0.195,920,0.202,921,0.095,922,4.703,934,0.102,935,1.326,936,0.102,937,3.282,938,0.183,939,0.398,941,0.37,942,0.459,943,0.17,945,0.755,947,0.516,949,0.49,951,0.238,956,0.202,959,0.178,967,0.092,969,0.334,970,0.086,974,0.253,981,0.661,983,1.754,984,0.183,1000,0.258,1001,0.558,1004,0.227,1007,2.233,1009,0.334,1022,0.17,1027,0.092,1028,0.17,1032,0.646,1040,0.647,1043,0.095,1051,1.559,1055,0.423,1056,3.316,1057,0.095,1058,0.086,1059,0.88,1066,0.334,1067,0.812,1070,0.301,1072,1.377,1080,0.778,1082,1.009,1084,3.573,1085,1.896,1092,0.265,1093,0.599,1094,2.538,1095,1.809,1097,0.17,1098,0.082,1101,1.614,1102,3.979,1104,0.088,1105,0.737,1111,0.174,1118,2.538,1125,0.077,1137,2.896,1146,0.677,1155,1.667,1156,0.423,1157,0.423,1161,0.174,1164,1.926,1166,1.031,1170,1.159,1179,0.082,1184,0.088,1187,0.775,1189,0.113,1209,0.657,1211,0.188,1213,0.247,1215,0.29,1216,3.088,1219,0.188,1221,0.166,1223,0.095,1241,0.107,1273,0.88,1277,0.959,1281,1.008,1284,0.102,1287,0.081,1295,0.91,1296,1.338,1297,0.092,1299,0.583,1300,0.188,1311,0.398,1312,0.423,1313,0.095,1314,0.35,1328,0.62,1333,0.716,1336,0.265,1337,2.776,1339,0.398,1343,0.086,1344,0.098,1347,0.092,1355,3.756,1359,0.098,1360,0.188,1361,0.359,1370,0.102,1377,0.383,1381,0.188,1383,1.939,1385,0.359,1390,1.364,1402,0.195,1411,0.095,1414,0.088,1416,0.35,1467,0.095,1475,0.095,1484,0.359,1485,0.178,1505,0.359,1513,0.212,1518,0.188,1522,1.117,1528,0.212,1531,1.009,1535,0.799,1546,0.265,1552,0.082,1553,0.092,1598,0.28,1614,0.504,1619,0.445,1626,0.107,1698,1.117,1713,0.095,1757,0.092,1767,0.398,1784,0.272,1785,0.102,1790,0.178,1792,0.17,1799,0.301,1800,0.086,1807,3.981,1818,0.918,1820,0.082,1828,1.388,1831,0.095,1846,0.74,1851,0.546,1877,3.521,1884,0.188,1888,0.272,1889,0.092,1892,0.459,1893,0.493,1897,0.188,1900,0.098,1901,0.28,1905,0.095,1906,0.37,1907,0.095,1917,1.056,1924,0.272,1925,0.102,1928,0.098,1929,0.095,1930,0.315,1931,0.092,1933,0.613,1937,0.225,1938,0.799,1939,0.695,1948,0.183,1949,0.29,1960,0.359,1965,1.831,1974,0.695,1981,0.445,1989,0.677,1991,0.383,1993,0.092,2003,0.212,2011,0.095,2012,0.107,2017,0.098,2021,0.272,2023,0.855,2027,0.202,2030,0.188,2031,0.414,2036,0.74,2039,0.28,2040,0.092,2045,0.174,2048,0.098,2056,0.09,2063,8.229,2064,1.683,2075,0.188,2079,1.628,2080,0.855,2089,0.102,2093,0.212,2095,2.27,2096,0.74,2102,0.646,2110,0.442,2111,0.095,2115,0.095,2116,0.098,2123,0.107,2136,0.102,2152,0.908,2153,0.359,2154,0.095,2158,1.961,2160,0.188,2161,0.107,2175,0.565,2177,0.107,2181,0.107,2182,0.095,2190,0.098,2205,0.098,2213,0.202,2219,0.107,2220,0.212,2258,0.095,2260,0.493,2277,0.62,2369,0.174,2394,0.565,2396,0.383,2417,0.132,2420,0.53,2428,0.359,2429,0.102,2437,0.29,2439,0.826,2441,0.29,2448,0.29,2454,0.383,2457,0.102,2460,2.233,2461,1.565,2462,0.474,2463,1.075,2465,2.106,2467,0.107,2475,0.202,2478,0.098,2482,1.754,2484,0.107,2485,2.348,2491,0.212,2494,1.444,2498,0.195,2500,0.315,2501,0.335,2506,0.098,2507,0.102,2513,0.661,2519,0.383,2520,0.37,2522,1.269,2524,0.417,2525,0.107,2529,1.823,2531,0.301,2532,0.107,2533,0.212,2535,0.212,2536,0.102,2539,1.833,2540,1.696,2542,0.107,2543,0.098,2546,0.493,2548,0.474,2552,1.039,2557,0.195,2564,0.398,2565,0.107,2569,0.859,2571,1.201,2572,0.493,2574,1.193,2576,0.77,2577,0.225,2579,0.474,2582,0.095,2586,0.398,2604,0.098,2605,0.098,2606,0.107,2608,0.183,2609,0.195,2610,0.195,2611,0.107,2612,1.234,2616,0.652,2617,3.585,2623,0.859,2624,0.098,2625,0.202,2630,0.474,2636,0.195,2641,3.479,2648,0.398,2651,0.899,2654,0.474,2664,0.615,2665,0.102,2668,0.188,2673,0.107,2677,0.335,2678,0.398,2679,2.376,2680,1.823,2682,0.946,2685,0.098,2687,0.195,2689,1.73,2695,0.107,2700,0.188,2701,0.195,2713,1.845,2719,0.565,2720,0.565,2722,0.102,2725,0.102,2727,0.398,2731,0.212,2739,0.587,2742,0.565,2760,0.442,2764,0.098,2768,0.107,2771,0.195,2779,0.107,2783,0.383,2789,0.315,2795,0.188,2808,0.107,2831,0.954,2834,0.653,2851,2.983,2852,1.611,2864,0.102,2865,4.137,2869,0.102,2872,0.102,2875,0.113,2884,0.102,2890,0.102,2894,0.253,2896,0.265,2899,0.74,2914,0.195,2923,0.098,2928,0.095,2931,0.107,2945,0.113,2962,0.359,2966,0.095,2967,2.868,2968,0.195,2970,0.946,2974,0.335,2977,0.107,3005,0.113,3006,0.335,3011,0.095,3016,0.493,3022,0.102,3023,0.775,3024,0.548,3028,1.344,3029,0.398,3034,0.195,3048,0.195,3068,0.102,3069,3.469,3086,0.474,3112,1.896,3118,0.113,3119,0.806,3120,0.102,3121,0.107,3125,0.679,3127,0.615,3134,0.661,3143,0.102,3149,0.565,3150,1.17,3158,0.113,3159,0.826,3170,0.107,3174,1.604,3177,0.098,3180,0.107,3182,1.052,3185,0.946,3197,0.315,3199,0.212,3202,0.102,3225,0.474,3233,0.098,3243,0.102,3276,0.711,3295,0.095,3301,0.383,3326,0.095,3339,1.675,3342,0.946,3344,0.098,3346,0.107,3353,0.679,3354,0.107,3360,0.301,3368,0.113,3384,0.859,3386,0.107,3387,0.711,3412,0.095,3427,0.195,3437,0.107,3438,0.212,3454,1.075,3463,0.301,3466,0.301,3479,0.711,3488,0.212,3508,0.398,3517,0.107,3529,0.202,3574,0.102,3595,0.113,3616,1.117,3633,0.113,3636,1.675,3638,0.195,3640,1.232,3658,0.212,3659,0.113,3681,1.17,3687,0.107,3727,1.75,3741,0.113,3757,0.225,3763,0.202,3783,0.098,3785,0.202,3808,0.225,3809,0.212,3821,0.474,3858,0.493,3861,0.082,3862,0.102,3897,0.442,3932,0.653,3940,1.201,3942,0.417,3944,1.628,3945,0.587,3949,0.113,3967,0.107,3975,1.082,3977,0.679,3979,0.442,3981,0.315,3983,0.442,3985,0.225,3987,0.548,3989,0.335,3991,0.335,3993,0.548,3995,0.548,3997,0.548,4000,0.517,4002,0.806,4004,0.652,4006,0.652,4008,0.652,4010,0.652,4012,0.652,4014,0.548,4025,0.123,4026,0.123,4027,0.123,4028,0.123,4029,0.481,4030,0.123,4031,0.709,4032,1.143,4033,0.123,4034,0.123,4035,1.052,4036,0.123,4037,0.245,4038,0.123,4039,0.123,4040,0.123,4041,0.123,4042,0.123,4043,0.123,4044,0.123,4045,0.113,4046,0.123,4047,0.364,4048,0.123,4049,0.123,4050,0.123,4051,0.245,4052,0.123,4053,0.245,4054,0.245,4055,0.364,4056,0.123,4057,0.202,4058,0.315,4059,0.123,4060,0.417,4061,0.123,4062,0.123,4063,0.107,4064,0.225,4065,0.364,4066,0.364,4067,0.123,4068,0.123,4069,0.123,4070,0.123,4071,0.123,4072,0.123,4073,0.123,4074,0.245,4075,0.123,4076,0.123,4077,0.123,4078,0.212,4079,0.202,4080,0.364,4081,0.245,4082,0.806,4083,0.364,4084,0.364,4085,0.212,4086,0.107,4087,0.123,4088,0.107,4089,0.123,4090,2.713,4091,0.113,4092,0.442,4093,0.113,4094,0.123,4095,0.102,4096,0.123,4097,0.245,4098,0.113,4099,0.123,4100,0.245,4101,0.364,4102,0.107,4103,0.245,4104,0.107,4105,0.481,4106,0.245,4107,0.245,4108,0.245,4109,0.123,4110,3.067,4111,0.364,4112,0.245,4113,1.451,4114,0.709,4115,0.364,4116,4.854,4117,0.364,4118,0.364,4119,0.481,4120,0.335,4121,0.245,4122,0.245,4123,0.245,4124,0.899,4125,0.245,4126,0.245,4127,0.245,4128,0.245,4129,0.245,4130,0.245,4131,0.123,4132,0.123,4133,3.177,4134,0.102,4135,0.123,4136,0.212,4137,5.968,4138,0.123,4139,0.245,4140,0.123,4141,2.547,4142,0.93,4143,2.791,4144,0.855,4145,2.629,4146,1.451,4147,0.123,4148,0.225,4149,0.225,4150,0.709,4151,0.442,4152,0.245,4153,0.225,4154,0.364,4155,0.481,4156,0.245,4157,0.225,4158,0.245,4159,0.225,4160,1.932,4161,0.123,4162,0.245,4163,0.123,4164,0.364,4165,0.596,4166,1.451,4167,0.123,4168,0.82,4169,0.123,4170,0.245,4171,0.123,4172,0.123,4173,0.123,4174,0.123,4175,0.123,4176,0.245,4177,0.123,4178,0.709,4179,0.225,4180,0.225,4181,0.123,4182,0.123,4183,0.123,4184,0.123,4185,0.123,4186,0.123,4187,0.123,4188,0.107,4189,0.481,4190,0.364,4191,0.123,4192,0.481,4193,0.364,4194,0.596,4195,0.315,4196,0.123,4197,1.932,4198,0.123,4199,0.123,4200,0.123,4201,0.123,4202,0.123,4203,0.123,4204,0.123,4205,0.123,4206,0.123,4207,0.123,4208,0.123,4209,0.123,4210,0.123,4211,0.123,4212,0.123,4213,0.123,4214,0.123,4215,0.123,4216,0.123,4217,0.123,4218,0.123,4219,0.123,4220,0.123,4221,0.123,4222,0.123,4223,0.123,4224,0.123,4225,0.123,4226,0.123,4227,1.961,4228,0.123,4229,0.123,4230,0.123,4231,0.123,4232,0.123,4233,0.123,4234,0.123,4235,0.123,4236,0.123,4237,0.123,4238,0.301,4239,0.123,4240,0.123,4241,0.123,4242,0.123,4243,0.123,4244,0.123,4245,0.123,4246,0.123,4247,0.123,4248,0.123,4249,0.123,4250,0.113,4251,0.123,4252,0.123,4253,0.123,4254,0.123,4255,0.123,4256,0.123,4257,0.123,4258,0.123,4259,0.123,4260,0.123,4261,0.123,4262,0.123,4263,0.123,4264,0.123,4265,0.123,4266,0.123,4267,0.123,4268,0.123,4269,0.123,4270,0.123,4271,0.123,4272,0.123,4273,0.123,4274,0.123,4275,0.123,4276,0.123,4277,0.123,4278,0.123,4279,0.123,4280,0.123,4281,0.123,4282,0.123,4283,0.123,4284,0.123,4285,0.123,4286,0.123,4287,0.123,4288,0.123,4289,0.123,4290,0.123,4291,0.123,4292,0.123,4293,0.123,4294,0.123,4295,0.225,4296,0.123,4297,0.123,4298,0.123,4299,0.123,4300,0.123,4301,0.123,4302,0.123,4303,0.123,4304,0.123,4305,0.123,4306,0.123,4307,0.107,4308,0.123,4309,1.143,4310,1.777,4311,0.123,4312,0.123,4313,0.123,4314,0.123,4315,0.123,4316,0.107,4317,0.123,4318,0.107,4319,0.123,4320,0.123,4321,0.212,4322,0.123,4323,0.123,4324,0.123,4325,0.123,4326,0.123,4327,0.335,4328,0.123,4329,0.123,4330,0.123,4331,0.123,4332,0.123,4333,0.123,4334,0.123,4335,0.123,4336,0.123,4337,0.123,4338,0.123,4339,0.123,4340,0.123,4341,0.123,4342,0.123,4343,0.517,4344,0.123,4345,0.123,4346,0.123,4347,0.123,4348,0.123,4349,0.123,4350,0.245,4351,0.123,4352,0.123,4353,0.123,4354,0.245,4355,0.123,4356,0.123,4357,0.123,4358,0.225,4359,0.123,4360,0.123,4361,0.123,4362,0.123,4363,0.123,4364,0.123,4365,0.123,4366,0.123,4367,0.113,4368,0.123,4369,0.123,4370,0.123,4371,0.123,4372,0.123,4373,0.123,4374,0.123,4375,0.123,4376,0.481,4377,0.123,4378,0.123,4379,0.123,4380,0.123,4381,0.123,4382,0.123,4383,0.123,4384,0.123,4385,0.123,4386,0.123,4387,0.123,4388,0.123,4389,0.123,4390,0.123,4391,0.123,4392,0.517,4393,0.123,4394,0.123,4395,0.123,4396,0.123,4397,0.123,4398,0.123,4399,0.123,4400,0.123,4401,0.123,4402,0.123,4403,0.225,4404,0.123,4405,0.123,4406,0.364,4407,0.123,4408,0.245,4409,0.113,4410,0.123,4411,0.123,4412,0.123,4413,0.123,4414,0.123,4415,0.123,4416,0.123,4417,0.123,4418,0.123,4419,0.123,4420,0.123,4421,0.123,4422,0.123,4423,0.123,4424,0.123,4425,0.123,4426,0.123,4427,0.123,4428,0.123,4429,0.123,4430,0.123,4431,0.123,4432,0.123,4433,0.123,4434,0.123,4435,0.123,4436,0.123,4437,0.123,4438,0.123,4439,0.123,4440,0.123,4441,0.123,4442,0.123,4443,0.123,4444,0.123,4445,0.123,4446,0.123,4447,0.123,4448,0.123,4449,0.123,4450,0.123,4451,0.123,4452,0.123,4453,0.123,4454,0.123,4455,0.123,4456,0.123,4457,0.123,4458,0.113,4459,0.113,4460,0.123,4461,0.123,4462,0.123,4463,0.335,4464,0.123,4465,0.123,4466,0.107,4467,1.037,4468,0.113,4469,0.113,4470,0.113,4471,0.113,4472,0.364,4473,0.315,4474,0.364,4475,0.481,4476,0.113,4477,0.335,4478,0.113,4479,0.225,4480,0.113,4481,0.123,4482,0.107,4483,0.225,4484,0.113,4485,0.123,4486,0.123,4487,0.123,4488,0.123,4489,0.123,4490,0.107,4491,0.113,4492,0.364,4493,0.245,4494,0.113,4495,0.113,4496,0.123,4497,0.123,4498,0.123,4499,6.663,4500,0.855,4501,0.481,4502,0.417,4503,0.123,4504,0.123,4505,0.245,4506,0.225,4507,0.123,4508,0.113,4509,0.123,4510,0.123,4511,0.123,4512,0.123,4513,0.93,4514,0.123,4515,0.123,4516,0.123,4517,0.123,4518,0.123,4519,0.123,4520,0.113,4521,0.123,4522,0.123,4523,0.245,4524,0.245,4525,0.245,4526,0.245,4527,0.245,4528,0.123,4529,0.123,4530,0.123,4531,0.123,4532,0.123,4533,0.123,4534,0.123,4535,0.245,4536,0.245,4537,0.245,4538,0.245,4539,0.123,4540,0.123,4541,0.123,4542,0.123,4543,0.123,4544,0.364,4545,0.245,4546,0.245,4547,1.35,4548,0.123,4549,0.123,4550,0.123,4551,0.364,4552,0.123,4553,0.245,4554,0.245,4555,0.245,4556,0.123,4557,0.225,4558,0.202,4559,0.123,4560,0.123,4561,0.364,4562,0.123,4563,0.123,4564,0.123,4565,0.123,4566,0.245,4567,0.123,4568,0.123,4569,0.245,4570,0.123,4571,0.123,4572,0.123,4573,0.123,4574,0.123,4575,0.123,4576,0.123,4577,0.709,4578,1.032,4579,0.123,4580,0.123,4581,0.123,4582,0.123,4583,0.123,4584,0.123,4585,0.123,4586,0.123,4587,1.35,4588,0.123,4589,0.123,4590,0.123,4591,0.123,4592,0.123,4593,0.245,4594,0.123,4595,0.245,4596,0.245,4597,0.245,4598,0.123,4599,0.123,4600,0.123,4601,0.123,4602,0.123,4603,0.123,4604,0.123,4605,0.364,4606,0.364,4607,0.225,4608,0.123,4609,0.417,4610,0.123,4611,0.123,4612,0.123,4613,0.123,4614,0.123,4615,0.245,4616,0.123,4617,0.123,4618,0.123,4619,0.123,4620,0.596,4621,0.123,4622,0.123,4623,0.123,4624,0.123,4625,0.123,4626,0.123,4627,0.123,4628,0.123,4629,0.123,4630,0.123,4631,0.123,4632,0.123,4633,0.123,4634,0.123,4635,0.709,4636,1.334,4637,0.123,4638,0.123,4639,0.245,4640,0.481,4641,0.113,4642,0.123,4643,0.202,4644,0.123,4645,0.123,4646,0.123,4647,0.481,4648,0.123,4649,0.123,4650,0.123,4651,0.123,4652,0.481,4653,0.123,4654,0.398,4655,0.123,4656,0.123,4657,0.123,4658,0.123,4659,0.123,4660,0.123,4661,0.364,4662,0.245,4663,0.364,4664,0.123,4665,0.123,4666,0.123,4667,0.123,4668,0.123,4669,0.123,4670,0.123,4671,0.245,4672,0.245,4673,0.123,4674,0.493,4675,0.123,4676,0.123,4677,0.123,4678,0.123,4679,0.123,4680,0.123,4681,0.123,4682,0.123,4683,0.123,4684,0.123,4685,1.426,4686,0.102,4687,0.245,4688,0.123,4689,0.481,4690,0.245,4691,0.245,4692,0.123,4693,0.123,4694,0.481,4695,0.123,4696,0.245,4697,0.82,4698,0.364,4699,0.123,4700,0.123,4701,0.123,4702,0.123,4703,0.123,4704,0.123,4705,0.123,4706,0.123,4707,0.709,4708,0.123,4709,0.113,4710,0.123,4711,0.123,4712,0.123,4713,0.123,4714,0.123,4715,0.123,4716,0.107,4717,0.364,4718,0.123,4719,0.123,4720,0.123,4721,0.123,4722,0.364,4723,0.123,4724,0.123,4725,0.123,4726,0.123,4727,0.123,4728,0.245,4729,0.123,4730,0.123,4731,0.123,4732,0.123,4733,0.123,4734,0.123,4735,0.212,4736,0.123,4737,0.107,4738,0.107,4739,0.245,4740,0.123,4741,0.123,4742,0.123,4743,0.123,4744,0.123,4745,0.245,4746,0.245,4747,0.245,4748,0.596,4749,0.806,4750,0.113,4751,0.123,4752,0.123,4753,0.123,4754,0.709,4755,0.364,4756,0.709,4757,0.709,4758,0.123,4759,0.481,4760,0.481,4761,0.245,4762,0.245,4763,0.123,4764,0.245,4765,0.123,4766,0.123,4767,0.481,4768,0.481,4769,0.335,4770,0.123,4771,0.123,4772,0.123,4773,0.212,4774,0.123,4775,0.123,4776,0.123,4777,0.123,4778,0.113,4779,0.123,4780,0.123,4781,0.123,4782,0.123,4783,0.123,4784,0.123,4785,0.123,4786,0.123,4787,0.225,4788,0.245,4789,0.212,4790,0.123,4791,0.123,4792,0.113,4793,0.113,4794,0.123,4795,0.123,4796,0.123,4797,0.113,4798,0.123,4799,0.123,4800,0.123,4801,0.123,4802,0.123,4803,0.123,4804,0.225,4805,1.247,4806,0.123,4807,0.123,4808,0.123,4809,0.481,4810,0.123,4811,1.247,4812,0.123,4813,0.123,4814,0.596,4815,4.037,4816,3.674,4817,0.123,4818,0.82,4819,0.123,4820,0.123,4821,0.245,4822,2.291,4823,1.247,4824,1.247,4825,1.247,4826,0.596,4827,1.451,4828,0.245,4829,1.247,4830,1.247,4831,0.93,4832,0.709,4833,0.481,4834,0.364,4835,0.123,4836,0.123,4837,0.123,4838,0.113,4839,0.481,4840,0.245,4841,0.123,4842,0.102,4843,0.709,4844,0.709,4845,0.709,4846,0.123,4847,0.123,4848,0.225,4849,0.245,4850,0.245,4851,0.364,4852,0.245,4853,0.123,4854,0.123,4855,0.123,4856,0.364,4857,0.123,4858,0.364,4859,0.123,4860,0.123,4861,0.123,4862,0.123,4863,0.123,4864,0.245,4865,0.123,4866,0.123,4867,0.123,4868,0.123,4869,0.245,4870,0.123,4871,0.364,4872,0.245,4873,0.245,4874,0.123,4875,0.123,4876,0.123,4877,0.245,4878,0.123,4879,0.123,4880,0.123,4881,0.123,4882,0.123,4883,0.596,4884,0.123,4885,0.123,4886,0.123,4887,0.123,4888,0.123,4889,0.123,4890,0.123,4891,0.123,4892,0.123,4893,0.113,4894,0.123,4895,0.123,4896,0.107,4897,0.113,4898,0.107,4899,0.123,4900,0.107,4901,0.123,4902,0.954,4903,0.123,4904,0.123,4905,0.113,4906,0.123,4907,0.245,4908,0.245,4909,0.123,4910,0.123,4911,0.123,4912,0.245,4913,0.123,4914,0.123,4915,0.123,4916,0.123,4917,0.123,4918,0.123,4919,0.123,4920,0.113,4921,0.123,4922,0.123,4923,0.123,4924,0.107,4925,0.123,4926,0.123,4927,0.364]],["component/23",[18,0.186,172,0.252]],["title/24-1",[0,27.908,3069,45.315,3325,49.568]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[579,43.251,1230,44.229,3069,45.315]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[981,38.766,1037,37.13,2644,45.164,2967,37.909]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[28,34.574,113,34.574,1039,39.718,4928,42.015]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[28,34.574,736,37.909,1288,43.446,2031,37.909]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[65,32.71,1007,28.183,1291,36.217,1355,25.479,2045,31.087,4929,37.943]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24-7",[1293,57.27,3944,47.936,4654,51.528]],["name/24-7",[]],["text/24-7",[]],["component/24-7",[]],["title/24-8",[3,29.366,2571,51.528,3325,49.568]],["name/24-8",[]],["text/24-8",[]],["component/24-8",[]],["title/24-9",[8,26.784,106,32.18,1051,37.13,1341,39.718]],["name/24-9",[]],["text/24-9",[]],["component/24-9",[]],["title/24-10",[11,23.307,96,25.167,287,32.71,909,29.775,923,37.943,932,29.775]],["name/24-10",[]],["text/24-10",[]],["component/24-10",[]],["title/24-11",[212,40.79,753,42.015,940,42.015,1080,37.13]],["name/24-11",[]],["text/24-11",[]],["component/24-11",[]],["title/24-12",[112,37.909,2656,45.164,2967,37.909,4930,50.197]],["name/24-12",[]],["text/24-12",[]],["component/24-12",[]],["title/24-13",[96,25.167,106,25.806,254,27.296,889,27.725,3030,36.217,4931,40.253]],["name/24-13",[]],["text/24-13",[]],["component/24-13",[]],["title/24-14",[1051,33.048,1877,31.282,2464,40.199,2522,37.396,4932,44.678]],["name/24-14",[]],["text/24-14",[]],["component/24-14",[]],["title/24-15",[95,42.362,96,35.806,4933,62.26]],["name/24-15",[]],["text/24-15",[]],["component/24-15",[]],["title/24-16",[20,25.806,96,25.167,315,32.71,1009,30.4,2465,27.725,4934,43.761]],["name/24-16",[]],["text/24-16",[]],["component/24-16",[]],["title/24-17",[20,28.643,96,27.933,236,32.413,4935,48.571,4936,44.678]],["name/24-17",[]],["text/24-17",[]],["component/24-17",[]],["title/24-18",[96,31.383,4238,45.164,4937,54.57,4938,47.316]],["name/24-18",[]],["text/24-18",[]],["component/24-18",[]],["title/24-19",[96,31.383,2079,38.766,4938,47.316,4939,54.57]],["name/24-19",[]],["text/24-19",[]],["component/24-19",[]],["title/24-20",[19,33.048,237,29.024,1051,33.048,2464,40.199,2465,30.773]],["name/24-20",[]],["text/24-20",[]],["component/24-20",[]],["title/24-21",[36,49.311,4940,66.664]],["name/24-21",[]],["text/24-21",[]],["component/24-21",[]],["title/24-22",[237,32.608,249,33.059,2465,34.574,4941,50.197]],["name/24-22",[]],["text/24-22",[]],["component/24-22",[]],["title/24-23",[177,29.848,237,29.024,1009,33.741,2465,30.773,4942,44.678]],["name/24-23",[]],["text/24-23",[]],["component/24-23",[]],["title/24-24",[62,27.933,237,29.024,617,33.048,2465,30.773,4943,48.571]],["name/24-24",[]],["text/24-24",[]],["component/24-24",[]],["title/24-25",[96,35.806,335,40.098,4944,62.26]],["name/24-25",[]],["text/24-25",[]],["component/24-25",[]],["title/24-26",[2520,55.799,4945,72.473]],["name/24-26",[]],["text/24-26",[]],["component/24-26",[]],["title/24-27",[3023,54.171,4946,72.473]],["name/24-27",[]],["text/24-27",[]],["component/24-27",[]],["title/24-28",[96,35.806,2540,47.936,4947,62.26]],["name/24-28",[]],["text/24-28",[]],["component/24-28",[]],["title/24-29",[96,27.933,319,28.643,2540,37.396,3260,42.114,4948,48.571]],["name/24-29",[]],["text/24-29",[]],["component/24-29",[]],["title/24-30",[305,38.261,395,23.851,4949,62.26]],["name/24-30",[]],["text/24-30",[]],["component/24-30",[]],["title/24-31",[96,35.806,4950,62.26,4951,57.27]],["name/24-31",[]],["text/24-31",[]],["component/24-31",[]],["title/24-32",[96,35.806,2079,44.229,4952,62.26]],["name/24-32",[]],["text/24-32",[]],["component/24-32",[]],["title/24-33",[305,38.261,1230,44.229,4953,62.26]],["name/24-33",[]],["text/24-33",[]],["component/24-33",[]],["title/24-34",[483,38.766,2079,38.766,2465,34.574,4954,54.57]],["name/24-34",[]],["text/24-34",[]],["component/24-34",[]],["title/24-35",[36,42.362,276,40.098,4955,62.26]],["name/24-35",[]],["text/24-35",[]],["component/24-35",[]],["title/24-36",[36,37.13,909,37.13,932,37.13,4956,54.57]],["name/24-36",[]],["text/24-36",[]],["component/24-36",[]],["title/24-37",[1312,38.766,2465,34.574,2494,40.79,4957,54.57]],["name/24-37",[]],["text/24-37",[]],["component/24-37",[]],["title/24-38",[215,57.698,2656,59.98]],["name/24-38",[]],["text/24-38",[]],["component/24-38",[]],["title/24-39",[218,51.528,2465,39.446,4643,51.528]],["name/24-39",[]],["text/24-39",[]],["component/24-39",[]],["title/24-40",[2,40.098,3031,49.568,4958,62.26]],["name/24-40",[]],["text/24-40",[]],["component/24-40",[]],["title/24-41",[319,32.18,1055,38.766,1059,42.015,4959,54.57]],["name/24-41",[]],["text/24-41",[]],["component/24-41",[]],["title/24-42",[2,40.098,4960,62.26,4961,62.26]],["name/24-42",[]],["text/24-42",[]],["component/24-42",[]],["title/24-43",[47,29.425,299,22.08,2465,30.773,4643,40.199,4962,48.571]],["name/24-43",[]],["text/24-43",[]],["component/24-43",[]],["title/24-44",[2847,62.838,4963,72.473]],["name/24-44",[]],["text/24-44",[]],["component/24-44",[]],["title/24",[1341,63.098]],["name/24",[221,0.293]],["text/24",[0,0.315,1,1.71,3,0.203,5,3.579,6,0.299,7,1.28,9,0.082,10,0.08,11,0.078,13,1.11,14,0.299,18,0.508,20,1.99,21,0.911,23,1,27,1.056,28,2.906,31,0.085,32,0.117,34,1.28,35,0.121,36,0.912,37,0.414,38,0.633,39,0.692,40,0.703,42,1.561,43,0.671,44,0.107,45,1.363,46,4.448,47,0.426,48,1.095,49,0.121,50,0.206,51,0.461,52,1.725,53,2.065,54,2.017,57,0.11,60,0.107,61,1.425,62,4.279,63,1.351,65,0.817,66,0.231,68,2.858,69,0.137,71,0.223,72,1.554,73,0.211,74,0.202,76,0.121,78,0.795,79,0.343,80,0.829,82,0.987,86,0.19,87,1.893,90,1.063,91,0.618,92,0.558,94,1.288,95,1.229,96,4.241,99,0.306,101,1.255,102,1.769,103,1.483,104,2.324,105,5.322,106,3.96,107,0.121,108,0.135,109,0.438,110,0.223,111,1.38,112,1.769,113,1.915,114,0.644,117,1.246,119,0.213,126,0.206,127,0.282,128,0.608,129,1.828,130,0.314,132,2.976,135,0.11,138,0.897,139,0.332,141,0.432,147,0.261,154,0.104,173,0.093,177,1.312,183,0.211,188,0.749,195,0.094,197,0.232,198,3.15,200,0.104,205,2.413,206,3.059,208,1.075,213,0.894,216,0.113,217,1.041,222,0.299,224,1.375,227,0.091,228,2.228,229,0.332,230,2.473,231,0.993,232,1.425,233,0.692,236,0.729,237,5.801,238,0.223,239,0.135,240,0.211,241,2.545,243,0.314,244,0.121,245,1.887,247,0.438,248,2.523,249,1.939,252,0.231,253,1.306,254,2.984,256,0.217,257,0.776,258,0.1,259,1.596,261,2.279,264,3.539,266,0.744,267,0.314,268,0.684,270,0.577,271,0.223,272,0.542,273,0.644,275,0.113,276,1.703,277,0.135,278,0.512,279,0.211,280,0.366,283,0.217,284,1.516,285,0.117,286,0.56,287,1.179,290,1.631,292,0.306,293,0.894,294,1.014,295,0.107,296,3.626,297,0.267,298,0.878,299,1.826,300,1.014,302,0.117,303,0.817,304,1,305,2.277,308,1.652,309,1.738,310,0.343,311,1.8,313,1.162,314,0.202,315,1.434,316,0.277,317,1.526,319,3.544,322,0.956,323,1.829,324,0.282,325,0.206,327,0.113,328,0.387,329,0.558,332,1.215,333,0.24,335,2.538,347,0.548,353,1.441,354,2.326,360,0.489,361,0.211,366,0.526,368,1.333,372,1.55,374,0.931,378,1.796,380,0.357,382,0.113,383,0.299,385,0.322,395,1.087,411,0.593,412,0.211,416,0.121,426,0.102,433,0.11,434,0.644,443,0.127,454,3.122,455,0.823,456,0.293,458,1.485,470,0.425,476,0.798,478,1.145,479,2.355,482,1.091,483,1.665,484,0.231,485,0.113,486,0.322,487,0.314,488,0.357,490,0.117,492,0.602,493,0.282,494,0.197,495,0.181,496,0.5,497,0.217,498,2.689,499,0.11,501,0.194,506,0.322,507,0.395,509,0.593,510,0.231,512,0.1,513,0.633,514,0.11,515,2.017,517,0.957,524,1.063,527,2.579,529,0.104,530,0.181,535,0.288,536,0.969,537,0.24,538,0.107,539,0.425,541,0.107,544,0.113,548,0.461,549,0.644,551,0.117,553,0.672,554,0.107,562,0.223,565,1.228,567,0.202,568,0.19,569,0.113,570,0.223,571,0.135,572,0.438,574,0.314,577,0.113,578,1.424,581,0.865,584,1.014,585,0.438,587,0.113,591,0.211,596,0.87,606,0.332,607,0.104,611,0.479,612,0.231,616,0.113,617,2.467,618,0.322,619,0.121,620,0.121,621,0.608,622,0.231,623,0.121,629,0.135,630,0.461,631,0.135,659,0.217,696,1.203,698,0.231,705,0.293,707,0.113,711,0.657,714,0.395,719,0.744,721,1.805,722,1.164,723,0.217,724,1.784,725,0.489,736,0.581,742,0.11,747,0.332,748,0.11,749,1.829,750,0.102,751,2.735,752,0.293,753,0.113,754,0.217,760,0.11,761,0.581,767,0.104,775,0.374,778,0.117,780,2.87,782,0.11,783,0.704,784,0.703,787,0.293,788,0.692,789,0.414,791,0.24,814,0.107,873,2.744,874,0.91,875,2.777,889,0.446,897,0.11,898,0.121,900,0.113,901,0.231,902,0.744,905,1.315,909,1.38,910,0.121,911,0.102,912,0.878,913,0.104,914,0.117,915,0.744,920,0.357,921,0.542,923,0.374,924,0.343,927,0.252,928,0.24,931,0.493,932,1.229,934,0.357,935,1.733,936,0.121,937,1.42,938,0.322,939,0.644,940,0.744,941,0.113,942,1.477,943,0.102,945,0.211,947,0.512,949,0.173,951,1.468,955,0.332,959,0.107,964,0.121,966,0.223,967,0.11,968,0.512,969,0.202,970,0.671,974,0.102,976,0.526,981,2.147,983,0.453,984,0.425,1000,0.206,1001,0.569,1002,0.357,1003,0.121,1004,0.269,1007,1.64,1009,6.077,1022,0.846,1023,0.113,1027,0.11,1028,0.299,1032,0.759,1040,0.091,1043,0.332,1044,0.479,1048,0.231,1049,0.121,1050,1.067,1051,3.885,1052,0.343,1055,0.594,1056,0.293,1057,0.332,1058,0.581,1059,3.034,1066,1.014,1067,0.865,1068,0.725,1069,0.223,1072,0.657,1080,1.305,1081,0.24,1084,0.952,1085,0.121,1088,0.19,1092,0.512,1093,0.094,1095,1.363,1097,0.102,1098,0.098,1100,0.231,1101,0.373,1102,2.924,1104,1.037,1105,1.121,1109,0.24,1111,0.306,1113,0.692,1118,0.217,1146,0.314,1151,0.117,1155,0.512,1156,0.404,1157,0.206,1158,0.888,1159,0.343,1161,0.206,1164,0.206,1166,1.121,1168,0.117,1172,0.217,1179,1.053,1183,0.24,1184,0.206,1187,0.526,1209,1.42,1210,0.113,1211,0.938,1213,0.1,1215,0.666,1216,1.827,1219,0.644,1224,0.135,1273,0.438,1274,0.127,1275,0.113,1278,0.127,1281,0.202,1284,0.121,1285,0.135,1287,0.373,1290,0.24,1294,0.223,1295,0.769,1296,1.396,1297,0.322,1299,0.865,1300,0.841,1301,0.107,1302,0.322,1309,0.127,1311,0.813,1312,1.363,1313,0.438,1314,0.975,1315,0.969,1321,0.425,1322,0.343,1324,0.127,1325,0.117,1328,0.558,1331,0.24,1333,0.644,1336,0.211,1337,2.111,1339,1.588,1341,0.314,1343,0.489,1344,0.231,1347,0.526,1350,0.127,1353,0.357,1355,4.63,1359,0.453,1360,0.332,1361,0.217,1364,0.692,1370,0.471,1373,0.121,1374,0.113,1375,0.117,1376,0.135,1379,0.127,1382,0.453,1383,1.176,1384,0.135,1385,0.425,1387,0.107,1391,1.162,1403,0.135,1411,0.223,1414,0.404,1416,1.476,1424,0.135,1434,0.117,1475,0.332,1480,0.121,1484,0.625,1485,0.211,1487,0.121,1488,0.582,1494,0.332,1495,0.127,1503,0.121,1505,0.425,1517,0.135,1518,0.438,1519,0.117,1522,0.542,1523,0.11,1531,1.596,1546,0.703,1552,1.425,1562,0.453,1563,1.351,1598,0.332,1614,0.404,1619,0.322,1659,0.267,1713,0.113,1714,0.127,1784,0.425,1790,1.631,1792,0.395,1800,1.176,1805,0.644,1806,0.231,1807,0.686,1809,0.608,1813,0.121,1818,1.305,1820,0.379,1830,0.267,1850,0.322,1851,0.223,1877,2.387,1884,0.542,1888,0.217,1889,0.322,1892,0.113,1897,0.223,1899,0.223,1900,0.343,1901,0.113,1905,0.644,1906,1.124,1907,0.223,1908,0.799,1917,0.795,1924,1.266,1926,1.527,1927,0.135,1929,0.841,1931,0.217,1933,0.217,1935,0.127,1938,1.725,1939,2.326,1941,0.223,1942,0.453,1944,0.223,1947,0.582,1948,0.11,1949,0.117,1950,0.121,1951,0.121,1954,0.121,1955,0.223,1957,0.438,1958,0.841,1959,0.217,1960,2.259,1965,0.938,1974,1.266,1978,0.357,1980,0.24,1981,0.91,1983,0.231,1988,0.332,1989,0.512,1990,0.24,1993,1.091,1999,0.542,2007,0.625,2013,0.343,2017,0.117,2021,0.722,2023,0.217,2027,0.24,2030,0.841,2031,1.837,2035,0.11,2036,2.333,2039,0.542,2040,0.526,2043,0.117,2044,0.252,2045,0.306,2046,0.357,2056,0.512,2060,0.117,2063,2.951,2064,0.343,2074,0.24,2075,0.223,2079,3.619,2080,0.322,2088,0.135,2092,0.127,2093,0.725,2094,0.61,2095,1.032,2096,0.343,2102,1.255,2104,2.106,2107,0.113,2108,0.117,2111,0.223,2115,0.113,2119,0.267,2120,0.127,2129,0.24,2132,0.135,2134,0.121,2137,0.582,2152,0.211,2153,0.322,2154,0.438,2160,1.215,2175,0.231,2176,0.135,2181,0.374,2201,0.127,2202,0.117,2207,0.135,2208,0.127,2223,0.127,2258,0.644,2277,0.558,2307,0.127,2315,0.127,2346,0.127,2355,0.374,2364,0.332,2369,0.5,2396,0.343,2401,0.582,2417,0.588,2419,0.267,2420,0.11,2428,0.322,2429,0.24,2430,0.135,2433,1.208,2435,0.121,2437,0.453,2439,0.343,2441,0.343,2454,0.453,2457,0.24,2458,0.357,2459,0.24,2460,0.277,2461,0.686,2462,1.162,2463,3.014,2464,1.208,2465,6.806,2468,0.127,2470,0.87,2471,0.471,2473,0.582,2474,0.837,2475,0.121,2478,0.87,2480,0.493,2482,0.666,2484,0.252,2485,1.256,2486,0.135,2494,3.059,2495,0.121,2498,0.117,2500,0.252,2505,0.113,2506,0.56,2507,0.121,2510,0.121,2513,0.306,2515,0.357,2519,0.56,2520,0.744,2521,0.135,2522,0.438,2524,1.162,2525,0.374,2526,1.008,2527,0.267,2529,0.24,2530,0.24,2531,0.905,2532,0.374,2533,0.493,2534,1.233,2538,0.493,2539,0.252,2540,1.304,2543,0.117,2546,1.767,2548,0.343,2552,0.841,2557,0.969,2558,0.121,2568,0.135,2569,0.357,2571,0.582,2574,0.542,2576,0.121,2578,0.127,2579,0.666,2580,0.121,2582,0.744,2583,0.121,2584,0.135,2586,0.471,2587,0.135,2589,0.252,2592,0.127,2593,0.837,2600,0.24,2604,0.343,2605,0.343,2606,0.374,2608,0.526,2609,0.666,2610,1.256,2612,0.56,2617,0.744,2620,0.357,2622,0.24,2623,0.692,2624,0.231,2625,0.121,2628,0.135,2630,1.067,2633,0.374,2636,0.56,2637,0.252,2639,0.135,2641,0.117,2644,0.692,2645,0.121,2648,1.008,2649,0.135,2651,0.252,2654,2.027,2656,1.855,2659,0.121,2661,0.127,2662,0.357,2664,0.127,2665,0.799,2668,0.438,2673,0.725,2678,0.121,2679,0.24,2680,0.357,2682,0.692,2685,0.231,2686,0.252,2687,0.231,2688,0.217,2689,2.265,2690,0.127,2691,0.61,2693,0.135,2694,0.104,2695,0.374,2700,0.938,2701,2.183,2702,0.135,2705,0.471,2709,0.121,2713,0.1,2720,0.117,2722,0.121,2727,0.357,2728,0.121,2730,0.127,2733,0.692,2739,0.799,2742,0.343,2761,0.252,2764,0.117,2771,0.343,2776,0.127,2795,0.113,2797,0.231,2827,0.252,2834,0.56,2835,0.252,2839,1.368,2844,0.121,2845,0.493,2849,1.008,2851,0.438,2852,2.027,2863,0.24,2864,0.357,2865,2.915,2868,0.374,2869,0.121,2872,0.799,2883,0.374,2890,0.24,2893,0.396,2896,0.414,2899,2.549,2914,0.231,2921,0.24,2923,0.231,2927,0.135,2928,0.644,2930,0.267,2931,0.252,2943,0.267,2962,0.217,2966,0.644,2967,2.035,2968,0.969,2970,0.471,2971,0.267,2973,0.267,2976,0.471,2981,0.267,2982,0.135,3004,0.135,3009,0.252,3011,0.113,3014,0.582,3016,0.24,3022,0.357,3023,0.425,3025,1.12,3028,0.127,3029,1.208,3030,0.24,3031,0.117,3034,0.769,3048,0.769,3049,0.725,3052,0.127,3055,0.252,3068,0.905,3069,5.727,3072,0.24,3082,0.127,3085,0.121,3086,0.117,3101,0.135,3112,1.855,3113,0.799,3119,0.252,3120,0.471,3121,1.266,3124,0.666,3127,0.127,3128,0.396,3134,0.104,3143,0.471,3145,0.24,3147,0.523,3149,0.453,3159,1.162,3170,0.374,3177,0.453,3178,0.24,3184,0.135,3185,0.121,3196,0.523,3197,0.252,3199,0.374,3201,0.374,3202,0.121,3211,0.135,3225,0.343,3233,0.117,3234,0.267,3236,0.24,3248,0.231,3259,0.121,3260,0.127,3266,0.24,3274,0.127,3281,0.357,3295,0.332,3301,0.343,3307,0.135,3311,0.127,3325,0.117,3326,0.113,3336,0.121,3338,0.267,3339,0.692,3340,0.127,3341,0.135,3344,1.067,3353,0.24,3358,0.135,3369,0.24,3381,0.252,3382,0.127,3384,0.24,3385,0.267,3386,0.127,3388,0.135,3390,0.135,3394,0.267,3396,0.127,3397,0.127,3427,2.478,3434,0.61,3437,0.725,3451,0.135,3454,0.231,3456,0.121,3463,0.692,3465,0.252,3466,0.357,3475,0.121,3488,0.374,3505,0.121,3506,0.769,3529,0.121,3574,0.121,3604,0.769,3614,0.135,3629,0.127,3638,0.666,3640,0.322,3641,0.267,3658,0.837,3662,0.523,3668,0.374,3681,1.663,3687,0.252,3702,0.121,3703,3.105,3705,0.769,3706,0.493,3721,0.127,3727,0.692,3729,0.121,3748,0.127,3750,0.135,3758,0.135,3763,0.24,3778,0.135,3783,0.343,3785,0.121,3805,0.127,3816,0.127,3819,0.135,3821,0.117,3854,0.127,3862,0.121,3932,0.117,3940,0.24,3944,3.318,3945,0.24,3975,0.252,3977,0.357,3981,0.127,4000,0.127,4002,0.127,4045,0.396,4057,0.24,4058,0.127,4060,0.725,4063,0.127,4064,0.396,4078,0.374,4079,0.582,4082,0.725,4085,0.127,4086,0.252,4088,0.127,4090,0.523,4095,0.799,4102,0.127,4104,0.252,4110,0.252,4116,0.24,4124,0.948,4134,0.24,4136,0.252,4144,0.135,4180,0.135,4188,0.127,4195,0.61,4227,0.666,4238,1.109,4307,0.127,4310,0.396,4321,0.127,4343,1.162,4358,0.769,4367,0.135,4392,0.374,4458,0.396,4459,0.396,4466,0.252,4473,0.252,4476,0.396,4482,0.837,4483,0.396,4490,0.374,4494,0.135,4502,0.493,4508,0.135,4520,0.135,4558,0.357,4578,0.121,4641,0.135,4643,2.722,4654,1.306,4674,0.471,4686,0.24,4716,0.374,4735,0.252,4737,0.127,4738,0.374,4749,0.493,4778,0.135,4789,0.252,4792,0.267,4793,0.135,4838,0.135,4842,0.121,4848,0.135,4896,0.127,4897,0.135,4898,0.127,4905,0.396,4924,0.252,4928,0.223,4929,1.368,4936,0.396,4938,0.374,4951,1.343,4964,0.29,4965,0.29,4966,0.147,4967,0.147,4968,0.267,4969,0.837,4970,0.29,4971,0.147,4972,0.147,4973,0.61,4974,0.147,4975,0.147,4976,0.147,4977,0.147,4978,0.135,4979,0.569,4980,0.147,4981,0.147,4982,0.147,4983,0.836,4984,0.147,4985,0.374,4986,0.135,4987,0.147,4988,0.396,4989,0.147,4990,0.135,4991,0.252,4992,0.836,4993,0.147,4994,0.147,4995,0.836,4996,0.267,4997,0.147,4998,0.147,4999,0.147,5000,0.147,5001,0.29,5002,0.147,5003,0.569,5004,0.431,5005,0.147,5006,0.396,5007,0.147,5008,0.127,5009,0.147,5010,0.252,5011,0.147,5012,0.147,5013,0.569,5014,0.147,5015,0.147,5016,0.127,5017,0.147,5018,0.147,5019,0.147,5020,1.093,5021,0.267,5022,0.147,5023,0.147,5024,0.147,5025,0.135,5026,0.147,5027,0.135,5028,0.147,5029,0.147,5030,0.147,5031,0.147,5032,0.29,5033,0.966,5034,1.807,5035,0.29,5036,0.147,5037,1.093,5038,0.374,5039,0.29,5040,1.218,5041,1.578,5042,0.29,5043,0.147,5044,0.135,5045,0.29,5046,0.147,5047,0.147,5048,0.267,5049,0.29,5050,0.147,5051,0.147,5052,0.135,5053,0.147,5054,0.431,5055,0.147,5056,0.147,5057,0.147,5058,0.29,5059,0.127,5060,0.135,5061,0.431,5062,1.34,5063,0.29,5064,0.147,5065,0.127,5066,0.147,5067,0.147,5068,0.147,5069,0.147,5070,0.147,5071,0.147,5072,0.147,5073,0.147,5074,0.147,5075,0.147,5076,0.147,5077,0.147,5078,0.147,5079,0.147,5080,0.127,5081,0.147,5082,0.29,5083,0.147,5084,0.147,5085,0.147,5086,0.147,5087,0.147,5088,0.147,5089,0.147,5090,0.147,5091,0.29,5092,0.147,5093,0.147,5094,0.396,5095,0.147,5096,1.558,5097,0.147,5098,0.147,5099,0.147,5100,0.147,5101,0.147,5102,0.147,5103,0.147,5104,0.121,5105,0.147,5106,0.147,5107,0.147,5108,0.147,5109,0.147,5110,0.29,5111,0.147,5112,0.147,5113,0.147,5114,0.267,5115,0.147,5116,0.147,5117,0.147,5118,0.147,5119,0.267,5120,1.218,5121,0.147,5122,0.147,5123,0.127,5124,0.29,5125,0.147,5126,0.147,5127,0.147,5128,0.29,5129,0.431,5130,0.135,5131,0.396,5132,0.147,5133,1.218,5134,0.147,5135,0.147,5136,0.147,5137,0.147,5138,0.147,5139,0.29,5140,0.29,5141,0.147,5142,0.147,5143,0.431,5144,0.147,5145,0.147,5146,0.29,5147,0.29,5148,0.267,5149,0.267,5150,0.374,5151,0.147,5152,0.147,5153,0.29,5154,0.29,5155,0.29,5156,0.29,5157,0.29,5158,0.29,5159,0.147,5160,0.147,5161,0.396,5162,0.135,5163,0.147,5164,0.135,5165,1.093,5166,0.147,5167,0.135,5168,0.147,5169,0.135,5170,0.267,5171,0.147,5172,0.252,5173,0.29,5174,0.29,5175,0.29,5176,0.147,5177,0.147,5178,0.147,5179,0.147,5180,0.147,5181,0.147,5182,0.147,5183,0.647,5184,0.147,5185,0.147,5186,0.135,5187,0.135,5188,0.267,5189,0.431,5190,0.431,5191,0.147,5192,0.147,5193,0.29,5194,1.218,5195,0.29,5196,0.431,5197,0.431,5198,0.431,5199,0.431,5200,0.147,5201,0.147,5202,0.147,5203,0.29,5204,0.147,5205,0.135,5206,0.147,5207,0.147,5208,0.147,5209,0.147,5210,0.147,5211,0.135,5212,0.147,5213,0.29,5214,0.147,5215,0.147,5216,0.147,5217,0.29,5218,0.29,5219,0.147,5220,0.29,5221,0.29,5222,0.267,5223,0.147,5224,0.147,5225,0.431,5226,0.147,5227,0.704,5228,0.569,5229,0.147,5230,0.147,5231,0.29,5232,0.147,5233,0.431,5234,0.29,5235,0.29,5236,0.147,5237,0.267,5238,0.147,5239,0.147,5240,0.147,5241,0.147,5242,0.147,5243,0.147,5244,0.147,5245,0.127,5246,0.127,5247,0.147,5248,0.343,5249,0.147,5250,0.147,5251,0.147,5252,0.147,5253,0.135,5254,0.966,5255,0.966,5256,0.836,5257,0.569,5258,0.147,5259,0.147,5260,0.147,5261,0.147,5262,0.29,5263,0.523,5264,0.267,5265,0.147,5266,0.374,5267,0.147,5268,0.147,5269,0.147,5270,0.147,5271,0.147,5272,0.147,5273,0.147,5274,0.147,5275,0.147,5276,0.267,5277,0.135,5278,0.147,5279,0.252,5280,0.147,5281,0.135,5282,0.29,5283,0.396,5284,0.147,5285,0.147,5286,0.147,5287,0.267,5288,0.29,5289,0.147,5290,0.147,5291,0.147,5292,0.147,5293,0.29,5294,0.966,5295,1.218,5296,0.29,5297,0.147,5298,0.147,5299,0.147,5300,0.147,5301,0.147,5302,0.147,5303,0.147,5304,0.147,5305,0.147,5306,0.252,5307,0.267,5308,0.29,5309,0.135,5310,0.431,5311,0.135,5312,0.147,5313,0.147,5314,0.147,5315,0.135,5316,0.147,5317,0.147,5318,0.147,5319,0.267,5320,0.147,5321,0.704,5322,0.135,5323,0.147,5324,0.147,5325,0.147,5326,0.127,5327,0.147,5328,0.135,5329,0.147,5330,0.135,5331,0.147,5332,0.147,5333,0.147,5334,0.29,5335,0.147,5336,0.135,5337,0.127,5338,0.147,5339,0.147,5340,0.147,5341,0.147]],["component/24",[18,0.186,172,0.252]],["title/25-1",[0,32.486,1283,59.98]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[3,29.366,119,30.815,3899,47.936]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[8,30.558,119,30.815,3900,49.568]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[11,33.159,119,30.815,800,51.528]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[9,30.654,10,29.665,119,27.009,221,32.608]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25-6",[119,30.815,223,38.261,5342,53.983]],["name/25-6",[]],["text/25-6",[]],["component/25-6",[]],["title/25-7",[132,31.079,1123,40.098,1216,34.583]],["name/25-7",[]],["text/25-7",[]],["component/25-7",[]],["title/25-8",[18,23.599,198,39.446,1125,38.835]],["name/25-8",[]],["text/25-8",[]],["component/25-8",[]],["title/25-9",[336,45.917,5343,54.171]],["name/25-9",[]],["text/25-9",[]],["component/25-9",[]],["title/25-10",[119,27.009,3899,42.015,5343,40.79,5344,50.197]],["name/25-10",[]],["text/25-10",[]],["component/25-10",[]],["title/25-11",[119,27.009,3900,43.446,5343,40.79,5345,50.197]],["name/25-11",[]],["text/25-11",[]],["component/25-11",[]],["title/25-12",[119,27.009,800,45.164,5343,40.79,5346,50.197]],["name/25-12",[]],["text/25-12",[]],["component/25-12",[]],["title/25-13",[9,27.284,10,26.404,119,24.04,5343,36.306,5347,44.678]],["name/25-13",[]],["text/25-13",[]],["component/25-13",[]],["title/25-14",[119,27.009,5342,47.316,5343,40.79,5348,50.197]],["name/25-14",[]],["text/25-14",[]],["component/25-14",[]],["title/25",[119,42.908]],["name/25",[223,0.302]],["text/25",[0,1.04,1,0.789,3,0.597,5,5.898,8,0.621,9,3.485,10,2.527,11,2.121,13,2.107,18,4.452,19,5.185,22,0.946,23,0.802,29,1.579,34,0.844,38,2.107,47,2.413,48,4.007,62,3.305,66,1.007,69,1.879,70,2.994,80,1.579,95,0.861,96,0.728,101,0.879,104,1.896,106,3.389,112,0.879,117,0.778,119,5.388,120,1.304,127,1.521,131,0.946,132,4.394,138,4.064,142,0.756,154,2.284,172,1.19,180,1.007,188,2.743,194,2.146,197,2.501,198,2.524,205,3.658,206,2.061,208,2.341,210,1.787,221,0.756,223,0.778,227,0.789,228,0.778,231,0.861,237,3.434,241,2.524,254,2.485,257,0.899,264,3.995,268,0.711,270,0.756,276,0.815,280,0.815,296,1.54,299,2.378,304,0.802,305,2.857,308,2.707,316,2.071,322,2.413,323,1.549,325,1.649,326,2.778,330,1.097,332,0.974,336,0.802,338,4.33,339,3.91,354,1.976,368,0.879,372,0.802,383,2.234,390,1.007,395,0.485,409,1.848,411,1.976,423,0.844,426,0.879,453,0.879,456,0.861,458,0.802,462,1.787,476,0.829,478,0.802,480,1.787,489,0.946,493,2.107,496,0.899,498,0.899,509,0.778,513,0.829,517,0.829,530,3.584,548,0.829,553,0.778,558,0.899,584,0.879,617,0.861,630,4.575,659,0.946,660,1.007,705,3.163,706,1.787,711,0.861,714,4.31,719,0.974,722,0.815,725,0.879,748,1.735,750,0.879,766,1.097,767,2.284,773,1.007,783,2.071,785,1.047,789,0.921,794,1.164,797,1.097,798,3.664,800,5.474,807,7.009,819,4.031,873,0.746,874,0.946,875,3.428,911,0.879,937,0.802,939,0.844,949,1.387,951,1.521,960,0.946,976,0.946,986,3.847,989,0.946,991,1.921,992,1.007,996,8.686,1007,0.815,1040,0.789,1051,0.861,1066,0.879,1072,1.579,1082,1.212,1101,1.521,1111,0.899,1123,0.815,1125,0.789,1146,0.921,1166,0.899,1178,2.34,1179,1.549,1184,0.899,1209,2.945,1216,2.582,1221,4.5,1302,0.946,1311,2.146,1328,1.549,1355,0.737,1405,0.974,1546,0.921,1552,2.146,1757,0.946,1794,2.476,1809,1.689,1818,1.579,1820,2.658,1877,0.815,1899,0.974,1955,0.974,1959,0.946,2056,1.689,2070,1.164,2071,0.946,2169,0.974,2179,4.536,2213,1.921,2369,2.284,2448,3.171,2488,1.047,2513,0.899,2520,0.974,2548,1.848,2564,1.047,2585,1.164,2599,1.921,2611,1.097,2617,0.974,2619,3.847,2624,2.56,2668,0.974,2716,0.974,2787,1.047,2795,0.974,2894,0.879,2896,0.921,2923,1.848,2948,1.164,2966,0.974,2992,2.135,3223,2.135,3248,1.007,3640,0.946,3868,1.164,3899,4.028,3900,4.939,3912,2.135,3913,1.164,3914,8.575,3915,1.164,3916,2.135,3917,2.135,3918,1.164,3919,1.164,3920,1.164,3921,1.164,3922,2.788,3923,2.013,3924,1.097,3925,1.097,3926,1.097,3927,1.097,3928,1.097,3929,1.097,3930,4.031,3931,1.164,3932,1.007,3933,1.097,3936,4.756,3937,1.164,3940,1.047,3942,1.097,3944,0.974,3945,1.921,3950,1.164,3951,1.164,3952,2.958,3953,2.958,3954,1.164,3955,1.164,3964,1.164,3965,1.164,3966,1.164,3967,1.097,3968,1.164,5328,2.135,5342,3.454,5343,3.91,5349,1.164,5350,1.164,5351,1.265,5352,1.265,5353,1.265,5354,1.265,5355,1.265,5356,1.265,5357,1.265,5358,1.265,5359,3.216,5360,1.265,5361,2.321,5362,1.265,5363,1.265,5364,1.265,5365,1.164,5366,1.265,5367,1.265,5368,2.321,5369,1.265,5370,1.265,5371,3.216,5372,1.265,5373,1.265,5374,2.321,5375,1.265,5376,1.265,5377,1.265,5378,1.265,5379,1.265,5380,2.321,5381,1.265,5382,1.265,5383,2.321,5384,2.321,5385,7.316,5386,7.316,5387,1.265,5388,1.265,5389,1.265,5390,1.265,5391,2.321,5392,1.265,5393,6.204,5394,2.321,5395,1.265,5396,1.164,5397,2.321,5398,1.265,5399,1.265,5400,1.265,5401,1.265,5402,1.265,5403,1.265,5404,1.265,5405,7.897,5406,1.265,5407,1.265,5408,1.265,5409,1.265,5410,1.265,5411,1.265,5412,1.265,5413,1.265,5414,1.265,5415,2.321,5416,2.321,5417,1.265,5418,5.232,5419,5.746,5420,1.265,5421,1.265,5422,1.265,5423,1.265,5424,1.265,5425,1.265,5426,1.265,5427,1.265,5428,3.983,5429,1.265,5430,3.983,5431,1.265,5432,1.265]],["component/25",[18,0.186,172,0.252]],["title/26-1",[0,27.908,974,43.251,1009,43.251]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[119,27.009,132,27.241,579,37.909,1216,30.312]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[1037,42.362,2369,44.229,5433,53.983]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[62,31.383,69,25.739,70,35.145,1039,39.718]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26-5",[18,20.684,1104,38.766,1288,43.446,5434,50.197]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["title/26-6",[3,29.366,974,43.251,2465,39.446]],["name/26-6",[]],["text/26-6",[]],["component/26-6",[]],["title/26-7",[119,30.815,132,31.079,777,43.251]],["name/26-7",[]],["text/26-7",[]],["component/26-7",[]],["title/26-8",[886,44.229,2369,44.229,5433,53.983]],["name/26-8",[]],["text/26-8",[]],["component/26-8",[]],["title/26-9",[96,31.383,335,35.145,568,35.757,1163,42.015]],["name/26-9",[]],["text/26-9",[]],["component/26-9",[]],["title/26-10",[62,31.383,69,25.739,70,35.145,2233,47.316]],["name/26-10",[]],["text/26-10",[]],["component/26-10",[]],["title/26-11",[18,20.684,1216,30.312,2240,47.316,5434,50.197]],["name/26-11",[]],["text/26-11",[]],["component/26-11",[]],["title/26-12",[8,26.784,18,20.684,553,33.535,2035,40.79]],["name/26-12",[]],["text/26-12",[]],["component/26-12",[]],["title/26-13",[176,40.79,411,33.535,553,33.535,2277,36.416]],["name/26-13",[]],["text/26-13",[]],["component/26-13",[]],["title/26-14",[178,47.936,296,29.825,553,38.261]],["name/26-14",[]],["text/26-14",[]],["component/26-14",[]],["title/26",[18,23.599,553,38.261,568,40.796]],["name/26",[1123,0.316]],["text/26",[0,0.738,5,6.761,9,1.655,11,1.57,18,4.006,20,0.971,22,2.99,27,1.838,29,3.811,34,1.967,47,3.393,48,0.998,51,1.079,66,2.346,69,0.777,72,1.198,86,1.079,96,2.801,104,2.359,106,2.359,117,1.811,119,3.962,132,3.996,138,1.811,188,1.769,194,2.669,197,3.014,198,2.534,205,0.971,206,1.525,208,2.821,221,0.984,227,1.027,232,1.099,233,1.867,237,1.761,249,0.998,257,2.842,261,0.971,264,2.576,268,2.247,276,1.06,305,2.993,308,2.836,319,2.359,322,0.998,324,1.079,326,3.719,335,4.009,353,1.17,354,2.458,372,1.867,385,1.231,395,1.129,423,1.967,448,2.269,451,1.311,454,2.423,455,1.012,458,1.867,462,2.269,476,1.079,493,1.079,513,2.621,528,1.311,530,2.495,550,1.428,553,2.458,567,3.891,568,1.079,611,1.12,630,3.67,659,1.231,705,4.601,706,2.269,707,2.269,708,2.145,709,2.555,710,4.223,711,2.005,713,6.268,714,3.383,715,2.555,716,4.48,717,4.48,718,2.555,719,1.268,742,1.231,750,1.144,767,2.842,783,1.06,787,2.005,875,1.931,939,1.099,949,0.984,951,1.931,968,1.198,970,2.047,974,5.989,986,2.439,996,4.031,1004,1.027,1009,5.022,1048,1.311,1066,1.144,1084,1.17,1092,1.198,1100,1.311,1102,1.198,1104,1.17,1105,1.17,1125,5.951,1142,2.711,1144,2.346,1209,1.867,1216,2.222,1221,3.811,1222,2.346,1276,1.428,1301,1.198,1385,1.231,1809,2.145,1877,2.576,1917,2.145,1989,1.198,2071,1.231,2079,2.094,2080,1.231,2169,3.75,2260,3.311,2277,1.099,2369,3.46,2417,0.886,2461,1.17,2465,4.284,2471,3.311,2473,1.363,2475,2.439,2480,1.428,2498,1.311,2513,3.46,2535,1.428,2582,1.268,2619,1.363,2716,1.268,2719,1.311,2720,1.311,2722,1.363,2756,1.363,2894,2.047,3003,6.65,3636,1.428,3899,2.269,3923,2.555,3924,1.428,3925,1.428,3926,1.428,3927,1.428,3928,1.428,3929,1.428,3930,3.468,3932,2.346,3933,2.555,3936,2.439,3977,1.363,4079,3.311,4086,1.428,4148,1.515,4149,1.515,4151,1.515,4153,1.515,4157,1.515,4159,1.515,4179,1.515,4188,3.468,4238,1.363,4466,1.428,4468,1.515,4469,1.515,4470,1.515,4471,1.515,4478,1.515,4479,1.515,4480,1.515,4484,1.515,4491,1.515,5094,1.515,5167,2.711,5205,1.515,5306,1.428,5433,2.555,5435,2.947,5436,2.947,5437,2.947,5438,1.647,5439,2.947,5440,1.647,5441,2.947,5442,1.647,5443,2.947,5444,1.647,5445,1.647,5446,1.647,5447,2.947,5448,1.647,5449,1.647,5450,4.87,5451,1.647,5452,9.54]],["component/26",[18,0.186,172,0.252]],["title/27-1",[0,32.486,2,46.675]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[2,40.098,579,43.251,2107,47.936]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[68,37.204,71,47.936,1037,42.362]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[3,29.366,132,31.079,4495,57.27]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[132,31.079,208,31.351,777,43.251]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[46,30.312,208,27.479,261,32.18,886,38.766]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[8,30.558,206,32.213,1877,40.098]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27-8",[11,33.159,206,32.213,319,36.715]],["name/27-8",[]],["text/27-8",[]],["component/27-8",[]],["title/27-9",[212,32.71,319,25.806,1281,30.4,1784,32.71,5453,37.943,5454,40.253]],["name/27-9",[]],["text/27-9",[]],["component/27-9",[]],["title/27-10",[19,42.362,319,36.715,2460,40.098]],["name/27-10",[]],["text/27-10",[]],["component/27-10",[]],["title/27-11",[87,36.416,319,32.18,2460,35.145,4940,50.197]],["name/27-11",[]],["text/27-11",[]],["component/27-11",[]],["title/27-12",[296,26.142,319,32.18,2460,35.145,4941,50.197]],["name/27-12",[]],["text/27-12",[]],["component/27-12",[]],["title/27-13",[36,42.362,2460,40.098,4942,57.27]],["name/27-13",[]],["text/27-13",[]],["component/27-13",[]],["title/27-14",[284,46.538,2460,40.098,5455,62.26]],["name/27-14",[]],["text/27-14",[]],["component/27-14",[]],["title/27-15",[554,45.315,2460,40.098,5456,62.26]],["name/27-15",[]],["text/27-15",[]],["component/27-15",[]],["title/27-16",[2460,40.098,3160,49.568,5457,62.26]],["name/27-16",[]],["text/27-16",[]],["component/27-16",[]],["title/27-17",[2460,40.098,2894,43.251,5458,62.26]],["name/27-17",[]],["text/27-17",[]],["component/27-17",[]],["title/27-18",[36,37.13,1884,42.015,2460,35.145,5459,54.57]],["name/27-18",[]],["text/27-18",[]],["component/27-18",[]],["title/27-19",[221,43.306,1355,42.196]],["name/27-19",[]],["text/27-19",[]],["component/27-19",[]],["title/27-20",[5,21.845,578,25.479,1355,25.479,1855,37.943,2962,49.859]],["name/27-20",[]],["text/27-20",[]],["component/27-20",[]],["title/27-21",[2227,33.671,5460,72.473]],["name/27-21",[]],["text/27-21",[]],["component/27-21",[]],["title/27-22",[1082,37.853,5461,72.473]],["name/27-22",[]],["text/27-22",[]],["component/27-22",[]],["title/27-23",[299,32.945,5462,72.473]],["name/27-23",[]],["text/27-23",[]],["component/27-23",[]],["title/27-24",[82,35.279,5463,72.473]],["name/27-24",[]],["text/27-24",[]],["component/27-24",[]],["title/27-25",[395,27.763,5464,72.473]],["name/27-25",[]],["text/27-25",[]],["component/27-25",[]],["title/27-26",[281,34.182,5465,72.473]],["name/27-26",[]],["text/27-26",[]],["component/27-26",[]],["title/27-27",[5,21.845,434,29.202,889,27.725,1216,24.307,1355,25.479,1857,37.943]],["name/27-27",[]],["text/27-27",[]],["component/27-27",[]],["title/27-28",[2227,33.671,5466,72.473]],["name/27-28",[]],["text/27-28",[]],["component/27-28",[]],["title/27-29",[1082,37.853,5467,72.473]],["name/27-29",[]],["text/27-29",[]],["component/27-29",[]],["title/27-30",[299,32.945,5468,72.473]],["name/27-30",[]],["text/27-30",[]],["component/27-30",[]],["title/27-31",[82,35.279,5469,72.473]],["name/27-31",[]],["text/27-31",[]],["component/27-31",[]],["title/27-32",[395,27.763,5470,72.473]],["name/27-32",[]],["text/27-32",[]],["component/27-32",[]],["title/27-33",[281,34.182,5471,72.473]],["name/27-33",[]],["text/27-33",[]],["component/27-33",[]],["title/27-34",[5,21.845,578,25.479,751,40.991,1355,25.479,1859,40.253]],["name/27-34",[]],["text/27-34",[]],["component/27-34",[]],["title/27-35",[2227,33.671,5472,72.473]],["name/27-35",[]],["text/27-35",[]],["component/27-35",[]],["title/27-36",[1082,37.853,5473,72.473]],["name/27-36",[]],["text/27-36",[]],["component/27-36",[]],["title/27-37",[299,32.945,5474,72.473]],["name/27-37",[]],["text/27-37",[]],["component/27-37",[]],["title/27-38",[82,35.279,5475,72.473]],["name/27-38",[]],["text/27-38",[]],["component/27-38",[]],["title/27-39",[395,27.763,5476,72.473]],["name/27-39",[]],["text/27-39",[]],["component/27-39",[]],["title/27-40",[281,34.182,5477,72.473]],["name/27-40",[]],["text/27-40",[]],["component/27-40",[]],["title/27-41",[5,14.61,129,18.256,177,29.759,751,38.065,1355,17.04,1494,22.533,1807,20.791,5478,29.267]],["name/27-41",[]],["text/27-41",[]],["component/27-41",[]],["title/27-42",[2227,33.671,5479,72.473]],["name/27-42",[]],["text/27-42",[]],["component/27-42",[]],["title/27-43",[1082,37.853,5480,72.473]],["name/27-43",[]],["text/27-43",[]],["component/27-43",[]],["title/27-44",[299,32.945,5481,72.473]],["name/27-44",[]],["text/27-44",[]],["component/27-44",[]],["title/27-45",[82,35.279,5482,72.473]],["name/27-45",[]],["text/27-45",[]],["component/27-45",[]],["title/27-46",[395,27.763,5483,72.473]],["name/27-46",[]],["text/27-46",[]],["component/27-46",[]],["title/27-47",[281,34.182,5484,72.473]],["name/27-47",[]],["text/27-47",[]],["component/27-47",[]],["title/27-48",[5,21.845,233,27.725,578,25.479,751,26.892,1355,25.479,5485,43.761]],["name/27-48",[]],["text/27-48",[]],["component/27-48",[]],["title/27-49",[2227,33.671,5486,72.473]],["name/27-49",[]],["text/27-49",[]],["component/27-49",[]],["title/27-50",[1082,37.853,5487,72.473]],["name/27-50",[]],["text/27-50",[]],["component/27-50",[]],["title/27-51",[299,32.945,5488,72.473]],["name/27-51",[]],["text/27-51",[]],["component/27-51",[]],["title/27-52",[82,35.279,5489,72.473]],["name/27-52",[]],["text/27-52",[]],["component/27-52",[]],["title/27-53",[395,27.763,5490,72.473]],["name/27-53",[]],["text/27-53",[]],["component/27-53",[]],["title/27-54",[281,34.182,5491,72.473]],["name/27-54",[]],["text/27-54",[]],["component/27-54",[]],["title/27-55",[5,15.646,129,19.551,177,31.484,578,18.249,605,28.831,751,19.261,1355,29.83,1807,22.266]],["name/27-55",[]],["text/27-55",[]],["component/27-55",[]],["title/27-56",[2227,33.671,5492,72.473]],["name/27-56",[]],["text/27-56",[]],["component/27-56",[]],["title/27-57",[1082,37.853,5493,72.473]],["name/27-57",[]],["text/27-57",[]],["component/27-57",[]],["title/27-58",[299,32.945,5494,72.473]],["name/27-58",[]],["text/27-58",[]],["component/27-58",[]],["title/27-59",[82,35.279,5495,72.473]],["name/27-59",[]],["text/27-59",[]],["component/27-59",[]],["title/27-60",[2270,62.838,5496,72.473]],["name/27-60",[]],["text/27-60",[]],["component/27-60",[]],["title/27-61",[395,27.763,5497,72.473]],["name/27-61",[]],["text/27-61",[]],["component/27-61",[]],["title/27-62",[281,34.182,5498,72.473]],["name/27-62",[]],["text/27-62",[]],["component/27-62",[]],["title/27-63",[5,21.845,578,25.479,1355,25.479,2962,32.71,5248,34.839,5499,43.761]],["name/27-63",[]],["text/27-63",[]],["component/27-63",[]],["title/27-64",[2227,33.671,5500,72.473]],["name/27-64",[]],["text/27-64",[]],["component/27-64",[]],["title/27-65",[1082,37.853,5501,72.473]],["name/27-65",[]],["text/27-65",[]],["component/27-65",[]],["title/27-66",[299,32.945,5502,72.473]],["name/27-66",[]],["text/27-66",[]],["component/27-66",[]],["title/27-67",[82,35.279,5503,72.473]],["name/27-67",[]],["text/27-67",[]],["component/27-67",[]],["title/27-68",[395,27.763,5504,72.473]],["name/27-68",[]],["text/27-68",[]],["component/27-68",[]],["title/27-69",[281,34.182,5505,72.473]],["name/27-69",[]],["text/27-69",[]],["component/27-69",[]],["title/27-70",[5,14.61,129,18.256,177,29.759,724,23.3,751,17.985,1355,17.04,1494,22.533,1807,20.791,5248,23.3,5506,29.267]],["name/27-70",[]],["text/27-70",[]],["component/27-70",[]],["title/27-71",[2227,33.671,5507,72.473]],["name/27-71",[]],["text/27-71",[]],["component/27-71",[]],["title/27-72",[1082,37.853,5508,72.473]],["name/27-72",[]],["text/27-72",[]],["component/27-72",[]],["title/27-73",[299,32.945,5509,72.473]],["name/27-73",[]],["text/27-73",[]],["component/27-73",[]],["title/27-74",[82,35.279,5510,72.473]],["name/27-74",[]],["text/27-74",[]],["component/27-74",[]],["title/27-75",[395,27.763,5511,72.473]],["name/27-75",[]],["text/27-75",[]],["component/27-75",[]],["title/27-76",[281,34.182,5512,72.473]],["name/27-76",[]],["text/27-76",[]],["component/27-76",[]],["title/27-77",[5,16.841,261,19.894,578,19.642,1328,22.513,1355,19.642,2896,24.554,5279,47.156,5513,33.736]],["name/27-77",[]],["text/27-77",[]],["component/27-77",[]],["title/27-78",[2227,33.671,5514,72.473]],["name/27-78",[]],["text/27-78",[]],["component/27-78",[]],["title/27-79",[1082,37.853,5515,72.473]],["name/27-79",[]],["text/27-79",[]],["component/27-79",[]],["title/27-80",[299,32.945,5516,72.473]],["name/27-80",[]],["text/27-80",[]],["component/27-80",[]],["title/27-81",[82,35.279,5517,72.473]],["name/27-81",[]],["text/27-81",[]],["component/27-81",[]],["title/27-82",[395,27.763,5518,72.473]],["name/27-82",[]],["text/27-82",[]],["component/27-82",[]],["title/27-83",[281,34.182,5519,72.473]],["name/27-83",[]],["text/27-83",[]],["component/27-83",[]],["title/27-84",[5,15.646,62,29.464,75,38.296,411,19.261,479,18.729,578,18.249,1355,18.249,5520,31.343]],["name/27-84",[]],["text/27-84",[]],["component/27-84",[]],["title/27-85",[2227,33.671,5521,72.473]],["name/27-85",[]],["text/27-85",[]],["component/27-85",[]],["title/27-86",[1082,37.853,5522,72.473]],["name/27-86",[]],["text/27-86",[]],["component/27-86",[]],["title/27-87",[82,35.279,5523,72.473]],["name/27-87",[]],["text/27-87",[]],["component/27-87",[]],["title/27-88",[281,34.182,5524,72.473]],["name/27-88",[]],["text/27-88",[]],["component/27-88",[]],["title/27-89",[5,18.233,62,33.329,244,30.229,578,21.266,1355,33.742,5525,36.525]],["name/27-89",[]],["text/27-89",[]],["component/27-89",[]],["title/27-90",[2227,33.671,5526,72.473]],["name/27-90",[]],["text/27-90",[]],["component/27-90",[]],["title/27-91",[1082,37.853,5527,72.473]],["name/27-91",[]],["text/27-91",[]],["component/27-91",[]],["title/27-92",[82,35.279,5528,72.473]],["name/27-92",[]],["text/27-92",[]],["component/27-92",[]],["title/27-93",[395,27.763,5529,72.473]],["name/27-93",[]],["text/27-93",[]],["component/27-93",[]],["title/27-94",[281,34.182,5530,72.473]],["name/27-94",[]],["text/27-94",[]],["component/27-94",[]],["title/27-95",[5,19.876,889,25.227,1216,34.45,1355,36.111,5531,39.817]],["name/27-95",[]],["text/27-95",[]],["component/27-95",[]],["title/27-96",[2227,33.671,5532,72.473]],["name/27-96",[]],["text/27-96",[]],["component/27-96",[]],["title/27-97",[1082,37.853,5533,72.473]],["name/27-97",[]],["text/27-97",[]],["component/27-97",[]],["title/27-98",[299,32.945,5534,72.473]],["name/27-98",[]],["text/27-98",[]],["component/27-98",[]],["title/27-99",[281,34.182,5535,72.473]],["name/27-99",[]],["text/27-99",[]],["component/27-99",[]],["title/27-100",[47,37.718,223,38.261,236,41.548]],["name/27-100",[]],["text/27-100",[]],["component/27-100",[]],["title/27-101",[195,40.098,1861,57.27,5536,57.27]],["name/27-101",[]],["text/27-101",[]],["component/27-101",[]],["title/27-102",[74,37.909,739,43.446,1164,38.766,5537,54.57]],["name/27-102",[]],["text/27-102",[]],["component/27-102",[]],["title/27-103",[3861,48.363,5538,72.473]],["name/27-103",[]],["text/27-103",[]],["component/27-103",[]],["title/27-104",[1093,40.098,3861,41.548,5539,62.26]],["name/27-104",[]],["text/27-104",[]],["component/27-104",[]],["title/27-105",[501,29.202,1093,28.183,2098,34.839,3861,29.202,5540,43.761,5541,34.839]],["name/27-105",[]],["text/27-105",[]],["component/27-105",[]],["title/27-106",[1093,31.282,1786,42.114,3861,32.413,5541,38.669,5542,48.571]],["name/27-106",[]],["text/27-106",[]],["component/27-106",[]],["title/27-107",[1093,31.282,2101,38.669,3310,42.114,3861,32.413,5543,48.571]],["name/27-107",[]],["text/27-107",[]],["component/27-107",[]],["title/27-108",[1093,35.145,2700,42.015,3861,36.416,5544,54.57]],["name/27-108",[]],["text/27-108",[]],["component/27-108",[]],["title/27-109",[1660,49.568,3861,41.548,5545,62.26]],["name/27-109",[]],["text/27-109",[]],["component/27-109",[]],["title/27-110",[268,34.974,3861,41.548,5546,62.26]],["name/27-110",[]],["text/27-110",[]],["component/27-110",[]],["title/27-111",[249,43.905,5547,72.473]],["name/27-111",[]],["text/27-111",[]],["component/27-111",[]],["title/27-112",[1097,43.251,1792,43.251,5548,62.26]],["name/27-112",[]],["text/27-112",[]],["component/27-112",[]],["title/27-113",[529,51.483,5549,72.473]],["name/27-113",[]],["text/27-113",[]],["component/27-113",[]],["title/27-114",[249,37.718,1393,49.568,5550,62.26]],["name/27-114",[]],["text/27-114",[]],["component/27-114",[]],["title/27-115",[873,36.715,1599,43.251,1862,57.27]],["name/27-115",[]],["text/27-115",[]],["component/27-115",[]],["title/27-116",[47,37.718,565,37.718,5551,62.26]],["name/27-116",[]],["text/27-116",[]],["component/27-116",[]],["title/27-117",[299,28.303,1493,49.568,5552,62.26]],["name/27-117",[]],["text/27-117",[]],["component/27-117",[]],["title/27-118",[3342,59.98,5553,72.473]],["name/27-118",[]],["text/27-118",[]],["component/27-118",[]],["title/27-119",[455,38.261,1155,45.315,5554,62.26]],["name/27-119",[]],["text/27-119",[]],["component/27-119",[]],["title/27-120",[249,37.718,1402,49.568,5555,62.26]],["name/27-120",[]],["text/27-120",[]],["component/27-120",[]],["title/27-121",[39,39.446,91,28.714,5556,62.26]],["name/27-121",[]],["text/27-121",[]],["component/27-121",[]],["title/27-122",[1599,43.251,3160,49.568,5557,62.26]],["name/27-122",[]],["text/27-122",[]],["component/27-122",[]],["title/27-123",[39,34.574,91,25.168,2364,42.015,5558,54.57]],["name/27-123",[]],["text/27-123",[]],["component/27-123",[]],["title/27-124",[268,34.974,5559,62.26,5560,57.27]],["name/27-124",[]],["text/27-124",[]],["component/27-124",[]],["title/27-125",[708,45.315,1599,43.251,5561,62.26]],["name/27-125",[]],["text/27-125",[]],["component/27-125",[]],["title/27-126",[5562,62.26,5563,57.27,5564,53.983]],["name/27-126",[]],["text/27-126",[]],["component/27-126",[]],["title/27-127",[1081,51.528,5565,62.26,5566,53.983]],["name/27-127",[]],["text/27-127",[]],["component/27-127",[]],["title/27-128",[454,37.718,5566,53.983,5567,62.26]],["name/27-128",[]],["text/27-128",[]],["component/27-128",[]],["title/27-129",[508,45.164,970,37.909,1599,37.909,5568,54.57]],["name/27-129",[]],["text/27-129",[]],["component/27-129",[]],["title/27-130",[39,39.446,91,28.714,1863,57.27]],["name/27-130",[]],["text/27-130",[]],["component/27-130",[]],["title/27-131",[296,26.142,1493,43.446,3412,42.015,5569,54.57]],["name/27-131",[]],["text/27-131",[]],["component/27-131",[]],["title/27-132",[296,26.142,308,31.772,3412,42.015,5570,54.57]],["name/27-132",[]],["text/27-132",[]],["component/27-132",[]],["title/27-133",[296,26.142,1177,43.446,3412,42.015,5571,54.57]],["name/27-133",[]],["text/27-133",[]],["component/27-133",[]],["title/27-134",[175,28.502,281,25.739,1123,35.145,1287,35.757]],["name/27-134",[]],["text/27-134",[]],["component/27-134",[]],["title/27-135",[299,28.303,305,38.261,1870,53.983]],["name/27-135",[]],["text/27-135",[]],["component/27-135",[]],["title/27-136",[1053,46.538,5572,57.27,5573,57.27]],["name/27-136",[]],["text/27-136",[]],["component/27-136",[]],["title/27-137",[46,34.583,68,37.204,1871,53.983]],["name/27-137",[]],["text/27-137",[]],["component/27-137",[]],["title/27-138",[269,42.737,5574,72.473]],["name/27-138",[]],["text/27-138",[]],["component/27-138",[]],["title/27-139",[299,32.945,5575,72.473]],["name/27-139",[]],["text/27-139",[]],["component/27-139",[]],["title/27-140",[395,27.763,5576,72.473]],["name/27-140",[]],["text/27-140",[]],["component/27-140",[]],["title/27-141",[46,34.583,102,43.251,1873,53.983]],["name/27-141",[]],["text/27-141",[]],["component/27-141",[]],["title/27-142",[269,42.737,5577,72.473]],["name/27-142",[]],["text/27-142",[]],["component/27-142",[]],["title/27-143",[299,32.945,5578,72.473]],["name/27-143",[]],["text/27-143",[]],["component/27-143",[]],["title/27-144",[296,34.718,5579,72.473]],["name/27-144",[]],["text/27-144",[]],["component/27-144",[]],["title/27-145",[28,39.446,46,34.583,1874,57.27]],["name/27-145",[]],["text/27-145",[]],["component/27-145",[]],["title/27-146",[269,42.737,1875,66.664]],["name/27-146",[]],["text/27-146",[]],["component/27-146",[]],["title/27-147",[299,32.945,1876,66.664]],["name/27-147",[]],["text/27-147",[]],["component/27-147",[]],["title/27-148",[395,27.763,5580,72.473]],["name/27-148",[]],["text/27-148",[]],["component/27-148",[]],["title/27-149",[1619,54.171,5581,72.473]],["name/27-149",[]],["text/27-149",[]],["component/27-149",[]],["title/27-150",[395,27.763,5582,72.473]],["name/27-150",[]],["text/27-150",[]],["component/27-150",[]],["title/27-151",[5453,62.838,5583,72.473]],["name/27-151",[]],["text/27-151",[]],["component/27-151",[]],["title/27-152",[395,27.763,5584,72.473]],["name/27-152",[]],["text/27-152",[]],["component/27-152",[]],["title/27-153",[249,37.718,5038,53.983,5585,62.26]],["name/27-153",[]],["text/27-153",[]],["component/27-153",[]],["title/27-154",[269,42.737,5586,72.473]],["name/27-154",[]],["text/27-154",[]],["component/27-154",[]],["title/27-155",[299,32.945,5587,72.473]],["name/27-155",[]],["text/27-155",[]],["component/27-155",[]],["title/27-156",[395,27.763,5588,72.473]],["name/27-156",[]],["text/27-156",[]],["component/27-156",[]],["title/27-157",[1097,43.251,5541,49.568,5589,62.26]],["name/27-157",[]],["text/27-157",[]],["component/27-157",[]],["title/27-158",[2,46.675,5590,72.473]],["name/27-158",[]],["text/27-158",[]],["component/27-158",[]],["title/27-159",[395,27.763,5591,72.473]],["name/27-159",[]],["text/27-159",[]],["component/27-159",[]],["title/27-160",[314,50.345,5592,72.473]],["name/27-160",[]],["text/27-160",[]],["component/27-160",[]],["title/27-161",[269,42.737,5593,72.473]],["name/27-161",[]],["text/27-161",[]],["component/27-161",[]],["title/27-162",[299,32.945,5594,72.473]],["name/27-162",[]],["text/27-162",[]],["component/27-162",[]],["title/27-163",[395,27.763,5595,72.473]],["name/27-163",[]],["text/27-163",[]],["component/27-163",[]],["title/27-164",[14,33.741,91,22.401,281,22.909,479,29.024,5596,48.571]],["name/27-164",[]],["text/27-164",[]],["component/27-164",[]],["title/27-165",[1451,62.838,5597,72.473]],["name/27-165",[]],["text/27-165",[]],["component/27-165",[]],["title/27-166",[2417,38.991,5598,72.473]],["name/27-166",[]],["text/27-166",[]],["component/27-166",[]],["title/27-167",[299,32.945,5599,72.473]],["name/27-167",[]],["text/27-167",[]],["component/27-167",[]],["title/27-168",[395,27.763,5600,72.473]],["name/27-168",[]],["text/27-168",[]],["component/27-168",[]],["title/27-169",[1418,62.838,5601,72.473]],["name/27-169",[]],["text/27-169",[]],["component/27-169",[]],["title/27-170",[2417,38.991,5602,72.473]],["name/27-170",[]],["text/27-170",[]],["component/27-170",[]],["title/27-171",[395,27.763,5603,72.473]],["name/27-171",[]],["text/27-171",[]],["component/27-171",[]],["title/27-172",[1452,62.838,5604,72.473]],["name/27-172",[]],["text/27-172",[]],["component/27-172",[]],["title/27-173",[2417,38.991,5605,72.473]],["name/27-173",[]],["text/27-173",[]],["component/27-173",[]],["title/27-174",[299,28.303,1082,32.519,5606,62.26]],["name/27-174",[]],["text/27-174",[]],["component/27-174",[]],["title/27-175",[395,27.763,5607,72.473]],["name/27-175",[]],["text/27-175",[]],["component/27-175",[]],["title/27-176",[1453,62.838,5608,72.473]],["name/27-176",[]],["text/27-176",[]],["component/27-176",[]],["title/27-177",[2417,38.991,5609,72.473]],["name/27-177",[]],["text/27-177",[]],["component/27-177",[]],["title/27-178",[395,27.763,5610,72.473]],["name/27-178",[]],["text/27-178",[]],["component/27-178",[]],["title/27-179",[1421,62.838,5611,72.473]],["name/27-179",[]],["text/27-179",[]],["component/27-179",[]],["title/27-180",[2417,38.991,5612,72.473]],["name/27-180",[]],["text/27-180",[]],["component/27-180",[]],["title/27-181",[5613,72.473,5614,55.799]],["name/27-181",[]],["text/27-181",[]],["component/27-181",[]],["title/27-182",[395,27.763,5615,72.473]],["name/27-182",[]],["text/27-182",[]],["component/27-182",[]],["title/27-183",[1420,62.838,5616,72.473]],["name/27-183",[]],["text/27-183",[]],["component/27-183",[]],["title/27-184",[2417,38.991,5617,72.473]],["name/27-184",[]],["text/27-184",[]],["component/27-184",[]],["title/27-185",[5614,55.799,5618,72.473]],["name/27-185",[]],["text/27-185",[]],["component/27-185",[]],["title/27-186",[395,27.763,5619,72.473]],["name/27-186",[]],["text/27-186",[]],["component/27-186",[]],["title/27-187",[1419,62.838,5620,72.473]],["name/27-187",[]],["text/27-187",[]],["component/27-187",[]],["title/27-188",[2417,38.991,5621,72.473]],["name/27-188",[]],["text/27-188",[]],["component/27-188",[]],["title/27-189",[5614,55.799,5622,72.473]],["name/27-189",[]],["text/27-189",[]],["component/27-189",[]],["title/27-190",[395,27.763,5623,72.473]],["name/27-190",[]],["text/27-190",[]],["component/27-190",[]],["title/27-191",[1417,62.838,5624,72.473]],["name/27-191",[]],["text/27-191",[]],["component/27-191",[]],["title/27-192",[2417,38.991,5625,72.473]],["name/27-192",[]],["text/27-192",[]],["component/27-192",[]],["title/27-193",[395,27.763,5626,72.473]],["name/27-193",[]],["text/27-193",[]],["component/27-193",[]],["title/27-194",[1425,62.838,5627,72.473]],["name/27-194",[]],["text/27-194",[]],["component/27-194",[]],["title/27-195",[2417,38.991,5628,72.473]],["name/27-195",[]],["text/27-195",[]],["component/27-195",[]],["title/27-196",[5614,55.799,5629,72.473]],["name/27-196",[]],["text/27-196",[]],["component/27-196",[]],["title/27-197",[395,27.763,5630,72.473]],["name/27-197",[]],["text/27-197",[]],["component/27-197",[]],["title/27-198",[1427,62.838,5631,72.473]],["name/27-198",[]],["text/27-198",[]],["component/27-198",[]],["title/27-199",[2417,38.991,5632,72.473]],["name/27-199",[]],["text/27-199",[]],["component/27-199",[]],["title/27-200",[5614,55.799,5633,72.473]],["name/27-200",[]],["text/27-200",[]],["component/27-200",[]],["title/27-201",[395,27.763,5634,72.473]],["name/27-201",[]],["text/27-201",[]],["component/27-201",[]],["title/27-202",[5246,62.838,5635,72.473]],["name/27-202",[]],["text/27-202",[]],["component/27-202",[]],["title/27-203",[2417,38.991,5636,72.473]],["name/27-203",[]],["text/27-203",[]],["component/27-203",[]],["title/27-204",[5614,55.799,5637,72.473]],["name/27-204",[]],["text/27-204",[]],["component/27-204",[]],["title/27-205",[395,27.763,5638,72.473]],["name/27-205",[]],["text/27-205",[]],["component/27-205",[]],["title/27-206",[91,18.363,281,18.78,753,30.656,1056,27.092,1094,29.762,1098,26.571,5639,39.817]],["name/27-206",[]],["text/27-206",[]],["component/27-206",[]],["title/27-207",[1442,62.838,5640,72.473]],["name/27-207",[]],["text/27-207",[]],["component/27-207",[]],["title/27-208",[2417,38.991,5641,72.473]],["name/27-208",[]],["text/27-208",[]],["component/27-208",[]],["title/27-209",[299,32.945,5642,72.473]],["name/27-209",[]],["text/27-209",[]],["component/27-209",[]],["title/27-210",[395,27.763,5643,72.473]],["name/27-210",[]],["text/27-210",[]],["component/27-210",[]],["title/27-211",[1441,62.838,5644,72.473]],["name/27-211",[]],["text/27-211",[]],["component/27-211",[]],["title/27-212",[2417,38.991,5645,72.473]],["name/27-212",[]],["text/27-212",[]],["component/27-212",[]],["title/27-213",[299,32.945,5646,72.473]],["name/27-213",[]],["text/27-213",[]],["component/27-213",[]],["title/27-214",[395,27.763,5647,72.473]],["name/27-214",[]],["text/27-214",[]],["component/27-214",[]],["title/27-215",[1443,62.838,5648,72.473]],["name/27-215",[]],["text/27-215",[]],["component/27-215",[]],["title/27-216",[2417,38.991,5649,72.473]],["name/27-216",[]],["text/27-216",[]],["component/27-216",[]],["title/27-217",[299,32.945,5650,72.473]],["name/27-217",[]],["text/27-217",[]],["component/27-217",[]],["title/27-218",[395,27.763,5651,72.473]],["name/27-218",[]],["text/27-218",[]],["component/27-218",[]],["title/27-219",[1444,62.838,5652,72.473]],["name/27-219",[]],["text/27-219",[]],["component/27-219",[]],["title/27-220",[2417,38.991,5653,72.473]],["name/27-220",[]],["text/27-220",[]],["component/27-220",[]],["title/27-221",[299,32.945,5654,72.473]],["name/27-221",[]],["text/27-221",[]],["component/27-221",[]],["title/27-222",[395,27.763,5655,72.473]],["name/27-222",[]],["text/27-222",[]],["component/27-222",[]],["title/27-223",[1446,62.838,5656,72.473]],["name/27-223",[]],["text/27-223",[]],["component/27-223",[]],["title/27-224",[2417,38.991,5657,72.473]],["name/27-224",[]],["text/27-224",[]],["component/27-224",[]],["title/27-225",[299,32.945,5658,72.473]],["name/27-225",[]],["text/27-225",[]],["component/27-225",[]],["title/27-226",[395,27.763,5659,72.473]],["name/27-226",[]],["text/27-226",[]],["component/27-226",[]],["title/27-227",[1447,62.838,5660,72.473]],["name/27-227",[]],["text/27-227",[]],["component/27-227",[]],["title/27-228",[2417,38.991,5661,72.473]],["name/27-228",[]],["text/27-228",[]],["component/27-228",[]],["title/27-229",[299,32.945,5662,72.473]],["name/27-229",[]],["text/27-229",[]],["component/27-229",[]],["title/27-230",[395,27.763,5663,72.473]],["name/27-230",[]],["text/27-230",[]],["component/27-230",[]],["title/27-231",[1445,62.838,5664,72.473]],["name/27-231",[]],["text/27-231",[]],["component/27-231",[]],["title/27-232",[2417,38.991,5665,72.473]],["name/27-232",[]],["text/27-232",[]],["component/27-232",[]],["title/27-233",[299,32.945,5666,72.473]],["name/27-233",[]],["text/27-233",[]],["component/27-233",[]],["title/27-234",[395,27.763,5667,72.473]],["name/27-234",[]],["text/27-234",[]],["component/27-234",[]],["title/27-235",[3663,62.838,5668,72.473]],["name/27-235",[]],["text/27-235",[]],["component/27-235",[]],["title/27-236",[2417,38.991,5669,72.473]],["name/27-236",[]],["text/27-236",[]],["component/27-236",[]],["title/27-237",[299,32.945,5670,72.473]],["name/27-237",[]],["text/27-237",[]],["component/27-237",[]],["title/27-238",[395,27.763,5671,72.473]],["name/27-238",[]],["text/27-238",[]],["component/27-238",[]],["title/27-239",[5672,86.693]],["name/27-239",[]],["text/27-239",[]],["component/27-239",[]],["title/27-240",[2417,38.991,5673,72.473]],["name/27-240",[]],["text/27-240",[]],["component/27-240",[]],["title/27-241",[299,32.945,5674,72.473]],["name/27-241",[]],["text/27-241",[]],["component/27-241",[]],["title/27-242",[395,27.763,5675,72.473]],["name/27-242",[]],["text/27-242",[]],["component/27-242",[]],["title/27-243",[5676,72.473,5677,72.473]],["name/27-243",[]],["text/27-243",[]],["component/27-243",[]],["title/27-244",[2,46.675,5678,72.473]],["name/27-244",[]],["text/27-244",[]],["component/27-244",[]],["title/27-245",[269,42.737,5679,72.473]],["name/27-245",[]],["text/27-245",[]],["component/27-245",[]],["title/27-246",[82,26.564,607,38.766,873,32.18,5680,54.57]],["name/27-246",[]],["text/27-246",[]],["component/27-246",[]],["title/27-247",[395,27.763,5681,72.473]],["name/27-247",[]],["text/27-247",[]],["component/27-247",[]],["title/27-248",[197,33.496,564,47.936,5682,62.26]],["name/27-248",[]],["text/27-248",[]],["component/27-248",[]],["title/27-249",[197,33.496,1535,47.936,5683,62.26]],["name/27-249",[]],["text/27-249",[]],["component/27-249",[]],["title/27-250",[5684,72.473,5685,62.838]],["name/27-250",[]],["text/27-250",[]],["component/27-250",[]],["title/27-251",[2,46.675,5686,72.473]],["name/27-251",[]],["text/27-251",[]],["component/27-251",[]],["title/27-252",[269,42.737,5687,72.473]],["name/27-252",[]],["text/27-252",[]],["component/27-252",[]],["title/27-253",[395,27.763,5688,72.473]],["name/27-253",[]],["text/27-253",[]],["component/27-253",[]],["title/27-254",[1041,52.748,5689,72.473]],["name/27-254",[]],["text/27-254",[]],["component/27-254",[]],["title/27-255",[195,35.145,1041,39.718,1179,36.416,5690,54.57]],["name/27-255",[]],["text/27-255",[]],["component/27-255",[]],["title/27-256",[270,29.024,326,29.024,1041,35.352,1179,32.413,5691,48.571]],["name/27-256",[]],["text/27-256",[]],["component/27-256",[]],["title/27-257",[269,32.18,1041,39.718,1179,36.416,5692,54.57]],["name/27-257",[]],["text/27-257",[]],["component/27-257",[]],["title/27-258",[316,46.675,5693,72.473]],["name/27-258",[]],["text/27-258",[]],["component/27-258",[]],["title/27-259",[91,33.424,5694,72.473]],["name/27-259",[]],["text/27-259",[]],["component/27-259",[]],["title/27-260",[120,40.71,5695,72.473]],["name/27-260",[]],["text/27-260",[]],["component/27-260",[]],["title/27-261",[120,34.974,1959,46.538,5696,62.26]],["name/27-261",[]],["text/27-261",[]],["component/27-261",[]],["title/27-262",[120,34.974,2194,42.362,5697,62.26]],["name/27-262",[]],["text/27-262",[]],["component/27-262",[]],["title/27-263",[558,44.229,3333,51.528,5698,62.26]],["name/27-263",[]],["text/27-263",[]],["component/27-263",[]],["title/27-264",[269,42.737,5699,72.473]],["name/27-264",[]],["text/27-264",[]],["component/27-264",[]],["title/27-265",[565,37.718,1311,41.548,5700,62.26]],["name/27-265",[]],["text/27-265",[]],["component/27-265",[]],["title/27-266",[1022,50.345,5701,72.473]],["name/27-266",[]],["text/27-266",[]],["component/27-266",[]],["title/27-267",[311,37.13,481,37.13,535,36.416,1125,34.039]],["name/27-267",[]],["text/27-267",[]],["component/27-267",[]],["title/27-268",[208,24.458,311,33.048,481,33.048,535,32.413,1878,42.114]],["name/27-268",[]],["text/27-268",[]],["component/27-268",[]],["title/27-269",[269,42.737,5702,72.473]],["name/27-269",[]],["text/27-269",[]],["component/27-269",[]],["title/27-270",[395,27.763,5703,72.473]],["name/27-270",[]],["text/27-270",[]],["component/27-270",[]],["title/27-271",[481,37.13,535,36.416,5704,54.57,5705,54.57]],["name/27-271",[]],["text/27-271",[]],["component/27-271",[]],["title/27-272",[28,39.446,317,38.835,1879,51.528]],["name/27-272",[]],["text/27-272",[]],["component/27-272",[]],["title/27-273",[28,27.725,278,31.85,317,27.296,481,29.775,535,29.202,829,40.253]],["name/27-273",[]],["text/27-273",[]],["component/27-273",[]],["title/27-274",[395,27.763,5706,72.473]],["name/27-274",[]],["text/27-274",[]],["component/27-274",[]],["title/27-275",[77,53.983,1880,53.983,2894,43.251]],["name/27-275",[]],["text/27-275",[]],["component/27-275",[]],["title/27-276",[278,31.85,481,29.775,535,29.202,1213,29.775,2894,30.4,5707,43.761]],["name/27-276",[]],["text/27-276",[]],["component/27-276",[]],["title/27-277",[395,27.763,5708,72.473]],["name/27-277",[]],["text/27-277",[]],["component/27-277",[]],["title/27",[127,47.488,226,55.799]],["name/27",[1125,0.306]],["text/27",[0,3.286,3,1.015,4,0.079,5,5.843,6,0.216,7,0.895,8,1.019,9,0.231,10,0.822,11,0.573,13,0.645,14,1.442,16,0.239,18,1.838,20,0.123,21,0.318,23,1.063,24,0.087,27,1.436,28,1.166,30,0.087,31,0.122,32,0.484,34,0.207,36,3.451,37,0.371,38,0.705,39,1.73,40,0.077,42,0.615,43,1.223,44,0.513,45,1.582,46,3.427,47,0.916,48,0.597,49,0.173,50,0.363,51,1.965,52,0.542,53,0.226,54,0.596,57,0.079,60,0.077,61,0.837,62,3.548,63,1.193,64,0.084,65,0.455,68,1.24,69,0.05,70,0.693,71,0.081,72,0.717,73,0.077,74,2.083,75,2.192,76,0.422,78,1.455,79,0.247,80,0.732,81,0.091,82,0.736,85,0.173,86,1.046,87,1.12,90,0.077,91,3.048,92,0.596,94,2.589,95,0.414,99,0.075,100,0.173,101,0.684,102,0.81,103,0.073,104,1.178,106,0.243,109,1.099,110,0.758,111,0.414,112,0.286,113,0.132,114,0.081,117,0.491,119,0.396,120,0.287,126,0.221,127,0.069,129,1.295,132,1.716,138,2.397,139,0.393,140,0.097,141,2.258,142,0.063,147,0.249,150,0.097,154,0.148,173,0.132,175,0.368,177,2.328,183,0.226,187,0.148,188,0.742,192,0.828,193,0.087,194,0.207,195,0.329,197,0.627,198,0.506,200,0.075,205,1.444,206,1.779,208,2.721,210,0.081,213,0.406,214,0.12,216,0.161,217,0.374,221,0.533,222,0.422,223,0.661,224,1.846,227,0.379,228,1.842,229,0.081,230,3.606,231,0.793,232,0.596,233,2.062,236,3.237,237,0.954,238,0.393,240,0.152,241,1.216,243,0.152,244,1.181,245,0.392,247,0.758,248,0.526,249,2.911,254,1.745,256,0.156,258,0.347,259,0.526,261,1.358,264,1.237,265,0.091,266,0.393,267,0.077,268,3.61,269,2.133,270,1.194,271,0.758,275,0.081,276,0.974,278,0.299,280,0.068,281,0.591,282,1.255,283,0.307,284,1.884,285,0.327,290,0.443,291,0.091,292,0.292,293,0.406,294,0.489,296,3.796,298,1.309,299,2.42,300,0.555,302,0.166,303,0.455,304,0.566,305,0.549,308,3.949,309,0.634,310,0.166,311,1.616,314,1.223,315,0.307,316,0.634,317,2.759,319,3.163,322,2.155,323,3.113,324,0.137,325,0.363,326,0.186,327,0.161,328,0.211,329,0.341,330,0.091,335,0.134,336,0.132,339,0.526,344,0.232,347,0.334,353,1.529,354,2.186,360,0.286,361,0.077,366,0.667,368,0.62,372,0.323,374,1.495,378,0.069,383,0.932,395,2.085,409,0.327,411,0.929,416,0.087,423,1.385,425,0.091,433,0.079,434,2.413,440,0.357,443,0.091,445,0.998,448,0.081,451,0.998,452,0.181,453,1.223,454,5.06,455,4.906,456,0.211,458,1.459,470,0.156,476,0.935,478,2.739,479,2.196,480,0.161,481,1.142,482,0.232,483,1.074,485,0.687,486,1.067,487,0.443,488,0.173,490,0.247,492,0.557,493,0.398,494,0.142,497,0.455,498,2.312,499,0.307,501,1.009,506,0.232,507,0.145,508,1.11,509,0.661,510,0.166,511,0.087,512,1.904,513,0.27,514,0.079,515,1.147,516,1.388,517,1.206,524,0.226,527,1.957,529,0.953,530,0.782,535,0.596,536,0.247,538,1.039,539,1.13,540,0.087,541,0.152,543,0.091,544,0.317,545,0.173,547,0.561,548,1.508,549,0.161,553,0.065,554,0.717,558,0.363,562,0.317,563,0.269,564,0.687,565,2.855,567,0.216,568,0.524,570,0.542,572,1.539,573,0.091,574,0.077,575,0.097,576,0.097,577,0.317,578,2.206,581,2.527,584,0.286,585,0.317,587,0.468,591,0.226,600,0.257,603,0.087,607,0.7,611,1.142,616,1.164,617,0.607,618,1.316,619,0.173,620,0.173,621,0.226,622,0.084,623,0.087,630,0.137,643,0.097,659,0.079,660,0.247,696,0.891,698,0.084,701,0.192,702,0.611,704,0.739,707,0.393,708,1.101,711,0.072,714,0.073,721,0.468,722,1.714,723,0.667,724,0.166,725,0.489,739,2.063,742,0.079,748,0.156,749,0.232,750,0.684,751,2.529,752,1.142,753,0.161,754,0.455,760,0.079,761,0.555,778,0.166,780,1.36,783,0.068,784,0.077,785,0.087,788,0.087,791,0.173,814,0.077,819,0.181,873,4.205,875,3.434,883,0.247,884,0.079,888,0.081,889,2.14,897,0.079,898,0.661,900,0.081,902,0.239,904,0.406,905,0.717,908,0.181,909,0.67,910,0.173,911,0.422,912,0.524,913,0.075,914,0.084,915,0.28,919,0.084,924,0.084,928,0.34,929,0.097,932,0.28,933,0.192,935,1.46,937,0.323,939,1.487,940,0.161,942,0.615,943,0.489,945,0.582,947,0.443,949,0.533,951,2.37,955,0.081,956,0.087,957,0.097,959,0.226,960,1.003,966,1.033,967,1.13,968,0.513,969,0.145,970,0.489,971,0.711,974,1.701,976,0.736,978,0.097,981,0.828,984,0.079,997,0.166,1000,0.075,1001,0.28,1003,0.087,1004,0.066,1007,0.454,1009,0.145,1011,0.317,1013,0.34,1022,1.166,1023,1.292,1026,0.65,1027,0.307,1028,0.555,1032,3.369,1034,1.192,1037,0.142,1038,0.181,1040,0.318,1041,0.443,1044,0.347,1046,0.378,1049,0.087,1050,0.484,1051,0.072,1052,0.636,1053,0.079,1054,0.097,1055,0.148,1056,0.414,1057,0.161,1058,0.422,1059,0.081,1065,0.327,1066,0.286,1067,0.432,1069,0.317,1072,0.28,1080,1.252,1081,3.135,1082,0.466,1084,0.7,1088,1.878,1092,0.226,1093,3.094,1094,2.57,1095,0.148,1097,3.107,1098,0.341,1100,0.166,1101,0.398,1102,2.276,1105,0.5,1108,0.527,1109,0.661,1110,0.611,1111,0.891,1112,0.933,1113,0.087,1116,1.523,1118,1.376,1120,0.181,1123,0.134,1125,0.13,1137,1.776,1140,0.181,1144,0.327,1145,0.192,1146,0.299,1151,0.084,1155,0.913,1156,0.363,1157,0.764,1159,0.084,1161,0.5,1162,0.091,1164,2.809,1165,0.077,1166,0.363,1168,0.784,1169,0.173,1170,1.067,1172,1.316,1174,0.99,1175,0.097,1176,0.192,1177,0.327,1179,0.533,1183,0.087,1184,0.148,1187,0.937,1193,0.097,1208,0.087,1209,2.739,1211,0.317,1213,1.995,1215,0.084,1216,1.554,1219,0.081,1221,0.347,1222,0.084,1223,0.393,1227,0.166,1228,1.136,1230,0.075,1231,1.238,1240,0.611,1271,0.097,1274,0.091,1275,0.239,1277,1.074,1281,1.944,1284,0.087,1286,0.077,1287,0.461,1290,0.087,1291,0.173,1294,0.161,1296,0.371,1297,0.667,1299,1.134,1300,0.081,1301,0.513,1309,0.091,1310,0.711,1311,0.952,1312,0.292,1313,1.715,1314,0.226,1321,0.079,1323,0.181,1328,1.175,1329,0.097,1333,0.393,1336,0.226,1337,0.239,1339,0.661,1343,0.145,1347,0.232,1355,5.14,1357,0.393,1360,0.317,1361,0.156,1364,0.087,1368,0.097,1381,0.081,1382,0.084,1383,0.355,1388,0.097,1390,2.641,1391,0.247,1393,1.068,1396,0.192,1402,0.166,1405,1.598,1411,0.687,1412,0.739,1413,0.774,1414,1.014,1416,0.443,1417,0.357,1418,0.181,1419,0.269,1420,0.443,1421,0.357,1425,0.269,1427,0.269,1434,0.711,1441,0.269,1442,0.443,1443,0.854,1444,0.269,1445,0.443,1446,0.693,1447,0.854,1451,0.357,1452,0.181,1453,0.269,1460,0.378,1464,0.559,1465,0.097,1467,0.161,1469,0.091,1474,0.648,1475,0.161,1479,0.091,1480,0.087,1483,0.286,1484,0.156,1485,0.226,1486,0.097,1487,0.173,1488,0.087,1490,0.097,1493,1.136,1496,0.357,1503,0.257,1505,0.156,1518,0.615,1519,0.166,1522,0.239,1523,0.156,1525,0.906,1531,0.937,1535,1.355,1537,0.269,1541,0.097,1546,0.152,1552,0.341,1553,0.804,1562,0.084,1563,0.937,1586,0.34,1598,0.758,1599,3.754,1614,0.432,1619,1.255,1622,0.378,1626,0.181,1632,0.469,1660,1.271,1667,0.378,1681,0.648,1685,0.181,1686,0.192,1693,0.286,1697,0.087,1705,0.192,1713,0.542,1730,0.192,1739,0.648,1740,0.583,1746,0.286,1747,0.097,1752,0.097,1753,0.097,1757,0.232,1771,3.493,1774,0.99,1784,0.804,1785,0.89,1786,0.933,1790,1.222,1792,0.932,1793,0.087,1794,0.393,1798,0.181,1799,0.173,1800,0.073,1805,0.081,1806,0.084,1807,0.148,1810,0.173,1814,0.181,1816,0.097,1818,1.086,1820,0.207,1828,0.247,1848,0.091,1850,0.382,1855,0.091,1857,0.269,1877,2.096,1879,0.087,1884,0.081,1888,0.232,1889,1.067,1892,0.161,1893,0.815,1896,0.091,1897,0.239,1899,0.393,1900,0.406,1901,0.615,1905,0.542,1906,0.239,1907,0.081,1908,0.422,1909,0.821,1917,0.582,1924,0.667,1925,0.173,1926,0.484,1928,0.998,1929,0.317,1931,0.307,1933,0.307,1938,0.468,1939,1.494,1941,0.081,1942,0.636,1944,0.393,1947,0.087,1948,0.156,1949,0.084,1955,0.081,1957,0.081,1958,0.542,1960,0.804,1965,0.161,1974,0.156,1977,0.091,1981,0.232,1983,0.084,1987,0.087,1988,0.081,1989,0.582,1991,0.084,1993,0.232,1995,0.087,1998,0.087,1999,0.317,2001,0.693,2002,0.257,2007,0.079,2009,0.087,2011,0.081,2013,0.084,2018,0.087,2020,0.084,2021,0.232,2023,0.232,2031,0.286,2035,0.079,2039,0.239,2040,0.382,2045,0.221,2048,1.401,2056,0.299,2058,0.559,2060,0.406,2062,0.097,2063,0.084,2064,0.327,2071,0.382,2074,0.087,2075,0.239,2080,0.232,2083,0.181,2084,0.091,2094,0.091,2095,1.355,2096,0.166,2098,0.406,2100,1.238,2101,3.149,2102,1.991,2103,0.192,2104,0.084,2107,0.081,2108,0.561,2111,0.468,2113,0.357,2115,0.758,2116,0.166,2122,0.469,2123,0.181,2133,0.933,2134,0.087,2137,1.038,2138,0.181,2152,0.077,2153,0.526,2154,0.393,2158,0.247,2160,0.758,2182,0.161,2190,0.484,2194,0.607,2202,0.084,2205,0.084,2230,0.07,2234,0.269,2258,0.542,2270,0.091,2364,0.239,2394,0.166,2397,0.087,2417,0.379,2420,0.156,2428,0.079,2432,0.097,2433,0.422,2435,0.257,2437,0.084,2439,0.166,2441,0.327,2443,0.469,2445,0.097,2452,0.097,2454,0.711,2458,0.257,2459,0.422,2460,3.321,2461,0.075,2462,0.636,2470,0.327,2478,0.711,2482,0.406,2483,0.091,2485,0.636,2488,0.087,2497,0.091,2502,0.735,2503,0.181,2505,0.081,2506,0.166,2507,0.173,2513,0.363,2515,1.038,2519,0.247,2522,0.081,2526,0.583,2530,0.087,2536,0.087,2538,0.443,2540,0.081,2543,0.928,2552,1.292,2557,0.166,2558,0.173,2562,0.192,2565,0.091,2572,0.34,2576,0.087,2579,0.998,2580,0.087,2582,0.161,2586,0.257,2589,0.091,2596,0.181,2600,0.257,2604,0.247,2605,0.247,2608,0.156,2609,0.084,2610,0.084,2612,1.068,2620,0.422,2622,0.087,2625,0.257,2629,0.933,2630,1.401,2632,0.469,2636,0.406,2641,0.084,2645,0.422,2648,0.257,2654,0.166,2659,0.503,2662,0.087,2668,0.542,2676,0.091,2678,0.087,2685,0.084,2687,0.406,2688,0.307,2689,0.152,2700,0.758,2701,0.166,2706,0.192,2709,0.257,2711,0.559,2716,0.081,2718,0.192,2720,0.247,2725,0.173,2728,0.173,2733,0.173,2736,0.091,2742,0.084,2758,0.286,2762,0.091,2764,0.084,2768,0.091,2771,0.327,2777,0.087,2779,0.181,2783,0.561,2789,0.611,2795,0.239,2796,0.257,2797,0.561,2804,0.192,2808,0.091,2816,0.821,2827,0.443,2829,0.286,2834,0.166,2842,0.443,2844,0.173,2845,0.269,2849,0.173,2851,0.161,2852,0.784,2864,0.087,2865,0.161,2872,0.087,2880,0.192,2884,0.087,2894,0.932,2896,1.729,2897,0.097,2899,0.166,2914,0.247,2918,1.931,2921,0.257,2928,0.687,2944,0.087,2946,0.097,2959,0.091,2962,0.597,2966,0.468,2967,0.216,2968,0.247,2969,0.181,2976,0.173,2998,0.091,3009,0.091,3011,0.393,3014,0.087,3029,0.087,3031,0.084,3034,0.166,3044,0.192,3048,0.084,3050,0.378,3053,0.091,3054,0.378,3055,0.091,3069,0.077,3072,0.173,3085,0.257,3086,0.166,3088,0.192,3091,0.097,3109,0.648,3112,2.202,3113,0.087,3114,0.192,3124,0.406,3125,0.422,3134,0.292,3141,0.091,3142,0.097,3145,0.087,3149,0.084,3151,0.097,3159,0.084,3160,3.677,3169,0.097,3177,0.166,3178,0.422,3201,0.091,3202,0.173,3225,0.711,3233,0.327,3236,0.087,3243,0.173,3259,0.087,3266,0.173,3274,0.091,3281,0.087,3295,0.317,3301,0.084,3308,0.269,3309,0.192,3310,1.996,3318,0.192,3322,0.286,3325,0.084,3326,1.772,3332,0.097,3333,0.257,3336,0.173,3339,0.087,3340,0.269,3342,0.422,3344,0.166,3346,0.611,3350,0.087,3353,0.89,3354,1.384,3356,0.091,3360,0.173,3361,0.091,3369,0.173,3382,0.181,3387,0.527,3389,1.313,3391,0.269,3412,1.715,3416,0.286,3421,1.234,3426,0.097,3427,0.484,3434,0.269,3443,0.091,3454,0.711,3456,0.087,3463,0.087,3466,0.173,3475,0.257,3505,0.087,3508,0.739,3511,0.286,3521,0.192,3529,0.087,3536,0.469,3574,0.087,3597,0.097,3621,0.091,3626,0.269,3628,0.097,3638,0.084,3640,0.667,3654,0.99,3661,0.091,3663,0.693,3702,0.087,3720,0.097,3724,0.693,3727,0.087,3729,0.661,3748,0.181,3763,0.087,3783,0.247,3785,0.257,3805,0.269,3809,0.357,3821,0.711,3852,0.192,3853,0.097,3854,0.269,3855,0.097,3858,0.087,3861,2.919,3862,0.815,3888,0.286,3890,0.192,3893,0.097,3896,0.286,3936,0.661,4057,0.34,4058,0.091,4060,0.091,4063,0.091,4082,0.091,4085,0.181,4088,0.091,4095,0.173,4098,0.192,4102,0.181,4104,0.091,4116,0.087,4134,0.257,4195,0.181,4227,0.166,4307,1.526,4316,1.163,4318,0.443,4392,0.091,4409,0.097,4463,0.192,4482,0.091,4557,0.378,4558,0.173,4578,1.11,4609,0.181,4674,0.087,4686,0.257,4709,0.097,4735,0.091,4738,0.181,4750,0.192,4789,0.181,4815,0.181,4842,0.087,4896,0.181,4900,0.091,4920,0.097,4928,1.033,4929,0.091,4969,0.091,4973,0.091,4985,0.091,4990,0.192,4991,0.091,5008,0.181,5010,0.091,5016,0.091,5025,0.097,5027,0.097,5038,0.357,5044,0.097,5048,0.192,5059,0.091,5060,0.097,5065,0.693,5080,0.091,5104,0.173,5114,0.378,5150,0.091,5164,0.097,5172,0.091,5188,0.192,5211,0.097,5237,0.097,5245,0.091,5246,0.357,5248,2.173,5253,0.097,5263,1.313,5266,0.181,5276,0.097,5279,2.712,5281,0.097,5283,0.097,5307,0.097,5309,0.286,5311,0.097,5315,0.097,5319,0.286,5322,0.286,5326,0.181,5330,0.097,5336,0.097,5337,0.091,5349,0.192,5453,1.455,5454,0.735,5536,0.097,5541,2.591,5560,1.391,5563,0.648,5564,0.933,5566,1.384,5573,0.097,5685,0.091,5709,0.105,5710,0.105,5711,0.105,5712,0.097,5713,0.105,5714,0.105,5715,0.105,5716,0.105,5717,0.105,5718,0.105,5719,0.209,5720,0.105,5721,0.209,5722,0.105,5723,0.105,5724,0.105,5725,0.181,5726,0.209,5727,0.105,5728,0.311,5729,0.105,5730,0.105,5731,0.105,5732,0.105,5733,0.469,5734,0.311,5735,0.105,5736,0.209,5737,0.105,5738,0.105,5739,0.105,5740,0.469,5741,0.097,5742,0.469,5743,0.105,5744,0.821,5745,0.097,5746,0.105,5747,0.105,5748,0.105,5749,0.105,5750,0.105,5751,0.799,5752,0.704,5753,1.254,5754,0.105,5755,0.105,5756,0.105,5757,0.105,5758,0.105,5759,0.105,5760,0.105,5761,1.076,5762,1.076,5763,0.378,5764,0.411,5765,1.544,5766,0.105,5767,0.209,5768,0.105,5769,0.209,5770,0.105,5771,0.192,5772,0.209,5773,0.105,5774,0.105,5775,0.51,5776,0.311,5777,0.105,5778,0.105,5779,0.105,5780,0.209,5781,0.105,5782,0.105,5783,0.209,5784,0.105,5785,0.097,5786,0.105,5787,0.105,5788,0.105,5789,0.105,5790,0.105,5791,0.105,5792,0.105,5793,0.105,5794,1.341,5795,1.254,5796,0.51,5797,0.105,5798,0.097,5799,0.105,5800,0.411,5801,0.105,5802,0.209,5803,0.608,5804,0.704,5805,0.311,5806,0.311,5807,0.097,5808,0.105,5809,0.105,5810,0.105,5811,0.105,5812,0.209,5813,0.105,5814,0.105,5815,0.985,5816,0.893,5817,0.469,5818,0.209,5819,0.105,5820,0.105,5821,0.105,5822,0.192,5823,0.105,5824,0.105,5825,0.311,5826,0.311,5827,0.311,5828,0.105,5829,0.105,5830,0.105,5831,0.105,5832,0.105,5833,0.105,5834,0.209,5835,0.097,5836,1.341,5837,0.51,5838,0.799,5839,0.105,5840,0.105,5841,0.105,5842,0.105,5843,0.105,5844,0.105,5845,0.097,5846,0.105,5847,0.105,5848,2.049,5849,0.097,5850,0.105,5851,0.559,5852,0.378,5853,0.311,5854,0.105,5855,0.192,5856,0.105,5857,0.209,5858,0.209,5859,0.209,5860,0.209,5861,0.105,5862,0.51,5863,0.105,5864,0.411,5865,0.411,5866,0.209,5867,0.097,5868,0.105,5869,0.311,5870,0.311,5871,0.105,5872,0.105,5873,0.105,5874,0.097,5875,0.097,5876,0.105,5877,0.105,5878,0.105,5879,0.192,5880,0.105,5881,0.105,5882,0.209,5883,0.209,5884,0.105,5885,0.105,5886,0.311,5887,0.411,5888,0.105,5889,0.105,5890,0.105,5891,0.209,5892,0.105,5893,0.105,5894,0.105,5895,0.105,5896,0.105,5897,0.105,5898,0.105,5899,0.105,5900,0.105,5901,0.105,5902,0.209,5903,0.105,5904,0.209,5905,0.209,5906,0.105,5907,0.105,5908,0.105,5909,0.105,5910,0.105,5911,0.105,5912,0.311,5913,0.097,5914,0.648,5915,0.105,5916,0.105,5917,0.105,5918,0.209,5919,0.105,5920,0.105,5921,0.105,5922,0.105,5923,0.105,5924,0.105,5925,0.105,5926,0.105,5927,0.105,5928,0.209,5929,0.105,5930,0.105,5931,0.097,5932,0.105,5933,0.105,5934,0.105,5935,0.105,5936,0.209,5937,0.51,5938,0.097,5939,0.51,5940,0.51,5941,0.105,5942,0.097,5943,0.105,5944,0.105,5945,0.105,5946,0.105,5947,0.105,5948,0.105,5949,0.105,5950,0.105,5951,0.51,5952,0.105,5953,0.105,5954,0.985,5955,0.311,5956,0.105,5957,0.105,5958,0.105,5959,0.411,5960,0.105,5961,0.105,5962,0.105,5963,0.105,5964,0.105,5965,0.105,5966,0.105,5967,0.105,5968,0.105,5969,0.105,5970,0.209,5971,0.105,5972,0.105,5973,0.411,5974,0.311,5975,0.105,5976,0.105,5977,0.105,5978,0.105,5979,0.105,5980,0.608,5981,1.254,5982,0.704,5983,0.105,5984,0.105,5985,0.469,5986,0.105,5987,0.311,5988,0.105,5989,0.105,5990,0.105,5991,0.209,5992,0.209,5993,0.105,5994,0.105,5995,0.411,5996,0.105,5997,0.105,5998,0.105,5999,0.209,6000,0.209,6001,0.105,6002,0.105,6003,0.105,6004,0.105,6005,0.105,6006,0.105,6007,0.192,6008,0.209,6009,0.105,6010,0.105,6011,0.105,6012,0.105,6013,0.105,6014,0.105,6015,0.105,6016,0.105,6017,0.105,6018,0.209,6019,0.209,6020,0.209,6021,0.105,6022,0.51,6023,0.209,6024,0.105,6025,0.105,6026,0.105,6027,0.105,6028,0.105,6029,0.209,6030,0.105,6031,0.105,6032,0.105,6033,0.105,6034,0.105,6035,0.105,6036,0.105,6037,0.105,6038,0.105,6039,0.311,6040,0.209,6041,0.209,6042,0.105,6043,0.311,6044,0.105,6045,0.105,6046,0.105,6047,0.209,6048,0.105,6049,0.209,6050,0.411,6051,0.311,6052,0.209,6053,0.105,6054,0.105,6055,0.105,6056,0.105,6057,0.105,6058,0.105,6059,0.105,6060,0.209,6061,0.311,6062,0.105,6063,0.105,6064,0.105,6065,0.105,6066,0.105,6067,0.105,6068,0.105,6069,0.105,6070,0.209,6071,0.097,6072,0.105,6073,0.105,6074,0.105,6075,0.105,6076,0.105,6077,0.209,6078,0.105,6079,0.105,6080,0.097,6081,0.105,6082,0.105,6083,0.105,6084,0.105,6085,0.105,6086,0.105,6087,0.209,6088,0.105,6089,0.105,6090,0.51,6091,0.105,6092,0.105,6093,0.799,6094,0.097,6095,0.311,6096,0.105,6097,0.105,6098,0.209,6099,0.209,6100,0.469,6101,0.311,6102,0.311,6103,0.209,6104,0.105,6105,0.799,6106,0.51,6107,0.311,6108,0.209,6109,0.411,6110,0.105,6111,0.311,6112,0.209,6113,0.105,6114,0.311,6115,0.105,6116,0.105,6117,0.105,6118,0.105,6119,0.209,6120,0.105,6121,0.209,6122,0.105,6123,0.209,6124,0.105,6125,0.209,6126,0.105,6127,0.209,6128,0.105,6129,0.209,6130,0.105,6131,0.105,6132,0.105,6133,0.105,6134,0.105,6135,0.105,6136,0.105,6137,0.209,6138,0.209,6139,0.411,6140,0.411,6141,0.411,6142,0.105,6143,0.411,6144,0.209,6145,0.105,6146,0.311,6147,0.192,6148,0.209,6149,0.105,6150,0.105,6151,0.105,6152,0.105,6153,0.105,6154,0.105,6155,0.105,6156,0.105,6157,0.105,6158,0.411,6159,0.209,6160,0.209,6161,0.209,6162,0.105,6163,0.105,6164,0.105,6165,0.105,6166,0.105,6167,0.311,6168,0.105,6169,0.799,6170,0.209,6171,0.105,6172,0.105,6173,0.105,6174,0.105,6175,0.105,6176,0.105,6177,0.105,6178,0.105,6179,0.105,6180,0.105,6181,0.105,6182,0.105,6183,0.105,6184,0.105,6185,0.105,6186,0.209,6187,0.105,6188,0.209,6189,0.105,6190,0.209,6191,0.105,6192,0.105,6193,0.105,6194,0.105,6195,0.105,6196,0.209,6197,1.998,6198,0.105,6199,0.209,6200,0.105,6201,0.105,6202,0.209,6203,0.105,6204,0.311,6205,0.105,6206,0.209,6207,0.105,6208,0.209,6209,0.105,6210,0.311,6211,0.105,6212,0.105,6213,0.105,6214,0.105,6215,0.105,6216,0.105,6217,0.105,6218,0.105,6219,0.209,6220,0.209,6221,0.209,6222,0.209,6223,0.209,6224,0.105,6225,0.105,6226,0.105,6227,0.105,6228,0.105,6229,0.105,6230,0.105,6231,0.105,6232,0.105,6233,0.105,6234,0.105,6235,0.105,6236,0.105,6237,0.105,6238,0.311,6239,0.311,6240,0.311,6241,1.596,6242,0.311,6243,0.209,6244,0.209,6245,0.209,6246,0.311,6247,0.209,6248,0.209,6249,0.209,6250,0.209,6251,0.209,6252,0.411,6253,0.209,6254,0.209,6255,0.209,6256,0.209,6257,0.105,6258,0.105,6259,0.105,6260,0.105,6261,0.311,6262,0.105,6263,0.209,6264,0.105,6265,0.105,6266,1.841,6267,0.105,6268,0.105,6269,0.105,6270,0.105,6271,0.105,6272,0.105,6273,0.105,6274,0.105,6275,0.105,6276,0.311,6277,0.105,6278,0.105,6279,0.105,6280,0.105,6281,0.105,6282,0.105,6283,0.105,6284,0.105,6285,0.105,6286,0.105,6287,0.105,6288,0.105,6289,0.209,6290,0.105,6291,0.105,6292,0.311,6293,0.105,6294,0.105,6295,0.105,6296,0.209,6297,0.209,6298,0.105,6299,0.105,6300,0.105,6301,0.105,6302,0.105,6303,0.105,6304,0.311,6305,0.209,6306,0.209,6307,0.209,6308,0.105,6309,0.105,6310,0.105,6311,0.378,6312,0.209,6313,0.105,6314,0.105,6315,0.105,6316,0.209,6317,0.105,6318,0.105,6319,0.311,6320,0.105,6321,0.105,6322,0.105,6323,0.105,6324,0.105,6325,0.105,6326,0.105,6327,0.105,6328,0.105,6329,0.105,6330,0.105,6331,0.105,6332,0.105,6333,0.105,6334,0.105,6335,0.105,6336,0.105,6337,0.105,6338,0.51,6339,0.209,6340,0.209,6341,0.105,6342,0.209,6343,0.311,6344,0.105,6345,0.105,6346,0.105,6347,0.105,6348,0.209,6349,0.105,6350,0.209,6351,0.105,6352,0.105,6353,0.105,6354,0.105,6355,0.105,6356,0.105,6357,0.105,6358,0.105,6359,0.105,6360,0.192,6361,0.378,6362,0.378,6363,0.209,6364,0.209,6365,0.209,6366,0.411,6367,0.209,6368,0.51,6369,0.105,6370,0.105,6371,0.105,6372,0.105,6373,0.105,6374,0.105,6375,0.105,6376,0.209,6377,0.105,6378,0.311,6379,0.209,6380,0.105,6381,0.105,6382,0.209,6383,0.311,6384,0.209,6385,0.105,6386,0.411,6387,0.608,6388,0.105,6389,0.105,6390,0.411,6391,0.411,6392,0.311,6393,0.411,6394,0.311,6395,0.51,6396,0.411,6397,0.209,6398,0.209,6399,0.209,6400,0.209,6401,0.209,6402,0.209,6403,0.411,6404,0.209,6405,0.105,6406,0.105,6407,0.105,6408,0.105,6409,0.105,6410,0.105,6411,0.105,6412,0.105,6413,0.105,6414,0.311,6415,0.209,6416,0.209,6417,0.209,6418,0.209,6419,0.209,6420,0.105,6421,0.311,6422,0.105,6423,0.311,6424,0.105,6425,0.209,6426,0.105,6427,0.209,6428,0.105,6429,0.105,6430,0.105,6431,0.105,6432,0.105,6433,1.679,6434,0.51,6435,0.704,6436,0.209,6437,0.411,6438,0.209,6439,0.209,6440,0.209,6441,0.105,6442,0.105,6443,0.105,6444,0.105,6445,0.209,6446,0.105,6447,0.105,6448,0.105]],["component/27",[18,0.186,172,0.252]],["title/28-1",[0,24.461,1,34.039,18,20.684,2694,38.766]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[2,35.145,579,37.909,2694,38.766,2745,50.197]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[206,25.131,1037,33.048,1166,34.504,2292,38.669,2694,34.504]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[115,43.446,1039,39.718,2428,40.79,2694,38.766]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[206,28.235,293,36.416,1288,43.446,2694,38.766]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28-6",[1,34.039,3,25.739,18,20.684,912,35.757]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["title/28-7",[8,23.84,18,18.41,132,24.246,372,30.773,912,31.826]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["title/28-8",[11,29.064,206,28.235,214,31.383,1328,36.416]],["name/28-8",[]],["text/28-8",[]],["component/28-8",[]],["title/28-9",[212,54.171,1227,57.698]],["name/28-9",[]],["text/28-9",[]],["component/28-9",[]],["title/28-10",[2,46.675,4930,66.664]],["name/28-10",[]],["text/28-10",[]],["component/28-10",[]],["title/28-11",[4931,66.664,6449,72.473]],["name/28-11",[]],["text/28-11",[]],["component/28-11",[]],["title/28-12",[94,34.207,296,29.825,4932,57.27]],["name/28-12",[]],["text/28-12",[]],["component/28-12",[]],["title/28-13",[206,32.213,221,37.204,558,44.229]],["name/28-13",[]],["text/28-13",[]],["component/28-13",[]],["title/28-14",[73,39.718,206,28.235,223,33.535,296,26.142]],["name/28-14",[]],["text/28-14",[]],["component/28-14",[]],["title/28-15",[90,45.315,1123,40.098,2461,44.229]],["name/28-15",[]],["text/28-15",[]],["component/28-15",[]],["title/28-16",[236,41.548,1870,53.983,2493,51.528]],["name/28-16",[]],["text/28-16",[]],["component/28-16",[]],["title/28-17",[90,45.315,2493,51.528,5572,57.27]],["name/28-17",[]],["text/28-17",[]],["component/28-17",[]],["title/28-18",[296,29.825,2292,49.568,6450,62.26]],["name/28-18",[]],["text/28-18",[]],["component/28-18",[]],["title/28-19",[132,27.241,290,39.718,1055,38.766,6451,54.57]],["name/28-19",[]],["text/28-19",[]],["component/28-19",[]],["title/28-20",[45,34.504,106,28.643,254,30.297,1871,42.114,2461,34.504]],["name/28-20",[]],["text/28-20",[]],["component/28-20",[]],["title/28-21",[374,27.66,479,23.793,1312,28.285,1873,34.523,2463,31.7,2494,29.762,6452,39.817]],["name/28-21",[]],["text/28-21",[]],["component/28-21",[]],["title/28-22",[206,28.235,287,40.79,1125,34.039,6453,54.57]],["name/28-22",[]],["text/28-22",[]],["component/28-22",[]],["title/28-23",[1878,62.838,2227,33.671]],["name/28-23",[]],["text/28-23",[]],["component/28-23",[]],["title/28-24",[476,47.488,1879,59.98]],["name/28-24",[]],["text/28-24",[]],["component/28-24",[]],["title/28-25",[82,35.279,1880,62.838]],["name/28-25",[]],["text/28-25",[]],["component/28-25",[]],["title/28-26",[106,36.715,1088,40.796,1881,57.27]],["name/28-26",[]],["text/28-26",[]],["component/28-26",[]],["title/28-27",[516,43.251,1088,40.796,6454,62.26]],["name/28-27",[]],["text/28-27",[]],["component/28-27",[]],["title/28-28",[1088,40.796,5123,53.983,6455,62.26]],["name/28-28",[]],["text/28-28",[]],["component/28-28",[]],["title/28-29",[1088,40.796,1757,46.538,6456,62.26]],["name/28-29",[]],["text/28-29",[]],["component/28-29",[]],["title/28-30",[106,36.715,6457,62.26,6458,57.27]],["name/28-30",[]],["text/28-30",[]],["component/28-30",[]],["title/28-31",[395,27.763,1882,66.664]],["name/28-31",[]],["text/28-31",[]],["component/28-31",[]],["title/28-32",[276,40.098,336,39.446,1884,47.936]],["name/28-32",[]],["text/28-32",[]],["component/28-32",[]],["title/28-33",[296,29.825,2688,46.538,5344,57.27]],["name/28-33",[]],["text/28-33",[]],["component/28-33",[]],["title/28-34",[1230,44.229,2688,46.538,6459,62.26]],["name/28-34",[]],["text/28-34",[]],["component/28-34",[]],["title/28-35",[2688,46.538,2689,45.315,6460,62.26]],["name/28-35",[]],["text/28-35",[]],["component/28-35",[]],["title/28-36",[2847,62.838,6461,72.473]],["name/28-36",[]],["text/28-36",[]],["component/28-36",[]],["title/28-37",[113,34.574,296,26.142,4928,42.015,5345,50.197]],["name/28-37",[]],["text/28-37",[]],["component/28-37",[]],["title/28-38",[113,34.574,565,33.059,2102,37.909,6462,54.57]],["name/28-38",[]],["text/28-38",[]],["component/28-38",[]],["title/28-39",[113,39.446,3134,44.229,6463,62.26]],["name/28-39",[]],["text/28-39",[]],["component/28-39",[]],["title/28-40",[38,40.796,91,28.714,6464,62.26]],["name/28-40",[]],["text/28-40",[]],["component/28-40",[]],["title/28-41",[38,35.757,91,25.168,1022,37.909,6465,54.57]],["name/28-41",[]],["text/28-41",[]],["component/28-41",[]],["title/28-42",[445,38.669,754,36.306,814,35.352,6466,48.571,6467,44.678]],["name/28-42",[]],["text/28-42",[]],["component/28-42",[]],["title/28-43",[27,34.039,6467,50.197,6468,54.57,6469,50.197]],["name/28-43",[]],["text/28-43",[]],["component/28-43",[]],["title/28-44",[554,31.85,1067,31.087,2797,34.839,3326,33.692,4928,33.692,5346,40.253]],["name/28-44",[]],["text/28-44",[]],["component/28-44",[]],["title/28-45",[132,31.079,5104,51.528,5347,57.27]],["name/28-45",[]],["text/28-45",[]],["component/28-45",[]],["title/28-46",[2608,46.538,2796,51.528,6470,62.26]],["name/28-46",[]],["text/28-46",[]],["component/28-46",[]],["title/28-47",[293,41.548,296,29.825,6471,62.26]],["name/28-47",[]],["text/28-47",[]],["component/28-47",[]],["title/28-48",[311,42.362,1552,41.548,6472,62.26]],["name/28-48",[]],["text/28-48",[]],["component/28-48",[]],["title/28-49",[73,35.352,74,33.741,75,36.306,1552,32.413,6473,48.571]],["name/28-49",[]],["text/28-49",[]],["component/28-49",[]],["title/28-50",[1800,43.251,4773,53.983,6474,62.26]],["name/28-50",[]],["text/28-50",[]],["component/28-50",[]],["title/28-51",[1800,43.251,6475,62.26,6476,57.27]],["name/28-51",[]],["text/28-51",[]],["component/28-51",[]],["title/28-52",[96,25.167,105,33.692,335,28.183,2494,32.71,2608,32.71,6477,43.761]],["name/28-52",[]],["text/28-52",[]],["component/28-52",[]],["title/28-53",[264,35.145,2218,47.316,2689,39.718,6478,54.57]],["name/28-53",[]],["text/28-53",[]],["component/28-53",[]],["title/28-54",[82,30.308,2284,51.528,6479,62.26]],["name/28-54",[]],["text/28-54",[]],["component/28-54",[]],["title/28-55",[43,37.909,62,31.383,4227,43.446,5348,50.197]],["name/28-55",[]],["text/28-55",[]],["component/28-55",[]],["title/28",[226,42.015,249,33.059,912,35.757,1341,39.718]],["name/28",[336,0.311]],["text/28",[0,1.381,1,2.764,3,0.609,5,5.368,6,0.318,7,0.403,8,0.152,9,0.725,10,1.038,11,0.165,13,0.76,14,0.109,16,0.12,18,2.033,19,0.106,20,1.195,21,0.639,22,0.117,23,1.357,24,0.129,27,1.192,28,1.058,29,0.21,30,0.379,31,0.18,32,0.124,34,0.206,36,4.138,38,1.174,39,0.196,40,3.484,42,0.994,43,0.712,44,0.334,45,1.098,46,3.943,47,0.782,48,1.432,50,0.219,51,0.846,53,0.334,54,0.774,57,0.117,60,0.114,61,0.774,62,2.632,65,0.343,66,0.365,68,1.413,69,0.285,70,0.747,72,1.215,73,2.1,74,1.327,75,1.156,78,0.334,79,0.124,80,0.697,82,1.203,86,0.846,87,1.353,90,2.513,91,0.935,92,0.403,94,1.417,95,0.966,96,0.667,99,0.326,100,0.5,101,0.712,102,0.42,103,0.617,104,2.089,105,2.589,106,4.5,109,1.735,110,0.12,111,0.878,112,0.318,113,1.498,114,0.466,115,0.246,117,0.872,119,0.765,126,0.219,127,0.102,128,0.225,129,0.964,132,3.543,134,0.124,135,0.117,138,1.649,139,0.466,141,2.23,147,0.278,154,0.631,172,0.594,173,0.196,175,0.161,177,0.372,178,0.238,188,1.446,191,0.117,192,0.111,194,0.499,195,0.389,197,0.402,198,1.357,200,2.05,205,2.089,206,4.402,208,2.117,210,0.466,213,1.195,214,1.099,216,0.12,217,0.63,221,0.771,222,0.215,223,0.096,224,0.914,227,0.097,228,0.872,229,0.576,230,2.907,231,1.052,232,0.774,233,1.284,236,1.114,237,2.901,238,0.12,240,0.225,241,1.828,243,0.334,245,1.23,247,0.238,248,0.965,249,1.625,252,0.124,253,0.5,254,2.985,256,0.231,257,0.728,258,0.106,259,0.664,261,1.329,264,2.447,266,0.789,267,0.114,268,1.073,269,0.357,270,1.07,271,0.238,275,0.12,276,1.523,278,0.544,279,0.114,280,0.572,281,0.67,282,0.231,283,0.452,284,4.621,286,0.246,287,2.777,290,1.877,292,0.219,293,4.632,294,0.712,295,0.114,296,4.122,298,0.396,299,0.645,300,1.244,302,0.481,303,0.766,304,0.474,305,0.712,308,1.738,309,0.326,310,0.365,311,4.523,313,0.595,314,1.074,315,1.156,316,0.389,317,1.737,319,3.199,322,1.297,323,2.304,324,0.396,325,2.12,326,1.477,327,0.353,328,0.509,329,0.592,332,0.238,335,0.295,336,0.196,339,0.343,343,0.135,344,0.343,347,0.202,350,0.135,353,1.273,354,1.894,360,0.215,364,0.144,366,0.231,368,1.074,372,1.952,374,0.897,378,0.846,382,0.238,388,0.379,395,1.911,409,0.246,411,0.712,412,0.334,423,0.206,433,0.559,434,0.403,445,0.923,448,0.12,451,0.481,453,0.215,454,3.685,455,2.768,456,0.509,458,0.98,460,0.268,470,0.117,476,2.263,478,1.891,479,3.413,480,0.353,481,0.312,482,0.117,483,0.728,484,0.124,485,0.12,486,1.061,487,0.114,488,0.256,490,0.246,492,0.886,493,0.396,494,0.411,495,0.377,496,0.631,497,0.343,498,2.12,499,0.343,501,1.65,505,2.629,506,0.231,507,0.42,509,0.46,512,0.312,513,0.396,514,0.117,515,0.531,516,1.16,517,1.69,524,1.215,527,2.364,530,3.07,531,0.144,533,1.005,535,0.206,537,0.256,538,0.94,544,0.238,545,2.305,547,0.595,548,2.019,549,0.466,553,0.793,554,4.5,558,0.728,562,0.238,564,0.238,565,3.213,567,0.215,568,0.102,569,0.238,570,0.789,572,1.649,574,0.544,577,0.12,578,1.247,581,0.917,584,0.519,585,0.684,587,2.222,591,0.544,599,0.817,606,0.12,607,0.43,610,0.379,611,0.697,612,0.124,615,0.144,617,2.031,618,1.339,620,0.129,621,0.746,630,1.62,659,0.452,696,1.44,698,0.246,705,0.411,706,0.353,707,0.893,711,0.697,714,0.42,719,0.12,721,0.238,722,1.523,725,0.215,736,0.109,739,0.707,742,0.867,747,0.238,748,0.766,749,0.117,750,0.805,751,0.63,752,0.697,753,0.12,754,1.428,761,0.617,767,0.531,780,1.549,783,1.452,784,0.225,785,0.129,787,0.106,789,0.44,790,0.284,791,0.129,814,1.721,822,0.124,873,3.091,875,3.394,883,0.124,889,0.099,897,0.766,900,0.12,901,0.124,902,0.466,904,0.365,905,0.225,909,0.789,911,0.617,912,0.3,913,0.111,915,0.966,918,0.144,919,0.124,921,0.238,924,0.365,925,0.124,928,0.379,931,0.135,932,0.312,935,2.203,937,0.735,938,0.117,939,0.403,940,0.238,941,0.12,942,1.82,943,0.897,945,0.544,946,0.268,947,0.94,949,0.612,951,1.891,952,0.422,955,0.12,956,0.129,959,0.334,964,0.129,967,0.664,968,0.225,969,0.215,970,0.519,971,0.124,974,2.811,976,0.117,979,0.619,981,0.728,982,0.129,983,0.595,984,0.664,1000,0.111,1001,0.411,1002,0.256,1003,0.129,1004,0.554,1007,0.199,1009,0.109,1011,0.12,1013,0.129,1021,0.556,1022,1.408,1026,0.114,1028,0.215,1032,1.566,1040,0.554,1043,0.684,1044,0.21,1048,0.246,1050,0.707,1051,0.966,1055,0.326,1056,0.411,1057,0.576,1058,0.897,1065,0.124,1066,0.986,1067,1.009,1069,0.353,1072,0.21,1080,1.963,1084,0.917,1088,2.854,1092,0.646,1093,1.592,1094,2.303,1095,0.631,1097,2.073,1098,0.306,1101,0.582,1102,2.027,1104,0.219,1105,1.273,1111,1.756,1112,0.397,1113,0.256,1123,0.101,1125,0.286,1144,0.816,1146,0.114,1155,1.877,1156,0.531,1157,1.978,1159,0.124,1160,0.422,1161,0.917,1163,0.12,1164,0.43,1166,0.326,1169,0.129,1170,0.231,1172,0.766,1178,0.114,1179,1.79,1184,0.111,1187,0.343,1209,1.891,1210,0.576,1211,0.12,1213,0.411,1216,0.928,1219,0.353,1221,0.789,1223,0.238,1227,0.124,1230,0.326,1275,0.12,1276,0.135,1277,0.728,1281,0.318,1287,0.396,1290,0.379,1294,0.238,1296,0.646,1299,1.186,1300,0.12,1301,0.114,1302,0.117,1310,0.124,1311,1.114,1312,1.273,1313,0.789,1314,0.334,1315,0.595,1316,0.268,1321,0.231,1322,0.124,1325,0.124,1328,0.684,1331,0.256,1332,0.135,1333,0.353,1336,0.225,1343,0.519,1344,0.124,1347,0.559,1350,0.268,1352,0.268,1353,0.129,1355,0.9,1357,0.684,1359,0.124,1360,0.684,1361,0.231,1370,0.129,1373,0.129,1374,0.12,1377,0.481,1381,0.238,1382,0.707,1383,0.109,1386,0.124,1391,0.246,1393,0.246,1406,0.144,1411,0.12,1412,0.129,1414,0.824,1415,0.284,1416,0.44,1434,0.816,1475,0.789,1479,0.135,1484,0.231,1485,0.225,1487,0.129,1494,0.238,1495,0.135,1505,0.452,1518,0.12,1519,0.246,1522,0.238,1523,0.559,1531,0.343,1535,1.649,1537,0.135,1546,1.304,1552,0.684,1553,0.867,1563,0.766,1586,0.619,1598,0.353,1599,0.215,1614,0.219,1619,1.515,1660,0.246,1697,0.619,1698,0.256,1713,0.12,1714,0.135,1757,1.156,1767,0.735,1771,1.957,1772,0.817,1779,0.284,1784,1.339,1790,0.844,1792,0.519,1794,0.353,1799,0.256,1800,0.712,1805,0.684,1806,0.481,1807,0.111,1809,0.114,1810,0.129,1811,0.268,1813,0.379,1818,1.825,1820,0.206,1831,0.12,1836,0.268,1850,0.117,1851,0.353,1877,1.305,1888,0.117,1889,0.559,1892,0.893,1896,0.135,1897,0.576,1898,0.284,1899,0.12,1900,0.124,1901,0.238,1905,0.353,1906,0.466,1907,0.12,1916,0.144,1917,0.334,1924,0.965,1926,0.481,1928,0.246,1929,0.893,1930,0.268,1931,0.231,1933,0.559,1935,0.135,1939,2.445,1941,0.12,1944,0.353,1948,0.664,1956,0.129,1957,0.12,1958,0.12,1959,1.515,1960,1.339,1962,0.256,1974,0.231,1980,0.129,1981,0.664,1983,0.124,1987,0.256,1988,0.576,1989,2.886,1990,0.256,1991,0.246,1993,0.452,1995,0.256,1999,0.12,2002,0.129,2007,0.117,2011,0.12,2013,0.246,2018,0.129,2020,0.124,2021,0.559,2023,0.343,2030,0.12,2031,0.318,2035,0.231,2039,0.466,2040,0.452,2043,0.246,2045,0.219,2046,0.129,2051,0.422,2056,0.334,2060,0.365,2071,0.231,2075,0.238,2079,0.219,2080,0.231,2086,0.284,2089,0.379,2092,0.135,2095,0.684,2096,0.707,2098,0.246,2101,1.968,2102,0.986,2104,0.124,2107,0.238,2108,0.124,2111,0.466,2113,0.397,2115,0.893,2116,0.246,2128,0.144,2129,0.5,2133,0.268,2136,0.5,2138,0.135,2152,0.114,2153,0.117,2154,0.12,2158,0.707,2160,1.19,2161,0.135,2168,0.144,2182,0.238,2190,0.365,2201,0.135,2202,0.365,2205,0.124,2218,0.397,2219,0.268,2220,0.268,2223,0.135,2224,0.144,2232,0.397,2241,0.268,2277,0.104,2284,3.145,2292,1.028,2321,1.005,2364,0.238,2369,0.631,2390,0.135,2394,0.481,2396,0.707,2397,0.256,2417,0.166,2420,0.664,2428,0.343,2429,0.256,2433,0.379,2435,0.129,2437,0.365,2439,0.481,2441,0.707,2448,0.246,2454,0.124,2457,0.379,2458,0.5,2459,0.256,2460,0.831,2461,3.496,2462,0.481,2463,0.707,2465,0.196,2467,0.135,2468,0.397,2470,0.481,2471,0.129,2473,0.256,2474,0.524,2478,0.923,2481,0.144,2482,0.246,2483,0.268,2485,1.13,2488,0.129,2489,0.422,2490,0.144,2491,0.648,2493,3.349,2494,2.303,2495,0.959,2497,0.648,2498,0.923,2503,0.268,2505,0.12,2506,0.595,2508,0.144,2510,0.735,2513,0.631,2515,0.959,2517,0.144,2519,0.481,2520,0.466,2522,0.12,2526,0.129,2529,0.256,2530,0.256,2531,0.129,2536,0.256,2542,0.135,2543,0.481,2546,0.959,2548,0.124,2549,0.144,2552,0.576,2557,0.124,2564,0.256,2567,0.284,2569,0.129,2572,0.619,2574,0.576,2578,0.524,2579,0.707,2580,0.129,2582,0.684,2583,0.129,2592,0.135,2593,0.268,2596,0.135,2599,0.848,2600,0.129,2604,0.124,2605,0.246,2608,0.452,2609,0.923,2610,1.13,2612,1.13,2617,0.789,2620,0.256,2622,0.129,2623,0.129,2624,0.124,2629,0.268,2630,0.246,2633,0.268,2635,0.144,2636,0.816,2637,0.268,2641,0.816,2644,0.256,2645,0.256,2653,0.284,2654,0.595,2655,0.135,2659,0.379,2660,0.688,2661,0.524,2662,0.848,2665,0.256,2668,0.576,2676,0.397,2679,0.379,2680,0.379,2682,0.129,2685,0.124,2686,0.268,2687,1.028,2688,2.513,2689,2.447,2690,1.119,2691,0.135,2692,0.144,2694,1.601,2697,0.422,2700,1.903,2701,0.707,2705,0.379,2707,1.422,2709,0.256,2713,0.106,2716,0.238,2719,0.481,2725,0.256,2727,0.379,2728,0.129,2730,0.524,2731,0.135,2733,0.5,2736,0.135,2739,0.129,2742,0.124,2761,0.135,2762,0.397,2764,0.124,2776,0.135,2777,0.129,2783,0.481,2787,0.735,2795,0.576,2796,0.256,2797,0.707,2798,0.144,2834,0.365,2835,0.135,2839,0.524,2842,0.268,2844,0.129,2849,0.129,2851,0.893,2852,1.028,2863,0.256,2865,0.12,2868,0.135,2869,0.959,2883,0.135,2884,0.256,2890,0.129,2891,0.688,2894,0.109,2896,0.94,2899,0.481,2903,0.144,2914,0.124,2918,2.144,2921,0.256,2923,0.124,2928,0.684,2938,0.144,2944,0.129,2954,0.144,2959,0.135,2960,0.144,2962,0.117,2966,0.238,2967,1.408,2968,1.13,2969,0.135,2970,1.28,2975,0.144,2976,0.5,2977,0.135,2993,0.144,2998,0.135,3002,0.422,3011,0.12,3014,0.5,3022,0.256,3030,0.129,3034,0.365,3036,0.556,3048,0.365,3049,0.524,3052,0.268,3053,0.268,3068,0.129,3069,0.225,3072,0.129,3082,0.135,3085,0.379,3086,0.124,3094,0.144,3113,0.256,3120,0.256,3122,1.066,3124,0.816,3125,0.129,3134,0.111,3141,0.135,3143,0.5,3145,0.129,3149,0.365,3150,0.77,3159,0.124,3160,0.124,3177,0.124,3178,0.256,3179,0.284,3180,0.135,3183,0.144,3185,0.379,3187,0.556,3190,0.422,3191,0.284,3231,0.144,3233,0.481,3236,0.379,3243,0.129,3248,0.124,3259,0.256,3266,0.619,3276,0.135,3281,0.256,3295,0.466,3301,0.124,3308,0.135,3311,0.524,3326,0.893,3330,0.144,3331,0.144,3333,0.129,3336,0.129,3344,0.246,3350,0.256,3356,0.397,3360,0.256,3361,0.889,3369,0.256,3381,0.135,3391,0.268,3396,0.268,3397,0.135,3427,0.124,3428,0.144,3429,0.284,3436,0.144,3438,0.135,3443,0.268,3454,0.481,3456,0.256,3465,0.268,3472,0.144,3475,0.129,3479,0.268,3482,0.144,3505,0.379,3508,1.382,3514,0.284,3517,0.268,3525,0.556,3527,0.144,3576,0.144,3607,0.144,3621,0.135,3626,0.268,3629,0.135,3631,0.144,3635,0.144,3638,0.246,3640,0.231,3650,0.144,3661,0.135,3668,0.135,3678,0.284,3690,0.144,3691,0.284,3701,0.144,3702,0.379,3706,0.268,3711,0.144,3721,0.135,3724,0.268,3729,0.256,3783,0.595,3806,1.187,3816,0.268,3821,0.595,3858,0.959,3861,0.206,3889,0.144,3901,0.144,3922,0.135,3944,0.12,3971,0.144,4035,0.144,4057,0.129,4078,0.135,4079,0.129,4091,0.144,4092,0.144,4093,0.284,4095,0.379,4110,0.135,4116,0.5,4120,0.144,4124,0.135,4134,0.379,4136,0.135,4137,0.943,4227,0.365,4250,1.306,4295,0.422,4316,0.524,4318,0.524,4321,0.135,4327,0.144,4343,0.135,4403,0.144,4473,0.135,4477,0.144,4490,0.135,4500,0.144,4502,0.135,4506,0.144,4558,0.129,4578,0.256,4607,0.284,4609,1.005,4636,0.144,4654,0.129,4674,0.129,4685,0.144,4686,0.129,4716,0.135,4737,0.135,4749,0.135,4769,0.144,4773,0.268,4787,0.284,4797,0.556,4804,0.284,4815,0.397,4842,0.129,4893,0.144,4898,0.135,4900,0.135,4902,0.144,4924,0.135,4928,3.053,4968,0.943,4969,0.135,4973,0.268,4978,0.144,4985,0.135,4986,0.284,4988,0.284,4991,0.268,4996,0.556,5006,0.144,5008,0.135,5010,0.524,5016,0.135,5021,0.144,5052,0.144,5059,0.135,5065,0.268,5080,0.648,5096,0.144,5104,0.256,5119,0.144,5123,1.341,5130,0.144,5131,0.144,5149,0.144,5150,0.135,5161,0.144,5162,0.422,5169,0.144,5170,0.144,5172,1.005,5183,0.556,5186,0.144,5187,0.144,5222,0.144,5245,0.268,5248,0.124,5264,0.284,5266,0.135,5277,0.556,5287,0.144,5306,0.524,5326,0.135,5337,0.135,5350,0.284,5396,0.144,5541,0.595,5564,0.889,5685,0.135,5712,0.556,5725,0.135,5733,1.648,5740,0.556,5741,0.556,5742,1.066,5744,0.284,5745,0.144,5763,0.284,5765,0.144,5771,1.187,5785,0.144,5798,0.284,5807,0.144,5817,0.144,5822,0.144,5835,0.422,5845,0.144,5848,0.688,5849,0.144,5851,0.422,5852,1.306,5855,0.144,5867,0.144,5874,0.144,5875,1.422,5879,0.422,5913,0.556,5914,0.144,5931,0.284,5938,0.284,5942,0.284,5985,0.943,6007,0.144,6071,0.144,6080,0.144,6094,0.284,6100,0.688,6147,0.817,6311,0.144,6360,0.144,6361,0.144,6362,0.144,6458,0.284,6469,0.943,6476,0.556,6480,0.156,6481,0.156,6482,0.458,6483,0.156,6484,0.309,6485,0.458,6486,0.156,6487,0.156,6488,0.309,6489,0.156,6490,0.156,6491,0.156,6492,0.156,6493,0.156,6494,0.156,6495,0.156,6496,0.156,6497,0.156,6498,0.156,6499,0.156,6500,0.156,6501,0.156,6502,0.309,6503,0.156,6504,0.156,6505,0.309,6506,0.156,6507,0.156,6508,0.156,6509,0.309,6510,0.156,6511,0.156,6512,0.156,6513,0.156,6514,0.156,6515,0.156,6516,0.156,6517,0.309,6518,0.605,6519,0.309,6520,0.156,6521,0.458,6522,0.458,6523,0.156,6524,0.156,6525,0.309,6526,0.156,6527,0.458,6528,0.309,6529,0.458,6530,0.309,6531,0.156,6532,0.156,6533,0.156,6534,0.156,6535,0.156,6536,0.156,6537,0.156,6538,0.156,6539,0.458,6540,0.156,6541,0.156,6542,0.156,6543,0.156,6544,0.309,6545,0.156,6546,0.156,6547,0.156,6548,0.156,6549,0.309,6550,0.156,6551,0.156,6552,0.156,6553,0.156,6554,0.156,6555,0.156,6556,0.156,6557,0.309,6558,0.458,6559,0.458,6560,0.156,6561,0.156,6562,0.156,6563,0.156,6564,0.156,6565,0.156,6566,0.156,6567,0.309,6568,0.156,6569,0.309,6570,0.156,6571,0.309,6572,0.156,6573,0.156,6574,0.156,6575,0.309,6576,0.156,6577,0.156,6578,0.156,6579,0.156,6580,0.156,6581,0.309,6582,0.309,6583,0.156,6584,0.156,6585,0.156,6586,0.605,6587,0.156,6588,0.156,6589,0.156,6590,0.156,6591,0.156,6592,0.156,6593,0.156,6594,0.156,6595,0.156,6596,0.156,6597,0.156,6598,0.156,6599,0.156,6600,0.156,6601,0.156,6602,0.156,6603,0.156,6604,0.156,6605,0.156,6606,0.156,6607,0.156,6608,0.156,6609,0.156,6610,0.156,6611,0.156,6612,0.156,6613,0.156,6614,0.156,6615,0.156,6616,0.156,6617,0.156,6618,0.156,6619,0.156,6620,2.886,6621,0.156,6622,0.748,6623,0.748,6624,0.156,6625,0.156,6626,0.156,6627,0.309,6628,0.156,6629,0.156,6630,0.156,6631,0.156,6632,0.156,6633,0.156,6634,0.156,6635,0.156,6636,0.458,6637,0.156,6638,0.156,6639,0.156,6640,0.309,6641,0.156,6642,0.156,6643,3.63,6644,0.309,6645,1.159,6646,3.542,6647,0.309,6648,0.605,6649,0.458,6650,0.156,6651,0.156,6652,0.156,6653,0.156,6654,0.309,6655,0.309,6656,0.309,6657,0.156,6658,3.453,6659,1.42,6660,1.025,6661,2.027,6662,1.91,6663,3.542,6664,0.458,6665,0.458,6666,0.156,6667,1.159,6668,0.156,6669,0.156,6670,0.156,6671,0.156,6672,0.156,6673,1.42,6674,0.309,6675,2.254,6676,0.309,6677,0.309,6678,0.888,6679,0.309,6680,0.458,6681,1.025,6682,0.156,6683,0.605,6684,0.156,6685,1.42,6686,0.458,6687,0.458,6688,0.458,6689,1.159,6690,1.42,6691,0.309,6692,0.458,6693,0.156,6694,0.309,6695,0.156,6696,0.156,6697,0.156,6698,0.309,6699,0.309,6700,0.309,6701,0.156,6702,0.458,6703,0.309,6704,0.888,6705,0.156,6706,0.156,6707,0.156,6708,0.309,6709,0.156,6710,0.156,6711,0.156,6712,0.156,6713,0.156,6714,0.458,6715,0.156,6716,0.156,6717,0.156,6718,0.156,6719,2.254,6720,0.156,6721,0.156,6722,0.156,6723,0.156,6724,0.156,6725,0.156,6726,0.156,6727,0.156,6728,0.156,6729,0.156,6730,0.156,6731,0.156,6732,0.156,6733,0.156,6734,0.156,6735,0.605,6736,0.309,6737,0.605,6738,0.156,6739,0.309,6740,0.156,6741,0.458,6742,0.309,6743,0.156,6744,0.156,6745,0.156,6746,0.156,6747,0.156,6748,0.156,6749,0.156,6750,0.156,6751,0.156,6752,0.156,6753,0.156,6754,0.156,6755,0.156,6756,0.156,6757,0.156,6758,0.309,6759,0.156,6760,0.156,6761,0.156,6762,0.156,6763,0.309,6764,0.156,6765,0.156,6766,0.156,6767,0.156,6768,0.605,6769,0.156,6770,0.156,6771,0.458,6772,0.156,6773,0.156,6774,0.156,6775,0.156,6776,0.156,6777,0.156,6778,0.156,6779,0.156,6780,0.156,6781,0.156,6782,0.156,6783,0.156,6784,0.156,6785,0.156,6786,0.156,6787,1.791,6788,0.605,6789,0.156,6790,0.156,6791,0.888,6792,0.309,6793,0.309,6794,0.156,6795,0.156,6796,0.156,6797,0.156,6798,0.156,6799,0.458,6800,0.309,6801,0.156,6802,0.156,6803,0.309,6804,0.309,6805,0.309,6806,0.309,6807,0.309,6808,0.605,6809,0.309,6810,0.458,6811,0.309,6812,0.156,6813,0.156,6814,0.309,6815,0.309,6816,1.42,6817,0.156,6818,0.156,6819,0.156,6820,0.156,6821,0.156,6822,0.156,6823,0.156,6824,0.458,6825,0.156,6826,0.156,6827,0.156,6828,0.156,6829,0.156,6830,0.156,6831,0.156,6832,0.156,6833,0.156,6834,0.156,6835,0.156,6836,0.156,6837,0.156,6838,0.156,6839,0.156,6840,0.156,6841,0.156,6842,0.156,6843,0.156,6844,0.156,6845,0.156,6846,0.156,6847,0.156,6848,0.156,6849,0.156,6850,0.156,6851,0.156,6852,0.156,6853,0.156,6854,0.156,6855,0.156,6856,0.156,6857,0.156,6858,1.025,6859,0.748,6860,0.888,6861,0.156,6862,0.309,6863,0.156,6864,0.156,6865,0.309,6866,0.156,6867,0.156,6868,0.156,6869,0.156,6870,0.156,6871,0.156,6872,1.025,6873,0.156,6874,0.156,6875,0.156,6876,0.748,6877,0.156,6878,0.156,6879,0.156,6880,0.458,6881,0.309,6882,0.309,6883,0.458,6884,0.309,6885,0.156,6886,0.156,6887,0.156,6888,0.156,6889,0.156,6890,0.156,6891,0.156,6892,0.309,6893,0.156,6894,0.156,6895,0.156,6896,0.156,6897,0.156,6898,0.156,6899,0.156,6900,0.156]],["component/28",[18,0.186,172,0.252]],["title/29-1",[1216,40.256,1820,48.363]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[13,56.805]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[18,32.859]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[172,37.153,384,57.698]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29",[18,27.469,1890,62.838]],["name/29",[1890,0.426]],["text/29",[9,6.302,10,4.356,13,5.251,18,4.476,21,6.361,29,5.452,31,4.666,99,5.693,132,4,175,5.327,279,5.833,281,4.81,296,3.839,363,6.17,378,5.251,384,6.38,412,5.833,529,5.693,760,7.623,949,4.789,1216,4.451,1287,5.251,1297,8.385,1299,5.693,1886,6.948,1951,6.632,1985,6.948,5148,7.371,5365,7.371,5725,6.948,6901,8.014,6902,8.014,6903,8.014]],["component/29",[18,0.186,172,0.252]]],"invertedIndex":[["",{"_index":5,"title":{"1-2":{},"27-20":{},"27-27":{},"27-34":{},"27-41":{},"27-48":{},"27-55":{},"27-63":{},"27-70":{},"27-77":{},"27-84":{},"27-89":{},"27-95":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["0",{"_index":530,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"15":{},"16":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["0\"synonymi",{"_index":1180,"title":{},"name":{},"text":{"7":{}},"component":{}}],["0*#*#*#*#abcd",{"_index":1605,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0,1,2,3,4,5,6,0",{"_index":6194,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0..9",{"_index":3305,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0.0",{"_index":641,"title":{},"name":{},"text":{"2":{},"23":{}},"component":{}}],["0.0.0.0/0",{"_index":5437,"title":{},"name":{},"text":{"26":{}},"component":{}}],["0.0.0.0:5434",{"_index":3962,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.000113",{"_index":6830,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.000114",{"_index":6834,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.000133",{"_index":6826,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.001333",{"_index":6852,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.001367",{"_index":6848,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.0014",{"_index":6845,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.001433",{"_index":6841,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.001633",{"_index":6837,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.001967",{"_index":6833,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.002",{"_index":6829,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.002167",{"_index":6825,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.0027",{"_index":6856,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.003067",{"_index":6821,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.003467",{"_index":6817,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.01",{"_index":3191,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["0.034",{"_index":6750,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.040",{"_index":6743,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.05",{"_index":3188,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0.083",{"_index":6744,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.088",{"_index":6761,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.1",{"_index":4028,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0.144",{"_index":6751,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.181",{"_index":6723,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.220",{"_index":6726,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.35",{"_index":6855,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.423",{"_index":6762,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.423130",{"_index":6786,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.5",{"_index":6005,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0.5,2))'::polygon",{"_index":6742,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.5,2.0",{"_index":6736,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.501",{"_index":6724,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0.95",{"_index":5045,"title":{},"name":{},"text":{"24":{}},"component":{}}],["0.967741935483871",{"_index":1500,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0.the",{"_index":3462,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0.when",{"_index":2952,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0/0",{"_index":626,"title":{},"name":{},"text":{"2":{}},"component":{}}],["0/7000060",{"_index":5443,"title":{},"name":{},"text":{"26":{}},"component":{}}],["0/7000148",{"_index":5450,"title":{},"name":{},"text":{"26":{}},"component":{}}],["0/82112",{"_index":644,"title":{},"name":{},"text":{"2":{}},"component":{}}],["00",{"_index":1730,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["000",{"_index":1017,"title":{},"name":{},"text":{"4":{}},"component":{}}],["0000000",{"_index":6619,"title":{},"name":{},"text":{"28":{}},"component":{}}],["000000000",{"_index":1725,"title":{},"name":{},"text":{"13":{}},"component":{}}],["000000001",{"_index":1729,"title":{},"name":{},"text":{"13":{}},"component":{}}],["000000004",{"_index":1722,"title":{},"name":{},"text":{"13":{}},"component":{}}],["00000001000000320000004a",{"_index":3673,"title":{},"name":{},"text":{"16":{}},"component":{}}],["00000001000000320000004b",{"_index":3674,"title":{},"name":{},"text":{"16":{}},"component":{}}],["00000003",{"_index":5826,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0000001b",{"_index":5827,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0000020",{"_index":6621,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000040",{"_index":6625,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000060",{"_index":6626,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000100",{"_index":6628,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000120",{"_index":6629,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000140",{"_index":6630,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000160",{"_index":6632,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0000200",{"_index":6633,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0004",{"_index":6208,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0007",{"_index":3709,"title":{},"name":{},"text":{"16":{}},"component":{}}],["001",{"_index":5915,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0011",{"_index":3712,"title":{},"name":{},"text":{"16":{}},"component":{}}],["002",{"_index":6623,"title":{},"name":{},"text":{"28":{}},"component":{}}],["003",{"_index":6622,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0044",{"_index":1683,"title":{},"name":{},"text":{"13":{}},"component":{}}],["006",{"_index":6631,"title":{},"name":{},"text":{"28":{}},"component":{}}],["007",{"_index":6627,"title":{},"name":{},"text":{"28":{}},"component":{}}],["00:00:00",{"_index":3936,"title":{},"name":{},"text":{"22":{},"25":{},"26":{},"27":{}},"component":{}}],["00:00:00+08",{"_index":6261,"title":{},"name":{},"text":{"27":{}},"component":{}}],["00:00:20",{"_index":6325,"title":{},"name":{},"text":{"27":{}},"component":{}}],["00:02:00",{"_index":6319,"title":{},"name":{},"text":{"27":{}},"component":{}}],["01",{"_index":1525,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["01'))from",{"_index":1482,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012",{"_index":1615,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012',1",{"_index":1618,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012',1,1",{"_index":1620,"title":{},"name":{},"text":{"13":{}},"component":{}}],["01234abcd56789",{"_index":1606,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012a",{"_index":1625,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012a',1,1,'c",{"_index":1627,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012a',1,1,'i",{"_index":1624,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012a012ab34",{"_index":1621,"title":{},"name":{},"text":{"13":{}},"component":{}}],["012ab34",{"_index":1616,"title":{},"name":{},"text":{"13":{}},"component":{}}],["013",{"_index":6624,"title":{},"name":{},"text":{"28":{}},"component":{}}],["01:40:00.000000000",{"_index":1726,"title":{},"name":{},"text":{"13":{}},"component":{}}],["02",{"_index":1681,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["02:20:05",{"_index":6269,"title":{},"name":{},"text":{"27":{}},"component":{}}],["02:30:00",{"_index":6182,"title":{},"name":{},"text":{"27":{}},"component":{}}],["02:45",{"_index":5419,"title":{},"name":{},"text":{"25":{}},"component":{}}],["03",{"_index":1739,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["04",{"_index":1143,"title":{},"name":{},"text":{"6":{}},"component":{}}],["04:00",{"_index":1515,"title":{},"name":{},"text":{"13":{}},"component":{}}],["04:00:00.000000000",{"_index":1723,"title":{},"name":{},"text":{"13":{}},"component":{}}],["05",{"_index":1144,"title":{},"name":{},"text":{"6":{},"13":{},"26":{},"27":{},"28":{}},"component":{}}],["06",{"_index":1465,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["06'),to_date('2023",{"_index":1499,"title":{},"name":{},"text":{"13":{}},"component":{}}],["07",{"_index":1464,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["07/10/2023",{"_index":1673,"title":{},"name":{},"text":{"13":{}},"component":{}}],["077",{"_index":3620,"title":{},"name":{},"text":{"16":{}},"component":{}}],["08",{"_index":1474,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["08'::timestamptz",{"_index":6207,"title":{},"name":{},"text":{"27":{}},"component":{}}],["08:00",{"_index":1257,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["08:00:00",{"_index":1741,"title":{},"name":{},"text":{"13":{}},"component":{}}],["09",{"_index":1240,"title":{},"name":{},"text":{"9":{},"13":{},"27":{}},"component":{}}],["09:00'::timestamptz",{"_index":6181,"title":{},"name":{},"text":{"27":{}},"component":{}}],["09:12:31',null",{"_index":6174,"title":{},"name":{},"text":{"27":{}},"component":{}}],["09:12:39",{"_index":6170,"title":{},"name":{},"text":{"27":{}},"component":{}}],["09:12:39','asia/shanghai",{"_index":6168,"title":{},"name":{},"text":{"27":{}},"component":{}}],["09:12:39','sast",{"_index":6171,"title":{},"name":{},"text":{"27":{}},"component":{}}],["09:18:15.896472",{"_index":1734,"title":{},"name":{},"text":{"13":{}},"component":{}}],["09:18:16.100000",{"_index":1736,"title":{},"name":{},"text":{"13":{}},"component":{}}],["09:30:00')a",{"_index":1717,"title":{},"name":{},"text":{"13":{}},"component":{}}],["09:46:44.000000",{"_index":1675,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0:00",{"_index":4032,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0x",{"_index":3655,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x10000",{"_index":3686,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x100000",{"_index":3708,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x1200000",{"_index":3713,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x2c",{"_index":1580,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x700000",{"_index":3710,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0xcc80",{"_index":3697,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0–15",{"_index":6596,"title":{},"name":{},"text":{"28":{}},"component":{}}],["0–7",{"_index":5878,"title":{},"name":{},"text":{"27":{}},"component":{}}],["0–9",{"_index":5882,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1",{"_index":0,"title":{"1-1":{},"2-1":{},"3-1":{},"4-1":{},"5-1":{},"6-1":{},"7-1":{},"8-1":{},"9-1":{},"10-1":{},"11-1":{},"12-1":{},"13-1":{},"14-1":{},"15-1":{},"16-1":{},"17-1":{},"18-1":{},"19-1":{},"20-1":{},"21-1":{},"22-1":{},"23-1":{},"24-1":{},"25-1":{},"26-1":{},"27-1":{},"28-1":{}},"name":{"1":{}},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["1\"synonymi",{"_index":1181,"title":{},"name":{},"text":{"7":{}},"component":{}}],["1','1234560",{"_index":1643,"title":{},"name":{},"text":{"13":{}},"component":{}}],["1,2,23",{"_index":6015,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1,2,3",{"_index":1025,"title":{},"name":{},"text":{"4":{},"21":{}},"component":{}}],["1,2,7",{"_index":6013,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1,2},{2,4},{3,6},{4,8},{5,10",{"_index":6038,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1,2},{3,4",{"_index":6018,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1,2},{3,4}},{{5,6},{7,8}},{{9,10},{11,12",{"_index":6027,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.0",{"_index":3187,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["1.000000",{"_index":6785,"title":{},"name":{},"text":{"28":{}},"component":{}}],["1.1",{"_index":579,"title":{"5-2":{},"6-2":{},"11-2":{},"15-2":{},"23-2":{},"24-2":{},"26-2":{},"27-2":{},"28-2":{}},"name":{},"text":{"2":{}},"component":{}}],["1.10",{"_index":3543,"title":{},"name":{},"text":{"16":{}},"component":{}}],["1.2",{"_index":1037,"title":{"5-3":{},"6-3":{},"11-3":{},"15-3":{},"23-3":{},"24-3":{},"26-3":{},"27-3":{},"28-3":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["1.2.1",{"_index":3972,"title":{"23-4":{}},"name":{},"text":{},"component":{}}],["1.2.10",{"_index":3988,"title":{"23-13":{}},"name":{},"text":{},"component":{}}],["1.2.11",{"_index":3990,"title":{"23-14":{}},"name":{},"text":{},"component":{}}],["1.2.12",{"_index":3992,"title":{"23-15":{}},"name":{},"text":{},"component":{}}],["1.2.13",{"_index":3994,"title":{"23-16":{}},"name":{},"text":{},"component":{}}],["1.2.14",{"_index":3996,"title":{"23-17":{}},"name":{},"text":{},"component":{}}],["1.2.15",{"_index":3998,"title":{"23-18":{}},"name":{},"text":{},"component":{}}],["1.2.16",{"_index":3999,"title":{"23-19":{}},"name":{},"text":{},"component":{}}],["1.2.17",{"_index":4001,"title":{"23-20":{}},"name":{},"text":{},"component":{}}],["1.2.18",{"_index":4003,"title":{"23-21":{}},"name":{},"text":{},"component":{}}],["1.2.19",{"_index":4005,"title":{"23-22":{}},"name":{},"text":{},"component":{}}],["1.2.2",{"_index":3973,"title":{"23-5":{}},"name":{},"text":{},"component":{}}],["1.2.20",{"_index":4007,"title":{"23-23":{}},"name":{},"text":{},"component":{}}],["1.2.21",{"_index":4009,"title":{"23-24":{}},"name":{},"text":{},"component":{}}],["1.2.22",{"_index":4011,"title":{"23-25":{}},"name":{},"text":{},"component":{}}],["1.2.23",{"_index":4013,"title":{"23-26":{}},"name":{},"text":{},"component":{}}],["1.2.24",{"_index":4015,"title":{"23-27":{}},"name":{},"text":{},"component":{}}],["1.2.3",{"_index":3974,"title":{"23-6":{}},"name":{},"text":{},"component":{}}],["1.2.4",{"_index":3976,"title":{"23-7":{}},"name":{},"text":{},"component":{}}],["1.2.5",{"_index":3978,"title":{"23-8":{}},"name":{},"text":{},"component":{}}],["1.2.6",{"_index":3980,"title":{"23-9":{}},"name":{},"text":{},"component":{}}],["1.2.7",{"_index":3982,"title":{"23-10":{}},"name":{},"text":{},"component":{}}],["1.2.8",{"_index":3984,"title":{"23-11":{}},"name":{},"text":{},"component":{}}],["1.2.9",{"_index":3986,"title":{"23-12":{}},"name":{},"text":{},"component":{}}],["1.23",{"_index":5920,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.23::real",{"_index":5921,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.3",{"_index":1039,"title":{"5-4":{},"6-4":{},"11-4":{},"15-4":{},"23-28":{},"24-4":{},"26-4":{},"28-4":{}},"name":{},"text":{},"component":{}}],["1.3.1",{"_index":1063,"title":{"6-5":{}},"name":{},"text":{},"component":{}}],["1.37",{"_index":4740,"title":{},"name":{},"text":{"23":{}},"component":{}}],["1.39",{"_index":4753,"title":{},"name":{},"text":{"23":{}},"component":{}}],["1.4",{"_index":1288,"title":{"11-5":{},"23-29":{},"24-5":{},"26-5":{},"28-5":{}},"name":{},"text":{},"component":{}}],["1.4.1",{"_index":856,"title":{"23-30":{}},"name":{},"text":{"3":{}},"component":{}}],["1.4.1.tar.gz",{"_index":855,"title":{},"name":{},"text":{"3":{}},"component":{}}],["1.4.2",{"_index":4016,"title":{"23-31":{}},"name":{},"text":{},"component":{}}],["1.4.3",{"_index":4017,"title":{"23-32":{}},"name":{},"text":{},"component":{}}],["1.4.4",{"_index":4018,"title":{"23-33":{}},"name":{},"text":{},"component":{}}],["1.4.5",{"_index":4019,"title":{"23-34":{}},"name":{},"text":{},"component":{}}],["1.4.6",{"_index":4020,"title":{"23-35":{}},"name":{},"text":{},"component":{}}],["1.43",{"_index":4780,"title":{},"name":{},"text":{"23":{}},"component":{}}],["1.5",{"_index":1291,"title":{"11-6":{},"23-36":{},"24-6":{}},"name":{},"text":{"27":{}},"component":{}}],["1.5*x",{"_index":6074,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.5.1",{"_index":4021,"title":{"23-37":{}},"name":{},"text":{},"component":{}}],["1.5.2",{"_index":4022,"title":{"23-38":{}},"name":{},"text":{},"component":{}}],["1.5.3",{"_index":4023,"title":{"23-39":{}},"name":{},"text":{},"component":{}}],["1.5.4",{"_index":4024,"title":{"23-40":{}},"name":{},"text":{},"component":{}}],["1.6",{"_index":1293,"title":{"11-7":{},"24-7":{}},"name":{},"text":{},"component":{}}],["1.643",{"_index":391,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1.643.tar.gz",{"_index":387,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1.76",{"_index":400,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1.76.tar.gz",{"_index":398,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1.925e",{"_index":5917,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.99",{"_index":5756,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.9e",{"_index":6822,"title":{},"name":{},"text":{"28":{}},"component":{}}],["1.f1",{"_index":6049,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.noarch",{"_index":5429,"title":{},"name":{},"text":{"25":{}},"component":{}}],["1.rhel8.x86_64.rpm",{"_index":5386,"title":{},"name":{},"text":{"25":{}},"component":{}}],["1.scan",{"_index":3728,"title":{},"name":{},"text":{"16":{}},"component":{}}],["1.somecolumn",{"_index":5966,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1.stop",{"_index":6486,"title":{},"name":{},"text":{"28":{}},"component":{}}],["1/0",{"_index":6078,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1/1",{"_index":625,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1/100",{"_index":3192,"title":{},"name":{},"text":{"16":{}},"component":{}}],["10",{"_index":227,"title":{},"name":{"2":{}},"text":{"2":{},"6":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"19":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["10','abcbvbnb",{"_index":1653,"title":{},"name":{},"text":{"13":{}},"component":{}}],["10,000,000",{"_index":3083,"title":{},"name":{},"text":{"16":{}},"component":{}}],["100",{"_index":1301,"title":{},"name":{},"text":{"11":{},"13":{},"16":{},"18":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["100,000",{"_index":3070,"title":{},"name":{},"text":{"16":{}},"component":{}}],["100.0",{"_index":521,"title":{},"name":{},"text":{"2":{}},"component":{}}],["100.00",{"_index":1720,"title":{},"name":{},"text":{"13":{}},"component":{}}],["10000",{"_index":6655,"title":{},"name":{},"text":{"28":{}},"component":{}}],["100000",{"_index":3050,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["100gb",{"_index":6482,"title":{},"name":{},"text":{"28":{}},"component":{}}],["101",{"_index":1021,"title":{},"name":{},"text":{"4":{},"28":{}},"component":{}}],["1024",{"_index":2977,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["1048576",{"_index":3707,"title":{},"name":{},"text":{"16":{}},"component":{}}],["1061558/1063384",{"_index":649,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1063384",{"_index":586,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1063384/1063384",{"_index":654,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1068",{"_index":4044,"title":{},"name":{},"text":{"23":{}},"component":{}}],["10:13:18",{"_index":6304,"title":{},"name":{},"text":{"27":{}},"component":{}}],["10:14:22",{"_index":6292,"title":{},"name":{},"text":{"27":{}},"component":{}}],["10:14:22','yi",{"_index":6291,"title":{},"name":{},"text":{"27":{}},"component":{}}],["10:18:31.674322",{"_index":1470,"title":{},"name":{},"text":{"13":{}},"component":{}}],["10:27:01.440600",{"_index":1504,"title":{},"name":{},"text":{"13":{}},"component":{}}],["10:27:14.182000",{"_index":1507,"title":{},"name":{},"text":{"13":{}},"component":{}}],["10g",{"_index":3908,"title":{},"name":{},"text":{"22":{}},"component":{}}],["10、compat",{"_index":1512,"title":{},"name":{},"text":{"13":{}},"component":{}}],["11",{"_index":453,"title":{},"name":{"3":{}},"text":{"2":{},"6":{},"11":{},"13":{},"15":{},"18":{},"25":{},"27":{},"28":{}},"component":{}}],["11','11114560",{"_index":1654,"title":{},"name":{},"text":{"13":{}},"component":{}}],["11','yyyi",{"_index":6329,"title":{},"name":{},"text":{"27":{}},"component":{}}],["11/11",{"_index":520,"title":{},"name":{},"text":{"2":{}},"component":{}}],["111",{"_index":1019,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1111",{"_index":3841,"title":{},"name":{},"text":{"18":{}},"component":{}}],["11176",{"_index":5439,"title":{},"name":{},"text":{"26":{}},"component":{}}],["1184",{"_index":4034,"title":{},"name":{},"text":{"23":{}},"component":{}}],["11:13:18+08",{"_index":6333,"title":{},"name":{},"text":{"27":{}},"component":{}}],["11:30:00.00",{"_index":1747,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["11:34",{"_index":4071,"title":{},"name":{},"text":{"23":{}},"component":{}}],["11:38",{"_index":1691,"title":{},"name":{},"text":{"13":{}},"component":{}}],["11:38:00.000000",{"_index":1695,"title":{},"name":{},"text":{"13":{}},"component":{}}],["11、compat",{"_index":1516,"title":{},"name":{},"text":{"13":{}},"component":{}}],["12",{"_index":423,"title":{},"name":{"4":{}},"text":{"2":{},"6":{},"11":{},"13":{},"15":{},"18":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["12/12",{"_index":624,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1210.73",{"_index":6279,"title":{},"name":{},"text":{"27":{}},"component":{}}],["123",{"_index":1271,"title":{},"name":{},"text":{"9":{},"27":{}},"component":{}}],["1234",{"_index":3779,"title":{},"name":{},"text":{"16":{}},"component":{}}],["123456",{"_index":1253,"title":{},"name":{},"text":{"9":{}},"component":{}}],["123456,'test1','2022",{"_index":1239,"title":{},"name":{},"text":{"9":{}},"component":{}}],["123457",{"_index":1259,"title":{},"name":{},"text":{"9":{}},"component":{}}],["123457,'test2','2022",{"_index":1244,"title":{},"name":{},"text":{"9":{}},"component":{}}],["123458",{"_index":1267,"title":{},"name":{},"text":{"9":{}},"component":{}}],["123458,'test4','2022",{"_index":1250,"title":{},"name":{},"text":{"9":{}},"component":{}}],["1247",{"_index":3552,"title":{},"name":{},"text":{"16":{}},"component":{}}],["127.0.0.1",{"_index":3967,"title":{},"name":{},"text":{"22":{},"23":{},"25":{}},"component":{}}],["128",{"_index":3651,"title":{},"name":{},"text":{"16":{}},"component":{}}],["12:13:29",{"_index":6202,"title":{},"name":{},"text":{"27":{}},"component":{}}],["12:20:12.55",{"_index":6302,"title":{},"name":{},"text":{"27":{}},"component":{}}],["12:34:56.025",{"_index":1687,"title":{},"name":{},"text":{"13":{}},"component":{}}],["12:34:56.025000",{"_index":1689,"title":{},"name":{},"text":{"13":{}},"component":{}}],["12、compat",{"_index":1527,"title":{},"name":{},"text":{"13":{}},"component":{}}],["13",{"_index":16,"title":{},"name":{},"text":{"1":{},"6":{},"11":{},"15":{},"27":{},"28":{}},"component":{}}],["13.3",{"_index":5111,"title":{},"name":{},"text":{"24":{}},"component":{}}],["130274",{"_index":5426,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130427",{"_index":5418,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130428",{"_index":5420,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130429",{"_index":5421,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130431",{"_index":5422,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130432",{"_index":5423,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130433",{"_index":5424,"title":{},"name":{},"text":{"25":{}},"component":{}}],["130445",{"_index":5425,"title":{},"name":{},"text":{"25":{}},"component":{}}],["13718",{"_index":3649,"title":{},"name":{},"text":{"16":{}},"component":{}}],["13:00:00.000000",{"_index":1744,"title":{},"name":{},"text":{"13":{}},"component":{}}],["13:13:18",{"_index":6308,"title":{},"name":{},"text":{"27":{}},"component":{}}],["13:13:18+08",{"_index":6335,"title":{},"name":{},"text":{"27":{}},"component":{}}],["13:27:19",{"_index":6204,"title":{},"name":{},"text":{"27":{}},"component":{}}],["13:27:19'::oracle.d",{"_index":6209,"title":{},"name":{},"text":{"27":{}},"component":{}}],["13:40:10.123000",{"_index":1706,"title":{},"name":{},"text":{"13":{}},"component":{}}],["13:55:39",{"_index":3538,"title":{},"name":{},"text":{"16":{}},"component":{}}],["13、compat",{"_index":1539,"title":{},"name":{},"text":{"13":{}},"component":{}}],["14",{"_index":541,"title":{},"name":{"5":{}},"text":{"2":{},"6":{},"13":{},"15":{},"16":{},"24":{},"27":{}},"component":{}}],["145344",{"_index":3559,"title":{},"name":{},"text":{"16":{}},"component":{}}],["145359",{"_index":3561,"title":{},"name":{},"text":{"16":{}},"component":{}}],["145402",{"_index":3563,"title":{},"name":{},"text":{"16":{}},"component":{}}],["145416",{"_index":3565,"title":{},"name":{},"text":{"16":{}},"component":{}}],["145433",{"_index":3557,"title":{},"name":{},"text":{"16":{}},"component":{}}],["14:10:10.123000",{"_index":1700,"title":{},"name":{},"text":{"13":{}},"component":{}}],["14:31:23",{"_index":6297,"title":{},"name":{},"text":{"27":{}},"component":{}}],["14:38:59.879642+08",{"_index":6176,"title":{},"name":{},"text":{"27":{}},"component":{}}],["14:39:33.262828+08",{"_index":6178,"title":{},"name":{},"text":{"27":{}},"component":{}}],["14:40:50",{"_index":6196,"title":{},"name":{},"text":{"27":{}},"component":{}}],["14、compat",{"_index":1544,"title":{},"name":{},"text":{"13":{}},"component":{}}],["15",{"_index":1065,"title":{},"name":{"6":{}},"text":{"6":{},"15":{},"27":{},"28":{}},"component":{}}],["15',7",{"_index":6212,"title":{},"name":{},"text":{"27":{}},"component":{}}],["150000",{"_index":6438,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1521",{"_index":1005,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["1522",{"_index":1812,"title":{},"name":{},"text":{"14":{}},"component":{}}],["1551",{"_index":3948,"title":{},"name":{},"text":{"22":{}},"component":{}}],["15551",{"_index":4027,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15554",{"_index":4033,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15555",{"_index":4036,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15556",{"_index":4038,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15557",{"_index":4039,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15558",{"_index":4042,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15582",{"_index":4046,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15606",{"_index":4051,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15610",{"_index":4055,"title":{},"name":{},"text":{"23":{}},"component":{}}],["15716",{"_index":661,"title":{},"name":{},"text":{"2":{}},"component":{}}],["15:28:11.906",{"_index":6363,"title":{},"name":{},"text":{"27":{}},"component":{}}],["15、compat",{"_index":1551,"title":{},"name":{},"text":{"13":{}},"component":{}}],["16",{"_index":344,"title":{},"name":{"7":{}},"text":{"2":{},"9":{},"15":{},"22":{},"27":{},"28":{}},"component":{}}],["16000",{"_index":899,"title":{},"name":{},"text":{"4":{}},"component":{}}],["16:20:34",{"_index":6217,"title":{},"name":{},"text":{"27":{}},"component":{}}],["16:21:39",{"_index":6218,"title":{},"name":{},"text":{"27":{}},"component":{}}],["16:39:20",{"_index":1243,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:39:20','2022",{"_index":1242,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:39:20+08",{"_index":1258,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:39:20.000000",{"_index":1256,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:40:20",{"_index":1246,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:40:20','2022",{"_index":1245,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:40:20+08",{"_index":1262,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:40:20.000000",{"_index":1261,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:40:55",{"_index":6264,"title":{},"name":{},"text":{"27":{}},"component":{}}],["16:41:20",{"_index":1249,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:41:20','2022",{"_index":1248,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:41:20+08",{"_index":1266,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:41:20.000000",{"_index":1265,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:42:20",{"_index":1252,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:42:20','2022",{"_index":1251,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:42:20+08",{"_index":1270,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16:42:20.000000",{"_index":1269,"title":{},"name":{},"text":{"9":{}},"component":{}}],["16–31",{"_index":6595,"title":{},"name":{},"text":{"28":{}},"component":{}}],["16、compat",{"_index":1559,"title":{},"name":{},"text":{"13":{}},"component":{}}],["17",{"_index":1208,"title":{},"name":{"8":{}},"text":{"13":{},"15":{},"27":{}},"component":{}}],["17.1",{"_index":33,"title":{},"name":{},"text":{"1":{}},"component":{}}],["17.10",{"_index":609,"title":{},"name":{},"text":{"2":{}},"component":{}}],["17.2",{"_index":22,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"22":{},"25":{},"26":{},"28":{}},"component":{}}],["17512",{"_index":4043,"title":{},"name":{},"text":{"23":{}},"component":{}}],["17715",{"_index":3553,"title":{},"name":{},"text":{"16":{}},"component":{}}],["17:11",{"_index":693,"title":{},"name":{},"text":{"2":{}},"component":{}}],["17:45:18",{"_index":6239,"title":{},"name":{},"text":{"27":{}},"component":{}}],["17、compat",{"_index":1568,"title":{},"name":{},"text":{"13":{}},"component":{}}],["18",{"_index":1222,"title":{},"name":{"9":{}},"text":{"13":{},"15":{},"26":{},"27":{}},"component":{}}],["1826",{"_index":595,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1826/1826",{"_index":653,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1861",{"_index":3549,"title":{},"name":{},"text":{"16":{}},"component":{}}],["1862",{"_index":3550,"title":{},"name":{},"text":{"16":{}},"component":{}}],["18705",{"_index":4881,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18755",{"_index":4884,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18805",{"_index":4886,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18855",{"_index":4888,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18986",{"_index":4890,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18:00",{"_index":1715,"title":{},"name":{},"text":{"13":{}},"component":{}}],["18:02",{"_index":4031,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18:04",{"_index":4049,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18:07",{"_index":4053,"title":{},"name":{},"text":{"23":{}},"component":{}}],["18:30:21",{"_index":6260,"title":{},"name":{},"text":{"27":{}},"component":{}}],["18:45:18",{"_index":6240,"title":{},"name":{},"text":{"27":{}},"component":{}}],["18、compat",{"_index":1571,"title":{},"name":{},"text":{"13":{}},"component":{}}],["19",{"_index":1272,"title":{},"name":{"10":{}},"text":{"15":{}},"component":{}}],["19.0.0.0",{"_index":337,"title":{},"name":{},"text":{"2":{}},"component":{}}],["19.0.0.0.0",{"_index":504,"title":{},"name":{},"text":{"2":{}},"component":{}}],["192.168.1.100",{"_index":5213,"title":{},"name":{},"text":{"24":{}},"component":{}}],["192.168.1.100/32",{"_index":5215,"title":{},"name":{},"text":{"24":{}},"component":{}}],["192.168.1.50",{"_index":5217,"title":{},"name":{},"text":{"24":{}},"component":{}}],["192.168.31.102",{"_index":5447,"title":{},"name":{},"text":{"26":{}},"component":{}}],["192.168.31.102(53416",{"_index":5442,"title":{},"name":{},"text":{"26":{}},"component":{}}],["1950",{"_index":6286,"title":{},"name":{},"text":{"27":{}},"component":{}}],["196",{"_index":566,"title":{},"name":{},"text":{"2":{}},"component":{}}],["1987",{"_index":356,"title":{},"name":{},"text":{"2":{}},"component":{}}],["199999",{"_index":6436,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19:12:09",{"_index":6215,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19:12:09',12",{"_index":6214,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19:16:12",{"_index":6258,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19:20:40",{"_index":6206,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19:30:00.000000",{"_index":1750,"title":{},"name":{},"text":{"13":{}},"component":{}}],["19:43:51",{"_index":6199,"title":{},"name":{},"text":{"27":{}},"component":{}}],["19c",{"_index":503,"title":{},"name":{},"text":{"2":{}},"component":{}}],["19、compat",{"_index":1577,"title":{},"name":{},"text":{"13":{}},"component":{}}],["1[10:42",{"_index":5962,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1i\\#defin",{"_index":815,"title":{},"name":{},"text":{"3":{}},"component":{}}],["1s",{"_index":2033,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["1st",{"_index":1015,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1、compat",{"_index":1462,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2",{"_index":3,"title":{"1-2":{},"2-2":{},"3-2":{},"4-2":{},"7-2":{},"8-2":{},"9-2":{},"10-2":{},"11-8":{},"12-2":{},"13-2":{},"14-2":{},"15-5":{},"16-2":{},"17-2":{},"18-2":{},"19-2":{},"20-2":{},"21-2":{},"22-2":{},"23-41":{},"24-8":{},"25-2":{},"26-6":{},"27-4":{},"28-6":{}},"name":{"11":{}},"text":{"2":{},"4":{},"6":{},"7":{},"11":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["2\"synonymi",{"_index":1182,"title":{},"name":{},"text":{"7":{}},"component":{}}],["2','1234560",{"_index":1644,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2,1",{"_index":1636,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2.0",{"_index":1952,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["2.1",{"_index":777,"title":{"3-3":{},"4-3":{},"7-3":{},"15-6":{},"16-3":{},"20-3":{},"22-3":{},"23-42":{},"26-7":{},"27-5":{}},"name":{},"text":{},"component":{}}],["2.1.1",{"_index":1819,"title":{"15-7":{},"16-4":{}},"name":{},"text":{},"component":{}}],["2.1.2",{"_index":1821,"title":{"15-8":{},"16-5":{}},"name":{},"text":{},"component":{}}],["2.1.3",{"_index":2228,"title":{"16-6":{}},"name":{},"text":{},"component":{}}],["2.1.4",{"_index":2229,"title":{"16-7":{}},"name":{},"text":{},"component":{}}],["2.1.5",{"_index":2231,"title":{"16-8":{}},"name":{},"text":{},"component":{}}],["2.10",{"_index":2279,"title":{"16-57":{}},"name":{},"text":{},"component":{}}],["2.10.1",{"_index":2280,"title":{"16-58":{}},"name":{},"text":{},"component":{}}],["2.10.2",{"_index":2281,"title":{"16-59":{}},"name":{},"text":{},"component":{}}],["2.10.3",{"_index":2282,"title":{"16-60":{}},"name":{},"text":{},"component":{}}],["2.11",{"_index":2283,"title":{"16-61":{}},"name":{},"text":{},"component":{}}],["2.11.1",{"_index":2285,"title":{"16-62":{}},"name":{},"text":{},"component":{}}],["2.11.2",{"_index":2286,"title":{"16-63":{}},"name":{},"text":{},"component":{}}],["2.11.3",{"_index":2287,"title":{"16-64":{}},"name":{},"text":{},"component":{}}],["2.11.4",{"_index":2288,"title":{"16-65":{}},"name":{},"text":{},"component":{}}],["2.11.5",{"_index":2289,"title":{"16-66":{}},"name":{},"text":{},"component":{}}],["2.11.6",{"_index":2290,"title":{"16-67":{}},"name":{},"text":{},"component":{}}],["2.12",{"_index":2291,"title":{"16-68":{}},"name":{},"text":{},"component":{}}],["2.12.1",{"_index":2293,"title":{"16-69":{}},"name":{},"text":{},"component":{}}],["2.12.2",{"_index":2294,"title":{"16-70":{}},"name":{},"text":{},"component":{}}],["2.12.3",{"_index":2295,"title":{"16-71":{}},"name":{},"text":{},"component":{}}],["2.12.4",{"_index":2296,"title":{"16-72":{}},"name":{},"text":{},"component":{}}],["2.12.5",{"_index":2297,"title":{"16-73":{}},"name":{},"text":{},"component":{}}],["2.13",{"_index":2298,"title":{"16-74":{}},"name":{},"text":{},"component":{}}],["2.13.1",{"_index":2300,"title":{"16-75":{}},"name":{},"text":{},"component":{}}],["2.13.2",{"_index":2301,"title":{"16-76":{}},"name":{},"text":{},"component":{}}],["2.13.3",{"_index":2302,"title":{"16-77":{}},"name":{},"text":{},"component":{}}],["2.13.4",{"_index":2303,"title":{"16-78":{}},"name":{},"text":{},"component":{}}],["2.13.5",{"_index":2304,"title":{"16-79":{}},"name":{},"text":{},"component":{}}],["2.13.6",{"_index":2305,"title":{"16-80":{}},"name":{},"text":{},"component":{}}],["2.14",{"_index":2306,"title":{"16-81":{}},"name":{},"text":{},"component":{}}],["2.14.1",{"_index":2308,"title":{"16-82":{}},"name":{},"text":{},"component":{}}],["2.14.2",{"_index":2309,"title":{"16-83":{}},"name":{},"text":{},"component":{}}],["2.14.3",{"_index":2310,"title":{"16-84":{}},"name":{},"text":{},"component":{}}],["2.14.4",{"_index":2311,"title":{"16-85":{}},"name":{},"text":{},"component":{}}],["2.14.5",{"_index":2312,"title":{"16-86":{}},"name":{},"text":{},"component":{}}],["2.14.6",{"_index":2313,"title":{"16-87":{}},"name":{},"text":{},"component":{}}],["2.15",{"_index":2314,"title":{"16-88":{}},"name":{},"text":{},"component":{}}],["2.15.1",{"_index":2316,"title":{"16-89":{}},"name":{},"text":{},"component":{}}],["2.15.2",{"_index":2317,"title":{"16-90":{}},"name":{},"text":{},"component":{}}],["2.15.3",{"_index":2318,"title":{"16-91":{}},"name":{},"text":{},"component":{}}],["2.15.4",{"_index":2319,"title":{"16-92":{}},"name":{},"text":{},"component":{}}],["2.16",{"_index":2320,"title":{"16-93":{}},"name":{},"text":{},"component":{}}],["2.16.1",{"_index":2322,"title":{"16-94":{}},"name":{},"text":{},"component":{}}],["2.16.2",{"_index":2323,"title":{"16-95":{}},"name":{},"text":{},"component":{}}],["2.16.3",{"_index":2324,"title":{"16-96":{}},"name":{},"text":{},"component":{}}],["2.16.4",{"_index":2325,"title":{"16-97":{}},"name":{},"text":{},"component":{}}],["2.16.5",{"_index":2326,"title":{"16-98":{}},"name":{},"text":{},"component":{}}],["2.16.6",{"_index":2327,"title":{"16-99":{}},"name":{},"text":{},"component":{}}],["2.17",{"_index":2328,"title":{"16-100":{}},"name":{},"text":{},"component":{}}],["2.17.1",{"_index":2330,"title":{"16-101":{}},"name":{},"text":{},"component":{}}],["2.17.2",{"_index":2331,"title":{"16-102":{}},"name":{},"text":{},"component":{}}],["2.17.3",{"_index":2332,"title":{"16-103":{}},"name":{},"text":{},"component":{}}],["2.18",{"_index":2333,"title":{"16-104":{}},"name":{},"text":{},"component":{}}],["2.18.1",{"_index":2334,"title":{"16-105":{}},"name":{},"text":{},"component":{}}],["2.18.2",{"_index":2335,"title":{"16-106":{}},"name":{},"text":{},"component":{}}],["2.18.3",{"_index":2336,"title":{"16-107":{}},"name":{},"text":{},"component":{}}],["2.19",{"_index":2337,"title":{"16-108":{}},"name":{},"text":{},"component":{}}],["2.19.1",{"_index":2339,"title":{"16-109":{}},"name":{},"text":{},"component":{}}],["2.19.2",{"_index":2340,"title":{"16-110":{}},"name":{},"text":{},"component":{}}],["2.19.3",{"_index":2341,"title":{"16-111":{}},"name":{},"text":{},"component":{}}],["2.19.4",{"_index":2342,"title":{"16-112":{}},"name":{},"text":{},"component":{}}],["2.19.5",{"_index":2343,"title":{"16-113":{}},"name":{},"text":{},"component":{}}],["2.19.6",{"_index":2344,"title":{"16-114":{}},"name":{},"text":{},"component":{}}],["2.2",{"_index":886,"title":{"4-4":{},"7-4":{},"15-9":{},"16-9":{},"20-4":{},"22-4":{},"23-43":{},"26-8":{},"27-6":{}},"name":{},"text":{},"component":{}}],["2.2.1",{"_index":1822,"title":{"15-10":{},"16-10":{}},"name":{},"text":{},"component":{}}],["2.2.2",{"_index":1823,"title":{"15-11":{},"16-11":{}},"name":{},"text":{},"component":{}}],["2.2.3",{"_index":1826,"title":{"15-12":{},"16-12":{}},"name":{},"text":{},"component":{}}],["2.2.4",{"_index":1827,"title":{"15-13":{},"16-13":{}},"name":{},"text":{},"component":{}}],["2.2.5",{"_index":1829,"title":{"15-14":{},"16-14":{}},"name":{},"text":{},"component":{}}],["2.2.6",{"_index":1833,"title":{"15-15":{}},"name":{},"text":{},"component":{}}],["2.20",{"_index":2345,"title":{"16-115":{}},"name":{},"text":{},"component":{}}],["2.20.1",{"_index":2347,"title":{"16-116":{}},"name":{},"text":{},"component":{}}],["2.20.2",{"_index":2348,"title":{"16-117":{}},"name":{},"text":{},"component":{}}],["2.20.3",{"_index":2349,"title":{"16-118":{}},"name":{},"text":{},"component":{}}],["2.20.4",{"_index":2350,"title":{"16-119":{}},"name":{},"text":{},"component":{}}],["2.20.5",{"_index":2351,"title":{"16-120":{}},"name":{},"text":{},"component":{}}],["2.20.6",{"_index":2352,"title":{"16-121":{}},"name":{},"text":{},"component":{}}],["2.22",{"_index":6347,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2.3",{"_index":1163,"title":{"7-5":{},"15-16":{},"16-15":{},"20-5":{},"26-9":{}},"name":{},"text":{"28":{}},"component":{}}],["2.3.1",{"_index":1835,"title":{"15-17":{},"16-16":{}},"name":{},"text":{},"component":{}}],["2.3.2",{"_index":1837,"title":{"15-18":{},"16-17":{}},"name":{},"text":{},"component":{}}],["2.3.3",{"_index":1838,"title":{"15-19":{},"16-18":{}},"name":{},"text":{},"component":{}}],["2.3.4",{"_index":1840,"title":{"15-20":{},"16-19":{}},"name":{},"text":{},"component":{}}],["2.3.5",{"_index":1841,"title":{"15-21":{},"16-20":{}},"name":{},"text":{},"component":{}}],["2.4",{"_index":2233,"title":{"16-21":{},"20-6":{},"26-10":{}},"name":{},"text":{},"component":{}}],["2.4.1",{"_index":2235,"title":{"16-22":{}},"name":{},"text":{},"component":{}}],["2.4.2",{"_index":2236,"title":{"16-23":{}},"name":{},"text":{},"component":{}}],["2.4.3",{"_index":2237,"title":{"16-24":{}},"name":{},"text":{},"component":{}}],["2.4.4",{"_index":2238,"title":{"16-25":{}},"name":{},"text":{},"component":{}}],["2.4.5",{"_index":2239,"title":{"16-26":{}},"name":{},"text":{},"component":{}}],["2.5",{"_index":2240,"title":{"16-27":{},"20-7":{},"26-11":{}},"name":{},"text":{},"component":{}}],["2.5.1",{"_index":2242,"title":{"16-28":{}},"name":{},"text":{},"component":{}}],["2.5.2",{"_index":2243,"title":{"16-29":{}},"name":{},"text":{},"component":{}}],["2.5.3",{"_index":2244,"title":{"16-30":{}},"name":{},"text":{},"component":{}}],["2.5.4",{"_index":2245,"title":{"16-31":{}},"name":{},"text":{},"component":{}}],["2.5.5",{"_index":2246,"title":{"16-32":{}},"name":{},"text":{},"component":{}}],["2.6",{"_index":2247,"title":{"16-33":{},"20-8":{}},"name":{},"text":{},"component":{}}],["2.6.1",{"_index":2249,"title":{"16-34":{}},"name":{},"text":{},"component":{}}],["2.6.2",{"_index":2250,"title":{"16-35":{}},"name":{},"text":{},"component":{}}],["2.6.3",{"_index":2251,"title":{"16-36":{}},"name":{},"text":{},"component":{}}],["2.6.4",{"_index":2252,"title":{"16-37":{}},"name":{},"text":{},"component":{}}],["2.7",{"_index":2253,"title":{"16-38":{}},"name":{},"text":{},"component":{}}],["2.7.1",{"_index":2255,"title":{"16-39":{}},"name":{},"text":{},"component":{}}],["2.7.2",{"_index":2256,"title":{"16-40":{}},"name":{},"text":{},"component":{}}],["2.7.3",{"_index":2257,"title":{"16-41":{}},"name":{},"text":{},"component":{}}],["2.7e",{"_index":6818,"title":{},"name":{},"text":{"28":{}},"component":{}}],["2.8",{"_index":2259,"title":{"16-42":{}},"name":{},"text":{},"component":{}}],["2.8.1",{"_index":2261,"title":{"16-43":{}},"name":{},"text":{},"component":{}}],["2.8.2",{"_index":2262,"title":{"16-44":{}},"name":{},"text":{},"component":{}}],["2.8.3",{"_index":2263,"title":{"16-45":{}},"name":{},"text":{},"component":{}}],["2.8.4",{"_index":2264,"title":{"16-46":{}},"name":{},"text":{},"component":{}}],["2.8.5",{"_index":2265,"title":{"16-47":{}},"name":{},"text":{},"component":{}}],["2.9",{"_index":2266,"title":{"16-48":{}},"name":{},"text":{},"component":{}}],["2.9.1",{"_index":2268,"title":{"16-49":{}},"name":{},"text":{},"component":{}}],["2.9.2",{"_index":2269,"title":{"16-50":{}},"name":{},"text":{},"component":{}}],["2.9.3",{"_index":2271,"title":{"16-51":{}},"name":{},"text":{},"component":{}}],["2.9.4",{"_index":2272,"title":{"16-52":{}},"name":{},"text":{},"component":{}}],["2.9.5",{"_index":2273,"title":{"16-53":{}},"name":{},"text":{},"component":{}}],["2.9.6",{"_index":2275,"title":{"16-54":{}},"name":{},"text":{},"component":{}}],["2.9.7",{"_index":2276,"title":{"16-55":{}},"name":{},"text":{},"component":{}}],["2.9.8",{"_index":2278,"title":{"16-56":{}},"name":{},"text":{},"component":{}}],["2.99",{"_index":5758,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2.copi",{"_index":3730,"title":{},"name":{},"text":{"16":{}},"component":{}}],["2.stop",{"_index":6489,"title":{},"name":{},"text":{"28":{}},"component":{}}],["2/2",{"_index":628,"title":{},"name":{},"text":{"2":{}},"component":{}}],["20",{"_index":540,"title":{},"name":{"12":{}},"text":{"2":{},"15":{},"27":{}},"component":{}}],["20,000",{"_index":3084,"title":{},"name":{},"text":{"16":{}},"component":{}}],["20.10",{"_index":5105,"title":{},"name":{},"text":{"24":{}},"component":{}}],["20.4.4",{"_index":5106,"title":{},"name":{},"text":{"24":{}},"component":{}}],["200",{"_index":443,"title":{},"name":{},"text":{"2":{},"24":{},"27":{}},"component":{}}],["2000",{"_index":1738,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2003",{"_index":6332,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2007",{"_index":6288,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2008",{"_index":6301,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2009",{"_index":3539,"title":{},"name":{},"text":{"16":{}},"component":{}}],["2011",{"_index":1694,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2011,12,18",{"_index":1690,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2011,1954,1948,1952,1951,1244,1950,2005,1949,1953,2006,31,2412",{"_index":6033,"title":{},"name":{},"text":{"27":{}},"component":{}}],["20110101",{"_index":1709,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2012",{"_index":357,"title":{},"name":{},"text":{"2":{}},"component":{}}],["2013",{"_index":1711,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2016",{"_index":1699,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2018",{"_index":1686,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["2019",{"_index":702,"title":{},"name":{},"text":{"2":{},"13":{},"27":{}},"component":{}}],["2020",{"_index":6197,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2021",{"_index":6169,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2022",{"_index":1255,"title":{},"name":{},"text":{"9":{},"15":{}},"component":{}}],["2023",{"_index":1463,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2023/07/06",{"_index":1679,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2024",{"_index":1142,"title":{},"name":{},"text":{"6":{},"26":{}},"component":{}}],["2024/04/05",{"_index":1141,"title":{},"name":{},"text":{"6":{}},"component":{}}],["2025",{"_index":17,"title":{},"name":{},"text":{"1":{}},"component":{}}],["2026",{"_index":667,"title":{},"name":{},"text":{"2":{}},"component":{}}],["2050",{"_index":6263,"title":{},"name":{},"text":{"27":{}},"component":{}}],["20:00:00",{"_index":6323,"title":{},"name":{},"text":{"27":{}},"component":{}}],["20:04:30",{"_index":700,"title":{},"name":{},"text":{"2":{}},"component":{}}],["20:35",{"_index":3935,"title":{},"name":{},"text":{"22":{}},"component":{}}],["20gb",{"_index":5056,"title":{},"name":{},"text":{"24":{}},"component":{}}],["20、compat",{"_index":1583,"title":{},"name":{},"text":{"13":{}},"component":{}}],["21",{"_index":1408,"title":{},"name":{"13":{}},"text":{"15":{}},"component":{}}],["21:21",{"_index":663,"title":{},"name":{},"text":{"2":{}},"component":{}}],["21:54",{"_index":5441,"title":{},"name":{},"text":{"26":{}},"component":{}}],["21:54:52.041847",{"_index":5449,"title":{},"name":{},"text":{"26":{}},"component":{}}],["21、compat",{"_index":1597,"title":{},"name":{},"text":{"13":{}},"component":{}}],["22",{"_index":1798,"title":{},"name":{"14":{}},"text":{"15":{},"27":{}},"component":{}}],["2200",{"_index":3547,"title":{},"name":{},"text":{"16":{}},"component":{}}],["2228810088200",{"_index":3844,"title":{},"name":{},"text":{"18":{}},"component":{}}],["223",{"_index":1573,"title":{},"name":{},"text":{"13":{}},"component":{}}],["223456",{"_index":1263,"title":{},"name":{},"text":{"9":{}},"component":{}}],["223456,'test3','2022",{"_index":1247,"title":{},"name":{},"text":{"9":{}},"component":{}}],["2244",{"_index":4041,"title":{},"name":{},"text":{"23":{}},"component":{}}],["22:52:07.325111",{"_index":5451,"title":{},"name":{},"text":{"26":{}},"component":{}}],["22、compat",{"_index":1612,"title":{},"name":{},"text":{"13":{}},"component":{}}],["23",{"_index":600,"title":{},"name":{"15":{}},"text":{"2":{},"20":{},"27":{}},"component":{}}],["2312105013",{"_index":4868,"title":{},"name":{},"text":{"23":{}},"component":{}}],["232",{"_index":5026,"title":{},"name":{},"text":{"24":{}},"component":{}}],["234abcd56789",{"_index":1608,"title":{},"name":{},"text":{"13":{}},"component":{}}],["23590",{"_index":652,"title":{},"name":{},"text":{"2":{}},"component":{}}],["23630",{"_index":655,"title":{},"name":{},"text":{"2":{}},"component":{}}],["2382",{"_index":671,"title":{},"name":{},"text":{"2":{}},"component":{}}],["23、compat",{"_index":1630,"title":{},"name":{},"text":{"13":{}},"component":{}}],["24",{"_index":1149,"title":{},"name":{"16":{}},"text":{"6":{}},"component":{}}],["24.0",{"_index":429,"title":{},"name":{},"text":{"2":{}},"component":{}}],["24.0.tar.bz2",{"_index":407,"title":{},"name":{},"text":{"2":{}},"component":{}}],["24/04/15",{"_index":1148,"title":{},"name":{},"text":{"6":{}},"component":{}}],["24/05/15",{"_index":1153,"title":{},"name":{},"text":{"6":{}},"component":{}}],["2400.153",{"_index":3773,"title":{},"name":{},"text":{"16":{}},"component":{}}],["24、compat",{"_index":1639,"title":{},"name":{},"text":{"13":{}},"component":{}}],["25",{"_index":3786,"title":{},"name":{"17":{}},"text":{},"component":{}}],["25.1.5",{"_index":5810,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2540",{"_index":4455,"title":{},"name":{},"text":{"23":{}},"component":{}}],["256",{"_index":5380,"title":{},"name":{},"text":{"25":{}},"component":{}}],["25899",{"_index":3555,"title":{},"name":{},"text":{"16":{}},"component":{}}],["25、compat",{"_index":1658,"title":{},"name":{},"text":{"13":{}},"component":{}}],["26",{"_index":1241,"title":{},"name":{"18":{}},"text":{"9":{},"23":{}},"component":{}}],["2615",{"_index":3546,"title":{},"name":{},"text":{"16":{}},"component":{}}],["26、compat",{"_index":1668,"title":{},"name":{},"text":{"13":{}},"component":{}}],["27",{"_index":3852,"title":{},"name":{"19":{}},"text":{"27":{}},"component":{}}],["27093",{"_index":4068,"title":{},"name":{},"text":{"23":{}},"component":{}}],["27435",{"_index":6809,"title":{},"name":{},"text":{"28":{}},"component":{}}],["2752",{"_index":4070,"title":{},"name":{},"text":{"23":{}},"component":{}}],["27、compat",{"_index":1678,"title":{},"name":{},"text":{"13":{}},"component":{}}],["28",{"_index":1740,"title":{},"name":{"20":{}},"text":{"13":{},"15":{},"27":{}},"component":{}}],["287.25",{"_index":525,"title":{},"name":{},"text":{"2":{}},"component":{}}],["28kb",{"_index":6732,"title":{},"name":{},"text":{"28":{}},"component":{}}],["28、compat",{"_index":1684,"title":{},"name":{},"text":{"13":{}},"component":{}}],["29",{"_index":3888,"title":{},"name":{"21":{}},"text":{"27":{}},"component":{}}],["291",{"_index":608,"title":{},"name":{},"text":{"2":{}},"component":{}}],["29、compat",{"_index":1696,"title":{},"name":{},"text":{"13":{}},"component":{}}],["2:20:05",{"_index":6268,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2>&1",{"_index":3777,"title":{},"name":{},"text":{"16":{}},"component":{}}],["2g",{"_index":6530,"title":{},"name":{},"text":{"28":{}},"component":{}}],["2gb",{"_index":5058,"title":{},"name":{},"text":{"24":{}},"component":{}}],["2m2d",{"_index":6314,"title":{},"name":{},"text":{"27":{}},"component":{}}],["2nd",{"_index":1018,"title":{},"name":{},"text":{"4":{},"15":{}},"component":{}}],["2、compat",{"_index":1468,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3",{"_index":8,"title":{"1-3":{},"2-3":{},"3-4":{},"4-5":{},"8-3":{},"9-3":{},"10-3":{},"11-9":{},"12-3":{},"13-3":{},"14-3":{},"15-22":{},"16-122":{},"17-3":{},"18-3":{},"19-3":{},"20-9":{},"21-3":{},"22-5":{},"24-9":{},"25-3":{},"26-12":{},"27-7":{},"28-7":{}},"name":{"22":{}},"text":{"2":{},"6":{},"7":{},"9":{},"11":{},"13":{},"15":{},"16":{},"18":{},"21":{},"25":{},"27":{},"28":{}},"component":{}}],["3','1b3b560",{"_index":1645,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3.0",{"_index":790,"title":{},"name":{},"text":{"3":{},"28":{}},"component":{}}],["3.1",{"_index":176,"title":{"2-4":{},"4-6":{},"15-23":{},"16-123":{},"20-10":{},"21-4":{},"26-13":{}},"name":{},"text":{},"component":{}}],["3.1.1",{"_index":1843,"title":{"15-24":{},"16-124":{}},"name":{},"text":{},"component":{}}],["3.1.2",{"_index":1845,"title":{"15-25":{},"16-125":{}},"name":{},"text":{},"component":{}}],["3.1.3",{"_index":2353,"title":{"16-126":{}},"name":{},"text":{},"component":{}}],["3.1.4",{"_index":2354,"title":{"16-127":{}},"name":{},"text":{},"component":{}}],["3.10",{"_index":2402,"title":{"16-176":{}},"name":{},"text":{},"component":{}}],["3.10.1",{"_index":2403,"title":{"16-177":{}},"name":{},"text":{},"component":{}}],["3.10.2",{"_index":2404,"title":{"16-178":{}},"name":{},"text":{},"component":{}}],["3.10.3",{"_index":2405,"title":{"16-179":{}},"name":{},"text":{},"component":{}}],["3.10.4",{"_index":2406,"title":{"16-180":{}},"name":{},"text":{},"component":{}}],["3.11",{"_index":2407,"title":{"16-181":{}},"name":{},"text":{},"component":{}}],["3.11.1",{"_index":2409,"title":{"16-182":{}},"name":{},"text":{},"component":{}}],["3.11.2",{"_index":2410,"title":{"16-183":{}},"name":{},"text":{},"component":{}}],["3.11.3",{"_index":2411,"title":{"16-184":{}},"name":{},"text":{},"component":{}}],["3.11.4",{"_index":2412,"title":{"16-185":{}},"name":{},"text":{},"component":{}}],["3.12",{"_index":2413,"title":{"16-186":{}},"name":{},"text":{},"component":{}}],["3.12.1",{"_index":2414,"title":{"16-187":{}},"name":{},"text":{},"component":{}}],["3.12.10",{"_index":2426,"title":{"16-196":{}},"name":{},"text":{},"component":{}}],["3.12.11",{"_index":2427,"title":{"16-197":{}},"name":{},"text":{},"component":{}}],["3.12.2",{"_index":2415,"title":{"16-188":{}},"name":{},"text":{},"component":{}}],["3.12.3",{"_index":2416,"title":{"16-189":{}},"name":{},"text":{},"component":{}}],["3.12.4",{"_index":2418,"title":{"16-190":{}},"name":{},"text":{},"component":{}}],["3.12.5",{"_index":2421,"title":{"16-191":{}},"name":{},"text":{},"component":{}}],["3.12.6",{"_index":2422,"title":{"16-192":{}},"name":{},"text":{},"component":{}}],["3.12.7",{"_index":2423,"title":{"16-193":{}},"name":{},"text":{},"component":{}}],["3.12.8",{"_index":2424,"title":{"16-194":{}},"name":{},"text":{},"component":{}}],["3.12.9",{"_index":2425,"title":{"16-195":{}},"name":{},"text":{},"component":{}}],["3.2",{"_index":178,"title":{"2-5":{},"16-128":{},"20-11":{},"21-5":{},"26-14":{}},"name":{},"text":{"28":{}},"component":{}}],["3.2.1",{"_index":179,"title":{"2-6":{},"16-129":{}},"name":{},"text":{},"component":{}}],["3.2.2",{"_index":181,"title":{"2-7":{},"16-130":{}},"name":{},"text":{},"component":{}}],["3.2.3",{"_index":184,"title":{"2-8":{},"16-131":{}},"name":{},"text":{},"component":{}}],["3.2.4",{"_index":186,"title":{"2-9":{},"16-132":{}},"name":{},"text":{},"component":{}}],["3.20.1",{"_index":847,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.20.1.tar.gz",{"_index":846,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.20.1/protobuf",{"_index":845,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.3",{"_index":189,"title":{"2-10":{},"16-133":{},"20-12":{},"21-6":{}},"name":{},"text":{},"component":{}}],["3.3.1",{"_index":2357,"title":{"16-134":{}},"name":{},"text":{},"component":{}}],["3.3.2",{"_index":2358,"title":{"16-135":{}},"name":{},"text":{},"component":{}}],["3.3.3",{"_index":2359,"title":{"16-136":{}},"name":{},"text":{},"component":{}}],["3.3.4",{"_index":2360,"title":{"16-137":{}},"name":{},"text":{},"component":{}}],["3.33",{"_index":6348,"title":{},"name":{},"text":{"27":{}},"component":{}}],["3.3e",{"_index":6838,"title":{},"name":{},"text":{"28":{}},"component":{}}],["3.4",{"_index":191,"title":{"2-11":{},"16-138":{},"20-13":{},"21-7":{}},"name":{},"text":{"2":{},"3":{},"28":{}},"component":{}}],["3.4.0",{"_index":862,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.4.0.tar.gz",{"_index":861,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.4.1",{"_index":2362,"title":{"16-139":{}},"name":{},"text":{},"component":{}}],["3.4.2",{"_index":2363,"title":{"16-140":{}},"name":{},"text":{},"component":{}}],["3.4.3",{"_index":834,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.4.3.tar.gz",{"_index":833,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.4.3/bin/gdal",{"_index":867,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.5",{"_index":193,"title":{"2-12":{},"16-141":{},"20-14":{}},"name":{},"text":{"27":{}},"component":{}}],["3.5.1",{"_index":196,"title":{"2-13":{},"16-142":{}},"name":{},"text":{},"component":{}}],["3.5.2",{"_index":199,"title":{"2-14":{},"16-143":{}},"name":{},"text":{},"component":{}}],["3.5.3",{"_index":202,"title":{"2-15":{},"16-144":{}},"name":{},"text":{},"component":{}}],["3.5.4",{"_index":204,"title":{"2-16":{},"16-145":{}},"name":{},"text":{},"component":{}}],["3.5.5",{"_index":2365,"title":{"16-146":{}},"name":{},"text":{},"component":{}}],["3.5.6",{"_index":2366,"title":{"16-147":{}},"name":{},"text":{},"component":{}}],["3.5.6.1",{"_index":2367,"title":{"16-148":{}},"name":{},"text":{},"component":{}}],["3.5.6.2",{"_index":2368,"title":{"16-149":{}},"name":{},"text":{},"component":{}}],["3.5.6.3",{"_index":2370,"title":{"16-150":{}},"name":{},"text":{},"component":{}}],["3.5.6.4",{"_index":2371,"title":{"16-151":{}},"name":{},"text":{},"component":{}}],["3.579545",{"_index":3767,"title":{},"name":{},"text":{"16":{}},"component":{}}],["3.6",{"_index":207,"title":{"2-17":{},"16-152":{},"20-15":{}},"name":{},"text":{},"component":{}}],["3.6.1",{"_index":2373,"title":{"16-153":{}},"name":{},"text":{},"component":{}}],["3.6.2",{"_index":2374,"title":{"16-154":{}},"name":{},"text":{},"component":{}}],["3.6.3",{"_index":2375,"title":{"16-155":{}},"name":{},"text":{},"component":{}}],["3.6.4",{"_index":2376,"title":{"16-156":{}},"name":{},"text":{},"component":{}}],["3.7",{"_index":2377,"title":{"16-157":{}},"name":{},"text":{},"component":{}}],["3.7.1",{"_index":2378,"title":{"16-158":{}},"name":{},"text":{},"component":{}}],["3.7.2",{"_index":2379,"title":{"16-159":{}},"name":{},"text":{},"component":{}}],["3.7.3",{"_index":2380,"title":{"16-160":{}},"name":{},"text":{},"component":{}}],["3.7.4",{"_index":2381,"title":{"16-161":{}},"name":{},"text":{},"component":{}}],["3.7.5",{"_index":2382,"title":{"16-162":{}},"name":{},"text":{},"component":{}}],["3.7.6",{"_index":2383,"title":{"16-163":{}},"name":{},"text":{},"component":{}}],["3.8",{"_index":2384,"title":{"16-164":{}},"name":{},"text":{},"component":{}}],["3.8.0",{"_index":405,"title":{},"name":{},"text":{"2":{}},"component":{}}],["3.8.1",{"_index":2386,"title":{"16-165":{}},"name":{},"text":{},"component":{}}],["3.8.2",{"_index":2387,"title":{"16-166":{}},"name":{},"text":{},"component":{}}],["3.8.3",{"_index":2388,"title":{"16-167":{}},"name":{},"text":{},"component":{}}],["3.80.tar.gz",{"_index":403,"title":{},"name":{},"text":{"2":{}},"component":{}}],["3.9",{"_index":2389,"title":{"16-168":{}},"name":{},"text":{},"component":{}}],["3.9.1",{"_index":2391,"title":{"16-169":{}},"name":{},"text":{},"component":{}}],["3.9.2",{"_index":841,"title":{"16-170":{}},"name":{},"text":{"3":{}},"component":{}}],["3.9.2.tar.bz2",{"_index":840,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.9.2/bin/geo",{"_index":864,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3.9.3",{"_index":2392,"title":{"16-171":{}},"name":{},"text":{},"component":{}}],["3.9.3.1",{"_index":2393,"title":{"16-172":{}},"name":{},"text":{},"component":{}}],["3.9.3.2",{"_index":2395,"title":{"16-173":{}},"name":{},"text":{},"component":{}}],["3.9.3.3",{"_index":2398,"title":{"16-174":{}},"name":{},"text":{},"component":{}}],["3.9.3.4",{"_index":2399,"title":{"16-175":{}},"name":{},"text":{},"component":{}}],["3.copi",{"_index":3732,"title":{},"name":{},"text":{"16":{}},"component":{}}],["3.if",{"_index":6490,"title":{},"name":{},"text":{"28":{}},"component":{}}],["3.x",{"_index":6481,"title":{},"name":{},"text":{"28":{}},"component":{}}],["30",{"_index":1483,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["30096",{"_index":4069,"title":{},"name":{},"text":{"23":{}},"component":{}}],["301",{"_index":1795,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3052",{"_index":4052,"title":{},"name":{},"text":{"23":{}},"component":{}}],["3056",{"_index":4056,"title":{},"name":{},"text":{"23":{}},"component":{}}],["3080",{"_index":4048,"title":{},"name":{},"text":{"23":{}},"component":{}}],["30、compat",{"_index":1707,"title":{},"name":{},"text":{"13":{}},"component":{}}],["31",{"_index":1479,"title":{},"name":{},"text":{"13":{},"27":{},"28":{}},"component":{}}],["3144",{"_index":4923,"title":{},"name":{},"text":{"23":{}},"component":{}}],["317",{"_index":3551,"title":{},"name":{},"text":{"16":{}},"component":{}}],["319",{"_index":3554,"title":{},"name":{},"text":{"16":{}},"component":{}}],["31、compat",{"_index":1712,"title":{},"name":{},"text":{"13":{}},"component":{}}],["32",{"_index":2976,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["32/64",{"_index":2699,"title":{},"name":{},"text":{"16":{}},"component":{}}],["3214",{"_index":3934,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3215",{"_index":3938,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3216",{"_index":3939,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3218",{"_index":3941,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3219",{"_index":3943,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3220",{"_index":3946,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3238",{"_index":3947,"title":{},"name":{},"text":{"22":{}},"component":{}}],["32767",{"_index":1392,"title":{},"name":{},"text":{"12":{}},"component":{}}],["3290",{"_index":4922,"title":{},"name":{},"text":{"23":{}},"component":{}}],["32、compat",{"_index":1719,"title":{},"name":{},"text":{"13":{}},"component":{}}],["33",{"_index":6148,"title":{},"name":{},"text":{"27":{}},"component":{}}],["33178",{"_index":6808,"title":{},"name":{},"text":{"28":{}},"component":{}}],["33、compat",{"_index":1727,"title":{},"name":{},"text":{"13":{}},"component":{}}],["34,338,492",{"_index":1662,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3400000",{"_index":812,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3400000.tar.gz",{"_index":810,"title":{},"name":{},"text":{"3":{}},"component":{}}],["341",{"_index":681,"title":{},"name":{},"text":{"2":{}},"component":{}}],["342",{"_index":683,"title":{},"name":{},"text":{"2":{}},"component":{}}],["343",{"_index":690,"title":{},"name":{},"text":{"2":{}},"component":{}}],["34338492",{"_index":1664,"title":{},"name":{},"text":{"13":{}},"component":{}}],["344",{"_index":673,"title":{},"name":{},"text":{"2":{}},"component":{}}],["345",{"_index":669,"title":{},"name":{},"text":{"2":{}},"component":{}}],["346",{"_index":675,"title":{},"name":{},"text":{"2":{}},"component":{}}],["34、compat",{"_index":1733,"title":{},"name":{},"text":{"13":{}},"component":{}}],["35.96",{"_index":3756,"title":{},"name":{},"text":{"16":{}},"component":{}}],["358",{"_index":6654,"title":{},"name":{},"text":{"28":{}},"component":{}}],["35、compat",{"_index":1737,"title":{},"name":{},"text":{"13":{}},"component":{}}],["36、compat",{"_index":1745,"title":{},"name":{},"text":{"13":{}},"component":{}}],["377",{"_index":6620,"title":{},"name":{},"text":{"28":{}},"component":{}}],["37、compat",{"_index":1751,"title":{},"name":{},"text":{"13":{}},"component":{}}],["38.7",{"_index":6076,"title":{},"name":{},"text":{"27":{}},"component":{}}],["38、compat",{"_index":1756,"title":{},"name":{},"text":{"13":{}},"component":{}}],["39985967",{"_index":5075,"title":{},"name":{},"text":{"24":{}},"component":{}}],["39、compat",{"_index":1761,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3:00",{"_index":1742,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3、compat",{"_index":1471,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4",{"_index":11,"title":{"1-4":{},"2-18":{},"3-5":{},"4-7":{},"15-26":{},"17-4":{},"18-4":{},"21-8":{},"24-10":{},"25-4":{},"27-8":{},"28-8":{}},"name":{"23":{}},"text":{"2":{},"4":{},"6":{},"9":{},"11":{},"13":{},"15":{},"16":{},"18":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["4','abc",{"_index":1646,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4,5,6",{"_index":1030,"title":{},"name":{},"text":{"4":{},"21":{}},"component":{}}],["4.1",{"_index":212,"title":{"2-19":{},"4-8":{},"15-27":{},"18-5":{},"24-11":{},"27-9":{},"28-9":{}},"name":{},"text":{},"component":{}}],["4.1.1",{"_index":4930,"title":{"24-12":{},"28-10":{}},"name":{},"text":{},"component":{}}],["4.1.2",{"_index":4931,"title":{"24-13":{},"28-11":{}},"name":{},"text":{},"component":{}}],["4.1.3",{"_index":4932,"title":{"24-14":{},"28-12":{}},"name":{},"text":{},"component":{}}],["4.1.4",{"_index":4933,"title":{"24-15":{}},"name":{},"text":{},"component":{}}],["4.1.5",{"_index":4934,"title":{"24-16":{}},"name":{},"text":{},"component":{}}],["4.1.6",{"_index":4935,"title":{"24-17":{}},"name":{},"text":{},"component":{}}],["4.1.7",{"_index":4937,"title":{"24-18":{}},"name":{},"text":{},"component":{}}],["4.1.8",{"_index":4939,"title":{"24-19":{}},"name":{},"text":{},"component":{}}],["4.10",{"_index":3797,"title":{"18-14":{}},"name":{},"text":{},"component":{}}],["4.11",{"_index":3799,"title":{"18-15":{}},"name":{},"text":{},"component":{}}],["4.12",{"_index":3801,"title":{"18-16":{}},"name":{},"text":{},"component":{}}],["4.13",{"_index":3803,"title":{"18-17":{}},"name":{},"text":{},"component":{}}],["4.2",{"_index":19,"title":{"2-20":{},"4-9":{},"15-28":{},"18-6":{},"24-20":{},"27-10":{}},"name":{},"text":{"1":{},"2":{},"15":{},"25":{},"28":{}},"component":{}}],["4.2(abov",{"_index":985,"title":{},"name":{},"text":{"4":{}},"component":{}}],["4.2.1",{"_index":4940,"title":{"24-21":{},"27-11":{}},"name":{},"text":{},"component":{}}],["4.2.2",{"_index":4941,"title":{"24-22":{},"27-12":{}},"name":{},"text":{},"component":{}}],["4.2.3",{"_index":4942,"title":{"24-23":{},"27-13":{}},"name":{},"text":{},"component":{}}],["4.2.3.1",{"_index":5455,"title":{"27-14":{}},"name":{},"text":{},"component":{}}],["4.2.3.2",{"_index":5456,"title":{"27-15":{}},"name":{},"text":{},"component":{}}],["4.2.3.3",{"_index":5457,"title":{"27-16":{}},"name":{},"text":{},"component":{}}],["4.2.3.4",{"_index":5458,"title":{"27-17":{}},"name":{},"text":{},"component":{}}],["4.2.3.5",{"_index":5459,"title":{"27-18":{}},"name":{},"text":{},"component":{}}],["4.2.4",{"_index":4943,"title":{"24-24":{}},"name":{},"text":{},"component":{}}],["4.2.5",{"_index":4944,"title":{"24-25":{}},"name":{},"text":{},"component":{}}],["4.2.5.1",{"_index":4945,"title":{"24-26":{}},"name":{},"text":{},"component":{}}],["4.2.5.2",{"_index":4946,"title":{"24-27":{}},"name":{},"text":{},"component":{}}],["4.2.6",{"_index":4947,"title":{"24-28":{}},"name":{},"text":{},"component":{}}],["4.2.6.1",{"_index":4948,"title":{"24-29":{}},"name":{},"text":{},"component":{}}],["4.2.6.2",{"_index":4949,"title":{"24-30":{}},"name":{},"text":{},"component":{}}],["4.2.7",{"_index":4950,"title":{"24-31":{}},"name":{},"text":{},"component":{}}],["4.2.8",{"_index":4952,"title":{"24-32":{}},"name":{},"text":{},"component":{}}],["4.2.8.1",{"_index":4953,"title":{"24-33":{}},"name":{},"text":{},"component":{}}],["4.2.8.2",{"_index":4954,"title":{"24-34":{}},"name":{},"text":{},"component":{}}],["4.2.8.3",{"_index":4955,"title":{"24-35":{}},"name":{},"text":{},"component":{}}],["4.2.8.4",{"_index":4956,"title":{"24-36":{}},"name":{},"text":{},"component":{}}],["4.2.9",{"_index":4957,"title":{"24-37":{}},"name":{},"text":{},"component":{}}],["4.2.x86_64.deb",{"_index":5415,"title":{},"name":{},"text":{"25":{}},"component":{}}],["4.3",{"_index":215,"title":{"2-21":{},"4-10":{},"15-29":{},"18-7":{},"24-38":{}},"name":{},"text":{},"component":{}}],["4.3.1",{"_index":890,"title":{"4-11":{}},"name":{},"text":{},"component":{}}],["4.4",{"_index":218,"title":{"2-22":{},"15-30":{},"18-8":{},"24-39":{}},"name":{},"text":{},"component":{}}],["4.4.1",{"_index":4958,"title":{"24-40":{}},"name":{},"text":{},"component":{}}],["4.4.2",{"_index":4959,"title":{"24-41":{}},"name":{},"text":{},"component":{}}],["4.4.3",{"_index":4960,"title":{"24-42":{}},"name":{},"text":{},"component":{}}],["4.4.4",{"_index":4962,"title":{"24-43":{}},"name":{},"text":{},"component":{}}],["4.4.5",{"_index":4963,"title":{"24-44":{}},"name":{},"text":{},"component":{}}],["4.5",{"_index":219,"title":{"2-23":{},"15-31":{},"18-9":{}},"name":{},"text":{},"component":{}}],["4.6",{"_index":220,"title":{"2-24":{},"15-32":{},"18-10":{}},"name":{},"text":{},"component":{}}],["4.7",{"_index":1852,"title":{"15-33":{},"18-11":{}},"name":{},"text":{},"component":{}}],["4.8",{"_index":3793,"title":{"18-12":{}},"name":{},"text":{},"component":{}}],["4.9",{"_index":3795,"title":{"18-13":{}},"name":{},"text":{},"component":{}}],["4.creat",{"_index":3743,"title":{},"name":{},"text":{"16":{}},"component":{}}],["4.instal",{"_index":6492,"title":{},"name":{},"text":{"28":{}},"component":{}}],["4/bin/pg_config",{"_index":870,"title":{},"name":{},"text":{"3":{},"4":{}},"component":{}}],["4/bin/postgr",{"_index":3937,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["4/bin:$path",{"_index":3925,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["4/data",{"_index":3930,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["4/lib",{"_index":3927,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["40、compat",{"_index":1762,"title":{},"name":{},"text":{"13":{}},"component":{}}],["41、compat",{"_index":1770,"title":{},"name":{},"text":{"13":{}},"component":{}}],["42",{"_index":5914,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["42、compat",{"_index":1778,"title":{},"name":{},"text":{"13":{}},"component":{}}],["43、compat",{"_index":1781,"title":{},"name":{},"text":{"13":{}},"component":{}}],["44",{"_index":351,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{}}],["44,0201','yyyi",{"_index":1682,"title":{},"name":{},"text":{"13":{}},"component":{}}],["44、compat",{"_index":1782,"title":{},"name":{},"text":{"13":{}},"component":{}}],["45",{"_index":651,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{}}],["4500",{"_index":594,"title":{},"name":{},"text":{"2":{}},"component":{}}],["4500/4500",{"_index":648,"title":{},"name":{},"text":{"2":{}},"component":{}}],["458",{"_index":6657,"title":{},"name":{},"text":{"28":{}},"component":{}}],["45、ompat",{"_index":1789,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4712",{"_index":6296,"title":{},"name":{},"text":{"27":{}},"component":{}}],["49",{"_index":3960,"title":{},"name":{},"text":{"22":{}},"component":{}}],["4f60\\597d",{"_index":1775,"title":{},"name":{},"text":{"13":{}},"component":{}}],["4gb",{"_index":3902,"title":{},"name":{},"text":{"22":{}},"component":{}}],["4、compat",{"_index":1477,"title":{},"name":{},"text":{"13":{}},"component":{}}],["5",{"_index":221,"title":{"2-25":{},"15-34":{},"17-5":{},"25-5":{},"27-19":{},"28-13":{}},"name":{"24":{}},"text":{"2":{},"4":{},"6":{},"11":{},"13":{},"15":{},"16":{},"18":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["5','abcd",{"_index":1647,"title":{},"name":{},"text":{"13":{}},"component":{}}],["5,7,9",{"_index":1036,"title":{},"name":{},"text":{"4":{}},"component":{}}],["5.01",{"_index":1665,"title":{},"name":{},"text":{"13":{}},"component":{}}],["5.1",{"_index":1855,"title":{"15-35":{},"27-20":{}},"name":{},"text":{"27":{}},"component":{}}],["5.1.1",{"_index":5460,"title":{"27-21":{}},"name":{},"text":{},"component":{}}],["5.1.2",{"_index":5461,"title":{"27-22":{}},"name":{},"text":{},"component":{}}],["5.1.3",{"_index":5462,"title":{"27-23":{}},"name":{},"text":{},"component":{}}],["5.1.4",{"_index":5463,"title":{"27-24":{}},"name":{},"text":{},"component":{}}],["5.1.5",{"_index":5464,"title":{"27-25":{}},"name":{},"text":{},"component":{}}],["5.1.6",{"_index":5465,"title":{"27-26":{}},"name":{},"text":{},"component":{}}],["5.10",{"_index":5520,"title":{"27-84":{}},"name":{},"text":{},"component":{}}],["5.10.1",{"_index":5521,"title":{"27-85":{}},"name":{},"text":{},"component":{}}],["5.10.2",{"_index":5522,"title":{"27-86":{}},"name":{},"text":{},"component":{}}],["5.10.3",{"_index":5523,"title":{"27-87":{}},"name":{},"text":{},"component":{}}],["5.10.4",{"_index":5524,"title":{"27-88":{}},"name":{},"text":{},"component":{}}],["5.11",{"_index":5525,"title":{"27-89":{}},"name":{},"text":{},"component":{}}],["5.11.1",{"_index":5526,"title":{"27-90":{}},"name":{},"text":{},"component":{}}],["5.11.2",{"_index":5527,"title":{"27-91":{}},"name":{},"text":{},"component":{}}],["5.11.3",{"_index":5528,"title":{"27-92":{}},"name":{},"text":{},"component":{}}],["5.11.4",{"_index":5529,"title":{"27-93":{}},"name":{},"text":{},"component":{}}],["5.11.5",{"_index":5530,"title":{"27-94":{}},"name":{},"text":{},"component":{}}],["5.12",{"_index":5531,"title":{"27-95":{}},"name":{},"text":{},"component":{}}],["5.12.1",{"_index":5532,"title":{"27-96":{}},"name":{},"text":{},"component":{}}],["5.12.2",{"_index":5533,"title":{"27-97":{}},"name":{},"text":{},"component":{}}],["5.12.3",{"_index":5534,"title":{"27-98":{}},"name":{},"text":{},"component":{}}],["5.12.4",{"_index":5535,"title":{"27-99":{}},"name":{},"text":{},"component":{}}],["5.16.3",{"_index":430,"title":{},"name":{},"text":{"2":{}},"component":{}}],["5.1e",{"_index":6853,"title":{},"name":{},"text":{"28":{}},"component":{}}],["5.2",{"_index":1857,"title":{"15-36":{},"27-27":{}},"name":{},"text":{"27":{}},"component":{}}],["5.2.1",{"_index":5466,"title":{"27-28":{}},"name":{},"text":{},"component":{}}],["5.2.2",{"_index":5467,"title":{"27-29":{}},"name":{},"text":{},"component":{}}],["5.2.3",{"_index":5468,"title":{"27-30":{}},"name":{},"text":{},"component":{}}],["5.2.4",{"_index":5469,"title":{"27-31":{}},"name":{},"text":{},"component":{}}],["5.2.5",{"_index":5470,"title":{"27-32":{}},"name":{},"text":{},"component":{}}],["5.2.6",{"_index":5471,"title":{"27-33":{}},"name":{},"text":{},"component":{}}],["5.3",{"_index":1859,"title":{"15-37":{},"27-34":{}},"name":{},"text":{},"component":{}}],["5.3.1",{"_index":5472,"title":{"27-35":{}},"name":{},"text":{},"component":{}}],["5.3.2",{"_index":5473,"title":{"27-36":{}},"name":{},"text":{},"component":{}}],["5.3.3",{"_index":5474,"title":{"27-37":{}},"name":{},"text":{},"component":{}}],["5.3.4",{"_index":5475,"title":{"27-38":{}},"name":{},"text":{},"component":{}}],["5.3.5",{"_index":5476,"title":{"27-39":{}},"name":{},"text":{},"component":{}}],["5.3.6",{"_index":5477,"title":{"27-40":{}},"name":{},"text":{},"component":{}}],["5.4",{"_index":5478,"title":{"27-41":{}},"name":{},"text":{},"component":{}}],["5.4.1",{"_index":5479,"title":{"27-42":{}},"name":{},"text":{},"component":{}}],["5.4.2",{"_index":5480,"title":{"27-43":{}},"name":{},"text":{},"component":{}}],["5.4.3",{"_index":5481,"title":{"27-44":{}},"name":{},"text":{},"component":{}}],["5.4.4",{"_index":5482,"title":{"27-45":{}},"name":{},"text":{},"component":{}}],["5.4.5",{"_index":5483,"title":{"27-46":{}},"name":{},"text":{},"component":{}}],["5.4.6",{"_index":5484,"title":{"27-47":{}},"name":{},"text":{},"component":{}}],["5.5",{"_index":5485,"title":{"27-48":{}},"name":{},"text":{},"component":{}}],["5.5.1",{"_index":5486,"title":{"27-49":{}},"name":{},"text":{},"component":{}}],["5.5.2",{"_index":5487,"title":{"27-50":{}},"name":{},"text":{},"component":{}}],["5.5.3",{"_index":5488,"title":{"27-51":{}},"name":{},"text":{},"component":{}}],["5.5.4",{"_index":5489,"title":{"27-52":{}},"name":{},"text":{},"component":{}}],["5.5.5",{"_index":5490,"title":{"27-53":{}},"name":{},"text":{},"component":{}}],["5.5.6",{"_index":5491,"title":{"27-54":{}},"name":{},"text":{},"component":{}}],["5.6",{"_index":605,"title":{"27-55":{}},"name":{},"text":{"2":{}},"component":{}}],["5.6.1",{"_index":5492,"title":{"27-56":{}},"name":{},"text":{},"component":{}}],["5.6.2",{"_index":5493,"title":{"27-57":{}},"name":{},"text":{},"component":{}}],["5.6.3",{"_index":5494,"title":{"27-58":{}},"name":{},"text":{},"component":{}}],["5.6.4",{"_index":5495,"title":{"27-59":{}},"name":{},"text":{},"component":{}}],["5.6.5",{"_index":5496,"title":{"27-60":{}},"name":{},"text":{},"component":{}}],["5.6.6",{"_index":5497,"title":{"27-61":{}},"name":{},"text":{},"component":{}}],["5.6.7",{"_index":5498,"title":{"27-62":{}},"name":{},"text":{},"component":{}}],["5.7",{"_index":5499,"title":{"27-63":{}},"name":{},"text":{},"component":{}}],["5.7.1",{"_index":5500,"title":{"27-64":{}},"name":{},"text":{},"component":{}}],["5.7.2",{"_index":5501,"title":{"27-65":{}},"name":{},"text":{},"component":{}}],["5.7.3",{"_index":5502,"title":{"27-66":{}},"name":{},"text":{},"component":{}}],["5.7.4",{"_index":5503,"title":{"27-67":{}},"name":{},"text":{},"component":{}}],["5.7.5",{"_index":5504,"title":{"27-68":{}},"name":{},"text":{},"component":{}}],["5.7.6",{"_index":5505,"title":{"27-69":{}},"name":{},"text":{},"component":{}}],["5.8",{"_index":5506,"title":{"27-70":{}},"name":{},"text":{},"component":{}}],["5.8.1",{"_index":5507,"title":{"27-71":{}},"name":{},"text":{},"component":{}}],["5.8.2",{"_index":5508,"title":{"27-72":{}},"name":{},"text":{},"component":{}}],["5.8.3",{"_index":5509,"title":{"27-73":{}},"name":{},"text":{},"component":{}}],["5.8.4",{"_index":5510,"title":{"27-74":{}},"name":{},"text":{},"component":{}}],["5.8.5",{"_index":5511,"title":{"27-75":{}},"name":{},"text":{},"component":{}}],["5.8.6",{"_index":5512,"title":{"27-76":{}},"name":{},"text":{},"component":{}}],["5.9",{"_index":5513,"title":{"27-77":{}},"name":{},"text":{},"component":{}}],["5.9.1",{"_index":5514,"title":{"27-78":{}},"name":{},"text":{},"component":{}}],["5.9.2",{"_index":5515,"title":{"27-79":{}},"name":{},"text":{},"component":{}}],["5.9.3",{"_index":5516,"title":{"27-80":{}},"name":{},"text":{},"component":{}}],["5.9.4",{"_index":5517,"title":{"27-81":{}},"name":{},"text":{},"component":{}}],["5.9.5",{"_index":5518,"title":{"27-82":{}},"name":{},"text":{},"component":{}}],["5.9.6",{"_index":5519,"title":{"27-83":{}},"name":{},"text":{},"component":{}}],["5.initi",{"_index":6493,"title":{},"name":{},"text":{"28":{}},"component":{}}],["5.when",{"_index":3745,"title":{},"name":{},"text":{"16":{}},"component":{}}],["5/1063384",{"_index":640,"title":{},"name":{},"text":{"2":{}},"component":{}}],["5/5",{"_index":638,"title":{},"name":{},"text":{"2":{}},"component":{}}],["50",{"_index":3959,"title":{},"name":{},"text":{"22":{}},"component":{}}],["5000",{"_index":2758,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["503",{"_index":597,"title":{},"name":{},"text":{"2":{}},"component":{}}],["50489",{"_index":6002,"title":{},"name":{},"text":{"27":{}},"component":{}}],["50mb",{"_index":5057,"title":{},"name":{},"text":{"24":{}},"component":{}}],["50th",{"_index":6003,"title":{},"name":{},"text":{"27":{}},"component":{}}],["52352",{"_index":3696,"title":{},"name":{},"text":{"16":{}},"component":{}}],["53416",{"_index":5448,"title":{},"name":{},"text":{"26":{}},"component":{}}],["5432",{"_index":1048,"title":{},"name":{},"text":{"5":{},"16":{},"24":{},"26":{},"28":{}},"component":{}}],["5432/tcp",{"_index":3963,"title":{},"name":{},"text":{"22":{}},"component":{}}],["5433",{"_index":1811,"title":{},"name":{},"text":{"14":{},"16":{},"28":{}},"component":{}}],["5434",{"_index":3968,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["5434:5432",{"_index":3954,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["55281235",{"_index":692,"title":{},"name":{},"text":{"2":{}},"component":{}}],["55500",{"_index":592,"title":{},"name":{},"text":{"2":{}},"component":{}}],["56",{"_index":604,"title":{},"name":{},"text":{"2":{}},"component":{}}],["56/56",{"_index":627,"title":{},"name":{},"text":{"2":{}},"component":{}}],["572814",{"_index":6437,"title":{},"name":{},"text":{"27":{}},"component":{}}],["57536",{"_index":4029,"title":{},"name":{},"text":{"23":{}},"component":{}}],["58",{"_index":6789,"title":{},"name":{},"text":{"28":{}},"component":{}}],["58504",{"_index":4040,"title":{},"name":{},"text":{"23":{}},"component":{}}],["5866/tcp",{"_index":3961,"title":{},"name":{},"text":{"22":{}},"component":{}}],["58772",{"_index":4047,"title":{},"name":{},"text":{"23":{}},"component":{}}],["5:00",{"_index":6305,"title":{},"name":{},"text":{"27":{}},"component":{}}],["5e2",{"_index":5916,"title":{},"name":{},"text":{"27":{}},"component":{}}],["5gb+,ssd",{"_index":3905,"title":{},"name":{},"text":{"22":{}},"component":{}}],["6",{"_index":223,"title":{"2-26":{},"15-38":{},"17-6":{},"25-6":{},"27-100":{},"28-14":{}},"name":{"25":{}},"text":{"2":{},"6":{},"11":{},"13":{},"15":{},"16":{},"18":{},"25":{},"27":{},"28":{}},"component":{}}],["6','adreasx",{"_index":1648,"title":{},"name":{},"text":{"13":{}},"component":{}}],["6.1",{"_index":1861,"title":{"15-39":{},"27-101":{}},"name":{},"text":{},"component":{}}],["6.1.1",{"_index":5537,"title":{"27-102":{}},"name":{},"text":{},"component":{}}],["6.1.2",{"_index":5538,"title":{"27-103":{}},"name":{},"text":{},"component":{}}],["6.1.2.1",{"_index":5539,"title":{"27-104":{}},"name":{},"text":{},"component":{}}],["6.1.2.2",{"_index":5540,"title":{"27-105":{}},"name":{},"text":{},"component":{}}],["6.1.2.3",{"_index":5542,"title":{"27-106":{}},"name":{},"text":{},"component":{}}],["6.1.2.4",{"_index":5543,"title":{"27-107":{}},"name":{},"text":{},"component":{}}],["6.1.2.5",{"_index":5544,"title":{"27-108":{}},"name":{},"text":{},"component":{}}],["6.1.2.6",{"_index":5545,"title":{"27-109":{}},"name":{},"text":{},"component":{}}],["6.1.2.7",{"_index":5546,"title":{"27-110":{}},"name":{},"text":{},"component":{}}],["6.1.3",{"_index":5547,"title":{"27-111":{}},"name":{},"text":{},"component":{}}],["6.1.4",{"_index":5548,"title":{"27-112":{}},"name":{},"text":{},"component":{}}],["6.1.5",{"_index":5549,"title":{"27-113":{}},"name":{},"text":{},"component":{}}],["6.1.6",{"_index":5550,"title":{"27-114":{}},"name":{},"text":{},"component":{}}],["6.2",{"_index":1862,"title":{"15-40":{},"27-115":{}},"name":{},"text":{},"component":{}}],["6.2.1",{"_index":5551,"title":{"27-116":{}},"name":{},"text":{},"component":{}}],["6.2.10",{"_index":5561,"title":{"27-125":{}},"name":{},"text":{},"component":{}}],["6.2.11",{"_index":5562,"title":{"27-126":{}},"name":{},"text":{},"component":{}}],["6.2.12",{"_index":5565,"title":{"27-127":{}},"name":{},"text":{},"component":{}}],["6.2.13",{"_index":5567,"title":{"27-128":{}},"name":{},"text":{},"component":{}}],["6.2.14",{"_index":5568,"title":{"27-129":{}},"name":{},"text":{},"component":{}}],["6.2.2",{"_index":5552,"title":{"27-117":{}},"name":{},"text":{},"component":{}}],["6.2.3",{"_index":5553,"title":{"27-118":{}},"name":{},"text":{},"component":{}}],["6.2.4",{"_index":5554,"title":{"27-119":{}},"name":{},"text":{},"component":{}}],["6.2.5",{"_index":5555,"title":{"27-120":{}},"name":{},"text":{},"component":{}}],["6.2.6",{"_index":5556,"title":{"27-121":{}},"name":{},"text":{},"component":{}}],["6.2.7",{"_index":5557,"title":{"27-122":{}},"name":{},"text":{},"component":{}}],["6.2.8",{"_index":5558,"title":{"27-123":{}},"name":{},"text":{},"component":{}}],["6.2.9",{"_index":5559,"title":{"27-124":{}},"name":{},"text":{},"component":{}}],["6.3",{"_index":1863,"title":{"15-41":{},"27-130":{}},"name":{},"text":{},"component":{}}],["6.3.1",{"_index":5569,"title":{"27-131":{}},"name":{},"text":{},"component":{}}],["6.3.2",{"_index":5570,"title":{"27-132":{}},"name":{},"text":{},"component":{}}],["6.3.3",{"_index":5571,"title":{"27-133":{}},"name":{},"text":{},"component":{}}],["6.4",{"_index":1864,"title":{"15-42":{}},"name":{},"text":{},"component":{}}],["6.5",{"_index":1865,"title":{"15-43":{}},"name":{},"text":{},"component":{}}],["6.6",{"_index":1867,"title":{"15-44":{}},"name":{},"text":{},"component":{}}],["6.chang",{"_index":6495,"title":{},"name":{},"text":{"28":{}},"component":{}}],["60",{"_index":3633,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["6139",{"_index":5445,"title":{},"name":{},"text":{"26":{}},"component":{}}],["63",{"_index":5728,"title":{},"name":{},"text":{"27":{}},"component":{}}],["64",{"_index":4558,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["64gb",{"_index":3903,"title":{},"name":{},"text":{"22":{}},"component":{}}],["65536",{"_index":3685,"title":{},"name":{},"text":{"16":{}},"component":{}}],["6567",{"_index":5444,"title":{},"name":{},"text":{"26":{}},"component":{}}],["6644",{"_index":4456,"title":{},"name":{},"text":{"23":{}},"component":{}}],["6771",{"_index":679,"title":{},"name":{},"text":{"2":{}},"component":{}}],["6774",{"_index":6365,"title":{},"name":{},"text":{"27":{}},"component":{}}],["6e",{"_index":6846,"title":{},"name":{},"text":{"28":{}},"component":{}}],["6faa2d0ed705",{"_index":3956,"title":{},"name":{},"text":{"22":{}},"component":{}}],["6、compat",{"_index":1492,"title":{},"name":{},"text":{"13":{}},"component":{}}],["7",{"_index":1123,"title":{"15-45":{},"17-7":{},"25-7":{},"27-134":{},"28-15":{}},"name":{"26":{}},"text":{"6":{},"11":{},"13":{},"15":{},"18":{},"25":{},"27":{},"28":{}},"component":{}}],["7','123",{"_index":1649,"title":{},"name":{},"text":{"13":{}},"component":{}}],["7.1",{"_index":1870,"title":{"15-46":{},"27-135":{},"28-16":{}},"name":{},"text":{},"component":{}}],["7.1.1",{"_index":5572,"title":{"27-136":{},"28-17":{}},"name":{},"text":{},"component":{}}],["7.1.2",{"_index":6450,"title":{"28-18":{}},"name":{},"text":{},"component":{}}],["7.1.3",{"_index":6451,"title":{"28-19":{}},"name":{},"text":{},"component":{}}],["7.10",{"_index":5596,"title":{"27-164":{}},"name":{},"text":{},"component":{}}],["7.10.1",{"_index":5597,"title":{"27-165":{}},"name":{},"text":{},"component":{}}],["7.10.1.1",{"_index":5598,"title":{"27-166":{}},"name":{},"text":{},"component":{}}],["7.10.1.2",{"_index":5599,"title":{"27-167":{}},"name":{},"text":{},"component":{}}],["7.10.1.3",{"_index":5600,"title":{"27-168":{}},"name":{},"text":{},"component":{}}],["7.10.10",{"_index":5631,"title":{"27-198":{}},"name":{},"text":{},"component":{}}],["7.10.10.1",{"_index":5632,"title":{"27-199":{}},"name":{},"text":{},"component":{}}],["7.10.10.2",{"_index":5633,"title":{"27-200":{}},"name":{},"text":{},"component":{}}],["7.10.10.3",{"_index":5634,"title":{"27-201":{}},"name":{},"text":{},"component":{}}],["7.10.11",{"_index":5635,"title":{"27-202":{}},"name":{},"text":{},"component":{}}],["7.10.11.1",{"_index":5636,"title":{"27-203":{}},"name":{},"text":{},"component":{}}],["7.10.11.2",{"_index":5637,"title":{"27-204":{}},"name":{},"text":{},"component":{}}],["7.10.11.3",{"_index":5638,"title":{"27-205":{}},"name":{},"text":{},"component":{}}],["7.10.2",{"_index":5601,"title":{"27-169":{}},"name":{},"text":{},"component":{}}],["7.10.2.1",{"_index":5602,"title":{"27-170":{}},"name":{},"text":{},"component":{}}],["7.10.2.2",{"_index":5603,"title":{"27-171":{}},"name":{},"text":{},"component":{}}],["7.10.3",{"_index":5604,"title":{"27-172":{}},"name":{},"text":{},"component":{}}],["7.10.3.1",{"_index":5605,"title":{"27-173":{}},"name":{},"text":{},"component":{}}],["7.10.3.2",{"_index":5606,"title":{"27-174":{}},"name":{},"text":{},"component":{}}],["7.10.3.3",{"_index":5607,"title":{"27-175":{}},"name":{},"text":{},"component":{}}],["7.10.4",{"_index":5608,"title":{"27-176":{}},"name":{},"text":{},"component":{}}],["7.10.4.1",{"_index":5609,"title":{"27-177":{}},"name":{},"text":{},"component":{}}],["7.10.4.2",{"_index":5610,"title":{"27-178":{}},"name":{},"text":{},"component":{}}],["7.10.5",{"_index":5611,"title":{"27-179":{}},"name":{},"text":{},"component":{}}],["7.10.5.1",{"_index":5612,"title":{"27-180":{}},"name":{},"text":{},"component":{}}],["7.10.5.2",{"_index":5613,"title":{"27-181":{}},"name":{},"text":{},"component":{}}],["7.10.5.3",{"_index":5615,"title":{"27-182":{}},"name":{},"text":{},"component":{}}],["7.10.6",{"_index":5616,"title":{"27-183":{}},"name":{},"text":{},"component":{}}],["7.10.6.1",{"_index":5617,"title":{"27-184":{}},"name":{},"text":{},"component":{}}],["7.10.6.2",{"_index":5618,"title":{"27-185":{}},"name":{},"text":{},"component":{}}],["7.10.6.3",{"_index":5619,"title":{"27-186":{}},"name":{},"text":{},"component":{}}],["7.10.7",{"_index":5620,"title":{"27-187":{}},"name":{},"text":{},"component":{}}],["7.10.7.1",{"_index":5621,"title":{"27-188":{}},"name":{},"text":{},"component":{}}],["7.10.7.2",{"_index":5622,"title":{"27-189":{}},"name":{},"text":{},"component":{}}],["7.10.7.3",{"_index":5623,"title":{"27-190":{}},"name":{},"text":{},"component":{}}],["7.10.8",{"_index":5624,"title":{"27-191":{}},"name":{},"text":{},"component":{}}],["7.10.8.1",{"_index":5625,"title":{"27-192":{}},"name":{},"text":{},"component":{}}],["7.10.8.2",{"_index":5626,"title":{"27-193":{}},"name":{},"text":{},"component":{}}],["7.10.9",{"_index":5627,"title":{"27-194":{}},"name":{},"text":{},"component":{}}],["7.10.9.1",{"_index":5628,"title":{"27-195":{}},"name":{},"text":{},"component":{}}],["7.10.9.2",{"_index":5629,"title":{"27-196":{}},"name":{},"text":{},"component":{}}],["7.10.9.3",{"_index":5630,"title":{"27-197":{}},"name":{},"text":{},"component":{}}],["7.11",{"_index":5639,"title":{"27-206":{}},"name":{},"text":{},"component":{}}],["7.11.1",{"_index":5640,"title":{"27-207":{}},"name":{},"text":{},"component":{}}],["7.11.1.1",{"_index":5641,"title":{"27-208":{}},"name":{},"text":{},"component":{}}],["7.11.1.2",{"_index":5642,"title":{"27-209":{}},"name":{},"text":{},"component":{}}],["7.11.1.3",{"_index":5643,"title":{"27-210":{}},"name":{},"text":{},"component":{}}],["7.11.2",{"_index":5644,"title":{"27-211":{}},"name":{},"text":{},"component":{}}],["7.11.2.1",{"_index":5645,"title":{"27-212":{}},"name":{},"text":{},"component":{}}],["7.11.2.2",{"_index":5646,"title":{"27-213":{}},"name":{},"text":{},"component":{}}],["7.11.2.3",{"_index":5647,"title":{"27-214":{}},"name":{},"text":{},"component":{}}],["7.11.3",{"_index":5648,"title":{"27-215":{}},"name":{},"text":{},"component":{}}],["7.11.3.1",{"_index":5649,"title":{"27-216":{}},"name":{},"text":{},"component":{}}],["7.11.3.2",{"_index":5650,"title":{"27-217":{}},"name":{},"text":{},"component":{}}],["7.11.3.3",{"_index":5651,"title":{"27-218":{}},"name":{},"text":{},"component":{}}],["7.11.4",{"_index":5652,"title":{"27-219":{}},"name":{},"text":{},"component":{}}],["7.11.4.1",{"_index":5653,"title":{"27-220":{}},"name":{},"text":{},"component":{}}],["7.11.4.2",{"_index":5654,"title":{"27-221":{}},"name":{},"text":{},"component":{}}],["7.11.4.3",{"_index":5655,"title":{"27-222":{}},"name":{},"text":{},"component":{}}],["7.11.5",{"_index":5656,"title":{"27-223":{}},"name":{},"text":{},"component":{}}],["7.11.5.1",{"_index":5657,"title":{"27-224":{}},"name":{},"text":{},"component":{}}],["7.11.5.2",{"_index":5658,"title":{"27-225":{}},"name":{},"text":{},"component":{}}],["7.11.5.3",{"_index":5659,"title":{"27-226":{}},"name":{},"text":{},"component":{}}],["7.11.6",{"_index":5660,"title":{"27-227":{}},"name":{},"text":{},"component":{}}],["7.11.6.1",{"_index":5661,"title":{"27-228":{}},"name":{},"text":{},"component":{}}],["7.11.6.2",{"_index":5662,"title":{"27-229":{}},"name":{},"text":{},"component":{}}],["7.11.6.3",{"_index":5663,"title":{"27-230":{}},"name":{},"text":{},"component":{}}],["7.11.7",{"_index":5664,"title":{"27-231":{}},"name":{},"text":{},"component":{}}],["7.11.7.1",{"_index":5665,"title":{"27-232":{}},"name":{},"text":{},"component":{}}],["7.11.7.2",{"_index":5666,"title":{"27-233":{}},"name":{},"text":{},"component":{}}],["7.11.7.3",{"_index":5667,"title":{"27-234":{}},"name":{},"text":{},"component":{}}],["7.11.8",{"_index":5668,"title":{"27-235":{}},"name":{},"text":{},"component":{}}],["7.11.8.1",{"_index":5669,"title":{"27-236":{}},"name":{},"text":{},"component":{}}],["7.11.8.2",{"_index":5670,"title":{"27-237":{}},"name":{},"text":{},"component":{}}],["7.11.8.3",{"_index":5671,"title":{"27-238":{}},"name":{},"text":{},"component":{}}],["7.11.9",{"_index":5672,"title":{"27-239":{}},"name":{},"text":{},"component":{}}],["7.11.9.1",{"_index":5673,"title":{"27-240":{}},"name":{},"text":{},"component":{}}],["7.11.9.2",{"_index":5674,"title":{"27-241":{}},"name":{},"text":{},"component":{}}],["7.11.9.3",{"_index":5675,"title":{"27-242":{}},"name":{},"text":{},"component":{}}],["7.12",{"_index":5676,"title":{"27-243":{}},"name":{},"text":{},"component":{}}],["7.12.1",{"_index":5678,"title":{"27-244":{}},"name":{},"text":{},"component":{}}],["7.12.2",{"_index":5679,"title":{"27-245":{}},"name":{},"text":{},"component":{}}],["7.12.2.1",{"_index":5680,"title":{"27-246":{}},"name":{},"text":{},"component":{}}],["7.12.3",{"_index":5681,"title":{"27-247":{}},"name":{},"text":{},"component":{}}],["7.12.3.1",{"_index":5682,"title":{"27-248":{}},"name":{},"text":{},"component":{}}],["7.12.3.2",{"_index":5683,"title":{"27-249":{}},"name":{},"text":{},"component":{}}],["7.13",{"_index":5684,"title":{"27-250":{}},"name":{},"text":{},"component":{}}],["7.13.1",{"_index":5686,"title":{"27-251":{}},"name":{},"text":{},"component":{}}],["7.13.2",{"_index":5687,"title":{"27-252":{}},"name":{},"text":{},"component":{}}],["7.13.3",{"_index":5688,"title":{"27-253":{}},"name":{},"text":{},"component":{}}],["7.14",{"_index":5689,"title":{"27-254":{}},"name":{},"text":{},"component":{}}],["7.14.1",{"_index":5690,"title":{"27-255":{}},"name":{},"text":{},"component":{}}],["7.14.2",{"_index":5691,"title":{"27-256":{}},"name":{},"text":{},"component":{}}],["7.14.3",{"_index":5692,"title":{"27-257":{}},"name":{},"text":{},"component":{}}],["7.14.3.1",{"_index":5693,"title":{"27-258":{}},"name":{},"text":{},"component":{}}],["7.14.3.2",{"_index":5694,"title":{"27-259":{}},"name":{},"text":{},"component":{}}],["7.14.3.3",{"_index":5695,"title":{"27-260":{}},"name":{},"text":{},"component":{}}],["7.14.3.3.1",{"_index":5696,"title":{"27-261":{}},"name":{},"text":{},"component":{}}],["7.14.3.3.2",{"_index":5697,"title":{"27-262":{}},"name":{},"text":{},"component":{}}],["7.15",{"_index":5698,"title":{"27-263":{}},"name":{},"text":{},"component":{}}],["7.15.1",{"_index":5699,"title":{"27-264":{}},"name":{},"text":{},"component":{}}],["7.15.2",{"_index":5700,"title":{"27-265":{}},"name":{},"text":{},"component":{}}],["7.15.3",{"_index":5701,"title":{"27-266":{}},"name":{},"text":{},"component":{}}],["7.2",{"_index":1871,"title":{"15-47":{},"27-137":{},"28-20":{}},"name":{},"text":{},"component":{}}],["7.2.1",{"_index":5574,"title":{"27-138":{}},"name":{},"text":{},"component":{}}],["7.2.2",{"_index":5575,"title":{"27-139":{}},"name":{},"text":{},"component":{}}],["7.2.3",{"_index":5576,"title":{"27-140":{}},"name":{},"text":{},"component":{}}],["7.3",{"_index":1873,"title":{"15-48":{},"27-141":{},"28-21":{}},"name":{},"text":{},"component":{}}],["7.3.1",{"_index":5577,"title":{"27-142":{}},"name":{},"text":{},"component":{}}],["7.3.2",{"_index":5578,"title":{"27-143":{}},"name":{},"text":{},"component":{}}],["7.3.3",{"_index":5579,"title":{"27-144":{}},"name":{},"text":{},"component":{}}],["7.4",{"_index":1874,"title":{"15-49":{},"27-145":{}},"name":{},"text":{},"component":{}}],["7.4.1",{"_index":1875,"title":{"15-50":{},"27-146":{}},"name":{},"text":{},"component":{}}],["7.4.2",{"_index":1876,"title":{"15-51":{},"27-147":{}},"name":{},"text":{},"component":{}}],["7.4.3",{"_index":5580,"title":{"27-148":{}},"name":{},"text":{},"component":{}}],["7.5",{"_index":5581,"title":{"27-149":{}},"name":{},"text":{},"component":{}}],["7.5.1",{"_index":5582,"title":{"27-150":{}},"name":{},"text":{},"component":{}}],["7.6",{"_index":5583,"title":{"27-151":{}},"name":{},"text":{},"component":{}}],["7.6.1",{"_index":5584,"title":{"27-152":{}},"name":{},"text":{},"component":{}}],["7.7",{"_index":5585,"title":{"27-153":{}},"name":{},"text":{},"component":{}}],["7.7.1",{"_index":5586,"title":{"27-154":{}},"name":{},"text":{},"component":{}}],["7.7.2",{"_index":5587,"title":{"27-155":{}},"name":{},"text":{},"component":{}}],["7.7.3",{"_index":5588,"title":{"27-156":{}},"name":{},"text":{},"component":{}}],["7.8",{"_index":5589,"title":{"27-157":{}},"name":{},"text":{},"component":{}}],["7.8.1",{"_index":5590,"title":{"27-158":{}},"name":{},"text":{},"component":{}}],["7.8.2",{"_index":5591,"title":{"27-159":{}},"name":{},"text":{},"component":{}}],["7.8e",{"_index":6842,"title":{},"name":{},"text":{"28":{}},"component":{}}],["7.9",{"_index":5592,"title":{"27-160":{}},"name":{},"text":{},"component":{}}],["7.9.1",{"_index":5593,"title":{"27-161":{}},"name":{},"text":{},"component":{}}],["7.9.2",{"_index":5594,"title":{"27-162":{}},"name":{},"text":{},"component":{}}],["7.9.3",{"_index":5595,"title":{"27-163":{}},"name":{},"text":{},"component":{}}],["7.to",{"_index":6496,"title":{},"name":{},"text":{"28":{}},"component":{}}],["70",{"_index":4867,"title":{},"name":{},"text":{"23":{}},"component":{}}],["71",{"_index":4866,"title":{},"name":{},"text":{"23":{}},"component":{}}],["7132",{"_index":4030,"title":{},"name":{},"text":{"23":{}},"component":{}}],["72",{"_index":598,"title":{},"name":{},"text":{"2":{}},"component":{}}],["721",{"_index":116,"title":{},"name":{},"text":{"1":{}},"component":{}}],["722.92",{"_index":3760,"title":{},"name":{},"text":{"16":{}},"component":{}}],["724",{"_index":121,"title":{},"name":{},"text":{"1":{}},"component":{}}],["768",{"_index":1787,"title":{},"name":{},"text":{"13":{}},"component":{}}],["7:00",{"_index":6331,"title":{},"name":{},"text":{"27":{}},"component":{}}],["7b",{"_index":6273,"title":{},"name":{},"text":{"27":{}},"component":{}}],["7、compat",{"_index":1501,"title":{},"name":{},"text":{"13":{}},"component":{}}],["8",{"_index":1125,"title":{"15-52":{},"17-8":{},"25-8":{},"27-267":{},"28-22":{}},"name":{"27":{}},"text":{"6":{},"11":{},"15":{},"16":{},"18":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["8','adc",{"_index":1650,"title":{},"name":{},"text":{"13":{}},"component":{}}],["8'::timestamptz",{"_index":6200,"title":{},"name":{},"text":{"27":{}},"component":{}}],["8.1",{"_index":1878,"title":{"15-53":{},"27-268":{},"28-23":{}},"name":{},"text":{},"component":{}}],["8.1.1",{"_index":5702,"title":{"27-269":{}},"name":{},"text":{},"component":{}}],["8.1.2",{"_index":5703,"title":{"27-270":{}},"name":{},"text":{},"component":{}}],["8.1.3",{"_index":5704,"title":{"27-271":{}},"name":{},"text":{},"component":{}}],["8.2",{"_index":1879,"title":{"15-54":{},"27-272":{},"28-24":{}},"name":{},"text":{"27":{}},"component":{}}],["8.2.1",{"_index":829,"title":{"27-273":{}},"name":{},"text":{"3":{}},"component":{}}],["8.2.1.tar.gz",{"_index":828,"title":{},"name":{},"text":{"3":{}},"component":{}}],["8.2.2",{"_index":5706,"title":{"27-274":{}},"name":{},"text":{},"component":{}}],["8.3",{"_index":1880,"title":{"15-55":{},"27-275":{},"28-25":{}},"name":{},"text":{},"component":{}}],["8.3.1",{"_index":5707,"title":{"27-276":{}},"name":{},"text":{},"component":{}}],["8.3.2",{"_index":5708,"title":{"27-277":{}},"name":{},"text":{},"component":{}}],["8.3.5",{"_index":3544,"title":{},"name":{},"text":{"16":{}},"component":{}}],["8.3.8",{"_index":3545,"title":{},"name":{},"text":{"16":{}},"component":{}}],["8.4",{"_index":1881,"title":{"15-56":{},"28-26":{}},"name":{},"text":{},"component":{}}],["8.4.1",{"_index":6454,"title":{"28-27":{}},"name":{},"text":{},"component":{}}],["8.4.2",{"_index":6455,"title":{"28-28":{}},"name":{},"text":{},"component":{}}],["8.4.3",{"_index":6456,"title":{"28-29":{}},"name":{},"text":{},"component":{}}],["8.4.4",{"_index":6457,"title":{"28-30":{}},"name":{},"text":{},"component":{}}],["8.5",{"_index":1882,"title":{"15-57":{},"28-31":{}},"name":{},"text":{},"component":{}}],["8.6",{"_index":1883,"title":{"15-58":{}},"name":{},"text":{},"component":{}}],["8.8e",{"_index":6849,"title":{},"name":{},"text":{"28":{}},"component":{}}],["8.final",{"_index":6497,"title":{},"name":{},"text":{"28":{}},"component":{}}],["8.x/cento",{"_index":3910,"title":{},"name":{},"text":{"22":{}},"component":{}}],["80",{"_index":5311,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["800mb,hdd",{"_index":3904,"title":{},"name":{},"text":{"22":{}},"component":{}}],["8067",{"_index":5440,"title":{},"name":{},"text":{"26":{}},"component":{}}],["81",{"_index":3542,"title":{},"name":{},"text":{"16":{}},"component":{}}],["82112",{"_index":590,"title":{},"name":{},"text":{"2":{}},"component":{}}],["858",{"_index":665,"title":{},"name":{},"text":{"2":{}},"component":{}}],["860",{"_index":3754,"title":{},"name":{},"text":{"16":{}},"component":{}}],["8601:2004",{"_index":6312,"title":{},"name":{},"text":{"27":{}},"component":{}}],["86400",{"_index":5126,"title":{},"name":{},"text":{"24":{}},"component":{}}],["88",{"_index":3846,"title":{},"name":{},"text":{"18":{}},"component":{}}],["8:00",{"_index":1748,"title":{},"name":{},"text":{"13":{}},"component":{}}],["8:30",{"_index":1702,"title":{},"name":{},"text":{"13":{}},"component":{}}],["8、compat",{"_index":1502,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9",{"_index":336,"title":{"25-9":{},"28-32":{}},"name":{"28":{}},"text":{"2":{},"3":{},"6":{},"11":{},"13":{},"15":{},"16":{},"18":{},"22":{},"25":{},"27":{},"28":{}},"component":{}}],["9','adc,.d",{"_index":1652,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9,10},{11,12}}'::int",{"_index":6026,"title":{},"name":{},"text":{"27":{}},"component":{}}],["9.1",{"_index":5344,"title":{"25-10":{},"28-33":{}},"name":{},"text":{},"component":{}}],["9.1.1",{"_index":6459,"title":{"28-34":{}},"name":{},"text":{},"component":{}}],["9.1.2",{"_index":6460,"title":{"28-35":{}},"name":{},"text":{},"component":{}}],["9.1.3",{"_index":6461,"title":{"28-36":{}},"name":{},"text":{},"component":{}}],["9.2",{"_index":5345,"title":{"25-11":{},"28-37":{}},"name":{},"text":{},"component":{}}],["9.2.1",{"_index":6462,"title":{"28-38":{}},"name":{},"text":{},"component":{}}],["9.2.2",{"_index":6463,"title":{"28-39":{}},"name":{},"text":{},"component":{}}],["9.2.2.1",{"_index":6464,"title":{"28-40":{}},"name":{},"text":{},"component":{}}],["9.2.2.1.1",{"_index":6465,"title":{"28-41":{}},"name":{},"text":{},"component":{}}],["9.2.2.2",{"_index":6466,"title":{"28-42":{}},"name":{},"text":{},"component":{}}],["9.2.2.3",{"_index":6468,"title":{"28-43":{}},"name":{},"text":{},"component":{}}],["9.3",{"_index":5346,"title":{"25-12":{},"28-44":{}},"name":{},"text":{},"component":{}}],["9.4",{"_index":5347,"title":{"25-13":{},"28-45":{}},"name":{},"text":{},"component":{}}],["9.4.1",{"_index":6470,"title":{"28-46":{}},"name":{},"text":{},"component":{}}],["9.4.2",{"_index":6471,"title":{"28-47":{}},"name":{},"text":{},"component":{}}],["9.4.3",{"_index":6472,"title":{"28-48":{}},"name":{},"text":{},"component":{}}],["9.4.4",{"_index":6473,"title":{"28-49":{}},"name":{},"text":{},"component":{}}],["9.4.5",{"_index":6474,"title":{"28-50":{}},"name":{},"text":{},"component":{}}],["9.4.6",{"_index":6475,"title":{"28-51":{}},"name":{},"text":{},"component":{}}],["9.4.7",{"_index":6477,"title":{"28-52":{}},"name":{},"text":{},"component":{}}],["9.4.8",{"_index":6478,"title":{"28-53":{}},"name":{},"text":{},"component":{}}],["9.4.9",{"_index":6479,"title":{"28-54":{}},"name":{},"text":{},"component":{}}],["9.5",{"_index":5348,"title":{"25-14":{},"28-55":{}},"name":{},"text":{},"component":{}}],["9.99",{"_index":1667,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["9/ubuntu",{"_index":3911,"title":{},"name":{},"text":{"22":{}},"component":{}}],["90",{"_index":3750,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["9000",{"_index":6673,"title":{},"name":{},"text":{"28":{}},"component":{}}],["90210",{"_index":6795,"title":{},"name":{},"text":{"28":{}},"component":{}}],["916",{"_index":4037,"title":{},"name":{},"text":{"23":{}},"component":{}}],["918843",{"_index":589,"title":{},"name":{},"text":{"2":{}},"component":{}}],["926",{"_index":688,"title":{},"name":{},"text":{"2":{}},"component":{}}],["94105",{"_index":6794,"title":{},"name":{},"text":{"28":{}},"component":{}}],["95",{"_index":125,"title":{},"name":{},"text":{"1":{}},"component":{}}],["950",{"_index":685,"title":{},"name":{},"text":{"2":{}},"component":{}}],["97.75",{"_index":3775,"title":{},"name":{},"text":{"16":{}},"component":{}}],["99",{"_index":6854,"title":{},"name":{},"text":{"28":{}},"component":{}}],["99,999,999",{"_index":1663,"title":{},"name":{},"text":{"13":{}},"component":{}}],["99.8",{"_index":650,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9999.99::numer",{"_index":6278,"title":{},"name":{},"text":{"27":{}},"component":{}}],["9]','*#')from",{"_index":1603,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9]','*#',2)from",{"_index":1604,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9、compat",{"_index":1508,"title":{},"name":{},"text":{"13":{}},"component":{}}],["_",{"_index":425,"title":{},"name":{},"text":{"2":{},"15":{},"27":{}},"component":{}}],["__",{"_index":2142,"title":{},"name":{},"text":{"15":{}},"component":{}}],["__bold__",{"_index":2143,"title":{},"name":{},"text":{"15":{}},"component":{}}],["_italic_",{"_index":2144,"title":{},"name":{},"text":{"15":{}},"component":{}}],["_pecif",{"_index":2082,"title":{},"name":{},"text":{"15":{}},"component":{}}],["_specification_2",{"_index":2167,"title":{},"name":{},"text":{"15":{}},"component":{}}],["a(i",{"_index":6037,"title":{},"name":{},"text":{"27":{}},"component":{}}],["a,b,c",{"_index":3894,"title":{},"name":{},"text":{"21":{}},"component":{}}],["a.bid",{"_index":6870,"title":{},"name":{},"text":{"28":{}},"component":{}}],["a.cid",{"_index":6871,"title":{},"name":{},"text":{"28":{}},"component":{}}],["a.id",{"_index":6147,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["a/b",{"_index":3833,"title":{},"name":{},"text":{"18":{}},"component":{}}],["a[uto",{"_index":3609,"title":{},"name":{},"text":{"16":{}},"component":{}}],["aa/id",{"_index":3831,"title":{},"name":{},"text":{"18":{}},"component":{}}],["aaa",{"_index":1554,"title":{},"name":{},"text":{"13":{}},"component":{}}],["ab\\00c4cd",{"_index":1777,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abc",{"_index":1634,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abc',1,2,1,'c",{"_index":1637,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abcabcabc",{"_index":1633,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abcbvbnb",{"_index":1656,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abcd",{"_index":1570,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abcdef",{"_index":1758,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abcdefg",{"_index":1560,"title":{},"name":{},"text":{"13":{}},"component":{}}],["abi",{"_index":84,"title":{},"name":{},"text":{"1":{}},"component":{}}],["abil",{"_index":4738,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["abort",{"_index":2962,"title":{"27-20":{},"27-63":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["abort[\"abort",{"_index":4859,"title":{},"name":{},"text":{"23":{}},"component":{}}],["abov",{"_index":618,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["abrupt",{"_index":6899,"title":{},"name":{},"text":{"28":{}},"component":{}}],["absenc",{"_index":3572,"title":{},"name":{},"text":{"16":{}},"component":{}}],["absent",{"_index":1565,"title":{},"name":{},"text":{"13":{}},"component":{}}],["absolut",{"_index":2884,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["accent",{"_index":1791,"title":{},"name":{},"text":{"13":{}},"component":{}}],["accept",{"_index":1926,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["access",{"_index":372,"title":{"28-7":{}},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"15":{},"16":{},"19":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["accessexclusivelock",{"_index":5321,"title":{},"name":{},"text":{"24":{}},"component":{}}],["accident",{"_index":2998,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["accommod",{"_index":3271,"title":{},"name":{},"text":{"16":{},"21":{}},"component":{}}],["accomplish",{"_index":5178,"title":{},"name":{},"text":{"24":{}},"component":{}}],["accord",{"_index":968,"title":{},"name":{},"text":{"4":{},"13":{},"15":{},"16":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["accordingli",{"_index":3190,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["account",{"_index":1942,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{}},"component":{}}],["accumul",{"_index":4092,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["accur",{"_index":955,"title":{},"name":{},"text":{"4":{},"13":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["accuraci",{"_index":925,"title":{"16-175":{}},"name":{},"text":{"4":{},"16":{},"18":{},"28":{}},"component":{}}],["achiev",{"_index":913,"title":{"6-2":{}},"name":{},"text":{"4":{},"6":{},"15":{},"16":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["ack",{"_index":1595,"title":{},"name":{},"text":{"13":{}},"component":{}}],["acknowledg",{"_index":5262,"title":{},"name":{},"text":{"24":{}},"component":{}}],["acl",{"_index":3239,"title":{},"name":{},"text":{"16":{}},"component":{}}],["acquir",{"_index":3339,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["acquisit",{"_index":5109,"title":{},"name":{},"text":{"24":{}},"component":{}}],["act",{"_index":1900,"title":{},"name":{},"text":{"15":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["action",{"_index":2648,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["activ",{"_index":1337,"title":{"23-1":{}},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["active_tim",{"_index":4623,"title":{},"name":{},"text":{"23":{}},"component":{}}],["actual",{"_index":1989,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["ad",{"_index":1040,"title":{"14":{},"5-4":{}},"name":{},"text":{"5":{},"6":{},"11":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["adapt",{"_index":262,"title":{},"name":{},"text":{"2":{}},"component":{}}],["add",{"_index":949,"title":{"15-55":{}},"name":{},"text":{"4":{},"6":{},"7":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["add_coldef",{"_index":6098,"title":{},"name":{},"text":{"27":{}},"component":{}}],["add_month",{"_index":1419,"title":{"27-187":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["add_months(d",{"_index":6211,"title":{},"name":{},"text":{"27":{}},"component":{}}],["add_months(sysd",{"_index":1476,"title":{},"name":{},"text":{"13":{}},"component":{}}],["add_months(sysdate(),1",{"_index":1473,"title":{},"name":{},"text":{"13":{}},"component":{}}],["add_months(timestamp",{"_index":6213,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addinshmeminit",{"_index":4368,"title":{},"name":{},"text":{"23":{}},"component":{}}],["addit",{"_index":1311,"title":{"27-265":{}},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["addition",{"_index":908,"title":{},"name":{},"text":{"4":{},"18":{},"27":{}},"component":{}}],["additions,but",{"_index":5717,"title":{},"name":{},"text":{"27":{}},"component":{}}],["address",{"_index":385,"title":{},"name":{},"text":{"2":{},"6":{},"16":{},"21":{},"23":{},"24":{},"26":{}},"component":{}}],["address：https://metacpan.org/release/dbd",{"_index":401,"title":{},"name":{},"text":{"2":{}},"component":{}}],["address：https://sourceforge.net/projects/ora2pg",{"_index":393,"title":{},"name":{},"text":{"2":{}},"component":{}}],["addvector",{"_index":1035,"title":{},"name":{},"text":{"4":{}},"component":{}}],["addvector('[1,2,3]','[4,5,6",{"_index":1033,"title":{},"name":{},"text":{"4":{}},"component":{}}],["addvector(a",{"_index":1031,"title":{},"name":{},"text":{"4":{}},"component":{}}],["adequ",{"_index":5229,"title":{},"name":{},"text":{"24":{}},"component":{}}],["adjac",{"_index":5114,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["adjust",{"_index":921,"title":{},"name":{},"text":{"4":{},"13":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["administ",{"_index":6548,"title":{},"name":{},"text":{"28":{}},"component":{}}],["administr",{"_index":1339,"title":{},"name":{},"text":{"11":{},"23":{},"24":{},"27":{}},"component":{}}],["administration.thi",{"_index":5714,"title":{},"name":{},"text":{"27":{}},"component":{}}],["administrator’",{"_index":4961,"title":{"24-42":{}},"name":{},"text":{},"component":{}}],["adoc",{"_index":2209,"title":{},"name":{},"text":{"15":{}},"component":{}}],["adopt",{"_index":3818,"title":{},"name":{},"text":{"18":{}},"component":{}}],["adress",{"_index":6108,"title":{},"name":{},"text":{"27":{}},"component":{}}],["adt",{"_index":6220,"title":{},"name":{},"text":{"27":{}},"component":{}}],["advanc",{"_index":1295,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"23":{},"24":{}},"component":{}}],["advantag",{"_index":1290,"title":{"11-5":{}},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["adversari",{"_index":3001,"title":{},"name":{},"text":{"16":{}},"component":{}}],["advic",{"_index":6891,"title":{},"name":{},"text":{"28":{}},"component":{}}],["advis",{"_index":2605,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["advisori",{"_index":4358,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["ae",{"_index":6820,"title":{},"name":{},"text":{"28":{}},"component":{}}],["af",{"_index":6607,"title":{},"name":{},"text":{"28":{}},"component":{}}],["affect",{"_index":497,"title":{},"name":{},"text":{"2":{},"6":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["affected.clusterdb",{"_index":2434,"title":{},"name":{},"text":{"16":{}},"component":{}}],["afford",{"_index":6886,"title":{},"name":{},"text":{"28":{}},"component":{}}],["afghanistan",{"_index":6608,"title":{},"name":{},"text":{"28":{}},"component":{}}],["afterward",{"_index":2218,"title":{"28-53":{}},"name":{},"text":{"15":{},"28":{}},"component":{}}],["ag",{"_index":5040,"title":{},"name":{},"text":{"24":{}},"component":{}}],["again",{"_index":2433,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["again.aft",{"_index":2670,"title":{},"name":{},"text":{"16":{}},"component":{}}],["again.when",{"_index":3148,"title":{},"name":{},"text":{"16":{}},"component":{}}],["against",{"_index":2458,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["age(datfrozenxid",{"_index":5070,"title":{},"name":{},"text":{"24":{}},"component":{}}],["age(relfrozenxid",{"_index":5073,"title":{},"name":{},"text":{"24":{}},"component":{}}],["aggreg",{"_index":3160,"title":{"27-16":{},"27-122":{}},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["aggregate_claus",{"_index":1399,"title":{},"name":{},"text":{"12":{}},"component":{}}],["aggregate_nam",{"_index":5980,"title":{},"name":{},"text":{"27":{}},"component":{}}],["aggregate’",{"_index":5992,"title":{},"name":{},"text":{"27":{}},"component":{}}],["aggress",{"_index":5034,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ago",{"_index":2794,"title":{},"name":{},"text":{"16":{},"22":{}},"component":{}}],["ahead",{"_index":2522,"title":{"24-14":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["aid",{"_index":3087,"title":{},"name":{},"text":{"16":{}},"component":{}}],["aim",{"_index":3863,"title":{},"name":{},"text":{"20":{}},"component":{}}],["al",{"_index":6609,"title":{},"name":{},"text":{"28":{}},"component":{}}],["albania",{"_index":6610,"title":{},"name":{},"text":{"28":{}},"component":{}}],["albeit",{"_index":6523,"title":{},"name":{},"text":{"28":{}},"component":{}}],["alert",{"_index":5141,"title":{},"name":{},"text":{"24":{}},"component":{}}],["algebra",{"_index":6068,"title":{},"name":{},"text":{"27":{}},"component":{}}],["algeria",{"_index":6612,"title":{},"name":{},"text":{"28":{}},"component":{}}],["algorithm",{"_index":914,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["alia",{"_index":5954,"title":{},"name":{},"text":{"27":{}},"component":{}}],["align",{"_index":2020,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"27":{},"28":{}},"component":{}}],["alik",{"_index":6578,"title":{},"name":{},"text":{"28":{}},"component":{}}],["aliv",{"_index":3715,"title":{},"name":{},"text":{"16":{}},"component":{}}],["all.sh",{"_index":765,"title":{},"name":{},"text":{"2":{}},"component":{}}],["allevi",{"_index":4989,"title":{},"name":{},"text":{"24":{}},"component":{}}],["alloc",{"_index":4310,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["allow",{"_index":780,"title":{},"name":{},"text":{"3":{},"4":{},"8":{},"11":{},"15":{},"16":{},"17":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["alon",{"_index":6525,"title":{},"name":{},"text":{"28":{}},"component":{}}],["along",{"_index":3145,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["alongsid",{"_index":2004,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["alphabet",{"_index":140,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["alphanumer",{"_index":5927,"title":{},"name":{},"text":{"27":{}},"component":{}}],["alreadi",{"_index":1917,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["alter",{"_index":92,"title":{"20-5":{},"20-12":{}},"name":{},"text":{"1":{},"2":{},"12":{},"16":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["alter_us",{"_index":6103,"title":{},"name":{},"text":{"27":{}},"component":{}}],["altern",{"_index":271,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["although",{"_index":2620,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["altogeth",{"_index":3153,"title":{},"name":{},"text":{"16":{}},"component":{}}],["alway",{"_index":1299,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["ambigu",{"_index":3109,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["amcheck",{"_index":2877,"title":{},"name":{},"text":{"16":{}},"component":{}}],["amcheck'",{"_index":2456,"title":{},"name":{},"text":{"16":{}},"component":{}}],["amcheck’",{"_index":2857,"title":{},"name":{},"text":{"16":{}},"component":{}}],["american_america.utf8",{"_index":475,"title":{},"name":{},"text":{"2":{}},"component":{}}],["amount",{"_index":2970,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["ampersand",{"_index":5853,"title":{},"name":{},"text":{"27":{}},"component":{}}],["analog",{"_index":2553,"title":{},"name":{},"text":{"16":{}},"component":{}}],["analysi",{"_index":514,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["analyt",{"_index":1376,"title":{},"name":{},"text":{"11":{},"24":{}},"component":{}}],["analyz",{"_index":2689,"title":{"23-30":{},"28-35":{},"28-53":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["analyze_count",{"_index":4659,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ancestor",{"_index":2666,"title":{},"name":{},"text":{"16":{}},"component":{}}],["and/or",{"_index":622,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["and/or/not",{"_index":6065,"title":{},"name":{},"text":{"27":{}},"component":{}}],["angl",{"_index":2121,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ann",{"_index":953,"title":{},"name":{},"text":{"4":{}},"component":{}}],["annot",{"_index":1406,"title":{},"name":{},"text":{"12":{},"28":{}},"component":{}}],["annoyingli",{"_index":6864,"title":{},"name":{},"text":{"28":{}},"component":{}}],["anomali",{"_index":3126,"title":{},"name":{},"text":{"16":{}},"component":{}}],["anonym",{"_index":888,"title":{"10":{},"4-9":{}},"name":{},"text":{"10":{},"11":{},"23":{},"27":{}},"component":{}}],["anoth",{"_index":231,"title":{},"name":{},"text":{"2":{},"5":{},"13":{},"15":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["answer",{"_index":1830,"title":{"15-14":{}},"name":{},"text":{"24":{}},"component":{}}],["anti",{"_index":5049,"title":{},"name":{},"text":{"24":{}},"component":{}}],["anticip",{"_index":6598,"title":{},"name":{},"text":{"28":{}},"component":{}}],["antora",{"_index":2151,"title":{},"name":{},"text":{"15":{}},"component":{}}],["anybodi",{"_index":2025,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["anymor",{"_index":5337,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["anyon",{"_index":1940,"title":{},"name":{},"text":{"15":{}},"component":{}}],["anyth",{"_index":2009,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"27":{}},"component":{}}],["anytim",{"_index":4819,"title":{},"name":{},"text":{"23":{}},"component":{}}],["anyway",{"_index":2637,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["anywher",{"_index":1323,"title":{},"name":{},"text":{"11":{},"16":{},"27":{}},"component":{}}],["apach",{"_index":1951,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"29":{}},"component":{}}],["apart",{"_index":786,"title":{},"name":{},"text":{"3":{},"4":{},"13":{}},"component":{}}],["apo",{"_index":6819,"title":{},"name":{},"text":{"28":{}},"component":{}}],["app",{"_index":1378,"title":{},"name":{},"text":{"11":{}},"component":{}}],["appar",{"_index":2836,"title":{},"name":{},"text":{"16":{}},"component":{}}],["appear",{"_index":1563,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["appearing.thi",{"_index":3362,"title":{},"name":{},"text":{"16":{}},"component":{}}],["append",{"_index":2894,"title":{"27-17":{},"27-275":{},"27-276":{}},"name":{},"text":{"16":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["appendchildxml",{"_index":3791,"title":{"18-10":{}},"name":{},"text":{"18":{}},"component":{}}],["appendchildxml(xmltyp",{"_index":3836,"title":{},"name":{},"text":{"18":{}},"component":{}}],["appendix",{"_index":5845,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["appendreadi",{"_index":4294,"title":{},"name":{},"text":{"23":{}},"component":{}}],["appli",{"_index":42,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["applic",{"_index":245,"title":{"11-7":{},"15-18":{},"16-2":{},"16-122":{},"17-5":{}},"name":{},"text":{"2":{},"4":{},"11":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["application_nam",{"_index":2535,"title":{},"name":{},"text":{"16":{},"23":{},"26":{}},"component":{}}],["apply_error_count",{"_index":4549,"title":{},"name":{},"text":{"23":{}},"component":{}}],["appreci",{"_index":1891,"title":{},"name":{},"text":{"15":{}},"component":{}}],["approach",{"_index":1315,"title":{},"name":{},"text":{"11":{},"16":{},"18":{},"24":{},"28":{}},"component":{}}],["approach.prepare`prepar",{"_index":2790,"title":{},"name":{},"text":{"16":{}},"component":{}}],["appropri",{"_index":2437,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["approxim",{"_index":612,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["apt",{"_index":5403,"title":{},"name":{},"text":{"25":{}},"component":{}}],["arbitrari",{"_index":5744,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["architectur",{"_index":2107,"title":{"27-2":{}},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["architectures.pg_restor",{"_index":2551,"title":{},"name":{},"text":{"16":{}},"component":{}}],["architectures.when",{"_index":2504,"title":{},"name":{},"text":{"16":{}},"component":{}}],["archiv",{"_index":2494,"title":{"24-37":{},"28-21":{},"28-52":{}},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["archive.`t",{"_index":3498,"title":{},"name":{},"text":{"16":{}},"component":{}}],["archive.thi",{"_index":3491,"title":{},"name":{},"text":{"16":{}},"component":{}}],["archive_cleanup_command",{"_index":2606,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["archive_command",{"_index":2525,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["archive_librari",{"_index":5225,"title":{},"name":{},"text":{"24":{}},"component":{}}],["archive_mod",{"_index":5264,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["archive_timeout",{"_index":2527,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["archivecleanupcommand",{"_index":4296,"title":{},"name":{},"text":{"23":{}},"component":{}}],["archivecommand",{"_index":4297,"title":{},"name":{},"text":{"23":{}},"component":{}}],["archived_count",{"_index":4568,"title":{},"name":{},"text":{"23":{}},"component":{}}],["archivermain",{"_index":4199,"title":{},"name":{},"text":{"23":{}},"component":{}}],["are:`act",{"_index":4169,"title":{},"name":{},"text":{"23":{}},"component":{}}],["are:`async",{"_index":4486,"title":{},"name":{},"text":{"23":{}},"component":{}}],["are:`d",{"_index":3060,"title":{},"name":{},"text":{"16":{}},"component":{}}],["are:`startup",{"_index":4460,"title":{},"name":{},"text":{"23":{}},"component":{}}],["area",{"_index":5080,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["aren’t",{"_index":3428,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["arg0",{"_index":4816,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg1",{"_index":4822,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg2",{"_index":4823,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg3",{"_index":4824,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg4",{"_index":4825,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg5",{"_index":4831,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg6",{"_index":4833,"title":{},"name":{},"text":{"23":{}},"component":{}}],["arg7",{"_index":4834,"title":{},"name":{},"text":{"23":{}},"component":{}}],["argument",{"_index":1390,"title":{},"name":{},"text":{"12":{},"16":{},"23":{},"27":{}},"component":{}}],["argument(",{"_index":5997,"title":{},"name":{},"text":{"27":{}},"component":{}}],["argument’",{"_index":6096,"title":{},"name":{},"text":{"27":{}},"component":{}}],["aris",{"_index":6582,"title":{},"name":{},"text":{"28":{}},"component":{}}],["arithmet",{"_index":5027,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["arm",{"_index":6079,"title":{},"name":{},"text":{"27":{}},"component":{}}],["around",{"_index":2435,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["arr",{"_index":6023,"title":{},"name":{},"text":{"27":{}},"component":{}}],["arr(f1",{"_index":6021,"title":{},"name":{},"text":{"27":{}},"component":{}}],["arrang",{"_index":1659,"title":{},"name":{},"text":{"13":{},"24":{}},"component":{}}],["array",{"_index":1081,"title":{"27-127":{}},"name":{},"text":{"6":{},"24":{},"27":{}},"component":{}}],["array(select",{"_index":6029,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[1,2,22.7]::integ",{"_index":6014,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[1,2,3+4",{"_index":6012,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[3,4",{"_index":6017,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[[1,2],[3,4",{"_index":6019,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[[5,6],[7,8",{"_index":6024,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[]::integ",{"_index":6028,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[array[1,2",{"_index":6016,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[f1",{"_index":6025,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array[i",{"_index":6034,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array_agg",{"_index":5988,"title":{},"name":{},"text":{"27":{}},"component":{}}],["array_agg(a",{"_index":5990,"title":{},"name":{},"text":{"27":{}},"component":{}}],["arrayfunction(a,b))[42",{"_index":5963,"title":{},"name":{},"text":{"27":{}},"component":{}}],["arriv",{"_index":2181,"title":{},"name":{},"text":{"15":{},"23":{},"24":{}},"component":{}}],["art",{"_index":6635,"title":{},"name":{},"text":{"28":{}},"component":{}}],["articl",{"_index":1834,"title":{"15-15":{}},"name":{},"text":{"15":{}},"component":{}}],["artifici",{"_index":894,"title":{},"name":{},"text":{"4":{}},"component":{}}],["artist",{"_index":362,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ascend",{"_index":3856,"title":{},"name":{},"text":{"19":{}},"component":{}}],["ascii",{"_index":1772,"title":{},"name":{},"text":{"13":{},"28":{}},"component":{}}],["asciidoc",{"_index":2210,"title":{},"name":{},"text":{"15":{}},"component":{}}],["asciistr",{"_index":1457,"title":{},"name":{},"text":{"13":{}},"component":{}}],["asciistr('abäcd",{"_index":1776,"title":{},"name":{},"text":{"13":{}},"component":{}}],["asciistr('hello",{"_index":1773,"title":{},"name":{},"text":{"13":{}},"component":{}}],["asciistr(decompos",{"_index":1796,"title":{},"name":{},"text":{"13":{}},"component":{}}],["asia/hong_kong",{"_index":1755,"title":{},"name":{},"text":{"13":{}},"component":{}}],["asia/shanghai",{"_index":1752,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["asid",{"_index":6894,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ask",{"_index":2011,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"27":{},"28":{}},"component":{}}],["aspect",{"_index":6592,"title":{},"name":{},"text":{"28":{}},"component":{}}],["assess",{"_index":201,"title":{"2-14":{}},"name":{},"text":{},"component":{}}],["assign",{"_index":2586,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["assist",{"_index":2640,"title":{},"name":{},"text":{"16":{}},"component":{}}],["associ",{"_index":110,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["assum",{"_index":1948,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["assumpt",{"_index":6518,"title":{},"name":{},"text":{"28":{}},"component":{}}],["assur",{"_index":5705,"title":{"27-271":{}},"name":{},"text":{},"component":{}}],["ast",{"_index":6219,"title":{},"name":{},"text":{"27":{}},"component":{}}],["asterisk",{"_index":5930,"title":{},"name":{},"text":{"27":{}},"component":{}}],["async",{"_index":5167,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["asynchron",{"_index":4238,"title":{"24-18":{}},"name":{},"text":{"23":{},"24":{},"26":{}},"component":{}}],["asynchronous.potenti",{"_index":4487,"title":{},"name":{},"text":{"23":{}},"component":{}}],["atlanta",{"_index":6835,"title":{},"name":{},"text":{"28":{}},"component":{}}],["atom",{"_index":5807,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["attach",{"_index":76,"title":{},"name":{},"text":{"1":{},"23":{},"24":{},"27":{}},"component":{}}],["attempt",{"_index":2557,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["attempt.not",{"_index":3433,"title":{},"name":{},"text":{"16":{}},"component":{}}],["attent",{"_index":1898,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["attribut",{"_index":1956,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"28":{}},"component":{}}],["attribute’",{"_index":6570,"title":{},"name":{},"text":{"28":{}},"component":{}}],["atx",{"_index":2097,"title":{},"name":{},"text":{"15":{}},"component":{}}],["audit",{"_index":522,"title":{},"name":{},"text":{"2":{}},"component":{}}],["auth",{"_index":5381,"title":{},"name":{},"text":{"25":{}},"component":{}}],["authent",{"_index":2520,"title":{"24-26":{}},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["authid",{"_index":6388,"title":{},"name":{},"text":{"27":{}},"component":{}}],["author",{"_index":64,"title":{"2-20":{}},"name":{},"text":{"1":{},"15":{},"16":{},"27":{}},"component":{}}],["authortwitt",{"_index":2189,"title":{},"name":{},"text":{"15":{}},"component":{}}],["auto",{"_index":2738,"title":{},"name":{},"text":{"16":{}},"component":{}}],["autoanalyz",{"_index":5018,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autoanalyze_count",{"_index":4660,"title":{},"name":{},"text":{"23":{}},"component":{}}],["autocommit",{"_index":2796,"title":{"28-46":{}},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["autoconf",{"_index":809,"title":{},"name":{},"text":{"3":{}},"component":{}}],["autofil",{"_index":4369,"title":{},"name":{},"text":{"23":{}},"component":{}}],["autogen.sh",{"_index":835,"title":{},"name":{},"text":{"3":{}},"component":{}}],["autom",{"_index":775,"title":{},"name":{},"text":{"2":{},"16":{},"24":{}},"component":{}}],["automak",{"_index":804,"title":{},"name":{},"text":{"3":{}},"component":{}}],["automat",{"_index":283,"title":{},"name":{},"text":{"2":{},"9":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["autovacuum",{"_index":3944,"title":{"24-7":{}},"name":{},"text":{"22":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["autovacuum_count",{"_index":4658,"title":{},"name":{},"text":{"23":{}},"component":{}}],["autovacuum_freeze_max_ag",{"_index":5041,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_freeze_min_ag",{"_index":5103,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_max_work",{"_index":5091,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_multixact_freeze_max_ag",{"_index":5086,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_naptim",{"_index":5089,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_naptime/n",{"_index":5090,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_cost_delay",{"_index":5107,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_cost_limit",{"_index":5108,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_insert_scale_factor",{"_index":5101,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_insert_threshold",{"_index":5100,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_scale_factor",{"_index":5098,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_vacuum_threshold",{"_index":5097,"title":{},"name":{},"text":{"24":{}},"component":{}}],["autovacuum_work_mem",{"_index":4777,"title":{},"name":{},"text":{"23":{}},"component":{}}],["autovacuummain",{"_index":4200,"title":{},"name":{},"text":{"23":{}},"component":{}}],["autovacuumschedul",{"_index":4371,"title":{},"name":{},"text":{"23":{}},"component":{}}],["auxiliari",{"_index":3532,"title":{},"name":{},"text":{"16":{}},"component":{}}],["auxww",{"_index":4026,"title":{},"name":{},"text":{"23":{}},"component":{}}],["aux|grep",{"_index":4067,"title":{},"name":{},"text":{"23":{}},"component":{}}],["avail",{"_index":909,"title":{"24-10":{},"24-36":{}},"name":{},"text":{"4":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["averag",{"_index":2483,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["avg",{"_index":643,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["avg(expens",{"_index":6086,"title":{},"name":{},"text":{"27":{}},"component":{}}],["avoid",{"_index":101,"title":{},"name":{},"text":{"1":{},"2":{},"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["await",{"_index":4196,"title":{},"name":{},"text":{"23":{}},"component":{}}],["awaken",{"_index":4847,"title":{},"name":{},"text":{"23":{}},"component":{}}],["awar",{"_index":3475,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["away",{"_index":3274,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["a–f",{"_index":5883,"title":{},"name":{},"text":{"27":{}},"component":{}}],["b",{"_index":548,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"15":{},"16":{},"18":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["b'1001",{"_index":5907,"title":{},"name":{},"text":{"27":{}},"component":{}}],["b)=(11",{"_index":6445,"title":{},"name":{},"text":{"27":{}},"component":{}}],["b)=(572814",{"_index":6440,"title":{},"name":{},"text":{"27":{}},"component":{}}],["b.id",{"_index":6858,"title":{},"name":{},"text":{"28":{}},"component":{}}],["b.ref",{"_index":6859,"title":{},"name":{},"text":{"28":{}},"component":{}}],["back",{"_index":1111,"title":{},"name":{},"text":{"6":{},"13":{},"15":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["backend",{"_index":4116,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["backend_",{"_index":5446,"title":{},"name":{},"text":{"26":{}},"component":{}}],["backend_start",{"_index":4159,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["backend_typ",{"_index":4186,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backend_xid",{"_index":4174,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backend_xmin",{"_index":4176,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backendid",{"_index":4720,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backendtermin",{"_index":4298,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backend’",{"_index":4178,"title":{},"name":{},"text":{"23":{}},"component":{}}],["background",{"_index":3640,"title":{},"name":{},"text":{"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["backgroundwork",{"_index":4372,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backquot",{"_index":2130,"title":{},"name":{},"text":{"15":{}},"component":{}}],["backslash",{"_index":2918,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["backslash_quot",{"_index":5890,"title":{},"name":{},"text":{"27":{}},"component":{}}],["backspac",{"_index":5874,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["backup",{"_index":2461,"title":{"23-34":{},"28-15":{},"28-20":{}},"name":{},"text":{"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["backup,becaus",{"_index":6545,"title":{},"name":{},"text":{"28":{}},"component":{}}],["backup.bi",{"_index":3012,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup.sinc",{"_index":2905,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup.stop",{"_index":4465,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backup.tar",{"_index":6538,"title":{},"name":{},"text":{"28":{}},"component":{}}],["backup.tar.bz2",{"_index":3038,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup.th",{"_index":2898,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup.us",{"_index":2994,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup/data",{"_index":3041,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup/t",{"_index":3040,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup_label",{"_index":3740,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup_manifest",{"_index":2555,"title":{},"name":{},"text":{"16":{}},"component":{}}],["backup_stream",{"_index":4788,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backup_tot",{"_index":3005,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["backupwaitwalarch",{"_index":4299,"title":{},"name":{},"text":{"23":{}},"component":{}}],["backward",{"_index":100,"title":{},"name":{},"text":{"1":{},"16":{},"27":{},"28":{}},"component":{}}],["bad",{"_index":2136,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"28":{}},"component":{}}],["badli",{"_index":4926,"title":{},"name":{},"text":{"23":{}},"component":{}}],["balanc",{"_index":923,"title":{"24-10":{}},"name":{},"text":{"4":{},"24":{}},"component":{}}],["bandwidth",{"_index":2943,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["banner.png",{"_index":2197,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bar",{"_index":2138,"title":{},"name":{},"text":{"15":{},"27":{},"28":{}},"component":{}}],["barrier",{"_index":4341,"title":{},"name":{},"text":{"23":{}},"component":{}}],["base",{"_index":20,"title":{"23-34":{},"24-16":{},"24-17":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"8":{},"9":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["base.tar",{"_index":2887,"title":{},"name":{},"text":{"16":{}},"component":{}}],["base/16384/16806",{"_index":4904,"title":{},"name":{},"text":{"23":{}},"component":{}}],["base_backup",{"_index":4739,"title":{},"name":{},"text":{"23":{}},"component":{}}],["base_frequ",{"_index":6813,"title":{},"name":{},"text":{"28":{}},"component":{}}],["basearch",{"_index":3917,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["basebackupread",{"_index":4221,"title":{},"name":{},"text":{"23":{}},"component":{}}],["basebackupthrottl",{"_index":4445,"title":{},"name":{},"text":{"23":{}},"component":{}}],["baseurl=https://yum.highgo.com/dists/ivorysql",{"_index":3918,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["bash_profil",{"_index":3923,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["basi",{"_index":1068,"title":{},"name":{},"text":{"6":{},"13":{},"24":{}},"component":{}}],["basic",{"_index":1230,"title":{"11-8":{},"24-2":{},"24-33":{},"28-34":{}},"name":{},"text":{"9":{},"15":{},"16":{},"27":{},"28":{}},"component":{}}],["batch",{"_index":2727,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["baz",{"_index":2139,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bbb",{"_index":1555,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bdt",{"_index":6222,"title":{},"name":{},"text":{"27":{}},"component":{}}],["be",{"_index":905,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["bear",{"_index":2628,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["beat",{"_index":6706,"title":{},"name":{},"text":{"28":{}},"component":{}}],["becam",{"_index":4493,"title":{},"name":{},"text":{"23":{}},"component":{}}],["becom",{"_index":1938,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{}},"component":{}}],["befor",{"_index":1818,"title":{"15-6":{}},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["began",{"_index":5822,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["begin",{"_index":434,"title":{"27-27":{}},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["begin/commit",{"_index":3590,"title":{},"name":{},"text":{"16":{}},"component":{}}],["begin/end",{"_index":6379,"title":{},"name":{},"text":{"27":{}},"component":{}}],["begun",{"_index":4848,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["behav",{"_index":3521,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["behavior",{"_index":539,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["behavior/cod",{"_index":2055,"title":{},"name":{},"text":{"15":{}},"component":{}}],["behind",{"_index":3120,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["belief",{"_index":1754,"title":{},"name":{},"text":{"13":{}},"component":{}}],["believ",{"_index":1317,"title":{},"name":{},"text":{"11":{}},"component":{}}],["belong",{"_index":2577,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["below",{"_index":2513,"title":{},"name":{},"text":{"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["benchmark",{"_index":2274,"title":{"16-53":{}},"name":{},"text":{"16":{}},"component":{}}],["benefici",{"_index":3358,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["benefit",{"_index":2013,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["besid",{"_index":3819,"title":{},"name":{},"text":{"18":{},"24":{}},"component":{}}],["best",{"_index":784,"title":{},"name":{},"text":{"3":{},"11":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["better",{"_index":1069,"title":{},"name":{},"text":{"6":{},"16":{},"21":{},"24":{},"27":{},"28":{}},"component":{}}],["between",{"_index":61,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"11":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["bewar",{"_index":4893,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["beyond",{"_index":3678,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["bgworkershutdown",{"_index":4300,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bgworkerstartup",{"_index":4301,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bgwriter",{"_index":4699,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bgwriterhibern",{"_index":4201,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bgwritermain",{"_index":4203,"title":{},"name":{},"text":{"23":{}},"component":{}}],["big",{"_index":1373,"title":{},"name":{},"text":{"11":{},"16":{},"24":{},"28":{}},"component":{}}],["bigger",{"_index":1982,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["bigint",{"_index":3088,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["bigint`amount",{"_index":4505,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`estim",{"_index":4647,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`identifi",{"_index":4182,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`numb",{"_index":4499,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`process",{"_index":4758,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`s",{"_index":4801,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`tot",{"_index":4587,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigint`when",{"_index":4764,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bigseri",{"_index":1008,"title":{},"name":{},"text":{"4":{}},"component":{}}],["bigtabl",{"_index":4921,"title":{},"name":{},"text":{"23":{}},"component":{}}],["billion",{"_index":5020,"title":{},"name":{},"text":{"24":{}},"component":{}}],["bin/p",{"_index":4076,"title":{},"name":{},"text":{"23":{}},"component":{}}],["binari",{"_index":1757,"title":{"28-29":{}},"name":{},"text":{"13":{},"16":{},"23":{},"25":{},"27":{},"28":{}},"component":{}}],["binary_doubl",{"_index":1410,"title":{},"name":{},"text":{"13":{}},"component":{}}],["binary_float",{"_index":1409,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bind",{"_index":5766,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bindir",{"_index":3203,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bison",{"_index":5394,"title":{},"name":{},"text":{"25":{}},"component":{}}],["bit",{"_index":2700,"title":{"27-108":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["bit(3",{"_index":1014,"title":{},"name":{},"text":{"4":{}},"component":{}}],["bit_count(embed",{"_index":1020,"title":{},"name":{},"text":{"4":{}},"component":{}}],["bitmap",{"_index":545,"title":{},"name":{},"text":{"2":{},"23":{},"27":{},"28":{}},"component":{}}],["bitmapand",{"_index":6676,"title":{},"name":{},"text":{"28":{}},"component":{}}],["bitwis",{"_index":4821,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bizarr",{"_index":5871,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bj_time",{"_index":1510,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bj_time,new_time(sysdate(),'pdt','gmt')los_angl",{"_index":1509,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bl",{"_index":1589,"title":{},"name":{},"text":{"13":{}},"component":{}}],["black",{"_index":1592,"title":{},"name":{},"text":{"13":{}},"component":{}}],["blackhol",{"_index":2904,"title":{},"name":{},"text":{"16":{}},"component":{}}],["blank",{"_index":2099,"title":{},"name":{},"text":{"15":{}},"component":{}}],["blk_read_tim",{"_index":4619,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blk_write_tim",{"_index":4621,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blks_exist",{"_index":4684,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blks_hit",{"_index":4606,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blks_read",{"_index":4605,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blks_written",{"_index":4683,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blks_zero",{"_index":4682,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bloat",{"_index":4716,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["blob",{"_index":3228,"title":{},"name":{},"text":{"16":{}},"component":{}}],["block",{"_index":889,"title":{"10":{},"4-9":{},"24-13":{},"27-27":{},"27-95":{}},"name":{},"text":{"6":{},"10":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["block_dist",{"_index":4536,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blocker",{"_index":4062,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blocknumb",{"_index":4830,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blockquot",{"_index":2135,"title":{},"name":{},"text":{"15":{}},"component":{}}],["blocks_don",{"_index":4760,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blocks_tot",{"_index":4759,"title":{},"name":{},"text":{"23":{}},"component":{}}],["blog",{"_index":1869,"title":{"15-45":{},"15-51":{}},"name":{},"text":{"15":{}},"component":{}}],["blue",{"_index":1593,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bodi",{"_index":2194,"title":{"20-4":{},"20-6":{},"20-8":{},"20-11":{},"20-13":{},"20-15":{},"27-262":{}},"name":{},"text":{"15":{},"16":{},"20":{},"27":{}},"component":{}}],["bold",{"_index":2125,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bool",{"_index":4827,"title":{},"name":{},"text":{"23":{}},"component":{}}],["boolean",{"_index":3724,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["boolean`tru",{"_index":4551,"title":{},"name":{},"text":{"23":{}},"component":{}}],["boot",{"_index":3761,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bootstrap",{"_index":3438,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["both",{"_index":232,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"15":{},"16":{},"17":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["bother",{"_index":6745,"title":{},"name":{},"text":{"28":{}},"component":{}}],["bottom",{"_index":6639,"title":{},"name":{},"text":{"28":{}},"component":{}}],["bound",{"_index":1309,"title":{},"name":{},"text":{"11":{},"24":{},"27":{}},"component":{}}],["boundari",{"_index":3476,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bpchar_pattern_op",{"_index":561,"title":{},"name":{},"text":{"2":{}},"component":{}}],["bracket",{"_index":2122,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["branch",{"_index":993,"title":{"15-29":{}},"name":{},"text":{"4":{},"15":{},"17":{}},"component":{}}],["bread",{"_index":5755,"title":{},"name":{},"text":{"27":{}},"component":{}}],["break",{"_index":85,"title":{},"name":{},"text":{"1":{},"15":{},"17":{},"27":{}},"component":{}}],["breath",{"_index":5050,"title":{},"name":{},"text":{"24":{}},"component":{}}],["brief",{"_index":4748,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bring",{"_index":2653,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["broadcast",{"_index":5154,"title":{},"name":{},"text":{"24":{}},"component":{}}],["broader",{"_index":2014,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["broken",{"_index":5212,"title":{},"name":{},"text":{"24":{}},"component":{}}],["brought",{"_index":5278,"title":{},"name":{},"text":{"24":{}},"component":{}}],["browser",{"_index":375,"title":{},"name":{},"text":{"2":{}},"component":{}}],["bst",{"_index":6221,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bt_index_check",{"_index":2858,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bt_index_parent_check",{"_index":2853,"title":{},"name":{},"text":{"16":{}},"component":{}}],["btree",{"_index":2829,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["btree(b",{"_index":6443,"title":{},"name":{},"text":{"27":{}},"component":{}}],["btree_gin",{"_index":546,"title":{},"name":{},"text":{"2":{}},"component":{}}],["btreepag",{"_index":4302,"title":{},"name":{},"text":{"23":{}},"component":{}}],["btreevacuum",{"_index":4373,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bucardo",{"_index":5161,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["bucket",{"_index":4327,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["buffer",{"_index":4137,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["buffercont",{"_index":4374,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bufferio",{"_index":4303,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffermap",{"_index":4375,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bufferpin",{"_index":4189,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffers_alloc",{"_index":4585,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffers_backend",{"_index":4583,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffers_backend_fsync",{"_index":4584,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffers_checkpoint",{"_index":4580,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffers_clean",{"_index":4581,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffileread",{"_index":4222,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffiletrunc",{"_index":4224,"title":{},"name":{},"text":{"23":{}},"component":{}}],["buffilewrit",{"_index":4223,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bug",{"_index":25,"title":{"15-12":{},"16-195":{}},"name":{},"text":{"1":{},"15":{},"23":{}},"component":{}}],["build",{"_index":568,"title":{"26":{},"26-9":{}},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["builder",{"_index":2200,"title":{},"name":{},"text":{"15":{}},"component":{}}],["built",{"_index":347,"title":{"13":{},"13-1":{},"13-2":{},"13-3":{},"23-38":{}},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["builtin",{"_index":3194,"title":{},"name":{},"text":{"16":{}},"component":{}}],["builtin=scriptname[@weight",{"_index":3096,"title":{},"name":{},"text":{"16":{}},"component":{}}],["bulk",{"_index":4996,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["bulki",{"_index":6550,"title":{},"name":{},"text":{"28":{}},"component":{}}],["buri",{"_index":2221,"title":{},"name":{},"text":{"15":{}},"component":{}}],["busi",{"_index":252,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"24":{},"28":{}},"component":{}}],["busiest",{"_index":4997,"title":{},"name":{},"text":{"24":{}},"component":{}}],["button",{"_index":2061,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bypass",{"_index":3317,"title":{},"name":{},"text":{"16":{}},"component":{}}],["byte",{"_index":1535,"title":{"27-249":{}},"name":{},"text":{"13":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["bytea",{"_index":6032,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bytes_process",{"_index":4799,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bytes_tot",{"_index":4800,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bzip2",{"_index":3037,"title":{},"name":{},"text":{"16":{}},"component":{}}],["c",{"_index":501,"title":{"27-105":{}},"name":{},"text":{"2":{},"3":{},"7":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["c.id",{"_index":6860,"title":{},"name":{},"text":{"28":{}},"component":{}}],["c.oid",{"_index":4915,"title":{},"name":{},"text":{"23":{}},"component":{}}],["c.oid::regclass",{"_index":5064,"title":{},"name":{},"text":{"24":{}},"component":{}}],["c.relkind",{"_index":5069,"title":{},"name":{},"text":{"24":{}},"component":{}}],["c.relnam",{"_index":4914,"title":{},"name":{},"text":{"23":{}},"component":{}}],["c.reltoastrelid",{"_index":5067,"title":{},"name":{},"text":{"24":{}},"component":{}}],["c/ivorysql",{"_index":716,"title":{},"name":{},"text":{"2":{},"26":{}},"component":{}}],["c/protobuf",{"_index":854,"title":{},"name":{},"text":{"3":{}},"component":{}}],["c1",{"_index":1193,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["c2",{"_index":1189,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{}}],["c2.oid",{"_index":4917,"title":{},"name":{},"text":{"23":{}},"component":{}}],["c2.relnam",{"_index":4912,"title":{},"name":{},"text":{"23":{}},"component":{}}],["c2.relpag",{"_index":4913,"title":{},"name":{},"text":{"23":{}},"component":{}}],["c_row",{"_index":6370,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ca",{"_index":6840,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cach",{"_index":35,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{}},"component":{}}],["calcul",{"_index":898,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"27":{}},"component":{}}],["calibr",{"_index":1631,"title":{},"name":{},"text":{"13":{}},"component":{}}],["call",{"_index":39,"title":{"27-121":{},"27-123":{},"27-130":{}},"name":{},"text":{"1":{},"2":{},"4":{},"11":{},"12":{},"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["callback",{"_index":4798,"title":{},"name":{},"text":{"23":{}},"component":{}}],["caller",{"_index":4850,"title":{},"name":{},"text":{"23":{}},"component":{}}],["cancel",{"_index":724,"title":{"27-70":{}},"name":{},"text":{"2":{},"23":{},"24":{},"27":{}},"component":{}}],["candid",{"_index":4490,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["can’t",{"_index":4508,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["cap",{"_index":5046,"title":{},"name":{},"text":{"24":{}},"component":{}}],["capabl",{"_index":901,"title":{},"name":{},"text":{"4":{},"11":{},"23":{},"24":{},"28":{}},"component":{}}],["captur",{"_index":5122,"title":{},"name":{},"text":{"24":{}},"component":{}}],["card",{"_index":3524,"title":{},"name":{},"text":{"16":{}},"component":{}}],["care",{"_index":3048,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["care.altern",{"_index":2598,"title":{},"name":{},"text":{"16":{}},"component":{}}],["carefulli",{"_index":1935,"title":{},"name":{},"text":{"15":{},"24":{},"28":{}},"component":{}}],["cari",{"_index":148,"title":{},"name":{},"text":{"1":{}},"component":{}}],["carri",{"_index":1403,"title":{},"name":{},"text":{"12":{},"24":{}},"component":{}}],["carriag",{"_index":5875,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["cartesian",{"_index":6861,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cascad",{"_index":4951,"title":{"24-31":{}},"name":{},"text":{"24":{}},"component":{}}],["case",{"_index":94,"title":{"7":{},"7-3":{},"7-5":{},"8-3":{},"9-3":{},"10-3":{},"12-3":{},"19-3":{},"20-9":{},"21-3":{},"28-12":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["case.but",{"_index":3417,"title":{},"name":{},"text":{"16":{}},"component":{}}],["case_not_found",{"_index":1282,"title":{},"name":{},"text":{"10":{},"12":{}},"component":{}}],["cast",{"_index":5560,"title":{"27-124":{}},"name":{},"text":{"27":{}},"component":{}}],["cat",{"_index":460,"title":{},"name":{},"text":{"2":{},"16":{},"28":{}},"component":{}}],["catalog",{"_index":71,"title":{"27-3":{}},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["catastroph",{"_index":5023,"title":{},"name":{},"text":{"24":{}},"component":{}}],["catch",{"_index":2533,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["catchup",{"_index":5261,"title":{},"name":{},"text":{"24":{}},"component":{}}],["categori",{"_index":1954,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{}},"component":{}}],["caught",{"_index":4463,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["caus",{"_index":259,"title":{},"name":{},"text":{"2":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["causal",{"_index":5251,"title":{},"name":{},"text":{"24":{}},"component":{}}],["caution",{"_index":2270,"title":{"16-50":{},"27-60":{}},"name":{},"text":{"27":{}},"component":{}}],["cautiou",{"_index":5242,"title":{},"name":{},"text":{"24":{}},"component":{}}],["caveat",{"_index":2847,"title":{"24-44":{},"28-36":{}},"name":{},"text":{"16":{}},"component":{}}],["cbuilder",{"_index":341,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cc",{"_index":2804,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["ccc",{"_index":1556,"title":{},"name":{},"text":{"13":{}},"component":{}}],["ccc','aaa')trim",{"_index":1558,"title":{},"name":{},"text":{"13":{}},"component":{}}],["cd",{"_index":390,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"15":{},"25":{}},"component":{}}],["cdefg",{"_index":1567,"title":{},"name":{},"text":{"13":{}},"component":{}}],["cdt",{"_index":6223,"title":{},"name":{},"text":{"27":{}},"component":{}}],["center",{"_index":944,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cento",{"_index":334,"title":{},"name":{},"text":{"2":{},"3":{},"22":{}},"component":{}}],["central",{"_index":5179,"title":{},"name":{},"text":{"24":{}},"component":{}}],["certain",{"_index":969,"title":{},"name":{},"text":{"4":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["certainli",{"_index":3368,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["certif",{"_index":852,"title":{},"name":{},"text":{"3":{},"16":{},"23":{}},"component":{}}],["cf",{"_index":6537,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cflag",{"_index":3218,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cflags_sl",{"_index":3219,"title":{},"name":{},"text":{"16":{}},"component":{}}],["chain",{"_index":5794,"title":{},"name":{},"text":{"27":{}},"component":{}}],["chain.ecpg",{"_index":2449,"title":{},"name":{},"text":{"16":{}},"component":{}}],["challeng",{"_index":239,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["chanc",{"_index":1977,"title":{},"name":{},"text":{"15":{},"17":{},"27":{}},"component":{}}],["chang",{"_index":68,"title":{"15-18":{},"16-174":{},"17-5":{},"27-3":{},"27-137":{}},"name":{},"text":{"1":{},"3":{},"5":{},"6":{},"12":{},"13":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["change_my_secret",{"_index":745,"title":{},"name":{},"text":{"2":{}},"component":{}}],["channel",{"_index":601,"title":{},"name":{},"text":{"2":{}},"component":{}}],["channel_id",{"_index":728,"title":{},"name":{},"text":{"2":{}},"component":{}}],["chapter",{"_index":5349,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["char",{"_index":564,"title":{"27-248":{}},"name":{},"text":{"2":{},"13":{},"23":{},"27":{},"28":{}},"component":{}}],["char(1",{"_index":1279,"title":{},"name":{},"text":{"10":{},"12":{}},"component":{}}],["char(10",{"_index":6106,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(11",{"_index":6120,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(12",{"_index":6122,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(13",{"_index":6124,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(14",{"_index":6126,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(15",{"_index":6128,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char(2",{"_index":6618,"title":{},"name":{},"text":{"28":{}},"component":{}}],["char(`n",{"_index":5746,"title":{},"name":{},"text":{"27":{}},"component":{}}],["char/bytea/varchar2",{"_index":1578,"title":{},"name":{},"text":{"13":{}},"component":{}}],["char/integer/varchar2",{"_index":1572,"title":{},"name":{},"text":{"13":{}},"component":{}}],["char:data",{"_index":6358,"title":{},"name":{},"text":{"27":{}},"component":{}}],["charact",{"_index":1097,"title":{"27-112":{},"27-157":{}},"name":{},"text":{"6":{},"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["character(",{"_index":5873,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(1",{"_index":6112,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(10",{"_index":6111,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(11",{"_index":6132,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(12",{"_index":6133,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(13",{"_index":6134,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(14",{"_index":6135,"title":{},"name":{},"text":{"27":{}},"component":{}}],["character(15",{"_index":6136,"title":{},"name":{},"text":{"27":{}},"component":{}}],["characterist",{"_index":244,"title":{"27-89":{}},"name":{},"text":{"2":{},"24":{},"27":{}},"component":{}}],["charg",{"_index":5088,"title":{},"name":{},"text":{"24":{}},"component":{}}],["chat",{"_index":5260,"title":{},"name":{},"text":{"24":{}},"component":{}}],["cheapest",{"_index":6709,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cheapli",{"_index":6895,"title":{},"name":{},"text":{"28":{}},"component":{}}],["check",{"_index":411,"title":{"26-13":{},"27-84":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"13":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["check.pl",{"_index":414,"title":{},"name":{},"text":{"2":{}},"component":{}}],["check_pgsql",{"_index":5323,"title":{},"name":{},"text":{"24":{}},"component":{}}],["check_postgr",{"_index":5139,"title":{},"name":{},"text":{"24":{}},"component":{}}],["checking.th",{"_index":2856,"title":{},"name":{},"text":{"16":{}},"component":{}}],["checkout",{"_index":2070,"title":{},"name":{},"text":{"15":{},"25":{}},"component":{}}],["checkpoint",{"_index":2617,"title":{},"name":{},"text":{"16":{},"22":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["checkpoint=fast",{"_index":3027,"title":{},"name":{},"text":{"16":{}},"component":{}}],["checkpoint={fast|spread",{"_index":2958,"title":{},"name":{},"text":{"16":{}},"component":{}}],["checkpoint_sync_tim",{"_index":4579,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpoint_timeout",{"_index":6892,"title":{},"name":{},"text":{"28":{}},"component":{}}],["checkpoint_write_tim",{"_index":4576,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpointdon",{"_index":4304,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpointercomm",{"_index":4377,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpointermain",{"_index":4204,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpoints_req",{"_index":4575,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpoints_tim",{"_index":4574,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpointstart",{"_index":4305,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checkpointwritedelay",{"_index":4446,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checksum",{"_index":2564,"title":{},"name":{},"text":{"16":{},"23":{},"25":{},"28":{}},"component":{}}],["checksum_failur",{"_index":4617,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checksum_last_failur",{"_index":4618,"title":{},"name":{},"text":{"23":{}},"component":{}}],["checksums=algorithm",{"_index":2985,"title":{},"name":{},"text":{"16":{}},"component":{}}],["chees",{"_index":5752,"title":{},"name":{},"text":{"27":{}},"component":{}}],["chicago",{"_index":6850,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child",{"_index":3821,"title":{},"name":{},"text":{"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["child1",{"_index":6770,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child1_f1_key",{"_index":6769,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child2",{"_index":6773,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child2_f1_key",{"_index":6772,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child3",{"_index":6775,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child3_f1_key",{"_index":6774,"title":{},"name":{},"text":{"28":{}},"component":{}}],["child_tables_don",{"_index":4746,"title":{},"name":{},"text":{"23":{}},"component":{}}],["child_tables_tot",{"_index":4745,"title":{},"name":{},"text":{"23":{}},"component":{}}],["children",{"_index":5008,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["chines",{"_index":1968,"title":{},"name":{},"text":{"15":{}},"component":{}}],["choic",{"_index":3281,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["choos",{"_index":1360,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["chosen",{"_index":2604,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["chown",{"_index":2585,"title":{},"name":{},"text":{"16":{},"25":{}},"component":{}}],["chr",{"_index":6425,"title":{},"name":{},"text":{"27":{}},"component":{}}],["chunk",{"_index":6529,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cipher",{"_index":4553,"title":{},"name":{},"text":{"23":{}},"component":{}}],["circuit",{"_index":6062,"title":{},"name":{},"text":{"27":{}},"component":{}}],["circular",{"_index":5028,"title":{},"name":{},"text":{"24":{}},"component":{}}],["circumst",{"_index":2123,"title":{},"name":{},"text":{"15":{},"23":{},"27":{}},"component":{}}],["citi",{"_index":5733,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["cities.st",{"_index":6010,"title":{},"name":{},"text":{"27":{}},"component":{}}],["claim",{"_index":5784,"title":{},"name":{},"text":{"27":{}},"component":{}}],["clang",{"_index":801,"title":{},"name":{},"text":{"3":{}},"component":{}}],["clariti",{"_index":2777,"title":{},"name":{},"text":{"16":{},"18":{},"27":{},"28":{}},"component":{}}],["class",{"_index":5818,"title":{},"name":{},"text":{"27":{}},"component":{}}],["classic",{"_index":980,"title":{},"name":{},"text":{"4":{},"16":{}},"component":{}}],["classifi",{"_index":5952,"title":{},"name":{},"text":{"27":{}},"component":{}}],["claus",{"_index":3326,"title":{"28-44":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["clean",{"_index":2548,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["cleanli",{"_index":2611,"title":{},"name":{},"text":{"16":{},"23":{},"25":{}},"component":{}}],["cleanup",{"_index":4343,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["cleanup.log",{"_index":3592,"title":{},"name":{},"text":{"16":{}},"component":{}}],["clear",{"_index":2624,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["clearli",{"_index":5276,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["clever",{"_index":6524,"title":{},"name":{},"text":{"28":{}},"component":{}}],["click",{"_index":2050,"title":{},"name":{},"text":{"15":{}},"component":{}}],["client",{"_index":325,"title":{"16-2":{}},"name":{},"text":{"2":{},"10":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["client.html#guc",{"_index":3315,"title":{},"name":{},"text":{"16":{}},"component":{}}],["client/serv",{"_index":3067,"title":{},"name":{},"text":{"16":{}},"component":{}}],["client=client",{"_index":3102,"title":{},"name":{},"text":{"16":{}},"component":{}}],["client_addr",{"_index":4151,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["client_dn",{"_index":4555,"title":{},"name":{},"text":{"23":{}},"component":{}}],["client_hostnam",{"_index":4153,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["client_port",{"_index":4157,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["client_seri",{"_index":4559,"title":{},"name":{},"text":{"23":{}},"component":{}}],["clientread",{"_index":4213,"title":{},"name":{},"text":{"23":{}},"component":{}}],["clientwrit",{"_index":4214,"title":{},"name":{},"text":{"23":{}},"component":{}}],["client’",{"_index":6565,"title":{},"name":{},"text":{"28":{}},"component":{}}],["clock",{"_index":2400,"title":{"16-175":{}},"name":{},"text":{"16":{}},"component":{}}],["clog",{"_index":4826,"title":{},"name":{},"text":{"23":{}},"component":{}}],["clone",{"_index":992,"title":{"15-28":{}},"name":{},"text":{"4":{},"15":{},"16":{},"25":{}},"component":{}}],["close",{"_index":2530,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["closer",{"_index":978,"title":{},"name":{},"text":{"4":{},"27":{}},"component":{}}],["closest",{"_index":948,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cloumn_nam",{"_index":6101,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cluster",{"_index":553,"title":{"26":{},"7-4":{},"23-33":{},"26-12":{},"26-13":{},"26-14":{}},"name":{},"text":{"2":{},"4":{},"7":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["cluster_index_relid",{"_index":4781,"title":{},"name":{},"text":{"23":{}},"component":{}}],["cluster_nam",{"_index":4065,"title":{},"name":{},"text":{"23":{}},"component":{}}],["clusterdb",{"_index":2226,"title":{"16-3":{}},"name":{},"text":{"16":{}},"component":{}}],["clusters.pg_rewind",{"_index":2663,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cluster’",{"_index":2468,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["cn/docs/intro",{"_index":1825,"title":{"15-11":{}},"name":{},"text":{},"component":{}}],["cn/docusauru",{"_index":2174,"title":{},"name":{},"text":{"15":{}},"component":{}}],["cn/modules/root/nav.adoc",{"_index":2212,"title":{},"name":{},"text":{"15":{}},"component":{}}],["cn/modules/root/pages/vx.x",{"_index":2211,"title":{},"name":{},"text":{"15":{}},"component":{}}],["coars",{"_index":5790,"title":{},"name":{},"text":{"27":{}},"component":{}}],["code",{"_index":10,"title":{"1-3":{},"3-3":{},"4-6":{},"15-10":{},"15-17":{},"15-26":{},"15-30":{},"17-4":{},"25-5":{},"25-13":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"10":{},"11":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{}},"component":{}}],["codebas",{"_index":2015,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["coeffici",{"_index":6788,"title":{},"name":{},"text":{"28":{}},"component":{}}],["coerc",{"_index":5918,"title":{},"name":{},"text":{"27":{}},"component":{}}],["coercion",{"_index":5924,"title":{},"name":{},"text":{"27":{}},"component":{}}],["col",{"_index":6427,"title":{},"name":{},"text":{"27":{}},"component":{}}],["col(tabl",{"_index":5977,"title":{},"name":{},"text":{"27":{}},"component":{}}],["col1",{"_index":6428,"title":{},"name":{},"text":{"27":{}},"component":{}}],["col2",{"_index":6429,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cold",{"_index":5024,"title":{},"name":{},"text":{"24":{}},"component":{}}],["collaps",{"_index":6880,"title":{},"name":{},"text":{"28":{}},"component":{}}],["collat",{"_index":708,"title":{"27-125":{}},"name":{},"text":{"2":{},"12":{},"16":{},"20":{},"21":{},"26":{},"27":{}},"component":{}}],["collate=`local",{"_index":2747,"title":{},"name":{},"text":{"16":{}},"component":{}}],["collect",{"_index":2574,"title":{"23-4":{}},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"28":{}},"component":{}}],["collector",{"_index":4045,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["colon",{"_index":2103,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["color",{"_index":1998,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"27":{}},"component":{}}],["color=auto",{"_index":3950,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["column",{"_index":565,"title":{"21":{},"21-4":{},"21-5":{},"21-6":{},"21-7":{},"27-116":{},"27-265":{},"28-38":{}},"name":{},"text":{"2":{},"9":{},"11":{},"13":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["column(",{"_index":6561,"title":{},"name":{},"text":{"28":{}},"component":{}}],["column(id",{"_index":6130,"title":{},"name":{},"text":{"27":{}},"component":{}}],["column.it",{"_index":3334,"title":{},"name":{},"text":{"16":{}},"component":{}}],["column_nam",{"_index":6100,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["column’",{"_index":6600,"title":{},"name":{},"text":{"28":{}},"component":{}}],["combin",{"_index":1784,"title":{"27-9":{}},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["come",{"_index":1322,"title":{},"name":{},"text":{"11":{},"15":{},"17":{},"24":{},"28":{}},"component":{}}],["comfort",{"_index":4897,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["comm",{"_index":5171,"title":{},"name":{},"text":{"24":{}},"component":{}}],["comma",{"_index":485,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["command",{"_index":875,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["command.)each",{"_index":3589,"title":{},"name":{},"text":{"16":{}},"component":{}}],["command.idl",{"_index":4171,"title":{},"name":{},"text":{"23":{}},"component":{}}],["command=command",{"_index":3584,"title":{},"name":{},"text":{"16":{}},"component":{}}],["comment",{"_index":529,"title":{"27-113":{}},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"17":{},"24":{},"27":{},"29":{}},"component":{}}],["commit",{"_index":751,"title":{"15-21":{},"15-31":{},"17-8":{},"27-34":{},"27-41":{},"27-48":{},"27-55":{},"27-70":{}},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["commit[\"commit",{"_index":4860,"title":{},"name":{},"text":{"23":{}},"component":{}}],["commit_delay",{"_index":2684,"title":{},"name":{},"text":{"16":{}},"component":{}}],["committ",{"_index":144,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["committsbuff",{"_index":4378,"title":{},"name":{},"text":{"23":{}},"component":{}}],["committsslru",{"_index":4379,"title":{},"name":{},"text":{"23":{}},"component":{}}],["common",{"_index":574,"title":{"16-54":{}},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["commonli",{"_index":2558,"title":{},"name":{},"text":{"16":{},"18":{},"24":{},"27":{}},"component":{}}],["commun",{"_index":787,"title":{"15":{},"15-4":{}},"name":{},"text":{"3":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["compact",{"_index":4978,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["compani",{"_index":1335,"title":{},"name":{},"text":{"11":{}},"component":{}}],["compar",{"_index":1805,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["comparison",{"_index":753,"title":{"24-11":{},"27-206":{}},"name":{},"text":{"2":{},"24":{},"27":{},"28":{}},"component":{}}],["compat",{"_index":281,"title":{"9":{},"10":{},"12":{},"14":{},"19":{},"4-7":{},"11-9":{},"18-3":{},"27-26":{},"27-33":{},"27-40":{},"27-47":{},"27-54":{},"27-62":{},"27-69":{},"27-76":{},"27-83":{},"27-88":{},"27-94":{},"27-99":{},"27-134":{},"27-164":{},"27-206":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"16":{},"18":{},"19":{},"20":{},"23":{},"27":{},"28":{},"29":{}},"component":{}}],["compatible.th",{"_index":6504,"title":{},"name":{},"text":{"28":{}},"component":{}}],["competit",{"_index":1289,"title":{"11-5":{}},"name":{},"text":{},"component":{}}],["compil",{"_index":2448,"title":{"23-37":{}},"name":{},"text":{"16":{},"23":{},"25":{},"28":{}},"component":{}}],["complain",{"_index":2635,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["complaint",{"_index":3569,"title":{},"name":{},"text":{"16":{}},"component":{}}],["complet",{"_index":368,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["complex",{"_index":240,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"14":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["compli",{"_index":5820,"title":{},"name":{},"text":{"27":{}},"component":{}}],["complianc",{"_index":5330,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["compliant",{"_index":5887,"title":{},"name":{},"text":{"27":{}},"component":{}}],["complic",{"_index":4063,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["compon",{"_index":893,"title":{},"name":{},"text":{"4":{},"15":{}},"component":{}}],["compos",{"_index":1460,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["compose('a'||chr(768",{"_index":1788,"title":{},"name":{},"text":{"13":{}},"component":{}}],["composit",{"_index":1785,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"27":{}},"component":{}}],["compositecol",{"_index":5970,"title":{},"name":{},"text":{"27":{}},"component":{}}],["compositecol).somefield",{"_index":5968,"title":{},"name":{},"text":{"27":{}},"component":{}}],["comprehens",{"_index":26,"title":{},"name":{},"text":{"1":{},"2":{},"20":{}},"component":{}}],["compress",{"_index":2510,"title":{},"name":{},"text":{"16":{},"21":{},"24":{},"28":{}},"component":{}}],["compress=`0..9",{"_index":3306,"title":{},"name":{},"text":{"16":{}},"component":{}}],["compress=gzip:9",{"_index":3043,"title":{},"name":{},"text":{"16":{}},"component":{}}],["compress=level",{"_index":2941,"title":{},"name":{},"text":{"16":{}},"component":{}}],["compress=method[:*detail",{"_index":2942,"title":{},"name":{},"text":{"16":{}},"component":{}}],["compromis",{"_index":4993,"title":{},"name":{},"text":{"24":{}},"component":{}}],["comput",{"_index":945,"title":{},"name":{},"text":{"4":{},"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["compute_query_id",{"_index":4183,"title":{},"name":{},"text":{"23":{}},"component":{}}],["concat_lower_or_upp",{"_index":6093,"title":{},"name":{},"text":{"27":{}},"component":{}}],["concat_lower_or_upper('hello",{"_index":6095,"title":{},"name":{},"text":{"27":{}},"component":{}}],["concat_lower_or_upper(a",{"_index":6090,"title":{},"name":{},"text":{"27":{}},"component":{}}],["concaten",{"_index":5870,"title":{},"name":{},"text":{"27":{}},"component":{}}],["conceal",{"_index":3891,"title":{},"name":{},"text":{"21":{}},"component":{}}],["concept",{"_index":5835,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["conceptu",{"_index":6508,"title":{},"name":{},"text":{"28":{}},"component":{}}],["concern",{"_index":543,"title":{},"name":{},"text":{"2":{},"16":{},"27":{}},"component":{}}],["conclud",{"_index":6796,"title":{},"name":{},"text":{"28":{}},"component":{}}],["concurr",{"_index":2482,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["cond",{"_index":6663,"title":{},"name":{},"text":{"28":{}},"component":{}}],["condacquir",{"_index":4849,"title":{},"name":{},"text":{"23":{}},"component":{}}],["condit",{"_index":109,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["conduct",{"_index":1815,"title":{"15-3":{}},"name":{},"text":{"15":{}},"component":{}}],["conf",{"_index":2892,"title":{},"name":{},"text":{"16":{}},"component":{}}],["confid",{"_index":5244,"title":{},"name":{},"text":{"24":{}},"component":{}}],["config",{"_index":773,"title":{},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"25":{}},"component":{}}],["config.statu",{"_index":2054,"title":{},"name":{},"text":{"15":{}},"component":{}}],["config/ora2pg.conf",{"_index":502,"title":{},"name":{},"text":{"2":{}},"component":{}}],["configur",{"_index":305,"title":{"23-4":{},"24-30":{},"24-33":{},"27-135":{}},"name":{},"text":{"2":{},"3":{},"6":{},"14":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["confirm",{"_index":874,"title":{},"name":{},"text":{"3":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{}},"component":{}}],["confl_bufferpin",{"_index":4633,"title":{},"name":{},"text":{"23":{}},"component":{}}],["confl_deadlock",{"_index":4634,"title":{},"name":{},"text":{"23":{}},"component":{}}],["confl_lock",{"_index":4631,"title":{},"name":{},"text":{"23":{}},"component":{}}],["confl_snapshot",{"_index":4632,"title":{},"name":{},"text":{"23":{}},"component":{}}],["confl_tablespac",{"_index":4630,"title":{},"name":{},"text":{"23":{}},"component":{}}],["conflict",{"_index":1059,"title":{"24-41":{}},"name":{},"text":{"5":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["conform",{"_index":1632,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["confus",{"_index":3295,"title":{},"name":{},"text":{"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["congtribut",{"_index":1872,"title":{"15-47":{}},"name":{},"text":{},"component":{}}],["conjunct",{"_index":5946,"title":{},"name":{},"text":{"27":{}},"component":{}}],["connect",{"_index":198,"title":{"2-13":{},"22-5":{},"25-8":{}},"name":{},"text":{"2":{},"3":{},"6":{},"14":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["connect.html#libpq",{"_index":3373,"title":{},"name":{},"text":{"16":{}},"component":{}}],["connect_by_root",{"_index":6423,"title":{},"name":{},"text":{"27":{}},"component":{}}],["connection.html#guc",{"_index":3269,"title":{},"name":{},"text":{"16":{}},"component":{}}],["connections.request",{"_index":3272,"title":{},"name":{},"text":{"16":{}},"component":{}}],["connections[max_connect",{"_index":3270,"title":{},"name":{},"text":{"16":{}},"component":{}}],["conninfo",{"_index":4532,"title":{},"name":{},"text":{"23":{}},"component":{}}],["connstr",{"_index":3017,"title":{},"name":{},"text":{"16":{}},"component":{}}],["connstring[connect",{"_index":3374,"title":{},"name":{},"text":{"16":{}},"component":{}}],["consensu",{"_index":2029,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["consequ",{"_index":1925,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{}},"component":{}}],["consid",{"_index":2160,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["consider",{"_index":2863,"title":{},"name":{},"text":{"16":{},"21":{},"24":{},"28":{}},"component":{}}],["consist",{"_index":300,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["consolid",{"_index":3413,"title":{},"name":{},"text":{"16":{}},"component":{}}],["const",{"_index":4818,"title":{},"name":{},"text":{"23":{}},"component":{}}],["constant",{"_index":3861,"title":{"27-103":{},"27-104":{},"27-105":{},"27-106":{},"27-107":{},"27-108":{},"27-109":{},"27-110":{}},"name":{},"text":{"20":{},"23":{},"27":{},"28":{}},"component":{}}],["constantli",{"_index":5011,"title":{},"name":{},"text":{"24":{}},"component":{}}],["constants.th",{"_index":5892,"title":{},"name":{},"text":{"27":{}},"component":{}}],["constant’",{"_index":5923,"title":{},"name":{},"text":{"27":{}},"component":{}}],["constrain",{"_index":6872,"title":{},"name":{},"text":{"28":{}},"component":{}}],["constraint",{"_index":75,"title":{"27-84":{},"28-49":{}},"name":{},"text":{"1":{},"2":{},"16":{},"27":{},"28":{}},"component":{}}],["construct",{"_index":966,"title":{"15-13":{}},"name":{},"text":{"4":{},"15":{},"16":{},"24":{},"27":{}},"component":{}}],["constructor",{"_index":5566,"title":{"27-127":{},"27-128":{}},"name":{},"text":{"27":{}},"component":{}}],["consult",{"_index":883,"title":{},"name":{},"text":{"3":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["consum",{"_index":1950,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{}},"component":{}}],["consumpt",{"_index":2945,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["contact",{"_index":5725,"title":{},"name":{},"text":{"27":{},"28":{},"29":{}},"component":{}}],["contain",{"_index":517,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["contend",{"_index":5290,"title":{},"name":{},"text":{"24":{}},"component":{}}],["content",{"_index":513,"title":{"15-54":{}},"name":{},"text":{"2":{},"15":{},"16":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["content$tag",{"_index":5905,"title":{},"name":{},"text":{"27":{}},"component":{}}],["context",{"_index":2058,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["continu",{"_index":1312,"title":{"24-37":{},"28-21":{}},"name":{},"text":{"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["contrast",{"_index":4088,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["contrib",{"_index":3922,"title":{},"name":{},"text":{"22":{},"25":{},"28":{}},"component":{}}],["contrib.x86_64",{"_index":5352,"title":{},"name":{},"text":{"25":{}},"component":{}}],["contribut",{"_index":142,"title":{"15":{},"15-6":{},"15-8":{},"15-9":{},"15-10":{},"15-15":{},"15-16":{},"15-26":{},"15-40":{},"15-48":{},"15-52":{},"15-53":{},"17-1":{},"17-3":{}},"name":{},"text":{"1":{},"15":{},"17":{},"25":{},"27":{}},"component":{}}],["contribution(https://www.ivorysql.org/zh",{"_index":1824,"title":{"15-11":{}},"name":{},"text":{},"component":{}}],["contributor",{"_index":12,"title":{"1-4":{}},"name":{},"text":{"15":{},"17":{}},"component":{}}],["contributor’",{"_index":1817,"title":{"15-5":{}},"name":{},"text":{},"component":{}}],["control",{"_index":1067,"title":{"28-44":{}},"name":{},"text":{"6":{},"11":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["controlfil",{"_index":4380,"title":{},"name":{},"text":{"23":{}},"component":{}}],["controlfileread",{"_index":4225,"title":{},"name":{},"text":{"23":{}},"component":{}}],["controlfilesync",{"_index":4226,"title":{},"name":{},"text":{"23":{}},"component":{}}],["controlfilesyncupd",{"_index":4228,"title":{},"name":{},"text":{"23":{}},"component":{}}],["controlfilewrit",{"_index":4229,"title":{},"name":{},"text":{"23":{}},"component":{}}],["controlfilewriteupd",{"_index":4230,"title":{},"name":{},"text":{"23":{}},"component":{}}],["conveni",{"_index":911,"title":{},"name":{},"text":{"4":{},"11":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["convent",{"_index":1995,"title":{},"name":{},"text":{"15":{},"17":{},"27":{},"28":{}},"component":{}}],["convention",{"_index":6650,"title":{},"name":{},"text":{"28":{}},"component":{}}],["converg",{"_index":2032,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["convers",{"_index":1098,"title":{"7":{},"7-3":{},"27-206":{}},"name":{},"text":{"6":{},"7":{},"11":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["convert",{"_index":512,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["cooper",{"_index":1909,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["coordin",{"_index":5340,"title":{},"name":{},"text":{"24":{}},"component":{}}],["copi",{"_index":293,"title":{"23-35":{},"28-5":{},"28-47":{}},"name":{},"text":{"2":{},"5":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["copyfileread",{"_index":4231,"title":{},"name":{},"text":{"23":{}},"component":{}}],["copyfilewrit",{"_index":4232,"title":{},"name":{},"text":{"23":{}},"component":{}}],["copyright",{"_index":355,"title":{},"name":{},"text":{"2":{}},"component":{}}],["core",{"_index":1286,"title":{"11-4":{},"11-7":{}},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"22":{},"27":{}},"component":{}}],["corner",{"_index":2062,"title":{},"name":{},"text":{"15":{},"27":{}},"component":{}}],["corpor",{"_index":1529,"title":{},"name":{},"text":{"13":{}},"component":{}}],["correct",{"_index":1523,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["correctli",{"_index":1002,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"28":{}},"component":{}}],["correl",{"_index":4098,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["correlation.columnnam",{"_index":5953,"title":{},"name":{},"text":{"27":{}},"component":{}}],["correspond",{"_index":494,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"13":{},"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["corrupt",{"_index":2457,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["corruption.aft",{"_index":2627,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cost",{"_index":200,"title":{"2-14":{}},"name":{},"text":{"2":{},"4":{},"11":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["cost=0.00..0.00",{"_index":6767,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..1.05",{"_index":6738,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..148.00",{"_index":6705,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..19.78",{"_index":6679,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..216018.33",{"_index":5773,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cost=0.00..4.36",{"_index":6687,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..445.00",{"_index":6664,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..458.00",{"_index":6644,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.00..5.04",{"_index":6660,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.13..8.15",{"_index":6748,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.15..8.17",{"_index":6771,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.28..224.79",{"_index":6716,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..14.48",{"_index":6682,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..14.71",{"_index":6781,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..1510.08",{"_index":6671,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..656.28",{"_index":6700,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..7.91",{"_index":6691,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..71.27",{"_index":6684,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..72.42",{"_index":6783,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..8.46",{"_index":6697,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=0.29..8.51",{"_index":6696,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=1000.00..217018.43",{"_index":5770,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cost=197.83..200.33",{"_index":6701,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=229.20..229.20",{"_index":6698,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=230.47..713.98",{"_index":6727,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=25.08..25.08",{"_index":6677,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=25.08..60.21",{"_index":6674,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=4.36..39.47",{"_index":6686,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=5.07..229.20",{"_index":6699,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=5.07..229.46",{"_index":6764,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=521.06..2220.95",{"_index":6668,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cost=521.06..538.05",{"_index":6666,"title":{},"name":{},"text":{"28":{}},"component":{}}],["costs_1995",{"_index":645,"title":{},"name":{},"text":{"2":{}},"component":{}}],["costs_1996",{"_index":647,"title":{},"name":{},"text":{"2":{}},"component":{}}],["costs_h1_1997",{"_index":646,"title":{},"name":{},"text":{"2":{}},"component":{}}],["count",{"_index":754,"title":{"28-42":{}},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["count(",{"_index":4665,"title":{},"name":{},"text":{"23":{}},"component":{}}],["count(distinct",{"_index":5986,"title":{},"name":{},"text":{"27":{}},"component":{}}],["count(f1",{"_index":5984,"title":{},"name":{},"text":{"27":{}},"component":{}}],["counter",{"_index":4090,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["countri",{"_index":599,"title":{},"name":{},"text":{"2":{},"28":{}},"component":{}}],["country_nam",{"_index":6604,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cours",{"_index":3505,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["cover",{"_index":2002,"title":{},"name":{},"text":{"15":{},"17":{},"27":{},"28":{}},"component":{}}],["cp",{"_index":631,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["cppflag",{"_index":3217,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cpu",{"_index":2944,"title":{},"name":{},"text":{"16":{},"22":{},"27":{},"28":{}},"component":{}}],["cpu_tuple_cost",{"_index":6656,"title":{},"name":{},"text":{"28":{}},"component":{}}],["crash",{"_index":2968,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["crc32c",{"_index":2986,"title":{},"name":{},"text":{"16":{}},"component":{}}],["crc32c.if",{"_index":2991,"title":{},"name":{},"text":{"16":{}},"component":{}}],["creat",{"_index":208,"title":{"2-17":{},"3-4":{},"15-29":{},"15-33":{},"20-3":{},"20-4":{},"20-10":{},"20-11":{},"21-4":{},"23-31":{},"27-5":{},"27-6":{},"27-268":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["created.th",{"_index":3470,"title":{},"name":{},"text":{"16":{}},"component":{}}],["created_at",{"_index":1138,"title":{},"name":{},"text":{"6":{}},"component":{}}],["createdb",{"_index":704,"title":{"16-9":{}},"name":{},"text":{"2":{},"16":{},"27":{}},"component":{}}],["createrol",{"_index":2440,"title":{},"name":{},"text":{"16":{}},"component":{}}],["createus",{"_index":2232,"title":{"16-15":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["creation",{"_index":3011,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["creator",{"_index":5729,"title":{},"name":{},"text":{"27":{}},"component":{}}],["critic",{"_index":3691,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["cron",{"_index":571,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["cross",{"_index":3806,"title":{},"name":{},"text":{"18":{},"28":{}},"component":{}}],["cryptograph",{"_index":2995,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cst",{"_index":701,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["csv",{"_index":5123,"title":{"28-28":{}},"name":{},"text":{"24":{},"28":{}},"component":{}}],["cte",{"_index":5778,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ctype",{"_index":709,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["ctype=local",{"_index":2749,"title":{},"name":{},"text":{"16":{}},"component":{}}],["cumul",{"_index":3384,"title":{"23-3":{}},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["cur_param_decl",{"_index":6399,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cure",{"_index":6075,"title":{},"name":{},"text":{"27":{}},"component":{}}],["current",{"_index":578,"title":{"27-20":{},"27-34":{},"27-48":{},"27-55":{},"27-63":{},"27-77":{},"27-84":{},"27-89":{}},"name":{},"text":{"2":{},"6":{},"11":{},"13":{},"15":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["current_child_table_relid",{"_index":4747,"title":{},"name":{},"text":{"23":{}},"component":{}}],["current_d",{"_index":1423,"title":{},"name":{},"text":{"13":{}},"component":{}}],["current_locker_pid",{"_index":4757,"title":{},"name":{},"text":{"23":{}},"component":{}}],["current_timestamp",{"_index":1424,"title":{},"name":{},"text":{"13":{},"24":{}},"component":{}}],["current_timestamp(3",{"_index":1506,"title":{},"name":{},"text":{"13":{}},"component":{}}],["current_us",{"_index":6389,"title":{},"name":{},"text":{"27":{}},"component":{}}],["currval",{"_index":3855,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["cursor",{"_index":3862,"title":{},"name":{},"text":{"20":{},"23":{},"24":{},"27":{}},"component":{}}],["cursor_declar",{"_index":6393,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cursor_definit",{"_index":6418,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cursor_nam",{"_index":6139,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cursor_variable_declar",{"_index":6401,"title":{},"name":{},"text":{"27":{}},"component":{}}],["curtyp",{"_index":6408,"title":{},"name":{},"text":{"27":{}},"component":{}}],["curvar",{"_index":6407,"title":{},"name":{},"text":{"27":{}},"component":{}}],["custom",{"_index":591,"title":{},"name":{},"text":{"2":{},"11":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["custom`output",{"_index":3256,"title":{},"name":{},"text":{"16":{}},"component":{}}],["custom`th",{"_index":3495,"title":{},"name":{},"text":{"16":{}},"component":{}}],["customer_id_index",{"_index":4919,"title":{},"name":{},"text":{"23":{}},"component":{}}],["customiz",{"_index":1338,"title":{},"name":{},"text":{"11":{}},"component":{}}],["cut",{"_index":6877,"title":{},"name":{},"text":{"28":{}},"component":{}}],["cutoff",{"_index":5071,"title":{},"name":{},"text":{"24":{}},"component":{}}],["cycl",{"_index":1930,"title":{},"name":{},"text":{"15":{},"23":{},"28":{}},"component":{}}],["cyclic",{"_index":5136,"title":{},"name":{},"text":{"24":{}},"component":{}}],["cyril",{"_index":5860,"title":{},"name":{},"text":{"27":{}},"component":{}}],["d",{"_index":1221,"title":{"21-7":{}},"name":{},"text":{"8":{},"14":{},"16":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["d[emand",{"_index":3610,"title":{},"name":{},"text":{"16":{}},"component":{}}],["daemon",{"_index":4654,"title":{"24-7":{}},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["daemon’",{"_index":4965,"title":{},"name":{},"text":{"24":{}},"component":{}}],["dalla",{"_index":6847,"title":{},"name":{},"text":{"28":{}},"component":{}}],["danger",{"_index":6063,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dash",{"_index":2880,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["data",{"_index":206,"title":{"13":{},"2-16":{},"2-24":{},"2-25":{},"4-8":{},"13-1":{},"18-5":{},"27-7":{},"27-8":{},"28-3":{},"28-5":{},"28-8":{},"28-13":{},"28-14":{},"28-22":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"11":{},"13":{},"14":{},"16":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["data',0",{"_index":1016,"title":{},"name":{},"text":{"4":{}},"component":{}}],["data.(do",{"_index":3518,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data.th",{"_index":3073,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data.thi",{"_index":3290,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data=`foreignserv",{"_index":3327,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data=`pattern",{"_index":3320,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data_typ",{"_index":6102,"title":{},"name":{},"text":{"27":{}},"component":{}}],["data`.(do",{"_index":3294,"title":{},"name":{},"text":{"16":{}},"component":{}}],["data`.th",{"_index":3300,"title":{},"name":{},"text":{"16":{}},"component":{}}],["databas",{"_index":132,"title":{"2-3":{},"7-4":{},"23-1":{},"25-7":{},"26-2":{},"26-7":{},"27-4":{},"27-5":{},"28-7":{},"28-19":{},"28-45":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["database'",{"_index":3238,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database(",{"_index":2874,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.)thi",{"_index":3232,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.dropdb",{"_index":2444,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.norm",{"_index":2436,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.notenon",{"_index":3287,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.reindexdb",{"_index":2570,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database.th",{"_index":3966,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["database.thi",{"_index":2618,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database=`pattern",{"_index":3423,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database=dbnam",{"_index":3432,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database=pattern",{"_index":2809,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database_mod",{"_index":1217,"title":{},"name":{},"text":{"8":{}},"component":{}}],["database_mode=db_oracl",{"_index":1220,"title":{},"name":{},"text":{"8":{}},"component":{}}],["database_mode=db_pg，pg",{"_index":1218,"title":{},"name":{},"text":{"8":{}},"component":{}}],["databases.th",{"_index":2516,"title":{},"name":{},"text":{"16":{}},"component":{}}],["database’",{"_index":1353,"title":{},"name":{},"text":{"11":{},"16":{},"24":{},"28":{}},"component":{}}],["database，y",{"_index":6536,"title":{},"name":{},"text":{"28":{}},"component":{}}],["datadir",{"_index":3594,"title":{},"name":{},"text":{"16":{}},"component":{}}],["datafileextend",{"_index":4234,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafileflush",{"_index":4235,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafileimmediatesync",{"_index":4236,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafileprefetch",{"_index":4237,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafileread",{"_index":4239,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafilesync",{"_index":4240,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafiletrunc",{"_index":4241,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datafilewrit",{"_index":4242,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dataset",{"_index":926,"title":{},"name":{},"text":{"4":{}},"component":{}}],["datatyp",{"_index":6396,"title":{},"name":{},"text":{"27":{}},"component":{}}],["date",{"_index":14,"title":{"27-164":{}},"name":{},"text":{"1":{},"6":{},"9":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["date'",{"_index":6187,"title":{},"name":{},"text":{"27":{}},"component":{}}],["date/d",{"_index":1520,"title":{},"name":{},"text":{"13":{}},"component":{}}],["date/tim",{"_index":1154,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date1",{"_index":1236,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["date2",{"_index":1237,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["datestyl",{"_index":1160,"title":{},"name":{},"text":{"6":{},"28":{}},"component":{}}],["datetime_ignore_nls_mask",{"_index":1135,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamp",{"_index":1119,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestampltz",{"_index":1127,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamptz",{"_index":1121,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamptz、timestampltz",{"_index":1131,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamp、timestampltz",{"_index":1129,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamp、timestamptz",{"_index":1124,"title":{},"name":{},"text":{"6":{}},"component":{}}],["date、timestamp、timestamptz、timestampltz",{"_index":1133,"title":{},"name":{},"text":{"6":{}},"component":{}}],["datfrozenxid",{"_index":5063,"title":{},"name":{},"text":{"24":{}},"component":{}}],["datid",{"_index":4142,"title":{},"name":{},"text":{"23":{}},"component":{}}],["datnam",{"_index":4144,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["datum",{"_index":4841,"title":{},"name":{},"text":{"23":{}},"component":{}}],["day",{"_index":616,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"17":{},"24":{},"27":{}},"component":{}}],["day(",{"_index":613,"title":{},"name":{},"text":{"2":{}},"component":{}}],["db.dump",{"_index":3399,"title":{},"name":{},"text":{"16":{}},"component":{}}],["db.list",{"_index":3535,"title":{},"name":{},"text":{"16":{}},"component":{}}],["db.out",{"_index":3439,"title":{},"name":{},"text":{"16":{}},"component":{}}],["db.sql",{"_index":3395,"title":{},"name":{},"text":{"16":{}},"component":{}}],["db=`dbname",{"_index":2755,"title":{},"name":{},"text":{"16":{}},"component":{}}],["db=dbname",{"_index":2732,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dba",{"_index":1763,"title":{},"name":{},"text":{"13":{}},"component":{}}],["dba_object",{"_index":447,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbd",{"_index":185,"title":{"2-8":{},"2-9":{}},"name":{},"text":{"2":{}},"component":{}}],["dbd::oracl",{"_index":427,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbd::pg",{"_index":428,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbdemo",{"_index":3540,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dbi",{"_index":182,"title":{"2-7":{}},"name":{},"text":{"2":{}},"component":{}}],["dbi:oracle:host=10.85.10.6",{"_index":634,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbi:oracle:host=localhost;sid=orclcdb;port=1521",{"_index":466,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbi，databas",{"_index":379,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dblink",{"_index":629,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["dblink_sh.sql",{"_index":691,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbm",{"_index":5716,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dbms_output.put_line('invok",{"_index":3885,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dbms_output.put_line('pkg",{"_index":3874,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dbms_output.put_line('privit",{"_index":3880,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dbms_stats.gather_database_stat",{"_index":438,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbms_stats.gather_dictionary_stat",{"_index":439,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbms_stats.gather_schema_stats('hr",{"_index":437,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbms_stats.gather_schema_stats('scott",{"_index":436,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbms_stats.gather_schema_stats('sh",{"_index":435,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dbname",{"_index":2707,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["dbname.th",{"_index":3468,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dbname=`dbnam",{"_index":3371,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dbname=connstr",{"_index":3018,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dbname=dbnam",{"_index":3440,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dc",{"_index":6815,"title":{},"name":{},"text":{"28":{}},"component":{}}],["dd",{"_index":1110,"title":{},"name":{},"text":{"6":{},"13":{},"27":{}},"component":{}}],["ddd",{"_index":6252,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ddl",{"_index":4905,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["de",{"_index":1651,"title":{},"name":{},"text":{"13":{}},"component":{}}],["dead",{"_index":4124,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["deadlock",{"_index":3127,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["deadlock_timeout",{"_index":5304,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deal",{"_index":1275,"title":{},"name":{},"text":{"10":{},"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["dealloc",{"_index":5280,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deb",{"_index":5342,"title":{"25-6":{},"25-14":{}},"name":{},"text":{"25":{}},"component":{}}],["debug",{"_index":2702,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["debugging.not",{"_index":2965,"title":{},"name":{},"text":{"16":{}},"component":{}}],["decid",{"_index":941,"title":{},"name":{},"text":{"4":{},"15":{},"17":{},"23":{},"24":{},"28":{}},"component":{}}],["decim",{"_index":1496,"title":{},"name":{},"text":{"13":{},"16":{},"27":{}},"component":{}}],["decis",{"_index":1325,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"24":{},"28":{}},"component":{}}],["declar",{"_index":1023,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"20":{},"24":{},"27":{}},"component":{}}],["declare_sect",{"_index":6419,"title":{},"name":{},"text":{"27":{}},"component":{}}],["decod",{"_index":2539,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["decompos",{"_index":1461,"title":{},"name":{},"text":{"13":{}},"component":{}}],["decompress",{"_index":2955,"title":{},"name":{},"text":{"16":{}},"component":{}}],["decreas",{"_index":3506,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["dedic",{"_index":2223,"title":{},"name":{},"text":{"15":{},"24":{},"28":{}},"component":{}}],["deepli",{"_index":2204,"title":{},"name":{},"text":{"15":{}},"component":{}}],["default",{"_index":322,"title":{"7-3":{}},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"12":{},"13":{},"15":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["default).`c",{"_index":3255,"title":{},"name":{},"text":{"16":{}},"component":{}}],["default.`d",{"_index":3257,"title":{},"name":{},"text":{"16":{}},"component":{}}],["default_statistics_target",{"_index":5017,"title":{},"name":{},"text":{"24":{}},"component":{}}],["default_transaction_deferr",{"_index":5831,"title":{},"name":{},"text":{"27":{}},"component":{}}],["default_transaction_isol",{"_index":5829,"title":{},"name":{},"text":{"27":{}},"component":{}}],["default_transaction_read_onli",{"_index":5830,"title":{},"name":{},"text":{"27":{}},"component":{}}],["default_vers",{"_index":877,"title":{},"name":{},"text":{"3":{}},"component":{}}],["defeat",{"_index":6072,"title":{},"name":{},"text":{"27":{}},"component":{}}],["defend",{"_index":1921,"title":{},"name":{},"text":{"15":{}},"component":{}}],["defer",{"_index":5817,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["deferr",{"_index":3354,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["defin",{"_index":1328,"title":{"23-40":{},"27-77":{},"28-8":{}},"name":{},"text":{"11":{},"12":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["define=varname=valu",{"_index":3105,"title":{},"name":{},"text":{"16":{}},"component":{}}],["defined_",{"_index":394,"title":{},"name":{},"text":{"2":{}},"component":{}}],["definit",{"_index":3225,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"27":{}},"component":{}}],["defrag",{"_index":4776,"title":{},"name":{},"text":{"23":{}},"component":{}}],["degener",{"_index":5275,"title":{},"name":{},"text":{"24":{}},"component":{}}],["degrad",{"_index":5005,"title":{},"name":{},"text":{"24":{}},"component":{}}],["degre",{"_index":6534,"title":{},"name":{},"text":{"28":{}},"component":{}}],["delay",{"_index":2036,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{}},"component":{}}],["deleg",{"_index":6506,"title":{},"name":{},"text":{"28":{}},"component":{}}],["delet",{"_index":102,"title":{"27-141":{}},"name":{},"text":{"1":{},"13":{},"16":{},"18":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["deletexml",{"_index":3790,"title":{"18-9":{}},"name":{},"text":{"18":{}},"component":{}}],["deletexml(xmltype('oldnodeoldnod",{"_index":3834,"title":{},"name":{},"text":{"18":{}},"component":{}}],["delimit",{"_index":5852,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["delimiter_charact",{"_index":6553,"title":{},"name":{},"text":{"28":{}},"component":{}}],["deliv",{"_index":2969,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["delta",{"_index":2012,"title":{},"name":{},"text":{"15":{},"17":{},"23":{}},"component":{}}],["demand",{"_index":2729,"title":{},"name":{},"text":{"16":{}},"component":{}}],["demo",{"_index":2756,"title":{"18-4":{}},"name":{},"text":{"16":{},"18":{},"26":{}},"component":{}}],["deni",{"_index":150,"title":{},"name":{},"text":{"1":{},"27":{}},"component":{}}],["denot",{"_index":5931,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["denser",{"_index":977,"title":{},"name":{},"text":{"4":{}},"component":{}}],["depart",{"_index":6088,"title":{},"name":{},"text":{"27":{}},"component":{}}],["depend",{"_index":38,"title":{"2-5":{},"28-40":{},"28-41":{}},"name":{},"text":{"1":{},"3":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["depict",{"_index":5719,"title":{},"name":{},"text":{"27":{}},"component":{}}],["deploy",{"_index":246,"title":{"15-57":{}},"name":{},"text":{"2":{},"15":{}},"component":{}}],["deployment.thi",{"_index":3455,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dept",{"_index":5955,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dept(text",{"_index":5956,"title":{},"name":{},"text":{"27":{}},"component":{}}],["depth",{"_index":1226,"title":{},"name":{},"text":{"9":{}},"component":{}}],["deriv",{"_index":6007,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["desc",{"_index":4920,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["descend",{"_index":3857,"title":{},"name":{},"text":{"19":{}},"component":{}}],["describ",{"_index":1614,"title":{"21-7":{}},"name":{},"text":{"13":{},"15":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["descript",{"_index":1082,"title":{"9-2":{},"10-2":{},"12-2":{},"13-3":{},"15-4":{},"19-2":{},"20-2":{},"21-2":{},"27-22":{},"27-29":{},"27-36":{},"27-43":{},"27-50":{},"27-57":{},"27-65":{},"27-72":{},"27-79":{},"27-86":{},"27-91":{},"27-97":{},"27-174":{}},"name":{},"text":{"6":{},"8":{},"13":{},"15":{},"16":{},"20":{},"21":{},"23":{},"25":{},"27":{}},"component":{}}],["description，pleas",{"_index":6483,"title":{},"name":{},"text":{"28":{}},"component":{}}],["deseri",{"_index":5788,"title":{},"name":{},"text":{"27":{}},"component":{}}],["design",{"_index":495,"title":{"5":{},"7":{},"8":{},"5-2":{},"5-3":{}},"name":{},"text":{"2":{},"6":{},"7":{},"10":{},"11":{},"15":{},"16":{},"19":{},"21":{},"24":{},"28":{}},"component":{}}],["designed,thi",{"_index":1060,"title":{},"name":{},"text":{"5":{}},"component":{}}],["desir",{"_index":1518,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["despit",{"_index":6083,"title":{},"name":{},"text":{"27":{}},"component":{}}],["destin",{"_index":3231,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["destroy",{"_index":2443,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["destruct",{"_index":2778,"title":{},"name":{},"text":{"16":{}},"component":{}}],["detach",{"_index":77,"title":{"27-275":{}},"name":{},"text":{"1":{},"16":{}},"component":{}}],["detail",{"_index":80,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["detect",{"_index":510,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["detector",{"_index":4853,"title":{},"name":{},"text":{"23":{}},"component":{}}],["determin",{"_index":947,"title":{"23-42":{}},"name":{},"text":{"4":{},"8":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["determinist",{"_index":5163,"title":{},"name":{},"text":{"24":{}},"component":{}}],["detroit",{"_index":3403,"title":{},"name":{},"text":{"16":{}},"component":{}}],["detroit.emp",{"_index":3405,"title":{},"name":{},"text":{"16":{}},"component":{}}],["detroit.employee_log",{"_index":3406,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dev",{"_index":5405,"title":{},"name":{},"text":{"25":{}},"component":{}}],["dev/nul",{"_index":3778,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["devel",{"_index":798,"title":{},"name":{},"text":{"3":{},"25":{}},"component":{}}],["devel.x86_64",{"_index":794,"title":{},"name":{},"text":{"3":{},"25":{}},"component":{}}],["develop",{"_index":127,"title":{"27":{}},"name":{},"text":{"1":{},"3":{},"4":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["developer’",{"_index":1943,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["deviat",{"_index":3141,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["devic",{"_index":3030,"title":{"24-13":{}},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["devis",{"_index":6634,"title":{},"name":{},"text":{"28":{}},"component":{}}],["diacrit",{"_index":5846,"title":{},"name":{},"text":{"27":{}},"component":{}}],["diagnos",{"_index":3614,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["diagnost",{"_index":2230,"title":{"16-7":{},"16-13":{},"16-19":{},"16-25":{},"16-31":{},"16-65":{},"16-97":{},"16-112":{},"16-119":{},"16-193":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["diagram",{"_index":5721,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dialect",{"_index":5929,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dianne'",{"_index":5899,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dianne''",{"_index":5868,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dianne’",{"_index":5898,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dictat",{"_index":4967,"title":{},"name":{},"text":{"24":{}},"component":{}}],["didn’t",{"_index":4541,"title":{},"name":{},"text":{"23":{}},"component":{}}],["diff",{"_index":1997,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["differ",{"_index":1080,"title":{"24-11":{}},"name":{},"text":{"6":{},"8":{},"11":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["difficult",{"_index":623,"title":{},"name":{},"text":{"2":{},"23":{},"24":{},"27":{}},"component":{}}],["difficulti",{"_index":1379,"title":{},"name":{},"text":{"11":{},"16":{},"24":{}},"component":{}}],["digest",{"_index":2996,"title":{},"name":{},"text":{"16":{}},"component":{}}],["digit",{"_index":5848,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["digits",{"_index":5911,"title":{},"name":{},"text":{"27":{}},"component":{}}],["digits.[digits][",{"_index":5909,"title":{},"name":{},"text":{"27":{}},"component":{}}],["digits=`ndigit",{"_index":3323,"title":{},"name":{},"text":{"16":{}},"component":{}}],["digits].digits[",{"_index":5910,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dimens",{"_index":452,"title":{},"name":{},"text":{"2":{},"4":{},"27":{}},"component":{}}],["dimension",{"_index":933,"title":{},"name":{},"text":{"4":{},"27":{}},"component":{}}],["direct",{"_index":487,"title":{"15-21":{},"17-8":{}},"name":{},"text":{"2":{},"11":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["directli",{"_index":328,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["directori",{"_index":630,"title":{},"name":{},"text":{"2":{},"7":{},"10":{},"11":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["directory=directori",{"_index":3449,"title":{},"name":{},"text":{"16":{}},"component":{}}],["directory=path",{"_index":3573,"title":{},"name":{},"text":{"16":{}},"component":{}}],["directory_sh.sql",{"_index":689,"title":{},"name":{},"text":{"2":{}},"component":{}}],["directory`output",{"_index":3258,"title":{},"name":{},"text":{"16":{}},"component":{}}],["directory`th",{"_index":3497,"title":{},"name":{},"text":{"16":{}},"component":{}}],["directory’",{"_index":2886,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dirti",{"_index":4685,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["disabl",{"_index":2608,"title":{"28-46":{},"28-52":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["disable_unlog",{"_index":636,"title":{},"name":{},"text":{"2":{}},"component":{}}],["disablerepo",{"_index":5391,"title":{},"name":{},"text":{"25":{}},"component":{}}],["disadvantag",{"_index":5003,"title":{},"name":{},"text":{"24":{}},"component":{}}],["disallow",{"_index":3621,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["disallowed.notewhen",{"_index":3329,"title":{},"name":{},"text":{"16":{}},"component":{}}],["disast",{"_index":3359,"title":{},"name":{},"text":{"16":{}},"component":{}}],["discard",{"_index":50,"title":{"20-7":{},"20-14":{}},"name":{},"text":{"1":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["disconnect",{"_index":3025,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["discourag",{"_index":2038,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["discov",{"_index":2206,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["discuss",{"_index":1944,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["disjunct",{"_index":5947,"title":{},"name":{},"text":{"27":{}},"component":{}}],["disk",{"_index":2967,"title":{"23-41":{},"23-42":{},"23-43":{},"24-3":{},"24-12":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["disk.th",{"_index":3481,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dispens",{"_index":5828,"title":{},"name":{},"text":{"27":{}},"component":{}}],["display",{"_index":2152,"title":{"21-6":{}},"name":{},"text":{"15":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["disregard",{"_index":6708,"title":{},"name":{},"text":{"28":{}},"component":{}}],["disrupt",{"_index":3892,"title":{},"name":{},"text":{"21":{}},"component":{}}],["dissimilar",{"_index":5181,"title":{},"name":{},"text":{"24":{}},"component":{}}],["distanc",{"_index":973,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{}}],["distinct",{"_index":445,"title":{"28-42":{}},"name":{},"text":{"2":{},"23":{},"27":{},"28":{}},"component":{}}],["distinguish",{"_index":1799,"title":{},"name":{},"text":{"14":{},"23":{},"27":{},"28":{}},"component":{}}],["distribut",{"_index":3113,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["diverg",{"_index":2652,"title":{},"name":{},"text":{"16":{}},"component":{}}],["divers",{"_index":1903,"title":{},"name":{},"text":{"15":{}},"component":{}}],["divid",{"_index":3054,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["divis",{"_index":5939,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dk",{"_index":3860,"title":{"20-8":{},"20-15":{}},"name":{},"text":{"20":{}},"component":{}}],["dmesg",{"_index":3765,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dml",{"_index":5282,"title":{},"name":{},"text":{"24":{}},"component":{}}],["dn",{"_index":4155,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dnf",{"_index":338,"title":{},"name":{},"text":{"2":{},"3":{},"22":{},"25":{}},"component":{}}],["do",{"_index":1988,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["doc",{"_index":172,"title":{"29-4":{}},"name":{},"text":{"15":{},"25":{},"28":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}}}],["doc.on",{"_index":6514,"title":{},"name":{},"text":{"28":{}},"component":{}}],["docdir",{"_index":3204,"title":{},"name":{},"text":{"16":{}},"component":{}}],["docker",{"_index":3900,"title":{"22-4":{},"25-3":{},"25-11":{}},"name":{},"text":{"22":{},"25":{}},"component":{}}],["docs.x86_64",{"_index":5353,"title":{},"name":{},"text":{"25":{}},"component":{}}],["docs@ivorysql.org",{"_index":2222,"title":{},"name":{},"text":{"15":{}},"component":{}}],["document",{"_index":31,"title":{"15-11":{},"15-30":{},"15-38":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"9":{},"10":{},"12":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["document.at",{"_index":1932,"title":{},"name":{},"text":{"15":{}},"component":{}}],["documents(includ",{"_index":2114,"title":{},"name":{},"text":{"15":{}},"component":{}}],["documents/github",{"_index":2067,"title":{},"name":{},"text":{"15":{}},"component":{}}],["docusauru",{"_index":2187,"title":{},"name":{},"text":{"15":{}},"component":{}}],["doesn't",{"_index":3235,"title":{},"name":{},"text":{"16":{}},"component":{}}],["doesn’t",{"_index":1907,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["dollar",{"_index":3310,"title":{"27-107":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["domain",{"_index":550,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["domain0",{"_index":3556,"title":{},"name":{},"text":{"16":{}},"component":{}}],["domain\\usernam",{"_index":3646,"title":{},"name":{},"text":{"16":{}},"component":{}}],["done",{"_index":303,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["don’t",{"_index":1999,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["dot",{"_index":3169,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["doubl",{"_index":1170,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["doubli",{"_index":3714,"title":{},"name":{},"text":{"16":{}},"component":{}}],["doubt",{"_index":5320,"title":{},"name":{},"text":{"24":{}},"component":{}}],["down",{"_index":2610,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["downgrad",{"_index":2832,"title":{},"name":{},"text":{"16":{}},"component":{}}],["download",{"_index":384,"title":{"29-4":{}},"name":{},"text":{"2":{},"11":{},"15":{},"29":{}},"component":{}}],["downstream",{"_index":273,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"23":{},"24":{}},"component":{}}],["downtim",{"_index":5277,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["dpkg",{"_index":5416,"title":{},"name":{},"text":{"25":{}},"component":{}}],["dr",{"_index":1397,"title":{},"name":{},"text":{"12":{}},"component":{}}],["dramat",{"_index":1340,"title":{},"name":{},"text":{"11":{},"16":{}},"component":{}}],["drawback",{"_index":5754,"title":{},"name":{},"text":{"27":{}},"component":{}}],["drbd",{"_index":5147,"title":{},"name":{},"text":{"24":{}},"component":{}}],["dri",{"_index":3652,"title":{},"name":{},"text":{"16":{}},"component":{}}],["drive",{"_index":5783,"title":{},"name":{},"text":{"27":{}},"component":{}}],["drop",{"_index":111,"title":{"20-6":{},"20-13":{}},"name":{},"text":{"1":{},"7":{},"16":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["drop)drop",{"_index":3061,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dropdb",{"_index":2234,"title":{"16-21":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["dropus",{"_index":2241,"title":{"16-27":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["dsmfillzerowrit",{"_index":4233,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dsn",{"_index":307,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dtgvp",{"_index":3059,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dtrace",{"_index":4805,"title":{},"name":{},"text":{"23":{}},"component":{}}],["du",{"_index":6511,"title":{},"name":{},"text":{"28":{}},"component":{}}],["dual",{"_index":1034,"title":{"8":{},"5-2":{}},"name":{},"text":{"4":{},"5":{},"11":{},"13":{},"18":{},"19":{},"27":{}},"component":{}}],["due",{"_index":267,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["dug",{"_index":6542,"title":{},"name":{},"text":{"28":{}},"component":{}}],["dump",{"_index":2493,"title":{"28-16":{},"28-17":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["dump.to",{"_index":3282,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dump.when",{"_index":3229,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dumpdir",{"_index":3400,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dumped.notewhen",{"_index":3302,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dumped.thi",{"_index":3226,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dumpfil",{"_index":6521,"title":{},"name":{},"text":{"28":{}},"component":{}}],["dumps.`t",{"_index":3262,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dumps.whil",{"_index":2511,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dup",{"_index":6448,"title":{},"name":{},"text":{"27":{}},"component":{}}],["duplic",{"_index":3389,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["durabl",{"_index":4227,"title":{"28-55":{}},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["durat",{"_index":3748,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["duration=`dur",{"_index":3749,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dure",{"_index":54,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["duti",{"_index":1915,"title":{},"name":{},"text":{"15":{}},"component":{}}],["dy",{"_index":6249,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dynam",{"_index":1273,"title":{"23-36":{},"23-37":{}},"name":{},"text":{"10":{},"16":{},"23":{},"24":{}},"component":{}}],["dynamicsharedmemorycontrol",{"_index":4381,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dz",{"_index":6611,"title":{},"name":{},"text":{"28":{}},"component":{}}],["e",{"_index":1794,"title":{},"name":{},"text":{"13":{},"16":{},"22":{},"25":{},"27":{},"28":{}},"component":{}}],["e.g",{"_index":2668,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["e.in",{"_index":5888,"title":{},"name":{},"text":{"27":{}},"component":{}}],["e\\0301",{"_index":1797,"title":{},"name":{},"text":{"13":{}},"component":{}}],["each",{"_index":498,"title":{},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["eager",{"_index":1887,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["earli",{"_index":3201,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["earlier",{"_index":1494,"title":{"27-41":{},"27-70":{}},"name":{},"text":{"13":{},"16":{},"24":{},"28":{}},"component":{}}],["eas",{"_index":2897,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["easi",{"_index":295,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"16":{},"18":{},"23":{},"24":{},"28":{}},"component":{}}],["easier",{"_index":1374,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"24":{},"28":{}},"component":{}}],["easiest",{"_index":3687,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["easili",{"_index":1370,"title":{},"name":{},"text":{"11":{},"23":{},"24":{},"28":{}},"component":{}}],["east",{"_index":3407,"title":{},"name":{},"text":{"16":{}},"component":{}}],["east*gsm",{"_index":3410,"title":{},"name":{},"text":{"16":{}},"component":{}}],["east|west)*gsm",{"_index":3414,"title":{},"name":{},"text":{"16":{}},"component":{}}],["echo",{"_index":2710,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ecolog",{"_index":1292,"title":{"11-6":{}},"name":{},"text":{},"component":{}}],["ecosystem",{"_index":1351,"title":{},"name":{},"text":{"11":{}},"component":{}}],["ecpg",{"_index":2248,"title":{"16-33":{}},"name":{},"text":{"16":{}},"component":{}}],["eden",{"_index":2757,"title":{},"name":{},"text":{"16":{}},"component":{}}],["edit",{"_index":489,"title":{"15-30":{},"15-38":{}},"name":{},"text":{"2":{},"15":{},"16":{},"22":{},"25":{}},"component":{}}],["edition",{"_index":3884,"title":{},"name":{},"text":{"20":{}},"component":{}}],["editionable/nonedition",{"_index":1389,"title":{},"name":{},"text":{"12":{}},"component":{}}],["editor",{"_index":2078,"title":{},"name":{},"text":{"15":{}},"component":{}}],["edt",{"_index":6225,"title":{},"name":{},"text":{"27":{}},"component":{}}],["educ",{"_index":2703,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ef",{"_index":3933,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["effect",{"_index":939,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["effici",{"_index":904,"title":{},"name":{},"text":{"4":{},"15":{},"18":{},"27":{},"28":{}},"component":{}}],["effort",{"_index":2683,"title":{},"name":{},"text":{"16":{}},"component":{}}],["eight",{"_index":1708,"title":{},"name":{},"text":{"13":{}},"component":{}}],["eighth",{"_index":1549,"title":{},"name":{},"text":{"13":{}},"component":{}}],["el",{"_index":6827,"title":{},"name":{},"text":{"28":{}},"component":{}}],["elaps",{"_index":4473,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["elect",{"_index":4309,"title":{},"name":{},"text":{"23":{}},"component":{}}],["element",{"_index":3421,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["eleph",{"_index":5859,"title":{},"name":{},"text":{"27":{}},"component":{}}],["eleventh",{"_index":6444,"title":{},"name":{},"text":{"27":{}},"component":{}}],["elig",{"_index":5035,"title":{},"name":{},"text":{"24":{}},"component":{}}],["elimin",{"_index":5763,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["elsewher",{"_index":2924,"title":{},"name":{},"text":{"16":{}},"component":{}}],["email",{"_index":2041,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["embed",{"_index":1013,"title":{},"name":{},"text":{"4":{},"16":{},"27":{},"28":{}},"component":{}}],["emit",{"_index":3233,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["emp",{"_index":3402,"title":{},"name":{},"text":{"16":{}},"component":{}}],["emphasi",{"_index":2127,"title":{},"name":{},"text":{"15":{}},"component":{}}],["employe",{"_index":6087,"title":{},"name":{},"text":{"27":{}},"component":{}}],["employee_log",{"_index":3404,"title":{},"name":{},"text":{"16":{}},"component":{}}],["empti",{"_index":1092,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["empty.when",{"_index":2879,"title":{},"name":{},"text":{"16":{}},"component":{}}],["emul",{"_index":5979,"title":{},"name":{},"text":{"27":{}},"component":{}}],["en",{"_index":122,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["en/modules/root/nav.adoc",{"_index":2215,"title":{},"name":{},"text":{"15":{}},"component":{}}],["en/modules/root/pages/vx.x",{"_index":2214,"title":{},"name":{},"text":{"15":{}},"component":{}}],["en_us.utf",{"_index":5452,"title":{},"name":{},"text":{"26":{}},"component":{}}],["enabl",{"_index":902,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["enable/dis",{"_index":6710,"title":{},"name":{},"text":{"28":{}},"component":{}}],["enable_parallel_append",{"_index":5791,"title":{},"name":{},"text":{"27":{}},"component":{}}],["enable_seqscan",{"_index":6746,"title":{},"name":{},"text":{"28":{}},"component":{}}],["enable_sort",{"_index":6713,"title":{},"name":{},"text":{"28":{}},"component":{}}],["enabled=1",{"_index":3920,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["encapsul",{"_index":2621,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["enclos",{"_index":1176,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["encod",{"_index":707,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["encoding=`encod",{"_index":3249,"title":{},"name":{},"text":{"16":{}},"component":{}}],["encoding=encod",{"_index":2744,"title":{},"name":{},"text":{"16":{}},"component":{}}],["encoding_nam",{"_index":6560,"title":{},"name":{},"text":{"28":{}},"component":{}}],["encompass",{"_index":6507,"title":{},"name":{},"text":{"28":{}},"component":{}}],["encount",{"_index":2835,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["encourag",{"_index":2024,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["encrypt",{"_index":2760,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["end",{"_index":233,"title":{"15-32":{},"27-48":{}},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"13":{},"15":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["endblock",{"_index":2846,"title":{},"name":{},"text":{"16":{}},"component":{}}],["endblock=`block",{"_index":2848,"title":{},"name":{},"text":{"16":{}},"component":{}}],["endpo",{"_index":3474,"title":{},"name":{},"text":{"16":{}},"component":{}}],["endpoint",{"_index":5029,"title":{},"name":{},"text":{"24":{}},"component":{}}],["endpos=lsn",{"_index":3452,"title":{},"name":{},"text":{"16":{}},"component":{}}],["enforc",{"_index":4842,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["engag",{"_index":1984,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["engin",{"_index":289,"title":{},"name":{},"text":{"2":{}},"component":{}}],["english",{"_index":1969,"title":{},"name":{},"text":{"15":{}},"component":{}}],["english_stem",{"_index":741,"title":{},"name":{},"text":{"2":{}},"component":{}}],["enhanc",{"_index":4,"title":{"1-2":{}},"name":{},"text":{"1":{},"11":{},"15":{},"21":{},"23":{},"27":{}},"component":{}}],["enjoy",{"_index":3970,"title":{},"name":{},"text":{"22":{}},"component":{}}],["enough",{"_index":2474,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["ensur",{"_index":34,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["enter",{"_index":1052,"title":{},"name":{},"text":{"5":{},"15":{},"16":{},"24":{},"27":{}},"component":{}}],["enterpris",{"_index":291,"title":{},"name":{},"text":{"2":{},"11":{},"27":{}},"component":{}}],["enthusiast",{"_index":1902,"title":{},"name":{},"text":{"15":{}},"component":{}}],["entir",{"_index":266,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["entri",{"_index":114,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["entrypoint.",{"_index":3958,"title":{},"name":{},"text":{"22":{}},"component":{}}],["enum",{"_index":5573,"title":{"27-136":{}},"name":{},"text":{"27":{}},"component":{}}],["enumer",{"_index":3008,"title":{},"name":{},"text":{"16":{}},"component":{}}],["env=pg_config",{"_index":998,"title":{},"name":{},"text":{"4":{}},"component":{}}],["environ",{"_index":69,"title":{"2-4":{},"2-5":{},"2-17":{},"16-6":{},"16-12":{},"16-18":{},"16-24":{},"16-30":{},"16-45":{},"16-56":{},"16-64":{},"16-71":{},"16-78":{},"16-85":{},"16-91":{},"16-96":{},"16-111":{},"16-118":{},"16-126":{},"16-131":{},"16-136":{},"16-140":{},"16-145":{},"16-155":{},"16-161":{},"16-167":{},"16-184":{},"16-192":{},"26-4":{},"26-10":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"13":{},"15":{},"16":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["environment",{"_index":1866,"title":{"15-43":{},"22-1":{}},"name":{},"text":{},"component":{}}],["envis",{"_index":6597,"title":{},"name":{},"text":{"28":{}},"component":{}}],["epoch",{"_index":2642,"title":{},"name":{},"text":{"16":{}},"component":{}}],["epoch.th",{"_index":3667,"title":{},"name":{},"text":{"16":{}},"component":{}}],["epoch=xid_epoch",{"_index":3665,"title":{},"name":{},"text":{"16":{}},"component":{}}],["equal",{"_index":1897,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["equival",{"_index":2543,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["erp",{"_index":1354,"title":{},"name":{},"text":{"11":{}},"component":{}}],["err",{"_index":1961,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["erron",{"_index":4562,"title":{},"name":{},"text":{"23":{}},"component":{}}],["error",{"_index":51,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"15":{},"16":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["error.backup",{"_index":2559,"title":{},"name":{},"text":{"16":{}},"component":{}}],["error.fastpath",{"_index":4172,"title":{},"name":{},"text":{"23":{}},"component":{}}],["escap",{"_index":5541,"title":{"27-105":{},"27-106":{},"27-157":{}},"name":{},"text":{"27":{},"28":{}},"component":{}}],["escape_charact",{"_index":6556,"title":{},"name":{},"text":{"28":{}},"component":{}}],["escape_string_warn",{"_index":5889,"title":{},"name":{},"text":{"27":{}},"component":{}}],["especi",{"_index":490,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["essenti",{"_index":2728,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["est",{"_index":6224,"title":{},"name":{},"text":{"27":{}},"component":{}}],["est_f",{"_index":3887,"title":{},"name":{},"text":{"20":{}},"component":{}}],["establish",{"_index":1901,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["estim",{"_index":505,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"28":{}},"component":{}}],["estimate_cost",{"_index":519,"title":{},"name":{},"text":{"2":{}},"component":{}}],["etc",{"_index":238,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"24":{},"27":{},"28":{}},"component":{}}],["etc/ora2pg/ora2pg.conf.dist",{"_index":461,"title":{},"name":{},"text":{"2":{}},"component":{}}],["etc/yum.repos.d/ivorysql.repo",{"_index":3912,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["eval",{"_index":3224,"title":{},"name":{},"text":{"16":{}},"component":{}}],["evalu",{"_index":508,"title":{"27-129":{}},"name":{},"text":{"2":{},"23":{},"27":{}},"component":{}}],["even",{"_index":1960,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["evenli",{"_index":3114,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["event",{"_index":2679,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["event_sourc",{"_index":3645,"title":{},"name":{},"text":{"16":{}},"component":{}}],["eventu",{"_index":2872,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["everyon",{"_index":1895,"title":{},"name":{},"text":{"15":{}},"component":{}}],["everyth",{"_index":3721,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["exact",{"_index":2467,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["exactli",{"_index":2914,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["examin",{"_index":2507,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["exampl",{"_index":395,"title":{"6-4":{},"15-42":{},"16-8":{},"16-14":{},"16-20":{},"16-26":{},"16-32":{},"16-37":{},"16-47":{},"16-60":{},"16-67":{},"16-73":{},"16-80":{},"16-87":{},"16-99":{},"16-103":{},"16-114":{},"16-121":{},"16-132":{},"16-147":{},"16-197":{},"24-30":{},"27-25":{},"27-32":{},"27-39":{},"27-46":{},"27-53":{},"27-61":{},"27-68":{},"27-75":{},"27-82":{},"27-93":{},"27-140":{},"27-148":{},"27-150":{},"27-152":{},"27-156":{},"27-159":{},"27-163":{},"27-168":{},"27-171":{},"27-175":{},"27-178":{},"27-182":{},"27-186":{},"27-190":{},"27-193":{},"27-197":{},"27-201":{},"27-205":{},"27-210":{},"27-214":{},"27-218":{},"27-222":{},"27-226":{},"27-230":{},"27-234":{},"27-238":{},"27-242":{},"27-247":{},"27-253":{},"27-270":{},"27-274":{},"27-277":{},"28-31":{}},"name":{},"text":{"2":{},"11":{},"13":{},"15":{},"16":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["example(d",{"_index":1134,"title":{},"name":{},"text":{"6":{}},"component":{}}],["example:`psql",{"_index":3587,"title":{},"name":{},"text":{"16":{}},"component":{}}],["exce",{"_index":4789,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["exceed",{"_index":3197,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["excel",{"_index":1280,"title":{},"name":{},"text":{"10":{},"12":{},"16":{}},"component":{}}],["except",{"_index":1281,"title":{"27-9":{}},"name":{},"text":{"10":{},"12":{},"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["excess",{"_index":5001,"title":{},"name":{},"text":{"24":{}},"component":{}}],["exclam",{"_index":2105,"title":{},"name":{},"text":{"15":{}},"component":{}}],["exclud",{"_index":2808,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["exclus",{"_index":3159,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["exec",{"_index":1404,"title":{},"name":{},"text":{"12":{},"16":{}},"component":{}}],["execut",{"_index":323,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"8":{},"10":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["execute:/usr/local/bin/ora2pg",{"_index":459,"title":{},"name":{},"text":{"2":{}},"component":{}}],["executed.option",{"_index":3108,"title":{},"name":{},"text":{"16":{}},"component":{}}],["executegath",{"_index":4306,"title":{},"name":{},"text":{"23":{}},"component":{}}],["executor",{"_index":2397,"title":{"16-173":{}},"name":{},"text":{"18":{},"27":{},"28":{}},"component":{}}],["exhaust",{"_index":6862,"title":{},"name":{},"text":{"28":{}},"component":{}}],["exist",{"_index":458,"title":{},"name":{},"text":{"2":{},"7":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["existsnod",{"_index":3789,"title":{"18-8":{}},"name":{},"text":{"18":{}},"component":{}}],["existsnode(xmltype('d",{"_index":3815,"title":{},"name":{},"text":{"18":{}},"component":{}}],["existsnode(xmltype_inst",{"_index":3812,"title":{},"name":{},"text":{"18":{}},"component":{}}],["exit",{"_index":426,"title":{"16-55":{},"16-77":{},"16-84":{},"16-107":{}},"name":{},"text":{"2":{},"16":{},"22":{},"23":{},"24":{},"25":{}},"component":{}}],["exit.clusterdb",{"_index":2715,"title":{},"name":{},"text":{"16":{}},"component":{}}],["expand",{"_index":3243,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["expans",{"_index":3425,"title":{},"name":{},"text":{"16":{}},"component":{}}],["expect",{"_index":2023,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["expend",{"_index":6647,"title":{},"name":{},"text":{"28":{}},"component":{}}],["expens",{"_index":956,"title":{},"name":{},"text":{"4":{},"23":{},"27":{},"28":{}},"component":{}}],["experi",{"_index":2035,"title":{"26-12":{}},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["experienc",{"_index":5299,"title":{},"name":{},"text":{"24":{}},"component":{}}],["experiment",{"_index":6879,"title":{},"name":{},"text":{"28":{}},"component":{}}],["expir",{"_index":4198,"title":{},"name":{},"text":{"23":{}},"component":{}}],["explain",{"_index":2688,"title":{"28-33":{},"28-34":{},"28-35":{}},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["explain’",{"_index":6636,"title":{},"name":{},"text":{"28":{}},"component":{}}],["explan",{"_index":5366,"title":{},"name":{},"text":{"25":{}},"component":{}}],["explanatori",{"_index":5336,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["explicit",{"_index":2797,"title":{"28-44":{}},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["explicitli",{"_index":2771,"title":{},"name":{},"text":{"16":{},"21":{},"23":{},"24":{},"27":{}},"component":{}}],["explor",{"_index":3971,"title":{},"name":{},"text":{"22":{},"28":{}},"component":{}}],["expon",{"_index":5912,"title":{},"name":{},"text":{"27":{}},"component":{}}],["exponenti",{"_index":5938,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["export",{"_index":194,"title":{"2-12":{},"2-15":{},"2-16":{}},"name":{},"text":{"2":{},"3":{},"4":{},"16":{},"22":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["export_",{"_index":762,"title":{},"name":{},"text":{"2":{}},"component":{}}],["export_schema",{"_index":469,"title":{},"name":{},"text":{"2":{}},"component":{}}],["export_schema.sh",{"_index":774,"title":{},"name":{},"text":{"2":{}},"component":{}}],["expos",{"_index":2118,"title":{},"name":{},"text":{"15":{}},"component":{}}],["expr",{"_index":6338,"title":{},"name":{},"text":{"27":{}},"component":{}}],["expr1",{"_index":6339,"title":{},"name":{},"text":{"27":{}},"component":{}}],["expr2",{"_index":6340,"title":{},"name":{},"text":{"27":{}},"component":{}}],["express",{"_index":1599,"title":{"27-115":{},"27-122":{},"27-125":{},"27-129":{}},"name":{},"text":{"13":{},"16":{},"18":{},"21":{},"27":{},"28":{}},"component":{}}],["expression(",{"_index":5983,"title":{},"name":{},"text":{"27":{}},"component":{}}],["expression.fieldnam",{"_index":5964,"title":{},"name":{},"text":{"27":{}},"component":{}}],["expression[lower_subscript:upper_subscript",{"_index":5958,"title":{},"name":{},"text":{"27":{}},"component":{}}],["expression[subscript",{"_index":5957,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ext_stats_comput",{"_index":4744,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ext_stats_tot",{"_index":4743,"title":{},"name":{},"text":{"23":{}},"component":{}}],["extend",{"_index":3134,"title":{"21-7":{},"28-39":{}},"name":{},"text":{"16":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["extens",{"_index":86,"title":{"3-4":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"13":{},"16":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["extension(",{"_index":3247,"title":{},"name":{},"text":{"16":{}},"component":{}}],["extension/schema/t",{"_index":3366,"title":{},"name":{},"text":{"16":{}},"component":{}}],["extension=`pattern",{"_index":3241,"title":{},"name":{},"text":{"16":{}},"component":{}}],["extension`.notewhen",{"_index":3246,"title":{},"name":{},"text":{"16":{}},"component":{}}],["extension’",{"_index":2875,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["extent",{"_index":3517,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["extern",{"_index":570,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["external_to_fdw",{"_index":582,"title":{},"name":{},"text":{"2":{}},"component":{}}],["extra",{"_index":2129,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"28":{}},"component":{}}],["extra_float_digit",{"_index":3324,"title":{},"name":{},"text":{"16":{}},"component":{}}],["extract",{"_index":285,"title":{},"name":{},"text":{"2":{},"16":{},"18":{},"24":{},"27":{}},"component":{}}],["extract(xml",{"_index":3787,"title":{"18-6":{}},"name":{},"text":{"18":{}},"component":{}}],["extract(xmltype('1",{"_index":3830,"title":{},"name":{},"text":{"18":{}},"component":{}}],["extractvalu",{"_index":3788,"title":{"18-7":{}},"name":{},"text":{"18":{}},"component":{}}],["extractvalue(xmltype('100'),'/a/b",{"_index":3832,"title":{},"name":{},"text":{"18":{}},"component":{}}],["extraordinari",{"_index":5142,"title":{},"name":{},"text":{"24":{}},"component":{}}],["extrapol",{"_index":6778,"title":{},"name":{},"text":{"28":{}},"component":{}}],["extrem",{"_index":4991,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["extutil",{"_index":340,"title":{},"name":{},"text":{"2":{}},"component":{}}],["extutils::instal",{"_index":417,"title":{},"name":{},"text":{"2":{}},"component":{}}],["e’foo",{"_index":5872,"title":{},"name":{},"text":{"27":{}},"component":{}}],["f",{"_index":742,"title":{},"name":{},"text":{"2":{},"16":{},"18":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["f','g",{"_index":6350,"title":{},"name":{},"text":{"27":{}},"component":{}}],["f,f",{"_index":6816,"title":{},"name":{},"text":{"28":{}},"component":{}}],["f1",{"_index":5985,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["f2",{"_index":6022,"title":{},"name":{},"text":{"27":{}},"component":{}}],["f3",{"_index":6047,"title":{},"name":{},"text":{"27":{}},"component":{}}],["f[ast",{"_index":3602,"title":{},"name":{},"text":{"16":{}},"component":{}}],["facil",{"_index":4078,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["facilit",{"_index":2490,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["fact",{"_index":2202,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["factor",{"_index":3049,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["fail",{"_index":721,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["failed.when",{"_index":2614,"title":{},"name":{},"text":{"16":{}},"component":{}}],["failed_count",{"_index":4571,"title":{},"name":{},"text":{"23":{}},"component":{}}],["failov",{"_index":2656,"title":{"24-12":{},"24-38":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["fails.sync",{"_index":4488,"title":{},"name":{},"text":{"23":{}},"component":{}}],["failur",{"_index":2045,"title":{"23-43":{},"24-6":{}},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["failures;deadlock",{"_index":3163,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fall",{"_index":1480,"title":{},"name":{},"text":{"13":{},"16":{},"24":{},"27":{}},"component":{}}],["fallback",{"_index":6502,"title":{},"name":{},"text":{"28":{}},"component":{}}],["fallen",{"_index":5296,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fals",{"_index":3387,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["familiar",{"_index":1936,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["faq",{"_index":369,"title":{"17":{}},"name":{},"text":{"2":{}},"component":{}}],["far",{"_index":3177,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["farther",{"_index":975,"title":{},"name":{},"text":{"4":{}},"component":{}}],["fashion",{"_index":6071,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["fast",{"_index":920,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"24":{}},"component":{}}],["faster",{"_index":2662,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["fastest",{"_index":2676,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["fastpath",{"_index":4624,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fast|spread",{"_index":2957,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fatal",{"_index":2565,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["favor",{"_index":5785,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["favorit",{"_index":6526,"title":{},"name":{},"text":{"28":{}},"component":{}}],["fawei",{"_index":152,"title":{},"name":{},"text":{"1":{}},"component":{}}],["fc",{"_index":2508,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["fd",{"_index":2509,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fdatasync",{"_index":4596,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fdw",{"_index":318,"title":{},"name":{},"text":{"2":{}},"component":{}}],["featur",{"_index":1287,"title":{"11-4":{},"11-8":{},"27-134":{}},"name":{},"text":{"11":{},"15":{},"16":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["fed",{"_index":3308,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["feed",{"_index":2497,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["feedback",{"_index":1978,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{}},"component":{}}],["feel",{"_index":1964,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["fegab",{"_index":1564,"title":{},"name":{},"text":{"13":{}},"component":{}}],["fenc",{"_index":2149,"title":{},"name":{},"text":{"15":{}},"component":{}}],["fetch",{"_index":2080,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["fetch`th",{"_index":2929,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fetches/stor",{"_index":6564,"title":{},"name":{},"text":{"28":{}},"component":{}}],["few",{"_index":2039,"title":{},"name":{},"text":{"15":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["fewer",{"_index":2844,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["field",{"_index":1155,"title":{"27-119":{}},"name":{},"text":{"6":{},"9":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["fifth",{"_index":1536,"title":{"15-31":{}},"name":{},"text":{"13":{}},"component":{}}],["figur",{"_index":2159,"title":{},"name":{},"text":{"15":{}},"component":{}}],["file",{"_index":106,"title":{"16-146":{},"24-9":{},"24-13":{},"28-20":{},"28-26":{},"28-30":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["file.",{"_index":2933,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file.gz",{"_index":6532,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file.pg_dumpal",{"_index":2518,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file.th",{"_index":3672,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file=`fil",{"_index":3251,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file=`filenam",{"_index":3493,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file=filenam",{"_index":3420,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file=filename[@weight",{"_index":3107,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file=walfil",{"_index":3671,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file_fdw",{"_index":583,"title":{},"name":{},"text":{"2":{}},"component":{}}],["filen@me@1",{"_index":3110,"title":{},"name":{},"text":{"16":{}},"component":{}}],["filenam",{"_index":2787,"title":{},"name":{},"text":{"16":{},"22":{},"25":{},"28":{}},"component":{}}],["filename.gz",{"_index":6527,"title":{},"name":{},"text":{"28":{}},"component":{}}],["filename[@weight",{"_index":3106,"title":{},"name":{},"text":{"16":{}},"component":{}}],["filenod",{"_index":3595,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["filenode=filenod",{"_index":3596,"title":{},"name":{},"text":{"16":{}},"component":{}}],["files.for",{"_index":6551,"title":{},"name":{},"text":{"28":{}},"component":{}}],["filesystem",{"_index":2917,"title":{},"name":{},"text":{"16":{}},"component":{}}],["file’",{"_index":2451,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fill",{"_index":3466,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["filler",{"_index":5769,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fillfactor",{"_index":3051,"title":{},"name":{},"text":{"16":{}},"component":{}}],["filter",{"_index":3508,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["filter='gzip",{"_index":6531,"title":{},"name":{},"text":{"28":{}},"component":{}}],["filter_claus",{"_index":5982,"title":{},"name":{},"text":{"27":{}},"component":{}}],["final",{"_index":723,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{}},"component":{}}],["financi",{"_index":1356,"title":{},"name":{},"text":{"11":{}},"component":{}}],["find",{"_index":456,"title":{},"name":{},"text":{"2":{},"4":{},"13":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["fine",{"_index":6522,"title":{},"name":{},"text":{"28":{}},"component":{}}],["finer",{"_index":5015,"title":{},"name":{},"text":{"24":{}},"component":{}}],["finish",{"_index":2064,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["finit",{"_index":5300,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fire",{"_index":4815,"title":{},"name":{},"text":{"23":{},"27":{},"28":{}},"component":{}}],["firewal",{"_index":5433,"title":{"26-3":{},"26-8":{}},"name":{},"text":{"26":{}},"component":{}}],["firewalld",{"_index":5436,"title":{},"name":{},"text":{"26":{}},"component":{}}],["firm",{"_index":1298,"title":{},"name":{},"text":{"11":{}},"component":{}}],["first",{"_index":722,"title":{"15-23":{},"15-27":{}},"name":{},"text":{"2":{},"11":{},"13":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["first:creat",{"_index":1856,"title":{"15-35":{}},"name":{},"text":{},"component":{}}],["firstli",{"_index":2155,"title":{},"name":{},"text":{"15":{}},"component":{}}],["fit",{"_index":4896,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["five",{"_index":2488,"title":{},"name":{},"text":{"16":{},"25":{},"27":{},"28":{}},"component":{}}],["fix",{"_index":6,"title":{"1-2":{}},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["fkey",{"_index":471,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fl",{"_index":6844,"title":{},"name":{},"text":{"28":{}},"component":{}}],["flag",{"_index":1767,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"28":{}},"component":{}}],["flatten",{"_index":6884,"title":{},"name":{},"text":{"28":{}},"component":{}}],["flex",{"_index":5408,"title":{},"name":{},"text":{"25":{}},"component":{}}],["flexibl",{"_index":2505,"title":{},"name":{},"text":{"16":{},"18":{},"21":{},"24":{},"27":{},"28":{}},"component":{}}],["flg",{"_index":6105,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg1",{"_index":6109,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg2",{"_index":6119,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg3",{"_index":6121,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg4",{"_index":6123,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg5",{"_index":6125,"title":{},"name":{},"text":{"27":{}},"component":{}}],["flg6",{"_index":6127,"title":{},"name":{},"text":{"27":{}},"component":{}}],["float",{"_index":3322,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["float4",{"_index":5919,"title":{},"name":{},"text":{"27":{}},"component":{}}],["floor",{"_index":1530,"title":{},"name":{},"text":{"13":{}},"component":{}}],["floor','or",{"_index":1533,"title":{},"name":{},"text":{"13":{}},"component":{}}],["floor','or',5,2",{"_index":1538,"title":{},"name":{},"text":{"13":{}},"component":{}}],["flow",{"_index":5151,"title":{},"name":{},"text":{"24":{}},"component":{}}],["flowchart",{"_index":1047,"title":{},"name":{},"text":{"5":{}},"component":{}}],["flush",{"_index":2529,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["flush_lag",{"_index":4478,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["flush_lsn",{"_index":4469,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["flushed_lsn",{"_index":4520,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["fmt",{"_index":6241,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fmt1",{"_index":6276,"title":{},"name":{},"text":{"27":{}},"component":{}}],["focu",{"_index":918,"title":{},"name":{},"text":{"4":{},"28":{}},"component":{}}],["focus",{"_index":1326,"title":{},"name":{},"text":{"11":{},"15":{}},"component":{}}],["foe",{"_index":2112,"title":{},"name":{},"text":{"15":{}},"component":{}}],["fold",{"_index":3416,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["folder",{"_index":2179,"title":{},"name":{},"text":{"15":{},"16":{},"25":{}},"component":{}}],["foldernam",{"_index":2180,"title":{},"name":{},"text":{"15":{}},"component":{}}],["follow",{"_index":138,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"8":{},"12":{},"13":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["following:`c",{"_index":3494,"title":{},"name":{},"text":{"16":{}},"component":{}}],["following:`no_indicator`do",{"_index":2788,"title":{},"name":{},"text":{"16":{}},"component":{}}],["following:`p",{"_index":3253,"title":{},"name":{},"text":{"16":{}},"component":{}}],["font",{"_index":2195,"title":{},"name":{},"text":{"15":{}},"component":{}}],["foo",{"_index":2137,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{}},"component":{}}],["foobar",{"_index":5804,"title":{},"name":{},"text":{"27":{}},"component":{}}],["foopass",{"_index":5218,"title":{},"name":{},"text":{"24":{}},"component":{}}],["forc",{"_index":2636,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["force_not_nul",{"_index":6558,"title":{},"name":{},"text":{"28":{}},"component":{}}],["force_nul",{"_index":6559,"title":{},"name":{},"text":{"28":{}},"component":{}}],["force_quot",{"_index":6557,"title":{},"name":{},"text":{"28":{}},"component":{}}],["forcibl",{"_index":5293,"title":{},"name":{},"text":{"24":{}},"component":{}}],["foreach(@modul",{"_index":419,"title":{},"name":{},"text":{"2":{}},"component":{}}],["foreign",{"_index":73,"title":{"28-14":{},"28-49":{}},"name":{},"text":{"1":{},"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["foreignserv",{"_index":3328,"title":{},"name":{},"text":{"16":{}},"component":{}}],["forethought",{"_index":5731,"title":{},"name":{},"text":{"27":{}},"component":{}}],["forev",{"_index":3338,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["forget",{"_index":4998,"title":{},"name":{},"text":{"24":{}},"component":{}}],["forgotten",{"_index":5811,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fork",{"_index":1846,"title":{"15-27":{}},"name":{},"text":{"15":{},"16":{},"17":{},"23":{}},"component":{}}],["forknumb",{"_index":4829,"title":{},"name":{},"text":{"23":{}},"component":{}}],["form",{"_index":1313,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["formal",{"_index":5184,"title":{},"name":{},"text":{"24":{}},"component":{}}],["format",{"_index":1088,"title":{"28-26":{},"28-27":{},"28-28":{},"28-29":{}},"name":{},"text":{"6":{},"10":{},"13":{},"15":{},"16":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["format=`format",{"_index":3252,"title":{},"name":{},"text":{"16":{}},"component":{}}],["format=format",{"_index":2882,"title":{},"name":{},"text":{"16":{}},"component":{}}],["format_nam",{"_index":6552,"title":{},"name":{},"text":{"28":{}},"component":{}}],["former",{"_index":5228,"title":{},"name":{},"text":{"24":{}},"component":{}}],["forti",{"_index":5074,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fortun",{"_index":3690,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["forward",{"_index":1467,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"23":{},"27":{}},"component":{}}],["found",{"_index":366,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["found.in",{"_index":3630,"title":{},"name":{},"text":{"16":{}},"component":{}}],["foundat",{"_index":1953,"title":{},"name":{},"text":{"15":{},"17":{},"18":{}},"component":{}}],["four",{"_index":2111,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["fourth",{"_index":1848,"title":{"15-30":{}},"name":{},"text":{"15":{},"27":{}},"component":{}}],["fraction",{"_index":1685,"title":{},"name":{},"text":{"13":{},"16":{},"27":{}},"component":{}}],["fragment",{"_index":2145,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{}}],["fragment](#frag",{"_index":2147,"title":{},"name":{},"text":{"15":{}},"component":{}}],["frame",{"_index":1384,"title":{},"name":{},"text":{"11":{},"24":{}},"component":{}}],["framework",{"_index":1042,"title":{"5":{},"6":{}},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{}}],["francisco",{"_index":6793,"title":{},"name":{},"text":{"28":{}},"component":{}}],["free",{"_index":279,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"23":{},"24":{},"28":{},"29":{}},"component":{}}],["freebsd",{"_index":4807,"title":{},"name":{},"text":{"23":{}},"component":{}}],["freedom",{"_index":6868,"title":{},"name":{},"text":{"28":{}},"component":{}}],["freeli",{"_index":5743,"title":{},"name":{},"text":{"27":{}},"component":{}}],["freez",{"_index":3068,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["frequenc",{"_index":4968,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["frequent",{"_index":4095,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["frequently.specifi",{"_index":3483,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fresh",{"_index":3436,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["freshli",{"_index":3397,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["friday",{"_index":1490,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["friendli",{"_index":1910,"title":{},"name":{},"text":{"15":{}},"component":{}}],["from.bi",{"_index":3015,"title":{},"name":{},"text":{"16":{}},"component":{}}],["from_collapse_limit",{"_index":6883,"title":{},"name":{},"text":{"28":{}},"component":{}}],["from_list",{"_index":6144,"title":{},"name":{},"text":{"27":{}},"component":{}}],["from_tz",{"_index":1451,"title":{"27-165":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["from_tz('2021",{"_index":6167,"title":{},"name":{},"text":{"27":{}},"component":{}}],["from_tz(null,'sast",{"_index":6173,"title":{},"name":{},"text":{"27":{}},"component":{}}],["from_tz(timestamp",{"_index":1743,"title":{},"name":{},"text":{"13":{}},"component":{}}],["front",{"_index":2566,"title":{},"name":{},"text":{"16":{}},"component":{}}],["frozen",{"_index":2839,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["frozen.if",{"_index":2840,"title":{},"name":{},"text":{"16":{}},"component":{}}],["frozenid",{"_index":4359,"title":{},"name":{},"text":{"23":{}},"component":{}}],["frozentransactionid",{"_index":5032,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fsync",{"_index":3479,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["fsync_writethrough",{"_index":4597,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ft",{"_index":552,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["full",{"_index":1296,"title":{"23-43":{}},"name":{},"text":{"11":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["full_page_writ",{"_index":2481,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["fulli",{"_index":256,"title":{},"name":{},"text":{"2":{},"3":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["func",{"_index":6382,"title":{},"name":{},"text":{"27":{}},"component":{}}],["funcid",{"_index":4678,"title":{},"name":{},"text":{"23":{}},"component":{}}],["funcnam",{"_index":4679,"title":{},"name":{},"text":{"23":{}},"component":{}}],["function",{"_index":91,"title":{"12":{},"13":{},"4-11":{},"5-1":{},"7-2":{},"8-2":{},"9-2":{},"10-2":{},"12-2":{},"13-2":{},"13-3":{},"14-2":{},"18-3":{},"18-4":{},"19-2":{},"20-2":{},"21-2":{},"23-27":{},"27-121":{},"27-123":{},"27-130":{},"27-164":{},"27-206":{},"27-259":{},"28-40":{},"28-41":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["function,funct",{"_index":1783,"title":{},"name":{},"text":{"13":{}},"component":{}}],["function.dis",{"_index":4173,"title":{},"name":{},"text":{"23":{}},"component":{}}],["function=funct",{"_index":3516,"title":{},"name":{},"text":{"16":{}},"component":{}}],["function_declar",{"_index":6390,"title":{},"name":{},"text":{"27":{}},"component":{}}],["function_definit",{"_index":6416,"title":{},"name":{},"text":{"27":{}},"component":{}}],["function_nam",{"_index":5973,"title":{},"name":{},"text":{"27":{}},"component":{}}],["function_sh.sql",{"_index":678,"title":{},"name":{},"text":{"2":{}},"component":{}}],["functiondescript",{"_index":4687,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fund",{"_index":1358,"title":{},"name":{},"text":{"11":{}},"component":{}}],["fundament",{"_index":6519,"title":{},"name":{},"text":{"28":{}},"component":{}}],["funnel",{"_index":5152,"title":{},"name":{},"text":{"24":{}},"component":{}}],["further",{"_index":79,"title":{},"name":{},"text":{"1":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["furthermor",{"_index":3805,"title":{},"name":{},"text":{"18":{},"24":{},"27":{}},"component":{}}],["futur",{"_index":1314,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["fuzzi",{"_index":1225,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["fw_psc_s_mv_chan_bix",{"_index":726,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fw_psc_s_mv_promo_bix",{"_index":729,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fw_psc_s_mv_subcat_bix",{"_index":731,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fw_psc_s_mv_wd_bix",{"_index":733,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fweek_pscat_sales_mv",{"_index":727,"title":{},"name":{},"text":{"2":{}},"component":{}}],["g",{"_index":2762,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["g(i",{"_index":6160,"title":{},"name":{},"text":{"27":{}},"component":{}}],["g).v",{"_index":3074,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ga",{"_index":6836,"title":{},"name":{},"text":{"28":{}},"component":{}}],["gain",{"_index":4975,"title":{},"name":{},"text":{"24":{}},"component":{}}],["game",{"_index":1365,"title":{},"name":{},"text":{"11":{}},"component":{}}],["gao",{"_index":157,"title":{},"name":{},"text":{"1":{}},"component":{}}],["gap",{"_index":5053,"title":{},"name":{},"text":{"24":{}},"component":{}}],["gather",{"_index":4307,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["gaug",{"_index":4475,"title":{},"name":{},"text":{"23":{}},"component":{}}],["gcc",{"_index":792,"title":{},"name":{},"text":{"3":{}},"component":{}}],["gdal",{"_index":831,"title":{},"name":{},"text":{"3":{}},"component":{}}],["gdalconfig=/usr/local/gd",{"_index":866,"title":{},"name":{},"text":{"3":{}},"component":{}}],["genai",{"_index":896,"title":{},"name":{},"text":{"4":{}},"component":{}}],["gener",{"_index":224,"title":{"2-26":{},"15-31":{},"15-44":{},"16-189":{}},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["generate_series(1",{"_index":6159,"title":{},"name":{},"text":{"27":{}},"component":{}}],["generate_series(1,5",{"_index":6036,"title":{},"name":{},"text":{"27":{}},"component":{}}],["genet",{"_index":6865,"title":{},"name":{},"text":{"28":{}},"component":{}}],["geo",{"_index":838,"title":{},"name":{},"text":{"3":{}},"component":{}}],["geograph",{"_index":1368,"title":{},"name":{},"text":{"11":{},"27":{}},"component":{}}],["geographi",{"_index":880,"title":{},"name":{},"text":{"3":{}},"component":{}}],["geometr",{"_index":5749,"title":{},"name":{},"text":{"27":{}},"component":{}}],["geometri",{"_index":879,"title":{},"name":{},"text":{"3":{}},"component":{}}],["geos311",{"_index":803,"title":{},"name":{},"text":{"3":{}},"component":{}}],["geosconfig=/usr/local/geo",{"_index":863,"title":{},"name":{},"text":{"3":{}},"component":{}}],["geqo_threshold",{"_index":6867,"title":{},"name":{},"text":{"28":{}},"component":{}}],["get",{"_index":1820,"title":{"15-7":{},"17-2":{},"29-1":{}},"name":{},"text":{"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["get_isdba",{"_index":1766,"title":{},"name":{},"text":{"13":{}},"component":{}}],["get_sessionid",{"_index":1769,"title":{},"name":{},"text":{"13":{}},"component":{}}],["getf1",{"_index":6050,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getf1(cast(row(11,'thi",{"_index":6056,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getf1(myrowtyp",{"_index":6053,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getf1(myt",{"_index":6048,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getf1(record",{"_index":6054,"title":{},"name":{},"text":{"27":{}},"component":{}}],["getf1(row(1,2.5,'thi",{"_index":6051,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gettext",{"_index":5413,"title":{},"name":{},"text":{"25":{}},"component":{}}],["gettimeofday",{"_index":6777,"title":{},"name":{},"text":{"28":{}},"component":{}}],["gidx_part",{"_index":6441,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidx_u",{"_index":6442,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidxpart",{"_index":6433,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidxpart1",{"_index":6434,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidxpart1_b_idx",{"_index":6439,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidxpart2",{"_index":6435,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gidxpart2_b_idx",{"_index":6446,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gigabit",{"_index":3907,"title":{},"name":{},"text":{"22":{}},"component":{}}],["gigabyt",{"_index":4898,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["gist",{"_index":6752,"title":{},"name":{},"text":{"28":{}},"component":{}}],["git",{"_index":991,"title":{},"name":{},"text":{"4":{},"15":{},"17":{},"25":{}},"component":{}}],["git@github.com:$user/ivorysql.git",{"_index":2068,"title":{},"name":{},"text":{"15":{}},"component":{}}],["gitee:https://gitee.com/ivorysql",{"_index":1971,"title":{},"name":{},"text":{"15":{}},"component":{}}],["github",{"_index":1886,"title":{},"name":{},"text":{"15":{},"17":{},"29":{}},"component":{}}],["give",{"_index":2075,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["given",{"_index":967,"title":{},"name":{},"text":{"4":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["global",{"_index":535,"title":{"27-267":{},"27-268":{},"27-271":{},"27-273":{},"27-276":{}},"name":{},"text":{"2":{},"16":{},"19":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["global/pg_control",{"_index":1185,"title":{},"name":{},"text":{"7":{}},"component":{}}],["gmt",{"_index":6226,"title":{},"name":{},"text":{"27":{}},"component":{}}],["gnu",{"_index":364,"title":{},"name":{},"text":{"2":{},"28":{}},"component":{}}],["go",{"_index":99,"title":{},"name":{},"text":{"1":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["goal",{"_index":1284,"title":{"11-3":{}},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["goat",{"_index":2203,"title":{},"name":{},"text":{"15":{}},"component":{}}],["goe",{"_index":5188,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["gone",{"_index":5077,"title":{},"name":{},"text":{"24":{}},"component":{}}],["good",{"_index":507,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"12":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["goog",{"_index":6161,"title":{},"name":{},"text":{"27":{}},"component":{}}],["govern",{"_index":1816,"title":{"15-4":{}},"name":{},"text":{"27":{}},"component":{}}],["gpgcheck=0",{"_index":3921,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["gpolygonind",{"_index":6747,"title":{},"name":{},"text":{"28":{}},"component":{}}],["grace",{"_index":5298,"title":{},"name":{},"text":{"24":{}},"component":{}}],["grade",{"_index":1278,"title":{},"name":{},"text":{"10":{},"12":{},"24":{}},"component":{}}],["grain",{"_index":5016,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["grammar",{"_index":6449,"title":{"28-11":{}},"name":{},"text":{},"component":{}}],["grammat",{"_index":123,"title":{},"name":{},"text":{"1":{}},"component":{}}],["grant",{"_index":154,"title":{},"name":{},"text":{"1":{},"2":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["grant/revok",{"_index":3304,"title":{},"name":{},"text":{"16":{}},"component":{}}],["grant_sh.sql",{"_index":672,"title":{},"name":{},"text":{"2":{}},"component":{}}],["granular",{"_index":1980,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"28":{}},"component":{}}],["graph",{"_index":961,"title":{},"name":{},"text":{"4":{}},"component":{}}],["great",{"_index":910,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"27":{}},"component":{}}],["greater",{"_index":1488,"title":{},"name":{},"text":{"13":{},"16":{},"24":{},"27":{}},"component":{}}],["greatest",{"_index":3663,"title":{"27-235":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["greatest('a",{"_index":6349,"title":{},"name":{},"text":{"27":{}},"component":{}}],["greatest('a','b','a','b",{"_index":6341,"title":{},"name":{},"text":{"27":{}},"component":{}}],["greatest('harri",{"_index":6342,"title":{},"name":{},"text":{"27":{}},"component":{}}],["greatest(1.1",{"_index":6346,"title":{},"name":{},"text":{"27":{}},"component":{}}],["greatest(age(c.relfrozenxid),age(t.relfrozenxid",{"_index":5066,"title":{},"name":{},"text":{"24":{}},"component":{}}],["greatest(expr1,expr2",{"_index":6337,"title":{},"name":{},"text":{"27":{}},"component":{}}],["greatli",{"_index":1979,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["grep",{"_index":462,"title":{},"name":{},"text":{"2":{},"16":{},"22":{},"23":{},"25":{},"26":{}},"component":{}}],["group",{"_index":1619,"title":{"27-149":{}},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["groupinstal",{"_index":5398,"title":{},"name":{},"text":{"25":{}},"component":{}}],["grow",{"_index":4924,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["growth",{"_index":4321,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["gsm",{"_index":3409,"title":{},"name":{},"text":{"16":{}},"component":{}}],["gss",{"_index":56,"title":{},"name":{},"text":{"1":{}},"component":{}}],["gss_authent",{"_index":4565,"title":{},"name":{},"text":{"23":{}},"component":{}}],["gssapi",{"_index":4114,"title":{},"name":{},"text":{"23":{}},"component":{}}],["gssopenserv",{"_index":4215,"title":{},"name":{},"text":{"23":{}},"component":{}}],["gtod",{"_index":3770,"title":{},"name":{},"text":{"16":{}},"component":{}}],["guarante",{"_index":278,"title":{"27-273":{},"27-276":{}},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["guard",{"_index":6900,"title":{},"name":{},"text":{"28":{}},"component":{}}],["guc",{"_index":1061,"title":{"6":{},"6-1":{}},"name":{},"text":{"6":{},"7":{},"11":{}},"component":{}}],["gui",{"_index":6797,"title":{},"name":{},"text":{"28":{}},"component":{}}],["guid",{"_index":226,"title":{"2":{},"15":{},"27":{},"28":{},"15-5":{},"15-52":{}},"name":{},"text":{},"component":{}}],["guidelin",{"_index":1836,"title":{"15-17":{},"17-4":{}},"name":{},"text":{"28":{}},"component":{}}],["gunzip",{"_index":6528,"title":{},"name":{},"text":{"28":{}},"component":{}}],["guy",{"_index":1920,"title":{},"name":{},"text":{"15":{}},"component":{}}],["gz",{"_index":2939,"title":{},"name":{},"text":{"16":{}},"component":{}}],["gzip",{"_index":2891,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["h",{"_index":2716,"title":{},"name":{},"text":{"16":{},"22":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["h2/\"second",{"_index":2193,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hack",{"_index":1946,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["hacker",{"_index":2006,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["half",{"_index":1714,"title":{},"name":{},"text":{"13":{},"24":{},"28":{}},"component":{}}],["hand",{"_index":2046,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"28":{}},"component":{}}],["handi",{"_index":2016,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["handl",{"_index":1055,"title":{"24-41":{},"28-19":{}},"name":{},"text":{"5":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["hankook",{"_index":1334,"title":{},"name":{},"text":{"11":{}},"component":{}}],["happen",{"_index":1981,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["happili",{"_index":5327,"title":{},"name":{},"text":{"24":{}},"component":{}}],["hard",{"_index":2134,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{}},"component":{}}],["harder",{"_index":3347,"title":{},"name":{},"text":{"16":{}},"component":{}}],["hardwar",{"_index":2401,"title":{"16-175":{}},"name":{},"text":{"16":{},"22":{},"24":{}},"component":{}}],["hardware).thi",{"_index":3079,"title":{},"name":{},"text":{"16":{}},"component":{}}],["harm",{"_index":5802,"title":{},"name":{},"text":{"27":{}},"component":{}}],["harmless",{"_index":3230,"title":{},"name":{},"text":{"16":{}},"component":{}}],["harra",{"_index":6344,"title":{},"name":{},"text":{"27":{}},"component":{}}],["harri",{"_index":6345,"title":{},"name":{},"text":{"27":{}},"component":{}}],["harriot",{"_index":6343,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hash",{"_index":547,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["hashbatchalloc",{"_index":4308,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbatchelect",{"_index":4311,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbatchload",{"_index":4312,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbuildalloc",{"_index":4313,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbuildelect",{"_index":4314,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbuildhashinn",{"_index":4315,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashbuildhashout",{"_index":4317,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbatchesalloc",{"_index":4319,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbatchesdecid",{"_index":4320,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbatcheselect",{"_index":4322,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbatchesfinish",{"_index":4323,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbatchesrepartit",{"_index":4324,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbucketsalloc",{"_index":4326,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbucketselect",{"_index":4328,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hashgrowbucketsreinsert",{"_index":4329,"title":{},"name":{},"text":{"23":{}},"component":{}}],["have",{"_index":2538,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["hdt",{"_index":6228,"title":{},"name":{},"text":{"27":{}},"component":{}}],["head",{"_index":2132,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["header",{"_index":1959,"title":{"27-261":{}},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"25":{},"28":{}},"component":{}}],["health",{"_index":5219,"title":{},"name":{},"text":{"24":{}},"component":{}}],["healthi",{"_index":1318,"title":{},"name":{},"text":{"11":{},"15":{}},"component":{}}],["heap",{"_index":2851,"title":{},"name":{},"text":{"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["heap_blks_hit",{"_index":4670,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_blks_read",{"_index":4669,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_blks_scan",{"_index":4768,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_blks_tot",{"_index":4767,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_blks_vacuum",{"_index":4770,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_tuples_scan",{"_index":4783,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heap_tuples_written",{"_index":4784,"title":{},"name":{},"text":{"23":{}},"component":{}}],["heapallindex",{"_index":2850,"title":{},"name":{},"text":{"16":{}},"component":{}}],["hear",{"_index":2225,"title":{},"name":{},"text":{"15":{}},"component":{}}],["heartbeat",{"_index":5271,"title":{},"name":{},"text":{"24":{}},"component":{}}],["heavi",{"_index":4995,"title":{},"name":{},"text":{"24":{}},"component":{}}],["heavili",{"_index":4983,"title":{},"name":{},"text":{"24":{}},"component":{}}],["heavyweight",{"_index":4194,"title":{},"name":{},"text":{"23":{}},"component":{}}],["held",{"_index":4060,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["hello",{"_index":1774,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["hello,mr.li",{"_index":6362,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["hello](hello",{"_index":2196,"title":{},"name":{},"text":{"15":{}},"component":{}}],["help",{"_index":705,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"17":{},"22":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["hemco",{"_index":1346,"title":{},"name":{},"text":{"11":{}},"component":{}}],["henc",{"_index":964,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"28":{}},"component":{}}],["here",{"_index":750,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["hex",{"_index":3002,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["hexadecim",{"_index":3654,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["hextoraw",{"_index":1454,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hextoraw('abcdef')from",{"_index":1759,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hh",{"_index":6253,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hh12",{"_index":6254,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hh24",{"_index":6255,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hh24:mi:ss",{"_index":1693,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["hh24:mi:ss.ff",{"_index":1704,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hh:mi:ss",{"_index":6307,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hi",{"_index":5839,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hibern",{"_index":4202,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hide",{"_index":3180,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["hierarch",{"_index":957,"title":{},"name":{},"text":{"4":{},"27":{}},"component":{}}],["hierarchi",{"_index":3333,"title":{"27-263":{}},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["high",{"_index":932,"title":{"24-10":{},"24-36":{}},"name":{},"text":{"4":{},"11":{},"15":{},"16":{},"17":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["higher",{"_index":2849,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["higher.not",{"_index":3675,"title":{},"name":{},"text":{"16":{}},"component":{}}],["highest",{"_index":5253,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["highgo",{"_index":5365,"title":{},"name":{},"text":{"25":{},"29":{}},"component":{}}],["highli",{"_index":1983,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["highlight",{"_index":1305,"title":{},"name":{},"text":{"11":{}},"component":{}}],["hint",{"_index":1158,"title":{},"name":{},"text":{"6":{},"24":{}},"component":{}}],["histogram",{"_index":3758,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["histor",{"_index":2789,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["histori",{"_index":2664,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["hit",{"_index":3182,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["hit=15",{"_index":6755,"title":{},"name":{},"text":{"28":{}},"component":{}}],["hit=5",{"_index":6760,"title":{},"name":{},"text":{"28":{}},"component":{}}],["hit=7",{"_index":6757,"title":{},"name":{},"text":{"28":{}},"component":{}}],["hkt",{"_index":6364,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hnsw",{"_index":887,"title":{"4-4":{}},"name":{},"text":{"4":{}},"component":{}}],["hold",{"_index":3086,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["home",{"_index":377,"title":{},"name":{},"text":{"2":{}},"component":{}}],["home/ivorysql/.bashrc",{"_index":404,"title":{},"name":{},"text":{"2":{}},"component":{}}],["home/postgres/.bashrc",{"_index":399,"title":{},"name":{},"text":{"2":{}},"component":{}}],["honor",{"_index":1916,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["hope",{"_index":156,"title":{},"name":{},"text":{"1":{},"16":{}},"component":{}}],["horizon",{"_index":4180,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["hors",{"_index":5869,"title":{},"name":{},"text":{"27":{}},"component":{}}],["horse$sometag",{"_index":5901,"title":{},"name":{},"text":{"27":{}},"component":{}}],["host",{"_index":257,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"16":{},"23":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["host=192.168.1.50",{"_index":5196,"title":{},"name":{},"text":{"24":{}},"component":{}}],["host=`host",{"_index":3375,"title":{},"name":{},"text":{"16":{}},"component":{}}],["host=host",{"_index":2717,"title":{},"name":{},"text":{"16":{}},"component":{}}],["host=hostnam",{"_index":2867,"title":{},"name":{},"text":{"16":{}},"component":{}}],["host=scram",{"_index":5382,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hostnam",{"_index":2866,"title":{},"name":{},"text":{"16":{}},"component":{}}],["host’",{"_index":2916,"title":{},"name":{},"text":{"16":{}},"component":{}}],["hot",{"_index":4643,"title":{"24-39":{},"24-43":{}},"name":{},"text":{"23":{},"24":{}},"component":{}}],["hot_standbi",{"_index":2480,"title":{},"name":{},"text":{"16":{},"24":{},"26":{}},"component":{}}],["hot_standby_feedback",{"_index":4459,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["hour",{"_index":1487,"title":{},"name":{},"text":{"13":{},"24":{},"27":{},"28":{}},"component":{}}],["household",{"_index":6000,"title":{},"name":{},"text":{"27":{}},"component":{}}],["houston",{"_index":6823,"title":{},"name":{},"text":{"28":{}},"component":{}}],["however,ivorysql",{"_index":3965,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["hr",{"_index":694,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hst",{"_index":6227,"title":{},"name":{},"text":{"27":{}},"component":{}}],["html",{"_index":3206,"title":{},"name":{},"text":{"16":{}},"component":{}}],["htmldir",{"_index":3205,"title":{},"name":{},"text":{"16":{}},"component":{}}],["http://www.perl.org",{"_index":376,"title":{},"name":{},"text":{"2":{}},"component":{}}],["http://www.postgresql.org/docs/17/libpq",{"_index":3372,"title":{},"name":{},"text":{"16":{}},"component":{}}],["http://www.postgresql.org/docs/17/runtim",{"_index":3268,"title":{},"name":{},"text":{"16":{}},"component":{}}],["https://cpan.metacpan.org/authors/id/t/ti/timb/dbi",{"_index":386,"title":{},"name":{},"text":{"2":{}},"component":{}}],["https://download.osgeo.org/geos/geo",{"_index":839,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://download.osgeo.org/postgis/source/postgi",{"_index":860,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://download.osgeo.org/proj/proj",{"_index":827,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://github.com/$user/ivorysql",{"_index":2072,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://github.com/$username$/ivorysql_docs.git",{"_index":2216,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://github.com/ivorysql/ivori",{"_index":136,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{}}],["https://github.com/ivorysql/ivorysql",{"_index":133,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{}}],["https://github.com/ivorysql/ivorysql.git",{"_index":5399,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://github.com/ivorysql/ivorysql/releases/download/ivorysql_4.2/ivorysql",{"_index":5414,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://github.com/ivorysql/ivorysql/releases/download/ivorysql_4.2/ivorysql4",{"_index":5385,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://github.com/osgeo/gdal/releases/download/v3.4.3/gd",{"_index":832,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://github.com/pgvector/pgvector.git",{"_index":995,"title":{},"name":{},"text":{"4":{}},"component":{}}],["https://plug",{"_index":843,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://sources.buildroot.net/protobuf",{"_index":853,"title":{},"name":{},"text":{"3":{}},"component":{}}],["https://www.example.com",{"_index":2141,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://www.sqlite.org/2022/sqlit",{"_index":808,"title":{},"name":{},"text":{"3":{}},"component":{}}],["huang",{"_index":149,"title":{},"name":{},"text":{"1":{}},"component":{}}],["hub",{"_index":3951,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["huge",{"_index":1350,"title":{},"name":{},"text":{"11":{},"24":{},"28":{}},"component":{}}],["human",{"_index":615,"title":{},"name":{},"text":{"2":{},"28":{}},"component":{}}],["hundr",{"_index":6763,"title":{},"name":{},"text":{"28":{}},"component":{}}],["hword",{"_index":737,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hword_part",{"_index":738,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hyperlink",{"_index":2198,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hyphen",{"_index":4869,"title":{},"name":{},"text":{"23":{}},"component":{}}],["i*2",{"_index":6035,"title":{},"name":{},"text":{"27":{}},"component":{}}],["i.",{"_index":3149,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["i.indexrelid",{"_index":4918,"title":{},"name":{},"text":{"23":{}},"component":{}}],["i.indrelid",{"_index":4916,"title":{},"name":{},"text":{"23":{}},"component":{}}],["i/o",{"_index":2680,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["i/usr/local/pgsql/includ",{"_index":2799,"title":{},"name":{},"text":{"16":{}},"component":{}}],["i18n",{"_index":1970,"title":{},"name":{},"text":{"15":{}},"component":{}}],["i7",{"_index":3753,"title":{},"name":{},"text":{"16":{}},"component":{}}],["i[mmedi",{"_index":3603,"title":{},"name":{},"text":{"16":{}},"component":{}}],["icu",{"_index":710,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["id",{"_index":1007,"title":{"24-6":{}},"name":{},"text":{"4":{},"9":{},"13":{},"15":{},"16":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["id.a",{"_index":3683,"title":{},"name":{},"text":{"16":{}},"component":{}}],["id=xid",{"_index":3704,"title":{},"name":{},"text":{"16":{}},"component":{}}],["idea",{"_index":1321,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["ideal",{"_index":6651,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ident",{"_index":3178,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["identif",{"_index":6588,"title":{},"name":{},"text":{"28":{}},"component":{}}],["identifi",{"_index":1164,"title":{"7":{},"27-102":{}},"name":{},"text":{"7":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["identifier_case_switch",{"_index":1167,"title":{},"name":{},"text":{"7":{}},"component":{}}],["idl",{"_index":3028,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["idle_in_transaction_tim",{"_index":4625,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ids=mxid,mxid",{"_index":3682,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ids=xid,xid",{"_index":3657,"title":{},"name":{},"text":{"16":{}},"component":{}}],["idx_blks_hit",{"_index":4672,"title":{},"name":{},"text":{"23":{}},"component":{}}],["idx_blks_read",{"_index":4671,"title":{},"name":{},"text":{"23":{}},"component":{}}],["idx_scan",{"_index":4639,"title":{},"name":{},"text":{"23":{}},"component":{}}],["idx_tup_fetch",{"_index":4640,"title":{},"name":{},"text":{"23":{}},"component":{}}],["idx_tup_read",{"_index":4663,"title":{},"name":{},"text":{"23":{}},"component":{}}],["id’",{"_index":3666,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ignor",{"_index":2921,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["ignore=note.to.self",{"_index":3580,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ignore=path",{"_index":3567,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ii",{"_index":5158,"title":{},"name":{},"text":{"24":{}},"component":{}}],["il",{"_index":6851,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ilik",{"_index":5941,"title":{},"name":{},"text":{"27":{}},"component":{}}],["illustr",{"_index":1814,"title":{"15-2":{}},"name":{},"text":{"16":{},"27":{}},"component":{}}],["imag",{"_index":2213,"title":{},"name":{},"text":{"15":{},"22":{},"23":{},"25":{}},"component":{}}],["immedi",{"_index":2630,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["immediately.option",{"_index":3099,"title":{},"name":{},"text":{"16":{}},"component":{}}],["immun",{"_index":6546,"title":{},"name":{},"text":{"28":{}},"component":{}}],["immut",{"_index":6077,"title":{},"name":{},"text":{"27":{}},"component":{}}],["impact",{"_index":2973,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["imper",{"_index":2647,"title":{},"name":{},"text":{"16":{}},"component":{}}],["implement",{"_index":1044,"title":{"18-2":{}},"name":{},"text":{"5":{},"9":{},"10":{},"11":{},"16":{},"18":{},"20":{},"24":{},"27":{},"28":{}},"component":{}}],["impli",{"_index":3529,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["implic",{"_index":1963,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["implicitli",{"_index":1231,"title":{},"name":{},"text":{"9":{},"16":{},"27":{}},"component":{}}],["import",{"_index":213,"title":{"2-19":{},"2-21":{},"2-22":{},"2-23":{},"2-24":{}},"name":{},"text":{"2":{},"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["import_",{"_index":764,"title":{},"name":{},"text":{"2":{}},"component":{}}],["import_all.sh",{"_index":776,"title":{},"name":{},"text":{"2":{}},"component":{}}],["imposs",{"_index":5326,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["impract",{"_index":6539,"title":{},"name":{},"text":{"28":{}},"component":{}}],["improp",{"_index":2087,"title":{},"name":{},"text":{"15":{}},"component":{}}],["improv",{"_index":433,"title":{},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["in",{"_index":1307,"title":{},"name":{},"text":{"11":{}},"component":{}}],["in/usr/local/bin/directori",{"_index":410,"title":{},"name":{},"text":{"2":{}},"component":{}}],["in_hot_standbi",{"_index":5288,"title":{},"name":{},"text":{"24":{}},"component":{}}],["inabl",{"_index":263,"title":{},"name":{},"text":{"2":{}},"component":{}}],["inaccess",{"_index":5813,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inaccur",{"_index":6896,"title":{},"name":{},"text":{"28":{}},"component":{}}],["inact",{"_index":4350,"title":{},"name":{},"text":{"23":{}},"component":{}}],["inaf",{"_index":3823,"title":{},"name":{},"text":{"18":{}},"component":{}}],["inaf(a",{"_index":3822,"title":{},"name":{},"text":{"18":{}},"component":{}}],["inappropri",{"_index":2207,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["incauti",{"_index":5258,"title":{},"name":{},"text":{"24":{}},"component":{}}],["incident",{"_index":5801,"title":{},"name":{},"text":{"27":{}},"component":{}}],["includ",{"_index":23,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"10":{},"11":{},"13":{},"15":{},"16":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["includedir",{"_index":3207,"title":{},"name":{},"text":{"16":{}},"component":{}}],["inclus",{"_index":1319,"title":{},"name":{},"text":{"11":{},"15":{}},"component":{}}],["incom",{"_index":5999,"title":{},"name":{},"text":{"27":{}},"component":{}}],["incompat",{"_index":3456,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["incomplet",{"_index":260,"title":{},"name":{},"text":{"2":{}},"component":{}}],["inconsist",{"_index":2596,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["incorrect",{"_index":2083,"title":{},"name":{},"text":{"15":{},"16":{},"27":{}},"component":{}}],["increas",{"_index":1800,"title":{"28-50":{},"28-51":{}},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["increasingli",{"_index":5291,"title":{},"name":{},"text":{"24":{}},"component":{}}],["increment",{"_index":2096,"title":{},"name":{},"text":{"15":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["incur",{"_index":4477,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["inde",{"_index":4709,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["indefinit",{"_index":5119,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["indent",{"_index":2086,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["independ",{"_index":380,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{}},"component":{}}],["indetermin",{"_index":3363,"title":{},"name":{},"text":{"16":{}},"component":{}}],["index",{"_index":311,"title":{"23-31":{},"27-267":{},"27-268":{},"28-48":{}},"name":{},"text":{"2":{},"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["index(",{"_index":542,"title":{},"name":{},"text":{"2":{},"23":{}},"component":{}}],["index.md",{"_index":2172,"title":{},"name":{},"text":{"15":{}},"component":{}}],["index.not",{"_index":2837,"title":{},"name":{},"text":{"16":{}},"component":{}}],["index=index",{"_index":3500,"title":{},"name":{},"text":{"16":{}},"component":{}}],["index=pattern",{"_index":2810,"title":{},"name":{},"text":{"16":{}},"component":{}}],["index=schemapat..a",{"_index":2824,"title":{},"name":{},"text":{"16":{}},"component":{}}],["index_rebuild_count",{"_index":4785,"title":{},"name":{},"text":{"23":{}},"component":{}}],["index_relid",{"_index":4752,"title":{},"name":{},"text":{"23":{}},"component":{}}],["index_tenk1_on_four",{"_index":6670,"title":{},"name":{},"text":{"28":{}},"component":{}}],["index_vacuum_count",{"_index":4771,"title":{},"name":{},"text":{"23":{}},"component":{}}],["indexrelid",{"_index":4661,"title":{},"name":{},"text":{"23":{}},"component":{}}],["indexrelnam",{"_index":4662,"title":{},"name":{},"text":{"23":{}},"component":{}}],["index’",{"_index":5113,"title":{},"name":{},"text":{"24":{}},"component":{}}],["indic",{"_index":761,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["indirect",{"_index":6430,"title":{},"name":{},"text":{"27":{}},"component":{}}],["individu",{"_index":139,"title":{},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["indrelid",{"_index":4909,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ineffect",{"_index":5378,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ineffici",{"_index":3336,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["inet`ip",{"_index":4152,"title":{},"name":{},"text":{"23":{}},"component":{}}],["inet`return",{"_index":4725,"title":{},"name":{},"text":{"23":{}},"component":{}}],["infer",{"_index":4061,"title":{},"name":{},"text":{"23":{}},"component":{}}],["inferior",{"_index":6540,"title":{},"name":{},"text":{"28":{}},"component":{}}],["infinit",{"_index":5297,"title":{},"name":{},"text":{"24":{}},"component":{}}],["infix",{"_index":5971,"title":{},"name":{},"text":{"27":{}},"component":{}}],["info",{"_index":4838,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["inform",{"_index":937,"title":{"15-36":{},"20-8":{},"20-15":{}},"name":{},"text":{"4":{},"11":{},"13":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["information.notewhil",{"_index":3700,"title":{},"name":{},"text":{"16":{}},"component":{}}],["informix",{"_index":2780,"title":{},"name":{},"text":{"16":{}},"component":{}}],["informix_s",{"_index":2781,"title":{},"name":{},"text":{"16":{}},"component":{}}],["infrequ",{"_index":4982,"title":{},"name":{},"text":{"24":{}},"component":{}}],["inher",{"_index":5267,"title":{},"name":{},"text":{"24":{}},"component":{}}],["inherit",{"_index":606,"title":{},"name":{},"text":{"2":{},"4":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["inhibit",{"_index":2963,"title":{},"name":{},"text":{"16":{}},"component":{}}],["init",{"_index":3057,"title":{},"name":{},"text":{"16":{}},"component":{}}],["init[db",{"_index":3600,"title":{},"name":{},"text":{"16":{}},"component":{}}],["init_",{"_index":759,"title":{},"name":{},"text":{"2":{}},"component":{}}],["init_project",{"_index":770,"title":{},"name":{},"text":{"2":{}},"component":{}}],["init_step",{"_index":3056,"title":{},"name":{},"text":{"16":{}},"component":{}}],["initdb",{"_index":1178,"title":{"16-123":{}},"name":{},"text":{"7":{},"8":{},"14":{},"16":{},"22":{},"25":{},"28":{}},"component":{}}],["initdb(1",{"_index":2573,"title":{},"name":{},"text":{"16":{}},"component":{}}],["initdb(2",{"_index":2588,"title":{},"name":{},"text":{"16":{}},"component":{}}],["initdb,refer",{"_index":5375,"title":{},"name":{},"text":{"25":{}},"component":{}}],["initdb.pg_upgrad",{"_index":6500,"title":{},"name":{},"text":{"28":{}},"component":{}}],["initi",{"_index":1101,"title":{"7-4":{},"16-52":{}},"name":{},"text":{"6":{},"7":{},"8":{},"11":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["initialize_sect",{"_index":6415,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inject",{"_index":5897,"title":{},"name":{},"text":{"27":{}},"component":{}}],["inner",{"_index":4316,"title":{},"name":{},"text":{"23":{},"27":{},"28":{}},"component":{}}],["innov",{"_index":5710,"title":{},"name":{},"text":{"27":{}},"component":{}}],["input",{"_index":1771,"title":{},"name":{},"text":{"13":{},"16":{},"27":{},"28":{}},"component":{}}],["insensit",{"_index":1622,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["insert",{"_index":317,"title":{"21-5":{},"27-272":{},"27-273":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"13":{},"15":{},"16":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["insert=`nrow",{"_index":3348,"title":{},"name":{},"text":{"16":{}},"component":{}}],["insert`",{"_index":6885,"title":{},"name":{},"text":{"28":{}},"component":{}}],["insertchildxml",{"_index":3798,"title":{"18-14":{}},"name":{},"text":{"18":{}},"component":{}}],["insertchildxml(xmltype('onethre",{"_index":3847,"title":{},"name":{},"text":{"18":{}},"component":{}}],["insertchildxmlaft",{"_index":3802,"title":{"18-16":{}},"name":{},"text":{"18":{}},"component":{}}],["insertchildxmlafter(xmltype('100",{"_index":3850,"title":{},"name":{},"text":{"18":{}},"component":{}}],["insertchildxmlbefor",{"_index":3800,"title":{"18-15":{}},"name":{},"text":{"18":{}},"component":{}}],["insertchildxmlbefore(xmltype('100",{"_index":3849,"title":{},"name":{},"text":{"18":{}},"component":{}}],["insertxmlaft",{"_index":3796,"title":{"18-13":{}},"name":{},"text":{"18":{}},"component":{}}],["insertxmlafter(xmltype('100'),'/a/b',xmltype('88",{"_index":3845,"title":{},"name":{},"text":{"18":{}},"component":{}}],["insertxmlbefor",{"_index":3794,"title":{"18-12":{}},"name":{},"text":{"18":{}},"component":{}}],["insertxmlbefore(xmltype('222100200",{"_index":3842,"title":{},"name":{},"text":{"18":{}},"component":{}}],["insid",{"_index":2048,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"27":{}},"component":{}}],["insight",{"_index":4140,"title":{},"name":{},"text":{"23":{}},"component":{}}],["insignific",{"_index":4073,"title":{},"name":{},"text":{"23":{}},"component":{}}],["insist",{"_index":1320,"title":{},"name":{},"text":{"11":{}},"component":{}}],["inspect",{"_index":4769,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["inst",{"_index":418,"title":{},"name":{},"text":{"2":{}},"component":{}}],["instal",{"_index":119,"title":{"25":{},"2-5":{},"2-6":{},"2-7":{},"2-8":{},"2-9":{},"2-10":{},"3-2":{},"3-3":{},"4-5":{},"4-6":{},"22-2":{},"22-3":{},"25-2":{},"25-3":{},"25-4":{},"25-5":{},"25-6":{},"25-10":{},"25-11":{},"25-12":{},"25-13":{},"25-14":{},"26-2":{},"26-7":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"15":{},"16":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["installcheck",{"_index":2008,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["installed_vers",{"_index":878,"title":{},"name":{},"text":{"3":{}},"component":{}}],["instanc",{"_index":1336,"title":{},"name":{},"text":{"11":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["instance.cr",{"_index":2575,"title":{},"name":{},"text":{"16":{}},"component":{}}],["instant",{"_index":5356,"title":{},"name":{},"text":{"25":{}},"component":{}}],["instantan",{"_index":4094,"title":{},"name":{},"text":{"23":{}},"component":{}}],["instead",{"_index":2115,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["instr",{"_index":1534,"title":{},"name":{},"text":{"13":{}},"component":{}}],["instrb",{"_index":1428,"title":{},"name":{},"text":{"13":{}},"component":{}}],["instrb('corpor",{"_index":1532,"title":{},"name":{},"text":{"13":{}},"component":{}}],["instruct",{"_index":480,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"25":{},"27":{},"28":{}},"component":{}}],["insuffici",{"_index":4778,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["int",{"_index":1137,"title":{},"name":{},"text":{"6":{},"7":{},"9":{},"18":{},"21":{},"23":{},"27":{}},"component":{}}],["int`how",{"_index":4544,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integ",{"_index":1277,"title":{},"name":{},"text":{"10":{},"12":{},"13":{},"16":{},"19":{},"20":{},"23":{},"27":{},"28":{}},"component":{}}],["integer/varchar2",{"_index":1600,"title":{},"name":{},"text":{"13":{}},"component":{}}],["integer`first",{"_index":4518,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`numb",{"_index":4554,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`port",{"_index":4531,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`prior",{"_index":4481,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`process",{"_index":4146,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`return",{"_index":4689,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`tcp",{"_index":4158,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integer`timelin",{"_index":4522,"title":{},"name":{},"text":{"23":{}},"component":{}}],["integr",{"_index":782,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"16":{},"18":{},"23":{},"24":{}},"component":{}}],["intel",{"_index":3752,"title":{},"name":{},"text":{"16":{}},"component":{}}],["intellig",{"_index":895,"title":{},"name":{},"text":{"4":{}},"component":{}}],["intend",{"_index":1223,"title":{},"name":{},"text":{"9":{},"12":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["intens",{"_index":2993,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["intent",{"_index":3435,"title":{},"name":{},"text":{"16":{}},"component":{}}],["intention",{"_index":5339,"title":{},"name":{},"text":{"24":{}},"component":{}}],["inter",{"_index":5236,"title":{},"name":{},"text":{"24":{}},"component":{}}],["inter_change_1",{"_index":1199,"title":{},"name":{},"text":{"7":{}},"component":{}}],["inter_change_1\"(c1",{"_index":1196,"title":{},"name":{},"text":{"7":{}},"component":{}}],["inter_change_2",{"_index":1200,"title":{},"name":{},"text":{"7":{}},"component":{}}],["inter_change_2\"(c1",{"_index":1197,"title":{},"name":{},"text":{"7":{}},"component":{}}],["inter_change_3",{"_index":1201,"title":{},"name":{},"text":{"7":{}},"component":{}}],["inter_change_3\"(c1",{"_index":1198,"title":{},"name":{},"text":{"7":{}},"component":{}}],["interact",{"_index":60,"title":{},"name":{},"text":{"1":{},"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["intercept",{"_index":1517,"title":{},"name":{},"text":{"13":{},"24":{}},"component":{}}],["interchang",{"_index":1162,"title":{"7-3":{}},"name":{},"text":{"7":{},"27":{}},"component":{}}],["interdepend",{"_index":6422,"title":{},"name":{},"text":{"27":{}},"component":{}}],["interest",{"_index":2027,"title":{},"name":{},"text":{"15":{},"17":{},"23":{},"24":{}},"component":{}}],["interfac",{"_index":382,"title":{},"name":{},"text":{"2":{},"11":{},"16":{},"18":{},"24":{},"28":{}},"component":{}}],["interface’",{"_index":2544,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interface，i",{"_index":381,"title":{},"name":{},"text":{"2":{}},"component":{}}],["interfer",{"_index":1054,"title":{},"name":{},"text":{"5":{},"27":{}},"component":{}}],["intermedi",{"_index":5798,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["intern",{"_index":2420,"title":{"16-190":{}},"name":{},"text":{"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["internet",{"_index":373,"title":{},"name":{},"text":{"2":{}},"component":{}}],["interpret",{"_index":2394,"title":{"16-172":{}},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["interrel",{"_index":6898,"title":{},"name":{},"text":{"28":{}},"component":{}}],["interrupt",{"_index":5110,"title":{},"name":{},"text":{"24":{}},"component":{}}],["intersect",{"_index":5454,"title":{"27-9":{}},"name":{},"text":{"27":{}},"component":{}}],["interv",{"_index":1411,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["interval.thi",{"_index":3459,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interval=`second",{"_index":3161,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interval=interv",{"_index":3020,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interval=interval_second",{"_index":3480,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interval_second",{"_index":3478,"title":{},"name":{},"text":{"16":{}},"component":{}}],["interval`tim",{"_index":4472,"title":{},"name":{},"text":{"23":{}},"component":{}}],["intervalstyl",{"_index":6567,"title":{},"name":{},"text":{"28":{}},"component":{}}],["interven",{"_index":5906,"title":{},"name":{},"text":{"27":{}},"component":{}}],["intervent",{"_index":4629,"title":{},"name":{},"text":{"23":{}},"component":{}}],["intoler",{"_index":6889,"title":{},"name":{},"text":{"28":{}},"component":{}}],["introduc",{"_index":2205,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["introduct",{"_index":1283,"title":{"11-1":{},"25-1":{}},"name":{},"text":{"18":{},"21":{}},"component":{}}],["invalid",{"_index":528,"title":{},"name":{},"text":{"2":{},"11":{},"16":{},"23":{},"26":{}},"component":{}}],["invalidbackendid",{"_index":4832,"title":{},"name":{},"text":{"23":{}},"component":{}}],["invalu",{"_index":5115,"title":{},"name":{},"text":{"24":{}},"component":{}}],["invers",{"_index":3291,"title":{},"name":{},"text":{"16":{}},"component":{}}],["invert",{"_index":917,"title":{},"name":{},"text":{"4":{}},"component":{}}],["investig",{"_index":6717,"title":{},"name":{},"text":{"28":{}},"component":{}}],["invis",{"_index":1387,"title":{"21":{},"21-4":{},"21-5":{},"21-6":{},"21-7":{}},"name":{},"text":{"11":{},"21":{},"24":{}},"component":{}}],["invoc",{"_index":1402,"title":{"27-120":{}},"name":{},"text":{"12":{},"16":{},"23":{},"27":{}},"component":{}}],["invok",{"_index":2441,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["invoker_rights_claus",{"_index":1396,"title":{},"name":{},"text":{"12":{},"27":{}},"component":{}}],["involv",{"_index":1357,"title":{},"name":{},"text":{"11":{},"14":{},"15":{},"16":{},"27":{},"28":{}},"component":{}}],["io",{"_index":4192,"title":{},"name":{},"text":{"23":{}},"component":{}}],["io_depth",{"_index":4537,"title":{},"name":{},"text":{"23":{}},"component":{}}],["iot",{"_index":555,"title":{},"name":{},"text":{"2":{}},"component":{}}],["iovrysql",{"_index":3964,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ip",{"_index":1385,"title":{"14":{}},"name":{},"text":{"11":{},"14":{},"16":{},"23":{},"24":{},"26":{}},"component":{}}],["ipc",{"_index":4193,"title":{},"name":{},"text":{"23":{}},"component":{}}],["irregular",{"_index":5014,"title":{},"name":{},"text":{"24":{}},"component":{}}],["isn't",{"_index":3355,"title":{},"name":{},"text":{"16":{}},"component":{}}],["isnul",{"_index":5943,"title":{},"name":{},"text":{"27":{}},"component":{}}],["isn’t",{"_index":2776,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["iso",{"_index":6311,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["isol",{"_index":5263,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["isql",{"_index":6366,"title":{},"name":{},"text":{"27":{}},"component":{}}],["issu",{"_index":7,"title":{"1-2":{},"15-22":{},"15-23":{},"15-24":{}},"name":{},"text":{"1":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["issue_xlog_fsync",{"_index":4595,"title":{},"name":{},"text":{"23":{}},"component":{}}],["issuer",{"_index":4561,"title":{},"name":{},"text":{"23":{}},"component":{}}],["issuer_dn",{"_index":4563,"title":{},"name":{},"text":{"23":{}},"component":{}}],["it'",{"_index":3298,"title":{},"name":{},"text":{"16":{}},"component":{}}],["it.it",{"_index":2556,"title":{},"name":{},"text":{"16":{}},"component":{}}],["it.to",{"_index":3321,"title":{},"name":{},"text":{"16":{}},"component":{}}],["it.when",{"_index":2956,"title":{},"name":{},"text":{"16":{}},"component":{}}],["it.with",{"_index":3237,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ital",{"_index":2126,"title":{},"name":{},"text":{"15":{}},"component":{}}],["item",{"_index":2116,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["item_declar",{"_index":6394,"title":{},"name":{},"text":{"27":{}},"component":{}}],["item_list",{"_index":6387,"title":{},"name":{},"text":{"27":{}},"component":{}}],["item_list_2",{"_index":6414,"title":{},"name":{},"text":{"27":{}},"component":{}}],["items5",{"_index":1006,"title":{},"name":{},"text":{"4":{}},"component":{}}],["iter",{"_index":3136,"title":{},"name":{},"text":{"16":{}},"component":{}}],["itself",{"_index":2040,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["it’",{"_index":1546,"title":{},"name":{},"text":{"13":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["ivfflat",{"_index":885,"title":{"4-3":{}},"name":{},"text":{"4":{}},"component":{}}],["ivfflat.prob",{"_index":950,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ivori",{"_index":1352,"title":{},"name":{},"text":{"11":{},"15":{},"28":{}},"component":{}}],["ivory.log",{"_index":3931,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ivory_rel_4_st",{"_index":5400,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivoryhost",{"_index":1803,"title":{},"name":{},"text":{"14":{}},"component":{}}],["ivoryport",{"_index":1804,"title":{},"name":{},"text":{"14":{}},"component":{}}],["ivorysql",{"_index":18,"title":{"5":{},"15":{},"26":{},"29":{},"2-3":{},"2-17":{},"11-1":{},"15-8":{},"15-12":{},"15-13":{},"17-3":{},"22-4":{},"22-5":{},"25-8":{},"26-5":{},"26-11":{},"26-12":{},"28-1":{},"28-6":{},"28-7":{},"29-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}}}],["ivorysql'",{"_index":532,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["ivorysql.auto.conf",{"_index":2895,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ivorysql.compatible_mod",{"_index":1053,"title":{"27-136":{}},"name":{},"text":{"5":{},"6":{},"7":{},"11":{},"18":{},"27":{}},"component":{}}],["ivorysql.conf",{"_index":1103,"title":{},"name":{},"text":{"6":{},"16":{}},"component":{}}],["ivorysql.conf.pg_rewind",{"_index":2674,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ivorysql.database_mod",{"_index":1086,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivorysql.datetime_ignore_nls_mask",{"_index":1064,"title":{"6-5":{}},"name":{},"text":{"6":{}},"component":{}}],["ivorysql.enable_case_switch",{"_index":1186,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ivorysql.enable_emptystring_to_nul",{"_index":1090,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivorysql.identifier_case_switch",{"_index":1096,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["ivorysql.listen_address",{"_index":1099,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivorysql.org",{"_index":1847,"title":{"15-27":{}},"name":{},"text":{},"component":{}}],["ivorysql.port",{"_index":1106,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivorysql/ivorysql:4.2",{"_index":3952,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ivorysql4",{"_index":3914,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ivorysql4.2",{"_index":5432,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql4.x86_64",{"_index":5351,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql:4.2",{"_index":3957,"title":{},"name":{},"text":{"22":{}},"component":{}}],["ivorysql:ivorysql",{"_index":5417,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql=ctc/ivorysql",{"_index":717,"title":{},"name":{},"text":{"2":{},"26":{}},"component":{}}],["ivorysql@localhost",{"_index":999,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ivorysql_db",{"_index":5369,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql_doc",{"_index":124,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{}}],["ivorysql_ora",{"_index":1308,"title":{},"name":{},"text":{"11":{},"18":{}},"component":{}}],["ivorysql_password",{"_index":5368,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql_password=your_password",{"_index":3955,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ivorysql_us",{"_index":5367,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ivorysql_web",{"_index":2164,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ivorysql’",{"_index":126,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"11":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["ivorysql，an",{"_index":4974,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ivoysql",{"_index":234,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ivy_configurenamesbool",{"_index":1075,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivy_configurenamesenum",{"_index":1079,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivy_configurenamesint",{"_index":1076,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivy_configurenamesr",{"_index":1078,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivy_configurenamesstr",{"_index":1077,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ivy_guc.c",{"_index":1074,"title":{},"name":{},"text":{"6":{}},"component":{}}],["iw",{"_index":6248,"title":{},"name":{},"text":{"27":{}},"component":{}}],["iy",{"_index":6244,"title":{},"name":{},"text":{"27":{}},"component":{}}],["iyi",{"_index":6245,"title":{},"name":{},"text":{"27":{}},"component":{}}],["iyyi",{"_index":6246,"title":{},"name":{},"text":{"27":{}},"component":{}}],["j",{"_index":1586,"title":{},"name":{},"text":{"13":{},"16":{},"27":{},"28":{}},"component":{}}],["jack",{"_index":1587,"title":{},"name":{},"text":{"13":{}},"component":{}}],["januari",{"_index":15,"title":{},"name":{},"text":{"1":{}},"component":{}}],["jiao",{"_index":166,"title":{},"name":{},"text":{"1":{}},"component":{}}],["jiffi",{"_index":3762,"title":{},"name":{},"text":{"16":{}},"component":{}}],["job",{"_index":569,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"24":{},"28":{}},"component":{}}],["jobs=`njob",{"_index":3265,"title":{},"name":{},"text":{"16":{}},"component":{}}],["jobs=`num",{"_index":2870,"title":{},"name":{},"text":{"16":{}},"component":{}}],["jobs=numb",{"_index":3501,"title":{},"name":{},"text":{"16":{}},"component":{}}],["jobs=thread",{"_index":3111,"title":{},"name":{},"text":{"16":{}},"component":{}}],["joe",{"_index":2768,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["join",{"_index":554,"title":{"27-15":{},"28-44":{}},"name":{},"text":{"2":{},"15":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["join_collapse_limit",{"_index":6876,"title":{},"name":{},"text":{"28":{}},"component":{}}],["join`",{"_index":6875,"title":{},"name":{},"text":{"28":{}},"component":{}}],["join’",{"_index":6693,"title":{},"name":{},"text":{"28":{}},"component":{}}],["journey",{"_index":3969,"title":{},"name":{},"text":{"22":{}},"component":{}}],["json",{"_index":6637,"title":{},"name":{},"text":{"28":{}},"component":{}}],["judgment",{"_index":1212,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jue",{"_index":1588,"title":{},"name":{},"text":{"13":{}},"component":{}}],["jue','j",{"_index":1594,"title":{},"name":{},"text":{"13":{}},"component":{}}],["jue','j','bl",{"_index":1591,"title":{},"name":{},"text":{"13":{}},"component":{}}],["jul",{"_index":662,"title":{},"name":{},"text":{"2":{}},"component":{}}],["juli",{"_index":1472,"title":{},"name":{},"text":{"13":{}},"component":{}}],["julian",{"_index":6283,"title":{},"name":{},"text":{"27":{}},"component":{}}],["k",{"_index":946,"title":{},"name":{},"text":{"4":{},"16":{},"28":{}},"component":{}}],["keep",{"_index":749,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["keepal",{"_index":5207,"title":{},"name":{},"text":{"24":{}},"component":{}}],["kept",{"_index":1049,"title":{},"name":{},"text":{"5":{},"16":{},"24":{},"27":{}},"component":{}}],["kernel",{"_index":1070,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"23":{}},"component":{}}],["kernel’",{"_index":4139,"title":{},"name":{},"text":{"23":{}},"component":{}}],["kettl",{"_index":320,"title":{},"name":{},"text":{"2":{}},"component":{}}],["key",{"_index":74,"title":{"27-102":{},"28-49":{}},"name":{},"text":{"1":{},"2":{},"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["keys)creat",{"_index":3077,"title":{},"name":{},"text":{"16":{}},"component":{}}],["keyword",{"_index":1228,"title":{},"name":{},"text":{"9":{},"12":{},"16":{},"18":{},"27":{}},"component":{}}],["keyword=valu",{"_index":2950,"title":{},"name":{},"text":{"16":{}},"component":{}}],["kill",{"_index":3599,"title":{},"name":{},"text":{"16":{}},"component":{}}],["kilobyt",{"_index":2974,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["kind",{"_index":2459,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["kit",{"_index":367,"title":{},"name":{},"text":{"2":{}},"component":{}}],["know",{"_index":1931,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["knowledg",{"_index":297,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["known",{"_index":3029,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["l",{"_index":706,"title":{},"name":{},"text":{"2":{},"16":{},"22":{},"25":{},"26":{},"28":{}},"component":{}}],["l/usr/local/pgsql/lib",{"_index":2801,"title":{},"name":{},"text":{"16":{}},"component":{}}],["label",{"_index":2960,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["label=label",{"_index":2961,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lack",{"_index":3380,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lag",{"_index":3119,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["laid",{"_index":6874,"title":{},"name":{},"text":{"28":{}},"component":{}}],["languag",{"_index":383,"title":{"5-4":{}},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"16":{},"18":{},"24":{},"25":{},"27":{}},"component":{}}],["laptop",{"_index":5160,"title":{},"name":{},"text":{"24":{}},"component":{}}],["larg",{"_index":290,"title":{"28-19":{}},"name":{},"text":{"2":{},"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["larger",{"_index":3085,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["largest",{"_index":603,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"27":{}},"component":{}}],["larri",{"_index":358,"title":{},"name":{},"text":{"2":{}},"component":{}}],["last",{"_index":482,"title":{},"name":{},"text":{"2":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["last_analyz",{"_index":4655,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_archived_tim",{"_index":4570,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_archived_w",{"_index":4569,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_autoanalyz",{"_index":4656,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_autovacuum",{"_index":4653,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_day",{"_index":1420,"title":{"27-183":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["last_day('2020",{"_index":6205,"title":{},"name":{},"text":{"27":{}},"component":{}}],["last_day(sysdate())from",{"_index":1478,"title":{},"name":{},"text":{"13":{}},"component":{}}],["last_day(timestamp",{"_index":6203,"title":{},"name":{},"text":{"27":{}},"component":{}}],["last_day(to_date('2019",{"_index":1481,"title":{},"name":{},"text":{"13":{}},"component":{}}],["last_failed_tim",{"_index":4573,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_failed_w",{"_index":4572,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_msg_receipt_tim",{"_index":4524,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_msg_send_tim",{"_index":4523,"title":{},"name":{},"text":{"23":{}},"component":{}}],["last_vacuum",{"_index":4651,"title":{},"name":{},"text":{"23":{}},"component":{}}],["late.when",{"_index":3117,"title":{},"name":{},"text":{"16":{}},"component":{}}],["latenc",{"_index":3115,"title":{},"name":{},"text":{"16":{}},"component":{}}],["latency.if",{"_index":3152,"title":{},"name":{},"text":{"16":{}},"component":{}}],["later",{"_index":725,"title":{},"name":{},"text":{"2":{},"13":{},"16":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["later.although",{"_index":2581,"title":{},"name":{},"text":{"16":{}},"component":{}}],["latest",{"_index":1302,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"22":{},"24":{},"25":{},"28":{}},"component":{}}],["latest_end_lsn",{"_index":4526,"title":{},"name":{},"text":{"23":{}},"component":{}}],["latest_end_tim",{"_index":4527,"title":{},"name":{},"text":{"23":{}},"component":{}}],["latin",{"_index":5847,"title":{},"name":{},"text":{"27":{}},"component":{}}],["latter",{"_index":3202,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["launch",{"_index":4058,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["launcher",{"_index":3945,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{}},"component":{}}],["law",{"_index":6067,"title":{},"name":{},"text":{"27":{}},"component":{}}],["layer",{"_index":962,"title":{},"name":{},"text":{"4":{}},"component":{}}],["layout",{"_index":2692,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["lazili",{"_index":2547,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lb",{"_index":1363,"title":{},"name":{},"text":{"11":{}},"component":{}}],["lc",{"_index":2595,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lc_collat",{"_index":2748,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lc_ctype",{"_index":2750,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ld_library_path",{"_index":3928,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["ld_library_path=/usr/lib/oracle/18.3/client64/lib:$ld_library_path",{"_index":396,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ld_library_path=/usr/local/ivorysql/ivorysql",{"_index":3926,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["ldflag",{"_index":3220,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ldflags_ex",{"_index":3221,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ldflags_sl",{"_index":3222,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lead",{"_index":1347,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["leader",{"_index":1893,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{}},"component":{}}],["leader_pid",{"_index":4147,"title":{},"name":{},"text":{"23":{}},"component":{}}],["leaf",{"_index":2860,"title":{},"name":{},"text":{"16":{}},"component":{}}],["learn",{"_index":882,"title":{},"name":{},"text":{"3":{}},"component":{}}],["least('a",{"_index":6354,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least('a','a','b','b",{"_index":6356,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least('harri",{"_index":6357,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least(1",{"_index":6352,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least(1,3,5,10",{"_index":6355,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least(expr1,expr2",{"_index":6351,"title":{},"name":{},"text":{"27":{}},"component":{}}],["least(nul",{"_index":6353,"title":{},"name":{},"text":{"27":{}},"component":{}}],["leav",{"_index":2074,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{}},"component":{}}],["lecpg",{"_index":2802,"title":{},"name":{},"text":{"16":{}},"component":{}}],["left",{"_index":1172,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["legaci",{"_index":2602,"title":{},"name":{},"text":{"16":{}},"component":{}}],["length",{"_index":1434,"title":{},"name":{},"text":{"13":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["length('223",{"_index":1575,"title":{},"name":{},"text":{"13":{}},"component":{}}],["length('ivorysql",{"_index":1576,"title":{},"name":{},"text":{"13":{}},"component":{}}],["length(223",{"_index":1574,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lengthb",{"_index":1435,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lengthb('0x2c'::bytea",{"_index":1581,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lengthb('ivorysq'::char",{"_index":1579,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lengthb('ivorysql",{"_index":1582,"title":{},"name":{},"text":{"13":{}},"component":{}}],["less",{"_index":2687,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["less.th",{"_index":2871,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lesser",{"_index":3370,"title":{},"name":{},"text":{"16":{}},"component":{}}],["letter",{"_index":1168,"title":{},"name":{},"text":{"7":{},"15":{},"16":{},"24":{},"27":{}},"component":{}}],["let’",{"_index":2168,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["level",{"_index":45,"title":{"28-20":{}},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["level.if",{"_index":3461,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lexic",{"_index":5536,"title":{"27-101":{}},"name":{},"text":{"27":{}},"component":{}}],["liang",{"_index":168,"title":{},"name":{},"text":{"1":{}},"component":{}}],["lib",{"_index":3223,"title":{},"name":{},"text":{"16":{},"25":{}},"component":{}}],["libc",{"_index":713,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["libcurl",{"_index":795,"title":{},"name":{},"text":{"3":{}},"component":{}}],["libdir",{"_index":3209,"title":{},"name":{},"text":{"16":{}},"component":{}}],["libecpg",{"_index":2791,"title":{},"name":{},"text":{"16":{}},"component":{}}],["libicu",{"_index":5383,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libldap2",{"_index":5406,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libossp",{"_index":5411,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libpam",{"_index":5410,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libperl",{"_index":5407,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libpq",{"_index":49,"title":{},"name":{},"text":{"1":{},"16":{},"24":{},"27":{}},"component":{}}],["libpqwalreceiverconnect",{"_index":4216,"title":{},"name":{},"text":{"23":{}},"component":{}}],["libpqwalreceiverrec",{"_index":4217,"title":{},"name":{},"text":{"23":{}},"component":{}}],["librari",{"_index":210,"title":{"2-17":{}},"name":{},"text":{"16":{},"18":{},"25":{},"27":{},"28":{}},"component":{}}],["libreadlin",{"_index":5404,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libs.x86_64",{"_index":5354,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libselinux",{"_index":5412,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libssl",{"_index":5409,"title":{},"name":{},"text":{"25":{}},"component":{}}],["libtiff",{"_index":793,"title":{},"name":{},"text":{"3":{}},"component":{}}],["libtool",{"_index":796,"title":{},"name":{},"text":{"3":{}},"component":{}}],["libxml2",{"_index":797,"title":{},"name":{},"text":{"3":{},"18":{},"25":{}},"component":{}}],["libxslt",{"_index":5384,"title":{},"name":{},"text":{"25":{}},"component":{}}],["licens",{"_index":363,"title":{"15-8":{},"17-3":{}},"name":{},"text":{"2":{},"15":{},"17":{},"29":{}},"component":{}}],["lieu",{"_index":5224,"title":{},"name":{},"text":{"24":{}},"component":{}}],["life",{"_index":4059,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lifesav",{"_index":6873,"title":{},"name":{},"text":{"28":{}},"component":{}}],["lifetim",{"_index":5182,"title":{},"name":{},"text":{"24":{}},"component":{}}],["lift",{"_index":3612,"title":{},"name":{},"text":{"16":{}},"component":{}}],["light",{"_index":2512,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lightweight",{"_index":3808,"title":{},"name":{},"text":{"18":{},"23":{}},"component":{}}],["likelihood",{"_index":6672,"title":{},"name":{},"text":{"28":{}},"component":{}}],["lili",{"_index":158,"title":{},"name":{},"text":{"1":{}},"component":{}}],["limit",{"_index":1022,"title":{"21-8":{},"27-266":{},"28-41":{}},"name":{},"text":{"4":{},"16":{},"22":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["limit=limit",{"_index":3116,"title":{},"name":{},"text":{"16":{}},"component":{}}],["limit=numb",{"_index":2759,"title":{},"name":{},"text":{"16":{}},"component":{}}],["line",{"_index":1157,"title":{},"name":{},"text":{"6":{},"7":{},"15":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["linear",{"_index":6780,"title":{},"name":{},"text":{"28":{}},"component":{}}],["link",{"_index":484,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"24":{},"28":{}},"component":{}}],["link](https://example.com",{"_index":2146,"title":{},"name":{},"text":{"15":{}},"component":{}}],["link](https://www.example.com",{"_index":2131,"title":{},"name":{},"text":{"15":{}},"component":{}}],["linker",{"_index":2800,"title":{},"name":{},"text":{"16":{}},"component":{}}],["linux",{"_index":333,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{}},"component":{}}],["linux(cento",{"_index":3909,"title":{},"name":{},"text":{"22":{}},"component":{}}],["list",{"_index":27,"title":{"15-14":{},"16-1":{},"28-43":{}},"name":{},"text":{"1":{},"2":{},"4":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["list=list",{"_index":3509,"title":{},"name":{},"text":{"16":{}},"component":{}}],["listen",{"_index":1100,"title":{},"name":{},"text":{"6":{},"16":{},"24":{},"26":{},"27":{}},"component":{}}],["listen_address",{"_index":5205,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["liter",{"_index":5753,"title":{},"name":{},"text":{"27":{}},"component":{}}],["littl",{"_index":488,"title":{},"name":{},"text":{"2":{},"24":{},"27":{},"28":{}},"component":{}}],["live",{"_index":2576,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["llvm",{"_index":802,"title":{},"name":{},"text":{"3":{}},"component":{}}],["llvmjit",{"_index":5387,"title":{},"name":{},"text":{"25":{}},"component":{}}],["llvmjit.x86_64",{"_index":5355,"title":{},"name":{},"text":{"25":{}},"component":{}}],["lmgr",{"_index":4852,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ln",{"_index":821,"title":{},"name":{},"text":{"3":{},"23":{}},"component":{}}],["load",{"_index":287,"title":{"24-10":{},"28-22":{}},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["loadabl",{"_index":3211,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["lob",{"_index":450,"title":{},"name":{},"text":{"2":{}},"component":{}}],["local",{"_index":567,"title":{"15-28":{}},"name":{},"text":{"2":{},"13":{},"15":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["locale=`local",{"_index":2751,"title":{},"name":{},"text":{"16":{}},"component":{}}],["locale=local",{"_index":2746,"title":{},"name":{},"text":{"16":{}},"component":{}}],["localedir",{"_index":3212,"title":{},"name":{},"text":{"16":{}},"component":{}}],["localhost",{"_index":3445,"title":{},"name":{},"text":{"16":{}},"component":{}}],["localhost:5433",{"_index":3446,"title":{},"name":{},"text":{"16":{}},"component":{}}],["localinstal",{"_index":5392,"title":{},"name":{},"text":{"25":{}},"component":{}}],["localtimestamp",{"_index":1450,"title":{},"name":{},"text":{"13":{}},"component":{}}],["localtimestamp(1",{"_index":1735,"title":{},"name":{},"text":{"13":{}},"component":{}}],["localtransactionid",{"_index":4814,"title":{},"name":{},"text":{"23":{}},"component":{}}],["locat",{"_index":1072,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["locations.curr",{"_index":2920,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lock",{"_index":2865,"title":{"23-28":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["locker",{"_index":4755,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockers_don",{"_index":4756,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockers_tot",{"_index":4754,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfastpath",{"_index":4382,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfileaddtodatadirread",{"_index":4243,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfileaddtodatadirsync",{"_index":4244,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfileaddtodatadirwrit",{"_index":4245,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfilecreateread",{"_index":4246,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfilecreatesync",{"_index":4247,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfilecreatewrit",{"_index":4248,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockfilerecheckdatadirread",{"_index":4249,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockmanag",{"_index":4383,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lockmod",{"_index":4851,"title":{},"name":{},"text":{"23":{}},"component":{}}],["log",{"_index":1051,"title":{"24-9":{},"24-14":{},"24-20":{}},"name":{},"text":{"5":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["log=filenam",{"_index":3618,"title":{},"name":{},"text":{"16":{}},"component":{}}],["log_autovacuum_min_dur",{"_index":5092,"title":{},"name":{},"text":{"24":{}},"component":{}}],["log_destin",{"_index":5134,"title":{},"name":{},"text":{"24":{}},"component":{}}],["log_hostnam",{"_index":4156,"title":{},"name":{},"text":{"23":{}},"component":{}}],["log_recovery_conflict_wait",{"_index":5305,"title":{},"name":{},"text":{"24":{}},"component":{}}],["log_temp_fil",{"_index":4615,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logfil",{"_index":3776,"title":{},"name":{},"text":{"16":{}},"component":{}}],["logged.rememb",{"_index":3189,"title":{},"name":{},"text":{"16":{}},"component":{}}],["logging_collector",{"_index":5121,"title":{},"name":{},"text":{"24":{}},"component":{}}],["logic",{"_index":95,"title":{"24-15":{}},"name":{},"text":{"1":{},"11":{},"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["logical_decoding_work_mem",{"_index":4501,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalapplymain",{"_index":4205,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicallaunchermain",{"_index":4206,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrepwork",{"_index":4384,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritecheckpointsync",{"_index":4251,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritemappingsync",{"_index":4252,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritemappingwrit",{"_index":4253,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritesync",{"_index":4254,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritetrunc",{"_index":4255,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalrewritewrit",{"_index":4256,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalsyncdata",{"_index":4330,"title":{},"name":{},"text":{"23":{}},"component":{}}],["logicalsyncstatechang",{"_index":4331,"title":{},"name":{},"text":{"23":{}},"component":{}}],["login",{"_index":698,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["logrot",{"_index":3604,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["logs.th",{"_index":3460,"title":{},"name":{},"text":{"16":{}},"component":{}}],["londist",{"_index":5170,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["london",{"_index":5174,"title":{},"name":{},"text":{"24":{}},"component":{}}],["lone",{"_index":6580,"title":{},"name":{},"text":{"28":{}},"component":{}}],["long",{"_index":1416,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["long.thi",{"_index":3010,"title":{},"name":{},"text":{"16":{}},"component":{}}],["longer",{"_index":1211,"title":{},"name":{},"text":{"8":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["longest",{"_index":5335,"title":{},"name":{},"text":{"24":{}},"component":{}}],["look",{"_index":1892,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["lookup",{"_index":1528,"title":{},"name":{},"text":{"13":{},"16":{},"23":{}},"component":{}}],["loop",{"_index":3454,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["loops=1",{"_index":6719,"title":{},"name":{},"text":{"28":{}},"component":{}}],["loops=10",{"_index":6722,"title":{},"name":{},"text":{"28":{}},"component":{}}],["loos",{"_index":2486,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["loosen",{"_index":5286,"title":{},"name":{},"text":{"24":{}},"component":{}}],["los_angl",{"_index":1511,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lose",{"_index":5131,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["loss",{"_index":253,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"28":{}},"component":{}}],["lossi",{"_index":6753,"title":{},"name":{},"text":{"28":{}},"component":{}}],["lost",{"_index":1359,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["lot",{"_index":1987,"title":{},"name":{},"text":{"15":{},"17":{},"27":{},"28":{}},"component":{}}],["low",{"_index":4985,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["lower",{"_index":976,"title":{},"name":{},"text":{"4":{},"16":{},"22":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["lower($1",{"_index":6092,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lower_case_1",{"_index":1205,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lower_case_1\"(c1",{"_index":1202,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lower_case_2",{"_index":1206,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lower_case_2\"(c1",{"_index":1203,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lower_case_3",{"_index":1207,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lower_case_3\"(c1",{"_index":1204,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lowercas",{"_index":1175,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["lowest",{"_index":5933,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lrt",{"_index":657,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ls",{"_index":656,"title":{},"name":{},"text":{"2":{}},"component":{}}],["lsb",{"_index":6593,"title":{},"name":{},"text":{"28":{}},"component":{}}],["lsn",{"_index":3451,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["lsn.if",{"_index":3453,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lsn.note`pg_resetw",{"_index":3677,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ltrim",{"_index":1432,"title":{},"name":{},"text":{"13":{}},"component":{}}],["ltrim('abcdefg','fegab')ltrim",{"_index":1566,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lussier",{"_index":151,"title":{},"name":{},"text":{"1":{}},"component":{}}],["lv",{"_index":170,"title":{},"name":{},"text":{"1":{}},"component":{}}],["lvorysql",{"_index":5709,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lwlock",{"_index":4197,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lwlockmod",{"_index":4843,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lwlock’",{"_index":4844,"title":{},"name":{},"text":{"23":{}},"component":{}}],["lz4",{"_index":2948,"title":{},"name":{},"text":{"16":{},"25":{}},"component":{}}],["m",{"_index":1210,"title":{},"name":{},"text":{"8":{},"11":{},"15":{},"16":{},"24":{},"28":{}},"component":{}}],["machin",{"_index":2498,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["maco",{"_index":4806,"title":{},"name":{},"text":{"23":{}},"component":{}}],["macro",{"_index":4811,"title":{},"name":{},"text":{"23":{}},"component":{}}],["made",{"_index":1905,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["magnitud",{"_index":6857,"title":{},"name":{},"text":{"28":{}},"component":{}}],["mail",{"_index":1832,"title":{"15-14":{}},"name":{},"text":{"15":{},"17":{}},"component":{}}],["mailbox",{"_index":1975,"title":{},"name":{},"text":{"15":{}},"component":{}}],["main",{"_index":130,"title":{"11-8":{}},"name":{},"text":{"1":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{}},"component":{}}],["main.i",{"_index":1407,"title":{},"name":{},"text":{"12":{}},"component":{}}],["mainli",{"_index":551,"title":{},"name":{},"text":{"2":{},"10":{},"15":{},"16":{},"24":{}},"component":{}}],["maintain",{"_index":128,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"15":{},"17":{},"18":{},"24":{},"28":{}},"component":{}}],["mainten",{"_index":1341,"title":{"24":{},"28":{},"24-9":{}},"name":{},"text":{"11":{},"15":{},"16":{},"18":{},"24":{}},"component":{}}],["maintenance_work_mem",{"_index":4773,"title":{"28-50":{}},"name":{},"text":{"23":{},"28":{}},"component":{}}],["major",{"_index":2690,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["make",{"_index":48,"title":{"15-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"11":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["makefil",{"_index":3216,"title":{},"name":{},"text":{"16":{}},"component":{}}],["makefile.pl",{"_index":392,"title":{},"name":{},"text":{"2":{}},"component":{}}],["makemak",{"_index":342,"title":{},"name":{},"text":{"2":{}},"component":{}}],["malform",{"_index":2563,"title":{},"name":{},"text":{"16":{}},"component":{}}],["malici",{"_index":3000,"title":{},"name":{},"text":{"16":{}},"component":{}}],["man",{"_index":370,"title":{},"name":{},"text":{"2":{}},"component":{}}],["manag",{"_index":912,"title":{"28":{},"28-6":{},"28-7":{}},"name":{},"text":{"4":{},"11":{},"15":{},"16":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["mandatori",{"_index":3720,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["mandir",{"_index":3213,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mani",{"_index":942,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["manifest",{"_index":2984,"title":{},"name":{},"text":{"16":{}},"component":{}}],["manipul",{"_index":3260,"title":{"24-29":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["manner",{"_index":1329,"title":{},"name":{},"text":{"11":{},"27":{}},"component":{}}],["manual",{"_index":332,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["map",{"_index":736,"title":{"24-5":{}},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"28":{}},"component":{}}],["map_resolut",{"_index":3558,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mapping=olddir=newdir",{"_index":2910,"title":{},"name":{},"text":{"16":{}},"component":{}}],["margin",{"_index":5076,"title":{},"name":{},"text":{"24":{}},"component":{}}],["mark",{"_index":37,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"15":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["markdown",{"_index":2076,"title":{},"name":{},"text":{"15":{}},"component":{}}],["marker",{"_index":5913,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["markup",{"_index":3807,"title":{},"name":{},"text":{"18":{}},"component":{}}],["mask",{"_index":6591,"title":{},"name":{},"text":{"28":{}},"component":{}}],["massiv",{"_index":5000,"title":{},"name":{},"text":{"24":{}},"component":{}}],["master",{"_index":1276,"title":{},"name":{},"text":{"10":{},"26":{},"28":{}},"component":{}}],["match",{"_index":538,"title":{},"name":{},"text":{"2":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["materi",{"_index":216,"title":{"2-21":{}},"name":{},"text":{"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["matter",{"_index":1899,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["max",{"_index":2971,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["max(pop",{"_index":6009,"title":{},"name":{},"text":{"27":{}},"component":{}}],["max_connect",{"_index":5094,"title":{},"name":{},"text":{"24":{},"26":{}},"component":{}}],["max_dead_tupl",{"_index":4772,"title":{},"name":{},"text":{"23":{}},"component":{}}],["max_locks_per_transact",{"_index":5308,"title":{},"name":{},"text":{"24":{}},"component":{}}],["max_parallel_work",{"_index":5776,"title":{},"name":{},"text":{"27":{}},"component":{}}],["max_parallel_workers_per_gath",{"_index":5775,"title":{},"name":{},"text":{"27":{}},"component":{}}],["max_prepared_transact",{"_index":5307,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["max_replication_slot",{"_index":5192,"title":{},"name":{},"text":{"24":{}},"component":{}}],["max_slot_wal_keep_s",{"_index":5226,"title":{},"name":{},"text":{"24":{}},"component":{}}],["max_standby_archive_delay",{"_index":5294,"title":{},"name":{},"text":{"24":{}},"component":{}}],["max_standby_streaming_delay",{"_index":5295,"title":{},"name":{},"text":{"24":{}},"component":{}}],["max_wal_s",{"_index":6476,"title":{"28-51":{}},"name":{},"text":{"28":{}},"component":{}}],["max_wal_send",{"_index":2473,"title":{},"name":{},"text":{"16":{},"24":{},"26":{},"28":{}},"component":{}}],["max_worker_process",{"_index":5309,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["maxim",{"_index":5043,"title":{},"name":{},"text":{"24":{}},"component":{}}],["maximum",{"_index":1391,"title":{},"name":{},"text":{"12":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["maxwritten_clean",{"_index":4582,"title":{},"name":{},"text":{"23":{}},"component":{}}],["mb",{"_index":526,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mcv",{"_index":6469,"title":{"28-43":{}},"name":{},"text":{"28":{}},"component":{}}],["md",{"_index":2110,"title":{},"name":{},"text":{"15":{},"23":{}},"component":{}}],["md5",{"_index":5216,"title":{},"name":{},"text":{"24":{}},"component":{}}],["md5b5f5ba1a423792b526f799ae4eb3d59",{"_index":2775,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mdt",{"_index":6230,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mean",{"_index":611,"title":{},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"18":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["meaning",{"_index":5007,"title":{},"name":{},"text":{"24":{}},"component":{}}],["meaning.)to",{"_index":3296,"title":{},"name":{},"text":{"16":{}},"component":{}}],["meant",{"_index":2580,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["meantim",{"_index":3280,"title":{},"name":{},"text":{"16":{}},"component":{}}],["meanwhil",{"_index":2915,"title":{},"name":{},"text":{"16":{}},"component":{}}],["measur",{"_index":2396,"title":{"16-173":{}},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["mechan",{"_index":2506,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["median",{"_index":6004,"title":{},"name":{},"text":{"27":{}},"component":{}}],["medium",{"_index":5712,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["meet",{"_index":255,"title":{},"name":{},"text":{"2":{},"7":{},"16":{}},"component":{}}],["megabyt",{"_index":2975,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["mem=1234",{"_index":3782,"title":{},"name":{},"text":{"16":{}},"component":{}}],["member",{"_index":1888,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["membership",{"_index":5942,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["memori",{"_index":983,"title":{},"name":{},"text":{"4":{},"6":{},"23":{},"24":{},"28":{}},"component":{}}],["mention",{"_index":2842,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["merg",{"_index":1310,"title":{},"name":{},"text":{"11":{},"15":{},"17":{},"27":{},"28":{}},"component":{}}],["mergeappend",{"_index":5789,"title":{},"name":{},"text":{"27":{}},"component":{}}],["messag",{"_index":52,"title":{},"name":{},"text":{"1":{},"15":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["messagequeueintern",{"_index":4332,"title":{},"name":{},"text":{"23":{}},"component":{}}],["messagequeueputmessag",{"_index":4333,"title":{},"name":{},"text":{"23":{}},"component":{}}],["messagequeuerec",{"_index":4334,"title":{},"name":{},"text":{"23":{}},"component":{}}],["messagequeuesend",{"_index":4335,"title":{},"name":{},"text":{"23":{}},"component":{}}],["met",{"_index":5781,"title":{},"name":{},"text":{"27":{}},"component":{}}],["meta",{"_index":2567,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["method",{"_index":783,"title":{"14-3":{}},"name":{},"text":{"3":{},"4":{},"12":{},"15":{},"16":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["method,refer",{"_index":5372,"title":{},"name":{},"text":{"25":{}},"component":{}}],["method=`nam",{"_index":3090,"title":{},"name":{},"text":{"16":{}},"component":{}}],["method=fetch",{"_index":4796,"title":{},"name":{},"text":{"23":{}},"component":{}}],["method=method",{"_index":2926,"title":{},"name":{},"text":{"16":{}},"component":{}}],["method=non",{"_index":4794,"title":{},"name":{},"text":{"23":{}},"component":{}}],["method=stream",{"_index":4795,"title":{},"name":{},"text":{"23":{}},"component":{}}],["method[:*detail",{"_index":2940,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mhz",{"_index":3768,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mi",{"_index":6256,"title":{},"name":{},"text":{"27":{}},"component":{}}],["miami",{"_index":6843,"title":{},"name":{},"text":{"28":{}},"component":{}}],["microsecond",{"_index":1469,"title":{},"name":{},"text":{"13":{},"16":{},"27":{}},"component":{}}],["microsoft",{"_index":3607,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["middl",{"_index":3390,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["middlewar",{"_index":4936,"title":{"24-17":{}},"name":{},"text":{"24":{}},"component":{}}],["migrat",{"_index":173,"title":{"2":{},"2-1":{},"2-2":{},"2-3":{},"2-14":{},"2-18":{},"2-26":{}},"name":{},"text":{"2":{},"4":{},"11":{},"18":{},"21":{},"24":{},"27":{},"28":{}},"component":{}}],["milk",{"_index":5757,"title":{},"name":{},"text":{"27":{}},"component":{}}],["million",{"_index":931,"title":{},"name":{},"text":{"4":{},"24":{},"28":{}},"component":{}}],["millisecond",{"_index":1698,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"28":{}},"component":{}}],["min",{"_index":5987,"title":{},"name":{},"text":{"27":{}},"component":{}}],["min(employe",{"_index":6085,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mind",{"_index":1957,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["minim",{"_index":1043,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["minimalist",{"_index":1342,"title":{},"name":{},"text":{"11":{}},"component":{}}],["minimum",{"_index":2007,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"22":{},"24":{},"27":{},"28":{}},"component":{}}],["minor",{"_index":5183,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["minu",{"_index":5038,"title":{"27-153":{}},"name":{},"text":{"24":{},"27":{}},"component":{}}],["minut",{"_index":1519,"title":{},"name":{},"text":{"13":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["minute(",{"_index":614,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mirror",{"_index":5146,"title":{},"name":{},"text":{"24":{}},"component":{}}],["misestim",{"_index":6810,"title":{},"name":{},"text":{"28":{}},"component":{}}],["misinterpret",{"_index":6569,"title":{},"name":{},"text":{"28":{}},"component":{}}],["mismatch",{"_index":3570,"title":{},"name":{},"text":{"16":{}},"component":{}}],["miss",{"_index":2089,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"28":{}},"component":{}}],["missing=`schema",{"_index":2873,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mistrust",{"_index":5976,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mix",{"_index":1177,"title":{"27-133":{}},"name":{},"text":{"7":{},"13":{},"16":{},"27":{}},"component":{}}],["mixedcasenam",{"_index":3418,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mkdir",{"_index":766,"title":{},"name":{},"text":{"2":{},"15":{},"25":{}},"component":{}}],["mm",{"_index":1109,"title":{},"name":{},"text":{"6":{},"13":{},"24":{},"27":{}},"component":{}}],["modal",{"_index":1045,"title":{},"name":{},"text":{"5":{}},"component":{}}],["mode",{"_index":515,"title":{"8":{},"14":{},"7-3":{},"16-191":{},"16-196":{},"21-7":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["mode.in",{"_index":1304,"title":{},"name":{},"text":{"11":{}},"component":{}}],["mode=mod",{"_index":3622,"title":{},"name":{},"text":{"16":{}},"component":{}}],["model",{"_index":4495,"title":{"27-4":{}},"name":{},"text":{"23":{}},"component":{}}],["moder",{"_index":3307,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["modes.th",{"_index":3137,"title":{},"name":{},"text":{"16":{}},"component":{}}],["modes.when",{"_index":3634,"title":{},"name":{},"text":{"16":{}},"component":{}}],["modif",{"_index":1850,"title":{"15-32":{}},"name":{},"text":{"15":{},"16":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["modifi",{"_index":304,"title":{"15-30":{},"15-54":{}},"name":{},"text":{"2":{},"6":{},"13":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["modify(id",{"_index":6116,"title":{},"name":{},"text":{"27":{}},"component":{}}],["modify_coldef",{"_index":6099,"title":{},"name":{},"text":{"27":{}},"component":{}}],["modul",{"_index":183,"title":{"2-7":{},"5-3":{}},"name":{},"text":{"2":{},"5":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["module(",{"_index":4874,"title":{},"name":{},"text":{"23":{}},"component":{}}],["module(ora2pg.pm",{"_index":301,"title":{},"name":{},"text":{"2":{}},"component":{}}],["modules;se",{"_index":6516,"title":{},"name":{},"text":{"28":{}},"component":{}}],["modulo",{"_index":5025,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["moment",{"_index":3731,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mon",{"_index":3536,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["monday",{"_index":6189,"title":{},"name":{},"text":{"27":{}},"component":{}}],["monitor",{"_index":3023,"title":{"23":{},"23-1":{},"23-41":{},"24-27":{}},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["monn",{"_index":6250,"title":{},"name":{},"text":{"27":{}},"component":{}}],["month",{"_index":1413,"title":{},"name":{},"text":{"13":{},"15":{},"27":{}},"component":{}}],["month/date/year",{"_index":1676,"title":{},"name":{},"text":{"13":{}},"component":{}}],["month/day/year",{"_index":1671,"title":{},"name":{},"text":{"13":{}},"component":{}}],["monthli",{"_index":1497,"title":{},"name":{},"text":{"13":{}},"component":{}}],["months_between",{"_index":1422,"title":{},"name":{},"text":{"13":{}},"component":{}}],["months_between(to_date('2023",{"_index":1498,"title":{},"name":{},"text":{"13":{}},"component":{}}],["more",{"_index":354,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["moreov",{"_index":3167,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mostli",{"_index":3004,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["mount",{"_index":5143,"title":{},"name":{},"text":{"24":{}},"component":{}}],["mouth",{"_index":1731,"title":{},"name":{},"text":{"13":{}},"component":{}}],["move",{"_index":2685,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["mr.nice",{"_index":1919,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ms",{"_index":3122,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["msb",{"_index":6594,"title":{},"name":{},"text":{"28":{}},"component":{}}],["mst",{"_index":6229,"title":{},"name":{},"text":{"27":{}},"component":{}}],["much",{"_index":1993,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["multi",{"_index":350,"title":{},"name":{},"text":{"2":{},"16":{},"28":{}},"component":{}}],["multidimension",{"_index":5959,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multilin",{"_index":5932,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multimast",{"_index":4938,"title":{"24-18":{},"24-19":{}},"name":{},"text":{"24":{}},"component":{}}],["multipl",{"_index":483,"title":{"24-34":{}},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["multipli",{"_index":3082,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["multiprocessor",{"_index":3502,"title":{},"name":{},"text":{"16":{}},"component":{}}],["multitransact",{"_index":2643,"title":{},"name":{},"text":{"16":{}},"component":{}}],["multivari",{"_index":6467,"title":{"28-42":{},"28-43":{}},"name":{},"text":{},"component":{}}],["multivers",{"_index":4976,"title":{},"name":{},"text":{"24":{}},"component":{}}],["multixact",{"_index":3681,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["multixactgen",{"_index":4385,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactmemb",{"_index":4705,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactmemberbuff",{"_index":4386,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactmemberslru",{"_index":4387,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactoffset",{"_index":4706,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactoffsetbuff",{"_index":4388,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixactoffsetslru",{"_index":4389,"title":{},"name":{},"text":{"23":{}},"component":{}}],["multixacttrunc",{"_index":4390,"title":{},"name":{},"text":{"23":{}},"component":{}}],["mung",{"_index":6589,"title":{},"name":{},"text":{"28":{}},"component":{}}],["mutual",{"_index":3158,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["mv",{"_index":3576,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["mvcc",{"_index":5004,"title":{},"name":{},"text":{"24":{}},"component":{}}],["mview",{"_index":312,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mview_sh.sql",{"_index":686,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mxid",{"_index":5036,"title":{},"name":{},"text":{"24":{}},"component":{}}],["mxid,mxid",{"_index":3680,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mxid_ag",{"_index":5084,"title":{},"name":{},"text":{"24":{}},"component":{}}],["mxoff",{"_index":3692,"title":{},"name":{},"text":{"16":{}},"component":{}}],["my/secure/location/backup_manifest.1234",{"_index":3578,"title":{},"name":{},"text":{"16":{}},"component":{}}],["my_savepoint",{"_index":5816,"title":{},"name":{},"text":{"27":{}},"component":{}}],["my_tabl",{"_index":5838,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mydb",{"_index":2827,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["mydb*.myscheam*.myrel",{"_index":2818,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mydbserv",{"_index":3035,"title":{},"name":{},"text":{"16":{}},"component":{}}],["myglobalindex",{"_index":6431,"title":{},"name":{},"text":{"27":{}},"component":{}}],["myrel",{"_index":2815,"title":{},"name":{},"text":{"16":{}},"component":{}}],["myrowtyp",{"_index":6052,"title":{},"name":{},"text":{"27":{}},"component":{}}],["myschema",{"_index":2826,"title":{},"name":{},"text":{"16":{}},"component":{}}],["myschema*.myrel",{"_index":2817,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mysql",{"_index":235,"title":{},"name":{},"text":{"2":{}},"component":{}}],["mytab",{"_index":3401,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mytab.sql",{"_index":3419,"title":{},"name":{},"text":{"16":{}},"component":{}}],["mytabl",{"_index":3893,"title":{},"name":{},"text":{"21":{},"27":{}},"component":{}}],["mytable(bid",{"_index":6432,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytable(f1",{"_index":6046,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytable.arraycolumn[4",{"_index":5960,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytable.compositecol).somefield",{"_index":5969,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytable.mycolumn",{"_index":5965,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mytable.two_d_column[17][34",{"_index":5961,"title":{},"name":{},"text":{"27":{}},"component":{}}],["n",{"_index":814,"title":{"28-42":{}},"name":{},"text":{"3":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["n_dead_tup",{"_index":4648,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_ins_since_vacuum",{"_index":4650,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_live_tup",{"_index":4646,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_mod_since_analyz",{"_index":4649,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_tup_del",{"_index":4644,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_tup_hot_upd",{"_index":4645,"title":{},"name":{},"text":{"23":{}},"component":{}}],["n_tup_in",{"_index":4641,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["n_tup_upd",{"_index":4642,"title":{},"name":{},"text":{"23":{}},"component":{}}],["na",{"_index":5168,"title":{},"name":{},"text":{"24":{}},"component":{}}],["nagio",{"_index":5140,"title":{},"name":{},"text":{"24":{}},"component":{}}],["name",{"_index":308,"title":{"27-132":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"9":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["name(argtyp",{"_index":3515,"title":{},"name":{},"text":{"16":{}},"component":{}}],["name,default",{"_index":5370,"title":{},"name":{},"text":{"25":{}},"component":{}}],["name=ivorysql",{"_index":3915,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["name[=valu",{"_index":3485,"title":{},"name":{},"text":{"16":{}},"component":{}}],["name](link",{"_index":2199,"title":{},"name":{},"text":{"15":{}},"component":{}}],["name`nam",{"_index":4145,"title":{},"name":{},"text":{"23":{}},"component":{}}],["namedatalen",{"_index":4557,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["names`.thi",{"_index":3367,"title":{},"name":{},"text":{"16":{}},"component":{}}],["namespac",{"_index":3853,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["namespace_str",{"_index":3814,"title":{},"name":{},"text":{"18":{}},"component":{}}],["nanosecond",{"_index":3751,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nativ",{"_index":5940,"title":{},"name":{},"text":{"27":{}},"component":{}}],["natur",{"_index":936,"title":{},"name":{},"text":{"4":{},"15":{},"23":{},"24":{}},"component":{}}],["nav.adoc",{"_index":2217,"title":{},"name":{},"text":{"15":{}},"component":{}}],["navig",{"_index":958,"title":{},"name":{},"text":{"4":{}},"component":{}}],["nd",{"_index":6803,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ndistinct",{"_index":6799,"title":{},"name":{},"text":{"28":{}},"component":{}}],["nearbi",{"_index":1367,"title":{},"name":{},"text":{"11":{}},"component":{}}],["nearest",{"_index":929,"title":{},"name":{},"text":{"4":{},"27":{}},"component":{}}],["nearli",{"_index":3052,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["necessari",{"_index":1066,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["necessarili",{"_index":5245,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["need",{"_index":104,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["needed.thi",{"_index":2631,"title":{},"name":{},"text":{"16":{}},"component":{}}],["needed.when",{"_index":3457,"title":{},"name":{},"text":{"16":{}},"component":{}}],["neg",{"_index":1495,"title":{},"name":{},"text":{"13":{},"24":{},"28":{}},"component":{}}],["negat",{"_index":5945,"title":{},"name":{},"text":{"27":{}},"component":{}}],["negoti",{"_index":58,"title":{},"name":{},"text":{"1":{}},"component":{}}],["neighbor",{"_index":930,"title":{},"name":{},"text":{"4":{}},"component":{}}],["neighborhood",{"_index":963,"title":{},"name":{},"text":{"4":{}},"component":{}}],["neomirror.rcac.purdue.edu/adelie/source/archive/protobuf",{"_index":844,"title":{},"name":{},"text":{"3":{}},"component":{}}],["nest",{"_index":2133,"title":{},"name":{},"text":{"15":{},"27":{},"28":{}},"component":{}}],["netbsd",{"_index":4808,"title":{},"name":{},"text":{"23":{}},"component":{}}],["network",{"_index":2705,"title":{},"name":{},"text":{"16":{},"22":{},"24":{},"28":{}},"component":{}}],["never",{"_index":1958,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["new",{"_index":261,"title":{"6-1":{},"6-3":{},"15-23":{},"15-29":{},"23-40":{},"27-6":{},"27-77":{}},"name":{},"text":{"2":{},"11":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["new_product",{"_index":5759,"title":{},"name":{},"text":{"27":{}},"component":{}}],["new_tim",{"_index":1425,"title":{"27-194":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["new_time(timestamp",{"_index":6238,"title":{},"name":{},"text":{"27":{}},"component":{}}],["newdat",{"_index":1718,"title":{},"name":{},"text":{"13":{}},"component":{}}],["newdb",{"_index":3398,"title":{},"name":{},"text":{"16":{}},"component":{}}],["newdir",{"_index":2913,"title":{},"name":{},"text":{"16":{}},"component":{}}],["newer",{"_index":791,"title":{},"name":{},"text":{"3":{},"24":{},"27":{},"28":{}},"component":{}}],["newest",{"_index":3659,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["newli",{"_index":2742,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["newlin",{"_index":5742,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["newnod",{"_index":3838,"title":{},"name":{},"text":{"18":{}},"component":{}}],["next",{"_index":1484,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["next_day",{"_index":1421,"title":{"27-179":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["next_day('2020",{"_index":6198,"title":{},"name":{},"text":{"27":{}},"component":{}}],["next_day(oracle.d",{"_index":6201,"title":{},"name":{},"text":{"27":{}},"component":{}}],["next_day(sysdate(),'friday",{"_index":1491,"title":{},"name":{},"text":{"13":{}},"component":{}}],["next_day(sysdate(),1",{"_index":1489,"title":{},"name":{},"text":{"13":{}},"component":{}}],["next_day(to_timestamp('2020",{"_index":6195,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nextval",{"_index":3854,"title":{},"name":{},"text":{"19":{},"24":{},"27":{}},"component":{}}],["nf",{"_index":3593,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nice",{"_index":1540,"title":{},"name":{},"text":{"13":{}},"component":{}}],["night",{"_index":4984,"title":{},"name":{},"text":{"24":{}},"component":{}}],["niu",{"_index":163,"title":{},"name":{},"text":{"1":{}},"component":{}}],["njob",{"_index":3264,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nl",{"_index":1089,"title":{},"name":{},"text":{"6":{}},"component":{}}],["nls_date_format",{"_index":1107,"title":{},"name":{},"text":{"6":{}},"component":{}}],["nls_lang",{"_index":474,"title":{},"name":{},"text":{"2":{}},"component":{}}],["nls_length_semant",{"_index":1112,"title":{},"name":{},"text":{"6":{},"27":{},"28":{}},"component":{}}],["nls_length_semanticsparamet",{"_index":5677,"title":{"27-243":{}},"name":{},"text":{},"component":{}}],["nls_timestamp_format",{"_index":1114,"title":{},"name":{},"text":{"6":{}},"component":{}}],["nls_timestamp_tz_format",{"_index":1115,"title":{},"name":{},"text":{"6":{}},"component":{}}],["nobodi",{"_index":3273,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nocopi",{"_index":1394,"title":{},"name":{},"text":{"12":{}},"component":{}}],["nocreatedb",{"_index":2773,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nocreaterol",{"_index":2774,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nocycl",{"_index":6421,"title":{},"name":{},"text":{"27":{}},"component":{}}],["node",{"_index":974,"title":{"26-1":{},"26-6":{}},"name":{},"text":{"4":{},"16":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["node.j",{"_index":2150,"title":{},"name":{},"text":{"15":{}},"component":{}}],["node_a_slot",{"_index":5233,"title":{},"name":{},"text":{"24":{}},"component":{}}],["node’",{"_index":6640,"title":{},"name":{},"text":{"28":{}},"component":{}}],["nomin",{"_index":5087,"title":{},"name":{},"text":{"24":{}},"component":{}}],["non",{"_index":43,"title":{"28-55":{}},"name":{},"text":{"1":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["nondefault",{"_index":3676,"title":{},"name":{},"text":{"16":{}},"component":{}}],["none",{"_index":2764,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["none:data",{"_index":6359,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nonedition",{"_index":3881,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nonempti",{"_index":3581,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nonexist",{"_index":6897,"title":{},"name":{},"text":{"28":{}},"component":{}}],["nonfunct",{"_index":5145,"title":{},"name":{},"text":{"24":{}},"component":{}}],["nonsens",{"_index":2597,"title":{},"name":{},"text":{"16":{}},"component":{}}],["nonsequenti",{"_index":6707,"title":{},"name":{},"text":{"28":{}},"component":{}}],["nonzero",{"_index":2613,"title":{},"name":{},"text":{"16":{}},"component":{}}],["normal",{"_index":248,"title":{},"name":{},"text":{"2":{},"7":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["normal_1",{"_index":1192,"title":{},"name":{},"text":{"7":{}},"component":{}}],["normal_1\"(c1",{"_index":1188,"title":{},"name":{},"text":{"7":{}},"component":{}}],["normal_2",{"_index":1194,"title":{},"name":{},"text":{"7":{}},"component":{}}],["normal_2\"(c1",{"_index":1190,"title":{},"name":{},"text":{"7":{}},"component":{}}],["normal_3",{"_index":1195,"title":{},"name":{},"text":{"7":{}},"component":{}}],["normal_3\"(c1",{"_index":1191,"title":{},"name":{},"text":{"7":{}},"component":{}}],["nosuperus",{"_index":2772,"title":{},"name":{},"text":{"16":{}},"component":{}}],["notat",{"_index":3412,"title":{"27-131":{},"27-132":{},"27-133":{}},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["note",{"_index":82,"title":{"16-36":{},"16-46":{},"16-66":{},"16-72":{},"16-79":{},"16-86":{},"16-92":{},"16-98":{},"16-113":{},"16-120":{},"16-127":{},"16-137":{},"16-156":{},"16-162":{},"16-180":{},"16-185":{},"16-194":{},"27-24":{},"27-31":{},"27-38":{},"27-45":{},"27-52":{},"27-59":{},"27-67":{},"27-74":{},"27-81":{},"27-87":{},"27-92":{},"27-246":{},"28-25":{},"28-54":{}},"name":{},"text":{"1":{},"2":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["notewhen",{"_index":3285,"title":{},"name":{},"text":{"16":{}},"component":{}}],["noteworthi",{"_index":5722,"title":{},"name":{},"text":{"27":{}},"component":{}}],["noth",{"_index":2868,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["notic",{"_index":1027,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["notice:1",{"_index":2192,"title":{},"name":{},"text":{"15":{}},"component":{}}],["notice:th",{"_index":2184,"title":{},"name":{},"text":{"15":{}},"component":{}}],["notif",{"_index":4474,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notifi",{"_index":4392,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["notifybuff",{"_index":4391,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notifyqueu",{"_index":4393,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notifyqueuetail",{"_index":4394,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notifyslru",{"_index":4395,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notion",{"_index":5824,"title":{},"name":{},"text":{"27":{}},"component":{}}],["notnul",{"_index":5944,"title":{},"name":{},"text":{"27":{}},"component":{}}],["now",{"_index":1000,"title":{},"name":{},"text":{"4":{},"14":{},"15":{},"16":{},"22":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["nowait",{"_index":3278,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ns",{"_index":3757,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["nst",{"_index":6231,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nsw",{"_index":965,"title":{},"name":{},"text":{"4":{}},"component":{}}],["nt_header",{"_index":3562,"title":{},"name":{},"text":{"16":{}},"component":{}}],["null",{"_index":1094,"title":{"27-206":{}},"name":{},"text":{"6":{},"9":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["null.without",{"_index":3007,"title":{},"name":{},"text":{"16":{}},"component":{}}],["null::varchar2",{"_index":1585,"title":{},"name":{},"text":{"13":{}},"component":{}}],["null_func",{"_index":6367,"title":{},"name":{},"text":{"27":{}},"component":{}}],["null_str",{"_index":6554,"title":{},"name":{},"text":{"28":{}},"component":{}}],["nullabl",{"_index":3896,"title":{},"name":{},"text":{"21":{},"27":{}},"component":{}}],["num",{"_index":1011,"title":{},"name":{},"text":{"4":{},"9":{},"16":{},"18":{},"27":{},"28":{}},"component":{}}],["num_dead_tupl",{"_index":4774,"title":{},"name":{},"text":{"23":{}},"component":{}}],["numbackend",{"_index":4602,"title":{},"name":{},"text":{"23":{}},"component":{}}],["number",{"_index":527,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"13":{},"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["number(20",{"_index":1012,"title":{},"name":{},"text":{"4":{}},"component":{}}],["number/varchar2",{"_index":1545,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numer",{"_index":1660,"title":{"27-109":{}},"name":{},"text":{"13":{},"16":{},"27":{},"28":{}},"component":{}}],["numeric`seri",{"_index":4560,"title":{},"name":{},"text":{"23":{}},"component":{}}],["numeric`tot",{"_index":4590,"title":{},"name":{},"text":{"23":{}},"component":{}}],["numreic",{"_index":6275,"title":{},"name":{},"text":{"27":{}},"component":{}}],["numtodsinterv",{"_index":1448,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numtodsinterval(100",{"_index":1724,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numtodsinterval(100.00",{"_index":1721,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numtoyminterv",{"_index":1449,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numtoyminterval(1,'month",{"_index":1732,"title":{},"name":{},"text":{"13":{}},"component":{}}],["numtoyminterval(1.00,'year",{"_index":1728,"title":{},"name":{},"text":{"13":{}},"component":{}}],["nvme",{"_index":3906,"title":{},"name":{},"text":{"22":{}},"component":{}}],["ny",{"_index":6832,"title":{},"name":{},"text":{"28":{}},"component":{}}],["o",{"_index":1810,"title":{},"name":{},"text":{"14":{},"16":{},"27":{},"28":{}},"component":{}}],["o&m",{"_index":6480,"title":{},"name":{},"text":{"28":{}},"component":{}}],["o).thi",{"_index":2455,"title":{},"name":{},"text":{"16":{}},"component":{}}],["o2o",{"_index":1366,"title":{},"name":{},"text":{"11":{}},"component":{}}],["o`.thi",{"_index":3289,"title":{},"name":{},"text":{"16":{}},"component":{}}],["obfusc",{"_index":4534,"title":{},"name":{},"text":{"23":{}},"component":{}}],["object",{"_index":214,"title":{"2-20":{},"7-1":{},"8-1":{},"9-1":{},"10-1":{},"12-1":{},"14-1":{},"18-1":{},"19-1":{},"20-1":{},"21-1":{},"28-8":{}},"name":{},"text":{"2":{},"10":{},"11":{},"16":{},"18":{},"19":{},"20":{},"23":{},"27":{},"28":{}},"component":{}}],["object_typ",{"_index":446,"title":{},"name":{},"text":{"2":{}},"component":{}}],["objects.)sinc",{"_index":2514,"title":{},"name":{},"text":{"16":{}},"component":{}}],["observ",{"_index":4813,"title":{},"name":{},"text":{"23":{}},"component":{}}],["obsolet",{"_index":2761,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["obtain",{"_index":506,"title":{},"name":{},"text":{"2":{},"8":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["obvious",{"_index":5044,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["occas",{"_index":2042,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["occasion",{"_index":3482,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["occupi",{"_index":1113,"title":{},"name":{},"text":{"6":{},"24":{},"27":{},"28":{}},"component":{}}],["occur",{"_index":1531,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["occurr",{"_index":1537,"title":{},"name":{},"text":{"13":{},"27":{},"28":{}},"component":{}}],["octal",{"_index":5879,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["od",{"_index":6617,"title":{},"name":{},"text":{"28":{}},"component":{}}],["offer",{"_index":788,"title":{},"name":{},"text":{"3":{},"4":{},"24":{},"27":{}},"component":{}}],["offic",{"_index":5173,"title":{},"name":{},"text":{"24":{}},"component":{}}],["office'",{"_index":5177,"title":{},"name":{},"text":{"24":{}},"component":{}}],["offici",{"_index":134,"title":{},"name":{},"text":{"1":{},"3":{},"15":{},"17":{},"28":{}},"component":{}}],["offlin",{"_index":3679,"title":{},"name":{},"text":{"16":{}},"component":{}}],["offload",{"_index":5153,"title":{},"name":{},"text":{"24":{}},"component":{}}],["offset",{"_index":1513,"title":{},"name":{},"text":{"13":{},"16":{},"23":{}},"component":{}}],["offset.a",{"_index":3694,"title":{},"name":{},"text":{"16":{}},"component":{}}],["offset=mxoff",{"_index":3693,"title":{},"name":{},"text":{"16":{}},"component":{}}],["oid",{"_index":2641,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["oid.if",{"_index":2889,"title":{},"name":{},"text":{"16":{}},"component":{}}],["oid.ther",{"_index":3689,"title":{},"name":{},"text":{"16":{}},"component":{}}],["oid2nam",{"_index":4899,"title":{},"name":{},"text":{"23":{}},"component":{}}],["oid=oid",{"_index":3688,"title":{},"name":{},"text":{"16":{}},"component":{}}],["oid`if",{"_index":4782,"title":{},"name":{},"text":{"23":{}},"component":{}}],["oid`oid",{"_index":4143,"title":{},"name":{},"text":{"23":{}},"component":{}}],["oid`return",{"_index":4728,"title":{},"name":{},"text":{"23":{}},"component":{}}],["oidgen",{"_index":4396,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ok",{"_index":6878,"title":{},"name":{},"text":{"28":{}},"component":{}}],["old",{"_index":2654,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["olddir",{"_index":2912,"title":{},"name":{},"text":{"16":{}},"component":{}}],["olddir=newdir",{"_index":2909,"title":{},"name":{},"text":{"16":{}},"component":{}}],["older",{"_index":3034,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["oldest",{"_index":3658,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["oldsnapshottimemap",{"_index":4397,"title":{},"name":{},"text":{"23":{}},"component":{}}],["omit",{"_index":1405,"title":{},"name":{},"text":{"12":{},"16":{},"21":{},"22":{},"25":{},"27":{}},"component":{}}],["on",{"_index":230,"title":{},"name":{},"text":{"2":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["on/off",{"_index":1091,"title":{},"name":{},"text":{"6":{}},"component":{}}],["onc",{"_index":309,"title":{},"name":{},"text":{"2":{},"4":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["once.a",{"_index":2820,"title":{},"name":{},"text":{"16":{}},"component":{}}],["once.pattern",{"_index":2813,"title":{},"name":{},"text":{"16":{}},"component":{}}],["once.thi",{"_index":2811,"title":{},"name":{},"text":{"16":{}},"component":{}}],["once.to",{"_index":2822,"title":{},"name":{},"text":{"16":{}},"component":{}}],["one.png",{"_index":2186,"title":{},"name":{},"text":{"15":{}},"component":{}}],["onek",{"_index":6704,"title":{},"name":{},"text":{"28":{}},"component":{}}],["onek_unique2",{"_index":6715,"title":{},"name":{},"text":{"28":{}},"component":{}}],["onenewnodethreenewnod",{"_index":3848,"title":{},"name":{},"text":{"18":{}},"component":{}}],["onlin",{"_index":2655,"title":{},"name":{},"text":{"16":{},"21":{},"28":{}},"component":{}}],["onto",{"_index":5302,"title":{},"name":{},"text":{"24":{}},"component":{}}],["onward",{"_index":1547,"title":{},"name":{},"text":{"13":{}},"component":{}}],["oo",{"_index":5876,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ooo",{"_index":5877,"title":{},"name":{},"text":{"27":{}},"component":{}}],["opeartor",{"_index":1232,"title":{},"name":{},"text":{"9":{}},"component":{}}],["open",{"_index":1297,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["open_datasync",{"_index":4599,"title":{},"name":{},"text":{"23":{}},"component":{}}],["open_sync",{"_index":4600,"title":{},"name":{},"text":{"23":{}},"component":{}}],["openssl",{"_index":5397,"title":{},"name":{},"text":{"25":{}},"component":{}}],["oper",{"_index":249,"title":{"28":{},"24-22":{},"27-111":{},"27-114":{},"27-120":{},"27-153":{}},"name":{},"text":{"2":{},"4":{},"11":{},"15":{},"16":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["operand",{"_index":5842,"title":{},"name":{},"text":{"27":{}},"component":{}}],["operation.in",{"_index":3644,"title":{},"name":{},"text":{"16":{}},"component":{}}],["operator(pg_catalog",{"_index":5949,"title":{},"name":{},"text":{"27":{}},"component":{}}],["operator(schema.operatornam",{"_index":5972,"title":{},"name":{},"text":{"27":{}},"component":{}}],["operator/el",{"_index":5934,"title":{},"name":{},"text":{"27":{}},"component":{}}],["opportun",{"_index":6089,"title":{},"name":{},"text":{"27":{}},"component":{}}],["opposit",{"_index":3642,"title":{},"name":{},"text":{"16":{}},"component":{}}],["opt/oracle/product/19c/dbhome_1",{"_index":464,"title":{},"name":{},"text":{"2":{}},"component":{}}],["opt/t",{"_index":3039,"title":{},"name":{},"text":{"16":{}},"component":{}}],["opt/ts=$(pwd)/backup/t",{"_index":3042,"title":{},"name":{},"text":{"16":{}},"component":{}}],["optim",{"_index":2572,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["option",{"_index":188,"title":{"2-9":{},"16-5":{},"16-11":{},"16-17":{},"16-23":{},"16-29":{},"16-35":{},"16-40":{},"16-44":{},"16-51":{},"16-52":{},"16-53":{},"16-54":{},"16-59":{},"16-63":{},"16-70":{},"16-76":{},"16-83":{},"16-90":{},"16-95":{},"16-102":{},"16-106":{},"16-110":{},"16-117":{},"16-125":{},"16-130":{},"16-135":{},"16-143":{},"16-144":{},"16-154":{},"16-160":{},"16-166":{},"16-170":{},"16-178":{},"16-183":{},"16-188":{},"16-190":{},"16-191":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["option.if",{"_index":2453,"title":{},"name":{},"text":{"16":{}},"component":{}}],["option.thi",{"_index":2862,"title":{},"name":{},"text":{"16":{}},"component":{}}],["option.us",{"_index":2861,"title":{},"name":{},"text":{"16":{}},"component":{}}],["option=name[=valu",{"_index":3486,"title":{},"name":{},"text":{"16":{}},"component":{}}],["options.obvi",{"_index":2554,"title":{},"name":{},"text":{"16":{}},"component":{}}],["options.th",{"_index":3019,"title":{},"name":{},"text":{"16":{}},"component":{}}],["options=initdb",{"_index":3627,"title":{},"name":{},"text":{"16":{}},"component":{}}],["options=opt",{"_index":3624,"title":{},"name":{},"text":{"16":{}},"component":{}}],["or`echo",{"_index":3588,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ora2pg",{"_index":190,"title":{"2-10":{},"2-12":{}},"name":{},"text":{"2":{}},"component":{}}],["ora2pg.conf",{"_index":306,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ora2pg/migr",{"_index":768,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ora2pg/migration//test_project",{"_index":772,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ora_procedur",{"_index":1029,"title":{},"name":{},"text":{"4":{}},"component":{}}],["oracl",{"_index":175,"title":{"9":{},"10":{},"12":{},"14":{},"19":{},"2-3":{},"2-8":{},"4-7":{},"11-9":{},"21-7":{},"27-134":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"16":{},"18":{},"19":{},"20":{},"21":{},"23":{},"27":{},"28":{},"29":{}},"component":{}}],["oracle.d",{"_index":6210,"title":{},"name":{},"text":{"27":{}},"component":{}}],["oracle.sessiontimezon",{"_index":6185,"title":{},"name":{},"text":{"27":{}},"component":{}}],["oracle.sys_extract_utc(nul",{"_index":6183,"title":{},"name":{},"text":{"27":{}},"component":{}}],["oracle.systimestamp",{"_index":6175,"title":{},"name":{},"text":{"27":{}},"component":{}}],["oracle_dsn",{"_index":465,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle_fdw",{"_index":534,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle_hom",{"_index":463,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle_home=/usr/lib/oracle/18.3/client64",{"_index":397,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle_pwd",{"_index":468,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle_us",{"_index":467,"title":{},"name":{},"text":{"2":{}},"component":{}}],["oracle’",{"_index":1165,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"11":{},"18":{},"19":{},"21":{},"27":{}},"component":{}}],["orahost",{"_index":1802,"title":{},"name":{},"text":{"14":{}},"component":{}}],["oraport",{"_index":1801,"title":{},"name":{},"text":{"14":{}},"component":{}}],["oraport=5555",{"_index":1808,"title":{},"name":{},"text":{"14":{}},"component":{}}],["orcl",{"_index":209,"title":{"2-17":{}},"name":{},"text":{"2":{}},"component":{}}],["ordbm",{"_index":1380,"title":{},"name":{},"text":{"11":{}},"component":{}}],["order",{"_index":141,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"14":{},"15":{},"16":{},"19":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["order_by_claus",{"_index":5981,"title":{},"name":{},"text":{"27":{}},"component":{}}],["order_by_clause'",{"_index":5996,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ordinari",{"_index":4085,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["ordinarili",{"_index":5834,"title":{},"name":{},"text":{"27":{}},"component":{}}],["origin",{"_index":258,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["origin/ivory_rel_4_st",{"_index":5401,"title":{},"name":{},"text":{"25":{}},"component":{}}],["os",{"_index":2051,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["other",{"_index":544,"title":{},"name":{},"text":{"2":{},"15":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["otherwis",{"_index":2552,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["out",{"_index":1156,"title":{},"name":{},"text":{"6":{},"12":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["out.dir",{"_index":6535,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outcom",{"_index":2028,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["outdat",{"_index":2088,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["outer",{"_index":4318,"title":{},"name":{},"text":{"23":{},"27":{},"28":{}},"component":{}}],["outlin",{"_index":6501,"title":{},"name":{},"text":{"28":{}},"component":{}}],["output",{"_index":476,"title":{"21-6":{},"28-24":{}},"name":{},"text":{"2":{},"13":{},"16":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["output.th",{"_index":3473,"title":{},"name":{},"text":{"16":{}},"component":{}}],["output_express",{"_index":6140,"title":{},"name":{},"text":{"27":{}},"component":{}}],["output_nam",{"_index":6141,"title":{},"name":{},"text":{"27":{}},"component":{}}],["outputfil",{"_index":6488,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outright",{"_index":6890,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outsid",{"_index":577,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["outstand",{"_index":4735,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["over",{"_index":2470,"title":{},"name":{},"text":{"16":{},"21":{},"24":{},"27":{},"28":{}},"component":{}}],["overal",{"_index":1949,"title":{},"name":{},"text":{"15":{},"17":{},"23":{},"24":{},"27":{}},"component":{}}],["overcom",{"_index":5230,"title":{},"name":{},"text":{"24":{}},"component":{}}],["overflow",{"_index":5130,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["overhead",{"_index":984,"title":{"16-173":{}},"name":{},"text":{"4":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["overlap",{"_index":3701,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["overrid",{"_index":2709,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["overridden",{"_index":2452,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["overview",{"_index":2,"title":{"1-1":{},"2-1":{},"3-1":{},"4-1":{},"11-2":{},"24-40":{},"24-42":{},"27-1":{},"27-2":{},"27-158":{},"27-244":{},"27-251":{},"28-2":{},"28-10":{}},"name":{},"text":{},"component":{}}],["overwrit",{"_index":5265,"title":{},"name":{},"text":{"24":{}},"component":{}}],["overwritten",{"_index":5135,"title":{},"name":{},"text":{"24":{}},"component":{}}],["own",{"_index":2583,"title":{},"name":{},"text":{"16":{},"20":{},"24":{},"28":{}},"component":{}}],["owner",{"_index":448,"title":{},"name":{},"text":{"2":{},"16":{},"20":{},"26":{},"27":{},"28":{}},"component":{}}],["owner=`own",{"_index":2753,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ownership",{"_index":2587,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["p",{"_index":767,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"16":{},"22":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["p100d",{"_index":6321,"title":{},"name":{},"text":{"27":{}},"component":{}}],["p100dt20",{"_index":6324,"title":{},"name":{},"text":{"27":{}},"component":{}}],["p100dt20h",{"_index":6322,"title":{},"name":{},"text":{"27":{}},"component":{}}],["p1y2m2d",{"_index":6316,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pace",{"_index":1934,"title":{},"name":{},"text":{"15":{}},"component":{}}],["packag",{"_index":120,"title":{"20":{},"20-3":{},"20-4":{},"20-5":{},"20-6":{},"20-7":{},"20-8":{},"20-10":{},"20-11":{},"20-12":{},"20-13":{},"20-14":{},"20-15":{},"27-260":{},"27-261":{},"27-262":{}},"name":{},"text":{"1":{},"2":{},"11":{},"15":{},"16":{},"20":{},"25":{},"27":{}},"component":{}}],["package.th",{"_index":3865,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package_nam",{"_index":6386,"title":{},"name":{},"text":{"27":{}},"component":{}}],["package_sh.sql",{"_index":677,"title":{},"name":{},"text":{"2":{}},"component":{}}],["packet",{"_index":3021,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pad",{"_index":6581,"title":{},"name":{},"text":{"28":{}},"component":{}}],["page",{"_index":378,"title":{"15-23":{},"15-44":{},"15-55":{},"15-57":{}},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["pages",{"_index":442,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pair",{"_index":440,"title":{},"name":{},"text":{"2":{},"15":{},"27":{}},"component":{}}],["panic",{"_index":4925,"title":{},"name":{},"text":{"23":{}},"component":{}}],["paragraph",{"_index":2091,"title":{},"name":{},"text":{"15":{}},"component":{}}],["parallel",{"_index":2460,"title":{"27-10":{},"27-11":{},"27-12":{},"27-13":{},"27-14":{},"27-15":{},"27-16":{},"27-17":{},"27-18":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["parallel_setup_cost",{"_index":5792,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parallel_tuple_cost",{"_index":5793,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parallelappend",{"_index":4398,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parallelbitmapscan",{"_index":4336,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parallelcreateindexscan",{"_index":4337,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parallelfinish",{"_index":4338,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parallelhashjoin",{"_index":4399,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parallelquerydsa",{"_index":4400,"title":{},"name":{},"text":{"23":{}},"component":{}}],["paramet",{"_index":299,"title":{"24-43":{},"27-23":{},"27-30":{},"27-37":{},"27-44":{},"27-51":{},"27-58":{},"27-66":{},"27-73":{},"27-80":{},"27-98":{},"27-117":{},"27-135":{},"27-139":{},"27-143":{},"27-147":{},"27-155":{},"27-162":{},"27-167":{},"27-174":{},"27-209":{},"27-213":{},"27-217":{},"27-221":{},"27-225":{},"27-229":{},"27-233":{},"27-237":{},"27-241":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["parameter_declar",{"_index":6395,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parameter_list",{"_index":6384,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parameter_nam",{"_index":6413,"title":{},"name":{},"text":{"27":{}},"component":{}}],["parametersdescript",{"_index":5614,"title":{"27-181":{},"27-185":{},"27-189":{},"27-196":{},"27-200":{},"27-204":{}},"name":{},"text":{},"component":{}}],["parent",{"_index":2582,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["parent/child",{"_index":2854,"title":{},"name":{},"text":{"16":{}},"component":{}}],["parenthes",{"_index":5765,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["parenthesi",{"_index":6040,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pari",{"_index":5175,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pariti",{"_index":6590,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pars",{"_index":2783,"title":{},"name":{},"text":{"16":{},"18":{},"23":{},"27":{},"28":{}},"component":{}}],["parsabl",{"_index":3586,"title":{},"name":{},"text":{"16":{}},"component":{}}],["parser",{"_index":1038,"title":{"5-3":{}},"name":{},"text":{"5":{},"27":{}},"component":{}}],["part",{"_index":752,"title":{},"name":{},"text":{"2":{},"10":{},"13":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["parti",{"_index":1344,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["partial",{"_index":2629,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["particip",{"_index":1828,"title":{"15-13":{}},"name":{},"text":{"15":{},"17":{},"23":{},"27":{}},"component":{}}],["particular",{"_index":2579,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["particularli",{"_index":4134,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["partit",{"_index":78,"title":{"2-23":{}},"name":{},"text":{"1":{},"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["partition(",{"_index":3335,"title":{},"name":{},"text":{"16":{}},"component":{}}],["partition_sh.sql",{"_index":680,"title":{},"name":{},"text":{"2":{}},"component":{}}],["partitions=num",{"_index":3092,"title":{},"name":{},"text":{"16":{}},"component":{}}],["partitions_don",{"_index":4765,"title":{},"name":{},"text":{"23":{}},"component":{}}],["partitions_tot",{"_index":4763,"title":{},"name":{},"text":{"23":{}},"component":{}}],["partway",{"_index":3477,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pasha",{"_index":3548,"title":{},"name":{},"text":{"16":{}},"component":{}}],["paso",{"_index":6828,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pass",{"_index":1485,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["password",{"_index":719,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["password=foopass",{"_index":5199,"title":{},"name":{},"text":{"24":{}},"component":{}}],["past",{"_index":3147,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["patch",{"_index":143,"title":{"15-19":{},"15-20":{},"17-6":{},"17-7":{}},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"17":{}},"component":{}}],["path",{"_index":493,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"15":{},"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["path/to/arch",{"_index":5202,"title":{},"name":{},"text":{"24":{}},"component":{}}],["path/to/archive/%f",{"_index":5201,"title":{},"name":{},"text":{"24":{}},"component":{}}],["path=$protobuf_home/bin:$path",{"_index":850,"title":{},"name":{},"text":{"3":{}},"component":{}}],["path=$protobuf_home/bin:$protobufc_home/bin:$path",{"_index":858,"title":{},"name":{},"text":{"3":{}},"component":{}}],["path=/usr/local/ivorysql/ivorysql",{"_index":3924,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["path=path",{"_index":3571,"title":{},"name":{},"text":{"16":{}},"component":{}}],["patient",{"_index":2037,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["pattern",{"_index":1183,"title":{},"name":{},"text":{"7":{},"16":{},"24":{},"27":{}},"component":{}}],["patterns.when",{"_index":3288,"title":{},"name":{},"text":{"16":{}},"component":{}}],["paus",{"_index":5310,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pay",{"_index":1896,"title":{},"name":{},"text":{"15":{},"27":{},"28":{}},"component":{}}],["pdf",{"_index":6903,"title":{},"name":{},"text":{"29":{}},"component":{}}],["pdt",{"_index":6233,"title":{},"name":{},"text":{"27":{}},"component":{}}],["peek",{"_index":2545,"title":{},"name":{},"text":{"16":{}},"component":{}}],["peer",{"_index":2019,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["pend",{"_index":2549,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["peopl",{"_index":1224,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["per",{"_index":2485,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["percentil",{"_index":5995,"title":{},"name":{},"text":{"27":{}},"component":{}}],["percentile_cont",{"_index":6001,"title":{},"name":{},"text":{"27":{}},"component":{}}],["percentile_cont(0.5",{"_index":5998,"title":{},"name":{},"text":{"27":{}},"component":{}}],["perfectli",{"_index":6549,"title":{},"name":{},"text":{"28":{}},"component":{}}],["perform",{"_index":276,"title":{"24-35":{},"28-32":{}},"name":{},"text":{"2":{},"4":{},"11":{},"13":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["performance/recal",{"_index":954,"title":{},"name":{},"text":{"4":{}},"component":{}}],["performance，scalability，reliability，and",{"_index":5711,"title":{},"name":{},"text":{"27":{}},"component":{}}],["perhap",{"_index":1159,"title":{},"name":{},"text":{"6":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["period",{"_index":2104,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["perl",{"_index":180,"title":{"2-6":{}},"name":{},"text":{"2":{},"15":{},"17":{},"25":{}},"component":{}}],["perl5lib",{"_index":431,"title":{},"name":{},"text":{"2":{}},"component":{}}],["perl5lib=/usr/local/bin",{"_index":432,"title":{},"name":{},"text":{"2":{}},"component":{}}],["perldoc",{"_index":371,"title":{},"name":{},"text":{"2":{}},"component":{}}],["perman",{"_index":2779,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["permiss",{"_index":748,"title":{},"name":{},"text":{"2":{},"12":{},"16":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["permit",{"_index":2472,"title":{},"name":{},"text":{"16":{}},"component":{}}],["persessiondsa",{"_index":4401,"title":{},"name":{},"text":{"23":{}},"component":{}}],["persessionrecordtyp",{"_index":4402,"title":{},"name":{},"text":{"23":{}},"component":{}}],["persessionrecordtypmod",{"_index":4404,"title":{},"name":{},"text":{"23":{}},"component":{}}],["persist",{"_index":1274,"title":{},"name":{},"text":{"10":{},"24":{},"27":{}},"component":{}}],["person",{"_index":1967,"title":{},"name":{},"text":{"15":{}},"component":{}}],["person’",{"_index":6512,"title":{},"name":{},"text":{"28":{}},"component":{}}],["perspect",{"_index":1324,"title":{},"name":{},"text":{"11":{},"16":{},"24":{}},"component":{}}],["pervers",{"_index":6584,"title":{},"name":{},"text":{"28":{}},"component":{}}],["perxactpredicatelist",{"_index":4405,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg",{"_index":187,"title":{"2-9":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"11":{},"14":{},"15":{},"27":{}},"component":{}}],["pg'.when",{"_index":1303,"title":{},"name":{},"text":{"11":{}},"component":{}}],["pg/oracl",{"_index":1083,"title":{},"name":{},"text":{"6":{}},"component":{}}],["pg_amcheck",{"_index":2254,"title":{"16-38":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_archivecleanup",{"_index":2355,"title":{"16-128":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["pg_authid",{"_index":3430,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_available_extens",{"_index":876,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pg_backend_pid",{"_index":4688,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_backup_start",{"_index":4792,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_backup_stop",{"_index":4793,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_basebackup",{"_index":2260,"title":{"16-42":{}},"name":{},"text":{"16":{},"23":{},"26":{}},"component":{}}],["pg_basebackup`",{"_index":2477,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_cancel_backend",{"_index":5317,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_catalog.at",{"_index":2876,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_catalog.english",{"_index":735,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pg_catalog.int4",{"_index":3898,"title":{},"name":{},"text":{"21":{}},"component":{}}],["pg_catalog.pg_ls_dir(text",{"_index":3723,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_catalog.pg_read_binary_file(text",{"_index":3726,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_catalog.pg_stat_file(text",{"_index":3725,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_checksum",{"_index":2356,"title":{"16-133":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_class",{"_index":4749,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["pg_class%rowtyp",{"_index":6371,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pg_class.relminmxid",{"_index":5082,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_class.reltupl",{"_index":5099,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_color",{"_index":2737,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_commit_t",{"_index":3662,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["pg_config",{"_index":987,"title":{"16-57":{}},"name":{},"text":{"4":{},"16":{}},"component":{}}],["pg_config=/usr/local/ivorysql/ivorysql",{"_index":988,"title":{},"name":{},"text":{"4":{}},"component":{}}],["pg_control",{"_index":2616,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["pg_controldata",{"_index":2361,"title":{"16-138":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_create_physical_replication_slot('node_a_slot",{"_index":5232,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_ctl",{"_index":1809,"title":{"16-141":{}},"name":{},"text":{"14":{},"16":{},"22":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["pg_current_wal_insert_lsn",{"_index":3744,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_current_wal_lsn",{"_index":5220,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_databas",{"_index":5061,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_database.datfrozenxid",{"_index":4360,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_database.datminmxid",{"_index":4361,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_dump",{"_index":2284,"title":{"16-61":{},"28-54":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_dump'",{"_index":3345,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_dump.`d",{"_index":3496,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_dump/pg_dumpal",{"_index":6484,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_dumpal",{"_index":2292,"title":{"16-68":{},"28-3":{},"28-18":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_dumpall’",{"_index":3431,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_dumpfor",{"_index":6520,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_dump’",{"_index":3525,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_dynshmem",{"_index":3733,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_execute_server_program",{"_index":6563,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_export_snapshot",{"_index":5825,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pg_extension_config_dump",{"_index":3245,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_filenode.map",{"_index":4411,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_hba",{"_index":5438,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pg_hba.conf",{"_index":2471,"title":{},"name":{},"text":{"16":{},"24":{},"26":{},"28":{}},"component":{}}],["pg_index",{"_index":4908,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_internal.init",{"_index":3741,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["pg_isreadi",{"_index":2299,"title":{"16-74":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_last_wal_receive_lsn",{"_index":5221,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_last_wal_replay_lsn",{"_index":5223,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_lock",{"_index":4064,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_logical_slot_peek_chang",{"_index":2550,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_lsn`first",{"_index":4516,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_lsn`last",{"_index":4467,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_mcv_list_items(stxdmcv",{"_index":6812,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_multixact",{"_index":5078,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_multixact/memb",{"_index":3695,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_multixact/offset",{"_index":3684,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_notifi",{"_index":3734,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_prepared_xact",{"_index":5319,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["pg_proc",{"_index":6030,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pg_proc%rowtyp",{"_index":6374,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pg_promot",{"_index":5189,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_read_all_stat",{"_index":4109,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_read_server_fil",{"_index":6562,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_receivew",{"_index":2307,"title":{"16-81":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["pg_receivewal.unlik",{"_index":2528,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_recvlog",{"_index":2315,"title":{"16-88":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["pg_relation_filepath",{"_index":4903,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_relation_filepath(oid",{"_index":4901,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_replication_slot",{"_index":5231,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_replslot",{"_index":3735,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_resetw",{"_index":2372,"title":{"16-152":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_restor",{"_index":2321,"title":{"16-93":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_restore’",{"_index":3527,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_rewind",{"_index":107,"title":{"16-157":{}},"name":{},"text":{"1":{},"16":{},"24":{}},"component":{}}],["pg_rewind(1",{"_index":2650,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_rewind(2",{"_index":2671,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_role",{"_index":3429,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_serial",{"_index":3736,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_sleep",{"_index":4448,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_snapshot",{"_index":3737,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_stat",{"_index":4087,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_act",{"_index":3975,"title":{"23-6":{}},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_stat_activity.statu",{"_index":4820,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_all_index",{"_index":4004,"title":{"23-21":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_all_indexes.idx_tup_fetch",{"_index":4667,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_all_indexes.idx_tup_read",{"_index":4664,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_all_t",{"_index":4002,"title":{"23-20":{}},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_stat_all_tables.idx_tup_fetch",{"_index":4666,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_archiv",{"_index":3993,"title":{"23-15":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_bgwrit",{"_index":3995,"title":{"23-16":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_clear_snapshot",{"_index":4103,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_databas",{"_index":3016,"title":{"23-18":{}},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["pg_stat_database_conflict",{"_index":4000,"title":{"23-19":{}},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_stat_get_act",{"_index":4690,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_act",{"_index":4721,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_activity(s.backendid",{"_index":4719,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_activity_start",{"_index":4723,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_client_addr",{"_index":4724,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_client_port",{"_index":4726,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_dbid",{"_index":4727,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_idset",{"_index":4717,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_pid",{"_index":4729,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_pid(s.backendid",{"_index":4718,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_start",{"_index":4730,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_userid",{"_index":4731,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_wait_ev",{"_index":4733,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_wait_event_typ",{"_index":4732,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_backend_xact_start",{"_index":4734,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_get_snapshot_timestamp",{"_index":4693,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_gssapi",{"_index":3991,"title":{"23-14":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_progress_analyz",{"_index":4115,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_progress_basebackup",{"_index":3006,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["pg_stat_progress_clust",{"_index":4119,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_progress_copi",{"_index":4120,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["pg_stat_progress_create_index",{"_index":4117,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_progress_vacuum",{"_index":4118,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_recovery_prefetch",{"_index":3983,"title":{"23-10":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_repl",{"_index":3977,"title":{"23-7":{}},"name":{},"text":{"23":{},"24":{},"26":{}},"component":{}}],["pg_stat_replication_slot",{"_index":3979,"title":{"23-8":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset",{"_index":4696,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_replication_slot",{"_index":4712,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_shar",{"_index":4538,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_single_function_count",{"_index":4703,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_single_table_count",{"_index":4702,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_slru",{"_index":4704,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_reset_subscription_stat",{"_index":4714,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_slru",{"_index":4014,"title":{"23-26":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_ssl",{"_index":3989,"title":{"23-13":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_stat",{"_index":5325,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_stat_subscript",{"_index":3985,"title":{"23-11":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_subscription_stat",{"_index":3987,"title":{"23-12":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_sys_index",{"_index":4125,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_sys_t",{"_index":4122,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_tmp",{"_index":3738,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_stat_user_funct",{"_index":4012,"title":{"23-25":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_user_index",{"_index":4126,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_user_t",{"_index":4123,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_wal",{"_index":3997,"title":{"23-17":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_wal_receiv",{"_index":3981,"title":{"23-9":{}},"name":{},"text":{"23":{},"24":{}},"component":{}}],["pg_stat_xact_all_t",{"_index":4105,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_xact_sys_t",{"_index":4106,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_xact_user_funct",{"_index":4108,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_stat_xact_user_t",{"_index":4107,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio",{"_index":5333,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_statio_",{"_index":4135,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_all_index",{"_index":4008,"title":{"23-23":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_all_sequ",{"_index":4010,"title":{"23-24":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_all_t",{"_index":4006,"title":{"23-22":{}},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_sys_index",{"_index":4129,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_sys_sequ",{"_index":4131,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_sys_t",{"_index":4127,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_user_index",{"_index":4130,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_user_sequ",{"_index":4132,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statio_user_t",{"_index":4128,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_statistic_ext",{"_index":6804,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_statistic_ext_data",{"_index":6805,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pg_subtran",{"_index":3739,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_switch_wal",{"_index":5324,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_terminate_backend",{"_index":5318,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pg_test_fsync",{"_index":2385,"title":{"16-164":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_test_fsync.out",{"_index":3746,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_test_tim",{"_index":2390,"title":{"16-168":{}},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_toast_16806",{"_index":4910,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_toast_16806_index",{"_index":4911,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_trace.h",{"_index":4873,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_trgm",{"_index":557,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pg_upgrad",{"_index":115,"title":{"16-176":{},"28-4":{}},"name":{},"text":{"1":{},"16":{},"28":{}},"component":{}}],["pg_vector",{"_index":990,"title":{},"name":{},"text":{"4":{}},"component":{}}],["pg_verifybackup",{"_index":2329,"title":{"16-100":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_wal",{"_index":2665,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["pg_wal.tar",{"_index":2936,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pg_waldump",{"_index":2408,"title":{"16-181":{}},"name":{},"text":{"16":{}},"component":{}}],["pg_write_server_fil",{"_index":2903,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["pg_xact",{"_index":3706,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["pg_xact_statu",{"_index":4443,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pg_xlog.tar).thi",{"_index":2937,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbadger",{"_index":5137,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pgbench",{"_index":2267,"title":{"16-48":{}},"name":{},"text":{"16":{}},"component":{}}],["pgbench_account",{"_index":3044,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["pgbench_branch",{"_index":3045,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench_histori",{"_index":3046,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench_log",{"_index":3165,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench_random_se",{"_index":3175,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench_tel",{"_index":3047,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench_tellers.g",{"_index":3064,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgbench’",{"_index":3155,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgc",{"_index":2450,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgclientencod",{"_index":3250,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgconfig",{"_index":872,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pgconfig=/usr/local/ivorysql/ivorysql",{"_index":869,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pgcopy\\n\\377\\r\\n\\0",{"_index":6587,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pgctltimeout",{"_index":3632,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgdata",{"_index":2619,"title":{},"name":{},"text":{"16":{},"22":{},"25":{},"26":{}},"component":{}}],["pgdata.if",{"_index":2634,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgdata=/usr/local/ivorysql/ivorysql",{"_index":3929,"title":{},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["pgdata=`directori",{"_index":3716,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgdata=datadir",{"_index":3617,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgdata=directori",{"_index":2878,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgdatabas",{"_index":2708,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgextract",{"_index":3817,"title":{},"name":{},"text":{"18":{}},"component":{}}],["pgh",{"_index":2782,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pghost",{"_index":2734,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgindent",{"_index":1996,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["pglogic",{"_index":5169,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["pgoption",{"_index":3383,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgpass",{"_index":2521,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["pgpool",{"_index":5157,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pgport",{"_index":2735,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgport=1234",{"_index":3780,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgrep",{"_index":4865,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pgsleep",{"_index":4447,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pgsql_tmp",{"_index":3742,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pgstat_min_interv",{"_index":4096,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pgstatsdata",{"_index":4423,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pgstatsdsa",{"_index":4421,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pgstatshash",{"_index":4422,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pguser",{"_index":2736,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["pgvector",{"_index":891,"title":{"4":{}},"name":{},"text":{"4":{}},"component":{}}],["pgx",{"_index":871,"title":{},"name":{},"text":{"3":{},"16":{}},"component":{}}],["phase",{"_index":1807,"title":{"27-41":{},"27-55":{},"27-70":{}},"name":{},"text":{"14":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["philosophy.thediagram",{"_index":5718,"title":{},"name":{},"text":{"27":{}},"component":{}}],["physic",{"_index":3463,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["pick",{"_index":1613,"title":{},"name":{},"text":{"13":{}},"component":{}}],["pictur",{"_index":2178,"title":{},"name":{},"text":{"15":{}},"component":{}}],["pid",{"_index":3636,"title":{},"name":{},"text":{"16":{},"23":{},"26":{}},"component":{}}],["pin",{"_index":4190,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pipe",{"_index":2890,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["pipelined_claus",{"_index":1400,"title":{},"name":{},"text":{"12":{}},"component":{}}],["pit/tsc",{"_index":3771,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pitr",{"_index":6452,"title":{"28-21":{}},"name":{},"text":{},"component":{}}],["pkg",{"_index":3868,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["pkg1",{"_index":3883,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkg_config_path=$protobuf_home/lib/pkgconfig:$pkg_config_path",{"_index":851,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pkg_config_path=$protobufc_home/lib:$pkg_config_path",{"_index":859,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pkg_config_path=/usr/local/sqlite/lib/pkgconfig:$pkg_config_path",{"_index":825,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pkgincludedir",{"_index":3208,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pkglibdir",{"_index":3210,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pl",{"_index":5314,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pl/isql",{"_index":1041,"title":{"5-4":{},"27-254":{},"27-255":{},"27-256":{},"27-257":{}},"name":{},"text":{"5":{},"11":{},"27":{}},"component":{}}],["pl/isql’",{"_index":6380,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pl/perl",{"_index":67,"title":{},"name":{},"text":{"1":{}},"component":{}}],["pl/pgsql",{"_index":1046,"title":{},"name":{},"text":{"5":{},"27":{}},"component":{}}],["pl/pgsql’",{"_index":6381,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pl/proxi",{"_index":5180,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pl/sql",{"_index":511,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"27":{}},"component":{}}],["pl_statment",{"_index":6420,"title":{},"name":{},"text":{"27":{}},"component":{}}],["place",{"_index":1505,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["placehold",{"_index":2793,"title":{},"name":{},"text":{"16":{}},"component":{}}],["placement",{"_index":5243,"title":{},"name":{},"text":{"24":{}},"component":{}}],["plain",{"_index":2495,"title":{},"name":{},"text":{"16":{},"21":{},"24":{},"28":{}},"component":{}}],["plain`output",{"_index":3254,"title":{},"name":{},"text":{"16":{}},"component":{}}],["plan",{"_index":36,"title":{"24-21":{},"24-35":{},"24-36":{},"27-13":{},"27-18":{}},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["planner",{"_index":4928,"title":{"24-4":{},"28-37":{},"28-44":{}},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["planner’",{"_index":6648,"title":{},"name":{},"text":{"28":{}},"component":{}}],["platform",{"_index":1377,"title":{},"name":{},"text":{"11":{},"16":{},"18":{},"23":{},"28":{}},"component":{}}],["plausibl",{"_index":2638,"title":{},"name":{},"text":{"16":{}},"component":{}}],["playbook.yml",{"_index":2162,"title":{},"name":{},"text":{"15":{}},"component":{}}],["pleas",{"_index":29,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"15":{},"17":{},"22":{},"25":{},"26":{},"28":{},"29":{}},"component":{}}],["plisql",{"_index":1388,"title":{},"name":{},"text":{"12":{},"27":{}},"component":{}}],["plperl",{"_index":5388,"title":{},"name":{},"text":{"25":{}},"component":{}}],["plperl.x86_64",{"_index":5357,"title":{},"name":{},"text":{"25":{}},"component":{}}],["plpython3",{"_index":5389,"title":{},"name":{},"text":{"25":{}},"component":{}}],["plpython3.x86_64",{"_index":5358,"title":{},"name":{},"text":{"25":{}},"component":{}}],["plsql",{"_index":491,"title":{},"name":{},"text":{"2":{},"10":{},"12":{}},"component":{}}],["pltcl",{"_index":5390,"title":{},"name":{},"text":{"25":{}},"component":{}}],["pltcl.x86_64",{"_index":5360,"title":{},"name":{},"text":{"25":{}},"component":{}}],["plu",{"_index":1713,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["plug",{"_index":1306,"title":{},"name":{},"text":{"11":{}},"component":{}}],["plugin",{"_index":2175,"title":{},"name":{},"text":{"15":{},"16":{},"18":{},"23":{},"24":{}},"component":{}}],["plugin=plugin",{"_index":3487,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pm",{"_index":3769,"title":{},"name":{},"text":{"16":{}},"component":{}}],["png",{"_index":2183,"title":{},"name":{},"text":{"15":{}},"component":{}}],["po",{"_index":2185,"title":{},"name":{},"text":{"15":{}},"component":{}}],["point",{"_index":374,"title":{"28-21":{}},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["pointer",{"_index":2833,"title":{},"name":{},"text":{"16":{}},"component":{}}],["poisson",{"_index":3146,"title":{},"name":{},"text":{"16":{}},"component":{}}],["polici",{"_index":3381,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["polygon",{"_index":6735,"title":{},"name":{},"text":{"28":{}},"component":{}}],["polygon_tbl",{"_index":6737,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pool",{"_index":4376,"title":{},"name":{},"text":{"23":{}},"component":{}}],["poor",{"_index":4973,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["popul",{"_index":5104,"title":{"28-45":{}},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["popular",{"_index":5148,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["port",{"_index":1004,"title":{"14":{},"5-2":{}},"name":{},"text":{"4":{},"5":{},"6":{},"11":{},"14":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["port=5432",{"_index":5197,"title":{},"name":{},"text":{"24":{}},"component":{}}],["port=`port",{"_index":3376,"title":{},"name":{},"text":{"16":{}},"component":{}}],["port=port",{"_index":2721,"title":{},"name":{},"text":{"16":{}},"component":{}}],["portabl",{"_index":2503,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["portal",{"_index":211,"title":{"2-18":{}},"name":{},"text":{},"component":{}}],["portion",{"_index":4578,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["posit",{"_index":1493,"title":{"27-117":{},"27-131":{}},"name":{},"text":{"13":{},"16":{},"27":{}},"component":{}}],["position",{"_index":6097,"title":{},"name":{},"text":{"27":{}},"component":{}}],["posix",{"_index":5144,"title":{},"name":{},"text":{"24":{}},"component":{}}],["possibl",{"_index":1939,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["post",{"_index":3351,"title":{},"name":{},"text":{"16":{}},"component":{}}],["postgi",{"_index":779,"title":{"3":{},"3-4":{}},"name":{},"text":{"3":{},"11":{},"16":{}},"component":{}}],["postgr",{"_index":714,"title":{"16-186":{}},"name":{},"text":{"2":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["postgres_home=/opt/ivorysql/3.2",{"_index":402,"title":{},"name":{},"text":{"2":{}},"component":{}}],["postgres_host_auth_method",{"_index":5371,"title":{},"name":{},"text":{"25":{}},"component":{}}],["postgres_initdb_arg",{"_index":5374,"title":{},"name":{},"text":{"25":{}},"component":{}}],["postgres_initdb_waldir",{"_index":5377,"title":{},"name":{},"text":{"25":{}},"component":{}}],["postgres_oracle.bki",{"_index":1214,"title":{},"name":{},"text":{"8":{}},"component":{}}],["postgresql",{"_index":21,"title":{"15-18":{},"17-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"11":{},"15":{},"17":{},"18":{},"20":{},"24":{},"27":{},"28":{},"29":{}},"component":{}}],["postgresql$1:::transact",{"_index":4856,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql.auto.conf",{"_index":4370,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql.conf",{"_index":4079,"title":{},"name":{},"text":{"23":{},"24":{},"26":{},"28":{}},"component":{}}],["postgresql49873",{"_index":4891,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql49875",{"_index":4889,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql49876",{"_index":4887,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql49877",{"_index":4885,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresql49878",{"_index":4882,"title":{},"name":{},"text":{"23":{}},"component":{}}],["postgresqlfrom",{"_index":5715,"title":{},"name":{},"text":{"27":{}},"component":{}}],["postgresql’",{"_index":81,"title":{},"name":{},"text":{"1":{},"20":{},"27":{}},"component":{}}],["postmast",{"_index":2927,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["postmaster.opt",{"_index":3648,"title":{},"name":{},"text":{"16":{}},"component":{}}],["postmaster.pid",{"_index":3647,"title":{},"name":{},"text":{"16":{}},"component":{}}],["postrot",{"_index":5127,"title":{},"name":{},"text":{"24":{}},"component":{}}],["potenti",{"_index":2739,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["power",{"_index":900,"title":{},"name":{},"text":{"4":{},"11":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["pr",{"_index":1854,"title":{"15-34":{},"15-36":{},"15-37":{}},"name":{},"text":{"15":{}},"component":{}}],["practic",{"_index":1382,"title":{},"name":{},"text":{"11":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["prc",{"_index":6184,"title":{},"name":{},"text":{"27":{}},"component":{}}],["prcp",{"_index":5738,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pre",{"_index":3350,"title":{},"name":{},"text":{"16":{},"22":{},"27":{},"28":{}},"component":{}}],["precaut",{"_index":3277,"title":{},"name":{},"text":{"16":{}},"component":{}}],["preced",{"_index":1393,"title":{"27-114":{}},"name":{},"text":{"12":{},"16":{},"27":{},"28":{}},"component":{}}],["precipit",{"_index":5739,"title":{},"name":{},"text":{"27":{}},"component":{}}],["precis",{"_index":1503,"title":{},"name":{},"text":{"13":{},"16":{},"24":{},"27":{}},"component":{}}],["precision,text",{"_index":6299,"title":{},"name":{},"text":{"27":{}},"component":{}}],["precision`tim",{"_index":4620,"title":{},"name":{},"text":{"23":{}},"component":{}}],["precision`tot",{"_index":4577,"title":{},"name":{},"text":{"23":{}},"component":{}}],["predefin",{"_index":4091,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["predic",{"_index":4406,"title":{},"name":{},"text":{"23":{}},"component":{}}],["predicatelockmanag",{"_index":4407,"title":{},"name":{},"text":{"23":{}},"component":{}}],["predict",{"_index":4494,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["prefer",{"_index":3014,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["prefetch",{"_index":4113,"title":{},"name":{},"text":{"23":{}},"component":{}}],["prefix",{"_index":409,"title":{},"name":{},"text":{"2":{},"16":{},"25":{},"27":{},"28":{}},"component":{}}],["prefix=/usr/local/gd",{"_index":836,"title":{},"name":{},"text":{"3":{}},"component":{}}],["prefix=/usr/local/geo",{"_index":842,"title":{},"name":{},"text":{"3":{}},"component":{}}],["prefix=/usr/local/ivorysql/ivorysql",{"_index":5402,"title":{},"name":{},"text":{"25":{}},"component":{}}],["prefix=/usr/local/proj",{"_index":830,"title":{},"name":{},"text":{"3":{}},"component":{}}],["prefix=/usr/local/protobuf",{"_index":848,"title":{},"name":{},"text":{"3":{}},"component":{}}],["prefix=/usr/local/sqlit",{"_index":818,"title":{},"name":{},"text":{"3":{}},"component":{}}],["prefix=`prefix",{"_index":3164,"title":{},"name":{},"text":{"16":{}},"component":{}}],["premis",{"_index":1362,"title":{},"name":{},"text":{"11":{}},"component":{}}],["prepar",{"_index":177,"title":{"2-4":{},"2-11":{},"15-6":{},"15-39":{},"15-43":{},"15-46":{},"18-5":{},"24-23":{},"27-41":{},"27-55":{},"27-70":{}},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["preprocess",{"_index":2798,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["preprocessor",{"_index":2447,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prerot",{"_index":5132,"title":{},"name":{},"text":{"24":{}},"component":{}}],["presenc",{"_index":2430,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["present",{"_index":1933,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["present.with",{"_index":3066,"title":{},"name":{},"text":{"16":{}},"component":{}}],["preserv",{"_index":997,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"17":{},"27":{}},"component":{}}],["presort",{"_index":6669,"title":{},"name":{},"text":{"28":{}},"component":{}}],["presum",{"_index":5322,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["prevent",{"_index":65,"title":{"24-6":{}},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["previou",{"_index":1475,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["previous",{"_index":2432,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["price",{"_index":3346,"title":{},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["primari",{"_index":1009,"title":{"24-16":{},"24-23":{},"26-1":{}},"name":{},"text":{"4":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["primarili",{"_index":4136,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["primary.aft",{"_index":2657,"title":{},"name":{},"text":{"16":{}},"component":{}}],["primary.backup",{"_index":4464,"title":{},"name":{},"text":{"23":{}},"component":{}}],["primary.stream",{"_index":4462,"title":{},"name":{},"text":{"23":{}},"component":{}}],["primary/standbi",{"_index":5176,"title":{},"name":{},"text":{"24":{}},"component":{}}],["primary_conninfo",{"_index":5194,"title":{},"name":{},"text":{"24":{}},"component":{}}],["primary_slot_nam",{"_index":2981,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["primary’",{"_index":5292,"title":{},"name":{},"text":{"24":{}},"component":{}}],["primit",{"_index":5950,"title":{},"name":{},"text":{"27":{}},"component":{}}],["princip",{"_index":4566,"title":{},"name":{},"text":{"23":{}},"component":{}}],["principl",{"_index":884,"title":{"4-2":{},"15-3":{},"18-2":{}},"name":{},"text":{"4":{},"11":{},"15":{},"27":{}},"component":{}}],["print",{"_index":2489,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["printf",{"_index":422,"title":{},"name":{},"text":{"2":{}},"component":{}}],["prior",{"_index":2502,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["prioriti",{"_index":4482,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["privat",{"_index":1945,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["privileg",{"_index":711,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["privileges.createdb",{"_index":2438,"title":{},"name":{},"text":{"16":{}},"component":{}}],["privit",{"_index":3877,"title":{},"name":{},"text":{"20":{}},"component":{}}],["probabilist",{"_index":6866,"title":{},"name":{},"text":{"28":{}},"component":{}}],["probabl",{"_index":2845,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["probe",{"_index":922,"title":{"23-38":{},"23-39":{},"23-40":{}},"name":{},"text":{"4":{},"23":{}},"component":{}}],["probe’",{"_index":4892,"title":{},"name":{},"text":{"23":{}},"component":{}}],["problem",{"_index":1929,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["problemat",{"_index":3309,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["problems.log",{"_index":5116,"title":{},"name":{},"text":{"24":{}},"component":{}}],["proc",{"_index":3876,"title":{},"name":{},"text":{"20":{}},"component":{}}],["procarray",{"_index":4408,"title":{},"name":{},"text":{"23":{}},"component":{}}],["procarraygroupupd",{"_index":4339,"title":{},"name":{},"text":{"23":{}},"component":{}}],["proce",{"_index":2561,"title":{},"name":{},"text":{"16":{}},"component":{}}],["procedur",{"_index":316,"title":{"12":{},"4-10":{},"5-4":{},"27-258":{}},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"12":{},"20":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["procedure_declar",{"_index":6391,"title":{},"name":{},"text":{"27":{}},"component":{}}],["procedure_definit",{"_index":6417,"title":{},"name":{},"text":{"27":{}},"component":{}}],["procedure_nam",{"_index":6383,"title":{},"name":{},"text":{"27":{}},"component":{}}],["procedure_sh.sql",{"_index":676,"title":{},"name":{},"text":{"2":{}},"component":{}}],["process",{"_index":228,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["process_id",{"_index":3606,"title":{},"name":{},"text":{"16":{}},"component":{}}],["processor",{"_index":3774,"title":{},"name":{},"text":{"16":{}},"component":{}}],["process’",{"_index":4121,"title":{},"name":{},"text":{"23":{}},"component":{}}],["procsignalbarri",{"_index":4340,"title":{},"name":{},"text":{"23":{}},"component":{}}],["prod_subcategori",{"_index":732,"title":{},"name":{},"text":{"2":{}},"component":{}}],["produc",{"_index":2515,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["product",{"_index":247,"title":{"11-3":{}},"name":{},"text":{"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["product_no",{"_index":5751,"title":{},"name":{},"text":{"27":{}},"component":{}}],["products.th",{"_index":2499,"title":{},"name":{},"text":{"16":{}},"component":{}}],["profession",{"_index":1345,"title":{},"name":{},"text":{"11":{}},"component":{}}],["prog1",{"_index":2806,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prog1.c",{"_index":2805,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prog1.o",{"_index":2807,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prog1.pgc",{"_index":2803,"title":{},"name":{},"text":{"16":{}},"component":{}}],["program",{"_index":1179,"title":{"27-255":{},"27-256":{},"27-257":{}},"name":{},"text":{"7":{},"11":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["progress",{"_index":2713,"title":{"23-29":{},"23-30":{},"23-31":{},"23-32":{},"23-33":{},"23-34":{},"23-35":{}},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["progress=sec",{"_index":3139,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prohibit",{"_index":2073,"title":{},"name":{},"text":{"15":{}},"component":{}}],["proj",{"_index":826,"title":{},"name":{},"text":{"3":{}},"component":{}}],["proj=/usr/local/proj",{"_index":837,"title":{},"name":{},"text":{"3":{}},"component":{}}],["projdir=/usr/local/proj",{"_index":865,"title":{},"name":{},"text":{"3":{}},"component":{}}],["project",{"_index":760,"title":{},"name":{},"text":{"2":{},"15":{},"17":{},"23":{},"24":{},"27":{},"29":{}},"component":{}}],["project_",{"_index":758,"title":{},"name":{},"text":{"2":{}},"component":{}}],["project_bas",{"_index":769,"title":{},"name":{},"text":{"2":{}},"component":{}}],["promis",{"_index":1894,"title":{},"name":{},"text":{"15":{}},"component":{}}],["promo_id",{"_index":730,"title":{},"name":{},"text":{"2":{}},"component":{}}],["promot",{"_index":596,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"24":{}},"component":{}}],["promote_trigger_fil",{"_index":5190,"title":{},"name":{},"text":{"24":{}},"component":{}}],["prompt",{"_index":2726,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prompt:you",{"_index":2191,"title":{},"name":{},"text":{"15":{}},"component":{}}],["promptli",{"_index":5211,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["pronam",{"_index":6031,"title":{},"name":{},"text":{"27":{}},"component":{}}],["propag",{"_index":5237,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["proper",{"_index":1955,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"25":{},"27":{}},"component":{}}],["properli",{"_index":2622,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["properti",{"_index":2182,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"27":{},"28":{}},"component":{}}],["proport",{"_index":5238,"title":{},"name":{},"text":{"24":{}},"component":{}}],["propos",{"_index":1985,"title":{},"name":{},"text":{"15":{},"17":{},"29":{}},"component":{}}],["proprietari",{"_index":6515,"title":{},"name":{},"text":{"28":{}},"component":{}}],["protect",{"_index":4195,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["protobuf",{"_index":805,"title":{},"name":{},"text":{"3":{}},"component":{}}],["protobuf_home=/usr/local/protobuf",{"_index":849,"title":{},"name":{},"text":{"3":{}},"component":{}}],["protobufc_home=/usr/local/protobuf",{"_index":857,"title":{},"name":{},"text":{"3":{}},"component":{}}],["protobufdir=/usr/local/protobuf",{"_index":868,"title":{},"name":{},"text":{"3":{}},"component":{}}],["protocol",{"_index":57,"title":{},"name":{},"text":{"1":{},"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["protocol=querymod",{"_index":3132,"title":{},"name":{},"text":{"16":{}},"component":{}}],["prototyp",{"_index":3811,"title":{},"name":{},"text":{"18":{}},"component":{}}],["protract",{"_index":4191,"title":{},"name":{},"text":{"23":{}},"component":{}}],["provid",{"_index":117,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"9":{},"11":{},"15":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["provider=icu",{"_index":2601,"title":{},"name":{},"text":{"16":{}},"component":{}}],["provider={libc|icu",{"_index":2752,"title":{},"name":{},"text":{"16":{}},"component":{}}],["provis",{"_index":3522,"title":{},"name":{},"text":{"16":{}},"component":{}}],["provok",{"_index":5800,"title":{},"name":{},"text":{"27":{}},"component":{}}],["prune",{"_index":4775,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ps",{"_index":3932,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{},"26":{}},"component":{}}],["pset",{"_index":3583,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pseudo",{"_index":5206,"title":{},"name":{},"text":{"24":{}},"component":{}}],["psql",{"_index":326,"title":{"16-104":{},"20-8":{},"20-15":{},"21-7":{},"27-256":{}},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"12":{},"16":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["psql'",{"_index":3242,"title":{},"name":{},"text":{"16":{}},"component":{}}],["psql’",{"_index":3424,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pst",{"_index":6232,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pts/0",{"_index":3949,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["pts/1",{"_index":5427,"title":{},"name":{},"text":{"25":{}},"component":{}}],["pts/3",{"_index":703,"title":{},"name":{},"text":{"2":{}},"component":{}}],["public",{"_index":365,"title":{},"name":{},"text":{"2":{},"16":{},"20":{}},"component":{}}],["public.myt",{"_index":3895,"title":{},"name":{},"text":{"21":{}},"component":{}}],["public.tb_test1",{"_index":6110,"title":{},"name":{},"text":{"27":{}},"component":{}}],["public.tb_test2",{"_index":6117,"title":{},"name":{},"text":{"27":{}},"component":{}}],["public.tb_test3",{"_index":6131,"title":{},"name":{},"text":{"27":{}},"component":{}}],["publish",{"_index":2176,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["pull",{"_index":989,"title":{"15-33":{},"15-35":{}},"name":{},"text":{"4":{},"15":{},"17":{},"22":{},"25":{}},"component":{}}],["punctuat",{"_index":2085,"title":{},"name":{},"text":{"15":{}},"component":{}}],["purpos",{"_index":2417,"title":{"16-189":{},"27-166":{},"27-170":{},"27-173":{},"27-177":{},"27-180":{},"27-184":{},"27-188":{},"27-192":{},"27-195":{},"27-199":{},"27-203":{},"27-208":{},"27-212":{},"27-216":{},"27-220":{},"27-224":{},"27-228":{},"27-232":{},"27-236":{},"27-240":{}},"name":{},"text":{"16":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["purposes.thi",{"_index":2704,"title":{},"name":{},"text":{"16":{}},"component":{}}],["push",{"_index":1466,"title":{"15-32":{}},"name":{},"text":{"13":{},"15":{},"17":{}},"component":{}}],["put",{"_index":2177,"title":{},"name":{},"text":{"15":{},"16":{},"23":{}},"component":{}}],["pwprompt",{"_index":2766,"title":{},"name":{},"text":{"16":{}},"component":{}}],["python3",{"_index":5359,"title":{},"name":{},"text":{"25":{}},"component":{}}],["q",{"_index":2711,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["q$[\\t\\r\\n\\v\\\\]$q",{"_index":5902,"title":{},"name":{},"text":{"27":{}},"component":{}}],["qs",{"_index":4855,"title":{},"name":{},"text":{"23":{}},"component":{}}],["qualifi",{"_index":2816,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["qualiti",{"_index":982,"title":{},"name":{},"text":{"4":{},"15":{},"17":{},"28":{}},"component":{}}],["quantiti",{"_index":6369,"title":{},"name":{},"text":{"27":{}},"component":{}}],["quarter",{"_index":6503,"title":{},"name":{},"text":{"28":{}},"component":{}}],["quatat",{"_index":2124,"title":{},"name":{},"text":{"15":{}},"component":{}}],["queri",{"_index":319,"title":{"24-29":{},"24-41":{},"27-8":{},"27-9":{},"27-10":{},"27-11":{},"27-12":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"11":{},"13":{},"16":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["query.idl",{"_index":4170,"title":{},"name":{},"text":{"23":{}},"component":{}}],["query1",{"_index":5761,"title":{},"name":{},"text":{"27":{}},"component":{}}],["query2",{"_index":5762,"title":{},"name":{},"text":{"27":{}},"component":{}}],["query3",{"_index":5764,"title":{},"name":{},"text":{"27":{}},"component":{}}],["query_id",{"_index":4181,"title":{},"name":{},"text":{"23":{}},"component":{}}],["query_sh.sql",{"_index":684,"title":{},"name":{},"text":{"2":{}},"component":{}}],["query_start",{"_index":4162,"title":{},"name":{},"text":{"23":{}},"component":{}}],["querymod",{"_index":3131,"title":{},"name":{},"text":{"16":{}},"component":{}}],["query’",{"_index":4403,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["question",{"_index":1831,"title":{"15-14":{}},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"28":{}},"component":{}}],["queu",{"_index":3275,"title":{},"name":{},"text":{"16":{}},"component":{}}],["queue",{"_index":3276,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["quick",{"_index":2169,"title":{"22":{},"22-2":{}},"name":{},"text":{"15":{},"22":{},"25":{},"26":{}},"component":{}}],["quicker",{"_index":5350,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["quickli",{"_index":5150,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["quiet",{"_index":2712,"title":{},"name":{},"text":{"16":{}},"component":{}}],["quit",{"_index":1962,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"28":{}},"component":{}}],["quorum",{"_index":4483,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["quot",{"_index":2101,"title":{"27-107":{}},"name":{},"text":{"15":{},"16":{},"27":{},"28":{}},"component":{}}],["quota",{"_index":4927,"title":{},"name":{},"text":{"23":{}},"component":{}}],["quotat",{"_index":1171,"title":{},"name":{},"text":{"7":{},"16":{}},"component":{}}],["quote_charact",{"_index":6555,"title":{},"name":{},"text":{"28":{}},"component":{}}],["r",{"_index":659,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["r\\n",{"_index":6576,"title":{},"name":{},"text":{"28":{}},"component":{}}],["r_cursor",{"_index":6372,"title":{},"name":{},"text":{"27":{}},"component":{}}],["race",{"_index":108,"title":{},"name":{},"text":{"1":{},"24":{}},"component":{}}],["rais",{"_index":1026,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"15":{},"16":{},"17":{},"27":{},"28":{}},"component":{}}],["raised.if",{"_index":3471,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ram",{"_index":3901,"title":{},"name":{},"text":{"22":{},"28":{}},"component":{}}],["ran",{"_index":2667,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rand",{"_index":3173,"title":{},"name":{},"text":{"16":{}},"component":{}}],["random",{"_index":3170,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["rang",{"_index":607,"title":{"27-246":{}},"name":{},"text":{"2":{},"4":{},"6":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["rank",{"_index":5994,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rapid",{"_index":927,"title":{},"name":{},"text":{"4":{},"16":{},"24":{}},"component":{}}],["rapidli",{"_index":5303,"title":{},"name":{},"text":{"24":{}},"component":{}}],["rare",{"_index":2693,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["rate",{"_index":2484,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["rate=`r",{"_index":3186,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rate=r",{"_index":2972,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ration",{"_index":1369,"title":{},"name":{},"text":{"11":{}},"component":{}}],["raw",{"_index":1415,"title":{},"name":{},"text":{"13":{},"28":{}},"component":{}}],["rawtohex",{"_index":1436,"title":{},"name":{},"text":{"13":{}},"component":{}}],["re",{"_index":2733,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["reach",{"_index":1965,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{}},"component":{}}],["react",{"_index":4994,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reactiv",{"_index":3392,"title":{},"name":{},"text":{"16":{}},"component":{}}],["read",{"_index":1102,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["read/writ",{"_index":2632,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["readabl",{"_index":3259,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["reader",{"_index":2491,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["readi",{"_index":2017,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{}},"component":{}}],["readili",{"_index":4025,"title":{},"name":{},"text":{"23":{}},"component":{}}],["readlin",{"_index":5395,"title":{},"name":{},"text":{"25":{}},"component":{}}],["real",{"_index":2060,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["realiti",{"_index":6725,"title":{},"name":{},"text":{"28":{}},"component":{}}],["realiz",{"_index":4093,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["realli",{"_index":4988,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["rearrang",{"_index":3331,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["reason",{"_index":2526,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["reassign",{"_index":5316,"title":{},"name":{},"text":{"24":{}},"component":{}}],["rebuild",{"_index":2500,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["rebuilt",{"_index":4786,"title":{},"name":{},"text":{"23":{}},"component":{}}],["receipt",{"_index":5252,"title":{},"name":{},"text":{"24":{}},"component":{}}],["receiv",{"_index":53,"title":{},"name":{},"text":{"1":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["receive_start_lsn",{"_index":4515,"title":{},"name":{},"text":{"23":{}},"component":{}}],["receive_start_tli",{"_index":4517,"title":{},"name":{},"text":{"23":{}},"component":{}}],["received_lsn",{"_index":4548,"title":{},"name":{},"text":{"23":{}},"component":{}}],["received_tli",{"_index":4521,"title":{},"name":{},"text":{"23":{}},"component":{}}],["receiver’",{"_index":4112,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recent",{"_index":3727,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["recheck",{"_index":4250,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["recip",{"_index":3698,"title":{},"name":{},"text":{"16":{}},"component":{}}],["reclaim",{"_index":4969,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["reclam",{"_index":5042,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reclust",{"_index":2431,"title":{},"name":{},"text":{"16":{}},"component":{}}],["recogn",{"_index":5740,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["recommend",{"_index":496,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["recompil",{"_index":4871,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reconnect",{"_index":3234,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["reconstruct",{"_index":2496,"title":{},"name":{},"text":{"16":{}},"component":{}}],["record",{"_index":2899,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["record_typ",{"_index":6404,"title":{},"name":{},"text":{"27":{}},"component":{}}],["record_type%typ",{"_index":6411,"title":{},"name":{},"text":{"27":{}},"component":{}}],["record_type_definit",{"_index":6397,"title":{},"name":{},"text":{"27":{}},"component":{}}],["record_variable_declar",{"_index":6402,"title":{},"name":{},"text":{"27":{}},"component":{}}],["record`return",{"_index":4692,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recov",{"_index":2644,"title":{"24-3":{}},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["recoveri",{"_index":2463,"title":{"28-21":{}},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["recovery.pg_receivew",{"_index":2523,"title":{},"name":{},"text":{"16":{}},"component":{}}],["recovery.sign",{"_index":2672,"title":{},"name":{},"text":{"16":{}},"component":{}}],["recovery_end_command",{"_index":4346,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recovery_prefetch",{"_index":4700,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recovery_target_timelin",{"_index":5193,"title":{},"name":{},"text":{"24":{}},"component":{}}],["recoveryapplydelay",{"_index":4450,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoveryconflictsnapshot",{"_index":4342,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoveryconflicttablespac",{"_index":4344,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoveryendcommand",{"_index":4345,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoverypaus",{"_index":4347,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoveryretrieveretryinterv",{"_index":4451,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recoverywalstream",{"_index":4207,"title":{},"name":{},"text":{"23":{}},"component":{}}],["recreat",{"_index":3236,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["recs/sec",{"_index":639,"title":{},"name":{},"text":{"2":{}},"component":{}}],["rectangular",{"_index":6020,"title":{},"name":{},"text":{"27":{}},"component":{}}],["recurs",{"_index":4750,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["recv",{"_index":6599,"title":{},"name":{},"text":{"28":{}},"component":{}}],["recvar",{"_index":6409,"title":{},"name":{},"text":{"27":{}},"component":{}}],["recycl",{"_index":2931,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["redhat",{"_index":799,"title":{},"name":{},"text":{"3":{}},"component":{}}],["redirect",{"_index":2208,"title":{},"name":{},"text":{"15":{},"16":{},"24":{}},"component":{}}],["reduc",{"_index":1058,"title":{},"name":{},"text":{"5":{},"11":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["redund",{"_index":2128,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["ref",{"_index":6405,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ref_cursor_type_definit",{"_index":6398,"title":{},"name":{},"text":{"27":{}},"component":{}}],["refcursor",{"_index":6373,"title":{},"name":{},"text":{"27":{}},"component":{}}],["refer",{"_index":47,"title":{"7":{},"16":{},"24-43":{},"27-100":{},"27-116":{}},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["referenc",{"_index":1169,"title":{},"name":{},"text":{"7":{},"21":{},"27":{},"28":{}},"component":{}}],["referenti",{"_index":3312,"title":{},"name":{},"text":{"16":{}},"component":{}}],["reflect",{"_index":3360,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["refresh",{"_index":573,"title":{},"name":{},"text":{"2":{},"16":{},"27":{}},"component":{}}],["refus",{"_index":2589,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["regard",{"_index":5841,"title":{},"name":{},"text":{"27":{}},"component":{}}],["regardless",{"_index":3301,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["regexp_instr",{"_index":1439,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_instr('abcabcabc",{"_index":1635,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_instr('databas",{"_index":1638,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_lik",{"_index":1440,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_like(value,'abc",{"_index":1655,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_like(value,'abc','i",{"_index":1657,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_replac",{"_index":1437,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_replace('01234abcd56789','01')from",{"_index":1607,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_replace('01234abcd56789','012','xxx')from",{"_index":1610,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_replace('01234abcd56789','[0",{"_index":1602,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_substr",{"_index":1438,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_substr('012a012ab34",{"_index":1623,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_substr('012ab34",{"_index":1617,"title":{},"name":{},"text":{"13":{}},"component":{}}],["regexp_substr('databas",{"_index":1628,"title":{},"name":{},"text":{"13":{}},"component":{}}],["region",{"_index":916,"title":{},"name":{},"text":{"4":{}},"component":{}}],["regist",{"_index":352,"title":{},"name":{},"text":{"2":{},"16":{},"23":{}},"component":{}}],["registersyncrequest",{"_index":4452,"title":{},"name":{},"text":{"23":{}},"component":{}}],["regress",{"_index":2003,"title":{},"name":{},"text":{"15":{},"17":{},"23":{}},"component":{}}],["regular",{"_index":1598,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["regularli",{"_index":2691,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["reindex",{"_index":2571,"title":{"24-8":{}},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["reindexdb",{"_index":2338,"title":{"16-108":{}},"name":{},"text":{"16":{}},"component":{}}],["reiniti",{"_index":5204,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reintroduc",{"_index":3718,"title":{},"name":{},"text":{"16":{}},"component":{}}],["reject",{"_index":3443,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["rel",{"_index":1806,"title":{},"name":{},"text":{"14":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["relat",{"_index":1056,"title":{"27-206":{}},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["relation=`pattern",{"_index":2812,"title":{},"name":{},"text":{"16":{}},"component":{}}],["relation=pattern",{"_index":2819,"title":{},"name":{},"text":{"16":{}},"component":{}}],["relationmap",{"_index":4410,"title":{},"name":{},"text":{"23":{}},"component":{}}],["relationmapread",{"_index":4257,"title":{},"name":{},"text":{"23":{}},"component":{}}],["relationmapsync",{"_index":4258,"title":{},"name":{},"text":{"23":{}},"component":{}}],["relationmapwrit",{"_index":4259,"title":{},"name":{},"text":{"23":{}},"component":{}}],["relationship",{"_index":2855,"title":{},"name":{},"text":{"16":{}},"component":{}}],["relax",{"_index":5329,"title":{},"name":{},"text":{"24":{}},"component":{}}],["relay",{"_index":5235,"title":{},"name":{},"text":{"24":{}},"component":{}}],["relcach",{"_index":5313,"title":{},"name":{},"text":{"24":{}},"component":{}}],["relcacheinit",{"_index":4412,"title":{},"name":{},"text":{"23":{}},"component":{}}],["releas",{"_index":13,"title":{"29-2":{}},"name":{},"text":{"1":{},"2":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{}},"component":{}}],["release.noarch",{"_index":5364,"title":{},"name":{},"text":{"25":{}},"component":{}}],["release_d",{"_index":5760,"title":{},"name":{},"text":{"27":{}},"component":{}}],["releasev",{"_index":3916,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["relev",{"_index":747,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"24":{},"28":{}},"component":{}}],["relfrozenxid",{"_index":5062,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reli",{"_index":3434,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["reliabl",{"_index":275,"title":{},"name":{},"text":{"2":{},"11":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["relid",{"_index":4547,"title":{},"name":{},"text":{"23":{}},"component":{}}],["relminmxid",{"_index":5085,"title":{},"name":{},"text":{"24":{}},"component":{}}],["relnam",{"_index":4636,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["reload",{"_index":3396,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["reloc",{"_index":2911,"title":{},"name":{},"text":{"16":{}},"component":{}}],["relpag",{"_index":4902,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["reltoastrelid",{"_index":4906,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reltupl",{"_index":6653,"title":{},"name":{},"text":{"28":{}},"component":{}}],["remain",{"_index":1300,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["remaind",{"_index":4900,"title":{},"name":{},"text":{"23":{},"27":{},"28":{}},"component":{}}],["remedi",{"_index":5301,"title":{},"name":{},"text":{"24":{}},"component":{}}],["rememb",{"_index":2161,"title":{},"name":{},"text":{"15":{},"23":{},"28":{}},"component":{}}],["remot",{"_index":1851,"title":{"15-32":{}},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["remote_appli",{"_index":2532,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["remote_apply.th",{"_index":2537,"title":{},"name":{},"text":{"16":{}},"component":{}}],["remote_writ",{"_index":4476,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["remov",{"_index":1552,"title":{"28-48":{},"28-49":{}},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["renam",{"_index":3816,"title":{},"name":{},"text":{"18":{},"24":{},"28":{}},"component":{}}],["render",{"_index":5849,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["renjiao@highgo.com",{"_index":1976,"title":{},"name":{},"text":{"15":{}},"component":{}}],["reopen",{"_index":5129,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reorder",{"_index":2501,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["reorderbufferread",{"_index":4260,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reorderbufferwrit",{"_index":4261,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reorderlogicalmappingread",{"_index":4262,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reorgan",{"_index":6066,"title":{},"name":{},"text":{"27":{}},"component":{}}],["repair",{"_index":83,"title":{},"name":{},"text":{"1":{},"16":{}},"component":{}}],["repartit",{"_index":4325,"title":{},"name":{},"text":{"23":{}},"component":{}}],["repeat",{"_index":2108,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["repeatedli",{"_index":3635,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["repl",{"_index":5165,"title":{},"name":{},"text":{"24":{}},"component":{}}],["replac",{"_index":1028,"title":{},"name":{},"text":{"4":{},"11":{},"13":{},"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["replace('jack",{"_index":1590,"title":{},"name":{},"text":{"13":{}},"component":{}}],["replay",{"_index":2546,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["replay_lag",{"_index":4479,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["replay_lsn",{"_index":4470,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["repli",{"_index":2093,"title":{},"name":{},"text":{"15":{},"23":{},"24":{}},"component":{}}],["replic",{"_index":96,"title":{"24-10":{},"24-13":{},"24-15":{},"24-16":{},"24-17":{},"24-18":{},"24-19":{},"24-25":{},"24-28":{},"24-29":{},"24-31":{},"24-32":{},"26-9":{},"28-52":{}},"name":{},"text":{"1":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["replica",{"_index":4086,"title":{},"name":{},"text":{"23":{},"24":{},"26":{}},"component":{}}],["replicationorigin",{"_index":4413,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationorigindrop",{"_index":4349,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationoriginst",{"_index":4414,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotalloc",{"_index":4415,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotcontrol",{"_index":4416,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotdrop",{"_index":4351,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotio",{"_index":4417,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotread",{"_index":4263,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotrestoresync",{"_index":4264,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotsync",{"_index":4265,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationslotwrit",{"_index":4266,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reply_tim",{"_index":4491,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["repo",{"_index":2066,"title":{},"name":{},"text":{"15":{}},"component":{}}],["report",{"_index":147,"title":{"15-12":{},"23-29":{},"23-30":{},"23-31":{},"23-32":{},"23-33":{},"23-34":{},"23-35":{}},"name":{},"text":{"1":{},"2":{},"3":{},"15":{},"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["repositori",{"_index":131,"title":{"15-21":{},"17-8":{}},"name":{},"text":{"1":{},"15":{},"17":{},"22":{},"25":{}},"component":{}}],["repres",{"_index":943,"title":{},"name":{},"text":{"4":{},"6":{},"13":{},"15":{},"16":{},"19":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["represent",{"_index":5867,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["reprocess",{"_index":6064,"title":{},"name":{},"text":{"27":{}},"component":{}}],["reproduc",{"_index":2057,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["reput",{"_index":1922,"title":{},"name":{},"text":{"15":{}},"component":{}}],["request",{"_index":1383,"title":{"15-33":{},"15-35":{}},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["requir",{"_index":241,"title":{"22-1":{}},"name":{},"text":{"2":{},"4":{},"8":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["required.thi",{"_index":5249,"title":{},"name":{},"text":{"24":{}},"component":{}}],["required:th",{"_index":3867,"title":{},"name":{},"text":{"20":{}},"component":{}}],["requirements.to",{"_index":2594,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rerais",{"_index":6377,"title":{},"name":{},"text":{"27":{}},"component":{}}],["reraise_test",{"_index":6375,"title":{},"name":{},"text":{"27":{}},"component":{}}],["research",{"_index":5112,"title":{},"name":{},"text":{"24":{}},"component":{}}],["reserv",{"_index":2043,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"28":{}},"component":{}}],["reset",{"_index":1085,"title":{},"name":{},"text":{"6":{},"16":{},"23":{},"24":{}},"component":{}}],["reset.thi",{"_index":4711,"title":{},"name":{},"text":{"23":{}},"component":{}}],["resid",{"_index":2429,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["residu",{"_index":5428,"title":{},"name":{},"text":{"25":{}},"component":{}}],["resist",{"_index":2999,"title":{},"name":{},"text":{"16":{}},"component":{}}],["resolut",{"_index":3763,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["resolv",{"_index":2094,"title":{},"name":{},"text":{"15":{},"24":{},"27":{}},"component":{}}],["resort",{"_index":2626,"title":{},"name":{},"text":{"16":{}},"component":{}}],["resourc",{"_index":2864,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["respect",{"_index":562,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["respond",{"_index":3442,"title":{},"name":{},"text":{"16":{}},"component":{}}],["respons",{"_index":1908,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{}},"component":{}}],["rest",{"_index":2018,"title":{},"name":{},"text":{"15":{},"17":{},"27":{},"28":{}},"component":{}}],["restart",{"_index":1104,"title":{"16-150":{},"26-5":{}},"name":{},"text":{"6":{},"16":{},"19":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["restart_lsn",{"_index":98,"title":{},"name":{},"text":{"1":{}},"component":{}}],["restartpoint",{"_index":5334,"title":{},"name":{},"text":{"24":{}},"component":{}}],["restor",{"_index":90,"title":{"28-15":{},"28-17":{}},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["restore.pres",{"_index":3313,"title":{},"name":{},"text":{"16":{}},"component":{}}],["restore.thi",{"_index":3343,"title":{},"name":{},"text":{"16":{}},"component":{}}],["restore_command",{"_index":2673,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["restorecommand",{"_index":4352,"title":{},"name":{},"text":{"23":{}},"component":{}}],["restored.list",{"_index":3510,"title":{},"name":{},"text":{"16":{}},"component":{}}],["restrict",{"_index":1333,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["result",{"_index":951,"title":{"16-172":{}},"name":{},"text":{"4":{},"6":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["result.pg_basebackup",{"_index":2479,"title":{},"name":{},"text":{"16":{}},"component":{}}],["result_cache_claus",{"_index":1398,"title":{},"name":{},"text":{"12":{}},"component":{}}],["resultrelinfo",{"_index":89,"title":{},"name":{},"text":{"1":{}},"component":{}}],["results.th",{"_index":3144,"title":{},"name":{},"text":{"16":{}},"component":{}}],["resum",{"_index":4348,"title":{},"name":{},"text":{"23":{}},"component":{}}],["retain",{"_index":3437,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["retri",{"_index":3128,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["retriev",{"_index":938,"title":{},"name":{},"text":{"4":{},"11":{},"16":{},"18":{},"23":{},"24":{},"28":{}},"component":{}}],["retrieved.a",{"_index":3660,"title":{},"name":{},"text":{"16":{}},"component":{}}],["retroact",{"_index":5819,"title":{},"name":{},"text":{"27":{}},"component":{}}],["return",{"_index":1032,"title":{},"name":{},"text":{"4":{},"12":{},"13":{},"16":{},"18":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["return/newlin",{"_index":6575,"title":{},"name":{},"text":{"28":{}},"component":{}}],["return_typ",{"_index":6385,"title":{},"name":{},"text":{"27":{}},"component":{}}],["reus",{"_index":2695,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["revers",{"_index":288,"title":{},"name":{},"text":{"2":{},"23":{}},"component":{}}],["revert",{"_index":4496,"title":{},"name":{},"text":{"23":{}},"component":{}}],["review",{"_index":145,"title":{"15-20":{},"17-7":{}},"name":{},"text":{"1":{},"15":{},"17":{}},"component":{}}],["reviewers/submitters/maintain",{"_index":1918,"title":{},"name":{},"text":{"15":{}},"component":{}}],["reviewer’",{"_index":1992,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["revok",{"_index":5315,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["reward",{"_index":1911,"title":{},"name":{},"text":{"15":{}},"component":{}}],["rewind",{"_index":2658,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rewind_us",{"_index":3722,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rewound",{"_index":2669,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rewrit",{"_index":537,"title":{},"name":{},"text":{"2":{},"23":{},"24":{},"28":{}},"component":{}}],["rewritten",{"_index":2615,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rf",{"_index":5430,"title":{},"name":{},"text":{"25":{}},"component":{}}],["rich",{"_index":5748,"title":{},"name":{},"text":{"27":{}},"component":{}}],["right",{"_index":1553,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"23":{},"27":{},"28":{}},"component":{}}],["rigor",{"_index":5274,"title":{},"name":{},"text":{"24":{}},"component":{}}],["risk",{"_index":3356,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["riski",{"_index":6082,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rl",{"_index":41,"title":{},"name":{},"text":{"1":{}},"component":{}}],["rm",{"_index":819,"title":{},"name":{},"text":{"3":{},"25":{},"27":{}},"component":{}}],["rmi",{"_index":5431,"title":{},"name":{},"text":{"25":{}},"component":{}}],["rmid",{"_index":4837,"title":{},"name":{},"text":{"23":{}},"component":{}}],["road",{"_index":2022,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["roadmap",{"_index":1327,"title":{},"name":{},"text":{"11":{}},"component":{}}],["rock",{"_index":1348,"title":{},"name":{},"text":{"11":{}},"component":{}}],["rocky9",{"_index":118,"title":{},"name":{},"text":{"1":{}},"component":{}}],["role",{"_index":40,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["role=`rolenam",{"_index":3378,"title":{},"name":{},"text":{"16":{}},"component":{}}],["role=rol",{"_index":2763,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rolenam",{"_index":3379,"title":{},"name":{},"text":{"16":{}},"component":{}}],["role|databas",{"_index":93,"title":{},"name":{},"text":{"1":{}},"component":{}}],["roll",{"_index":1928,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["rollback",{"_index":5248,"title":{"27-63":{},"27-70":{}},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["rolnam",{"_index":6510,"title":{},"name":{},"text":{"28":{}},"component":{}}],["room",{"_index":5051,"title":{},"name":{},"text":{"24":{}},"component":{}}],["root",{"_index":660,"title":{},"name":{},"text":{"2":{},"16":{},"22":{},"25":{},"27":{}},"component":{}}],["rootdescend",{"_index":2859,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rotat",{"_index":5120,"title":{},"name":{},"text":{"24":{}},"component":{}}],["rotatelog",{"_index":5124,"title":{},"name":{},"text":{"24":{}},"component":{}}],["round",{"_index":5246,"title":{"27-202":{}},"name":{},"text":{"24":{},"27":{}},"component":{}}],["round(timestamp",{"_index":6262,"title":{},"name":{},"text":{"27":{}},"component":{}}],["routin",{"_index":3325,"title":{"24-1":{},"24-8":{}},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["row",{"_index":454,"title":{"27-128":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"13":{},"16":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["row(1",{"_index":6058,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row(1,2.5,'thi",{"_index":6041,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row(t",{"_index":6043,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row(t.f1",{"_index":6044,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row(tabl",{"_index":6059,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row)",{"_index":1629,"title":{},"name":{},"text":{"13":{}},"component":{}}],["row_secur",{"_index":3530,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rowfunction(a,b)).col3",{"_index":5967,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rows=0",{"_index":6741,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=1",{"_index":5771,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["rows=10",{"_index":6675,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=100",{"_index":6667,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=1000",{"_index":6702,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=10000",{"_index":6645,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=101",{"_index":6661,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=2",{"_index":6683,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rows=999",{"_index":6680,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rowtyp",{"_index":6400,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rowtype_attribut",{"_index":6410,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rowvalu",{"_index":6042,"title":{},"name":{},"text":{"27":{}},"component":{}}],["row’",{"_index":6888,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rpm",{"_index":800,"title":{"25-4":{},"25-12":{}},"name":{},"text":{"3":{},"25":{}},"component":{}}],["rpms/4/redhat/rhel",{"_index":3919,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["rr",{"_index":6285,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rsync",{"_index":2660,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["rtrim",{"_index":1433,"title":{},"name":{},"text":{"13":{}},"component":{}}],["rtrim('abcdefg','fegab')rtrim",{"_index":1569,"title":{},"name":{},"text":{"13":{}},"component":{}}],["rubi",{"_index":2148,"title":{},"name":{},"text":{"15":{}},"component":{}}],["rule",{"_index":970,"title":{"27-129":{}},"name":{},"text":{"4":{},"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["run",{"_index":264,"title":{"22-4":{},"28-53":{}},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["runbug",{"_index":4050,"title":{},"name":{},"text":{"23":{}},"component":{}}],["russian",{"_index":5857,"title":{},"name":{},"text":{"27":{}},"component":{}}],["rw",{"_index":658,"title":{},"name":{},"text":{"2":{}},"component":{}}],["s",{"_index":822,"title":{},"name":{},"text":{"3":{},"13":{},"16":{},"23":{},"28":{}},"component":{}}],["s1",{"_index":5254,"title":{},"name":{},"text":{"24":{}},"component":{}}],["s2",{"_index":5255,"title":{},"name":{},"text":{"24":{}},"component":{}}],["s3",{"_index":5256,"title":{},"name":{},"text":{"24":{}},"component":{}}],["s4",{"_index":5257,"title":{},"name":{},"text":{"24":{}},"component":{}}],["s[mart",{"_index":3601,"title":{},"name":{},"text":{"16":{}},"component":{}}],["s\\n",{"_index":424,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sacramento",{"_index":6839,"title":{},"name":{},"text":{"28":{}},"component":{}}],["safe",{"_index":2966,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["safer",{"_index":3426,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["safesnapshot",{"_index":4353,"title":{},"name":{},"text":{"23":{}},"component":{}}],["safest",{"_index":5185,"title":{},"name":{},"text":{"24":{}},"component":{}}],["safeti",{"_index":2633,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["sale",{"_index":588,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sales_transactions_ext",{"_index":602,"title":{},"name":{},"text":{"2":{}},"component":{}}],["same",{"_index":478,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["sampl",{"_index":3185,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["sample_blks_scan",{"_index":4742,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sample_blks_tot",{"_index":4741,"title":{},"name":{},"text":{"23":{}},"component":{}}],["san",{"_index":6792,"title":{},"name":{},"text":{"28":{}},"component":{}}],["saniti",{"_index":3653,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sast",{"_index":6172,"title":{},"name":{},"text":{"27":{}},"component":{}}],["satisfactori",{"_index":4999,"title":{},"name":{},"text":{"24":{}},"component":{}}],["satisfactorili",{"_index":3458,"title":{},"name":{},"text":{"16":{}},"component":{}}],["satisfi",{"_index":2219,"title":{},"name":{},"text":{"15":{},"23":{},"28":{}},"component":{}}],["saturday",{"_index":6193,"title":{},"name":{},"text":{"27":{}},"component":{}}],["save",{"_index":1184,"title":{},"name":{},"text":{"7":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["savepoint",{"_index":5279,"title":{"27-77":{}},"name":{},"text":{"24":{},"27":{}},"component":{}}],["savepoint_nam",{"_index":5812,"title":{},"name":{},"text":{"27":{}},"component":{}}],["saw",{"_index":6694,"title":{},"name":{},"text":{"28":{}},"component":{}}],["scalabl",{"_index":5713,"title":{},"name":{},"text":{"27":{}},"component":{}}],["scalar",{"_index":5563,"title":{"27-126":{}},"name":{},"text":{"27":{}},"component":{}}],["scale",{"_index":1364,"title":{},"name":{},"text":{"11":{},"16":{},"24":{},"27":{}},"component":{}}],["scale=scale_factor",{"_index":3081,"title":{},"name":{},"text":{"16":{}},"component":{}}],["scale_factor",{"_index":3080,"title":{},"name":{},"text":{"16":{}},"component":{}}],["scan",{"_index":284,"title":{"27-14":{}},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["scc",{"_index":6251,"title":{},"name":{},"text":{"27":{}},"component":{}}],["scenario",{"_index":1294,"title":{"11-7":{}},"name":{},"text":{"11":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["schedul",{"_index":3121,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["schema",{"_index":282,"title":{},"name":{},"text":{"2":{},"6":{},"16":{},"20":{},"23":{},"27":{},"28":{}},"component":{}}],["schema(",{"_index":3286,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema.notewhen",{"_index":3519,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema.sh",{"_index":763,"title":{},"name":{},"text":{"2":{}},"component":{}}],["schema/t",{"_index":3534,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema=`pattern",{"_index":3284,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema=mydb.myschema",{"_index":2825,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema=pattern",{"_index":2821,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schema=schema",{"_index":3512,"title":{},"name":{},"text":{"16":{}},"component":{}}],["schemanam",{"_index":4635,"title":{},"name":{},"text":{"23":{}},"component":{}}],["scheme",{"_index":2745,"title":{"28-2":{}},"name":{},"text":{"16":{}},"component":{}}],["scienc",{"_index":5239,"title":{},"name":{},"text":{"24":{}},"component":{}}],["scope",{"_index":1285,"title":{"11-3":{}},"name":{},"text":{"24":{}},"component":{}}],["scott",{"_index":695,"title":{},"name":{},"text":{"2":{}},"component":{}}],["scram",{"_index":5379,"title":{},"name":{},"text":{"25":{}},"component":{}}],["scratch",{"_index":3598,"title":{},"name":{},"text":{"16":{}},"component":{}}],["script",{"_index":286,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["script=scriptnam",{"_index":3193,"title":{},"name":{},"text":{"16":{}},"component":{}}],["scriptnam",{"_index":3195,"title":{},"name":{},"text":{"16":{}},"component":{}}],["scriptname[@weight",{"_index":3095,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seamless",{"_index":781,"title":{},"name":{},"text":{"3":{},"4":{},"11":{}},"component":{}}],["search",{"_index":558,"title":{"27-263":{},"28-13":{}},"name":{},"text":{"2":{},"4":{},"16":{},"23":{},"25":{},"27":{},"28":{}},"component":{}}],["search_path",{"_index":576,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["sec",{"_index":642,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["second",{"_index":1414,"title":{"15-28":{}},"name":{},"text":{"13":{},"15":{},"16":{},"22":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["second.thi",{"_index":2978,"title":{},"name":{},"text":{"16":{}},"component":{}}],["second:fil",{"_index":1858,"title":{"15-36":{}},"name":{},"text":{},"component":{}}],["second:select",{"_index":1844,"title":{"15-24":{}},"name":{},"text":{},"component":{}}],["section",{"_index":1889,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["section=`sectionnam",{"_index":3349,"title":{},"name":{},"text":{"16":{}},"component":{}}],["section=data",{"_index":3227,"title":{},"name":{},"text":{"16":{}},"component":{}}],["section=post",{"_index":3293,"title":{},"name":{},"text":{"16":{}},"component":{}}],["section=pr",{"_index":3292,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sections.th",{"_index":3352,"title":{},"name":{},"text":{"16":{}},"component":{}}],["secur",{"_index":1381,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"23":{},"27":{},"28":{}},"component":{}}],["security[row_secur",{"_index":3316,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sed",{"_index":813,"title":{},"name":{},"text":{"3":{}},"component":{}}],["see",{"_index":353,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["seed",{"_index":3172,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seed=se",{"_index":3171,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seek",{"_index":6642,"title":{},"name":{},"text":{"28":{}},"component":{}}],["seem",{"_index":6080,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["seemingli",{"_index":6084,"title":{},"name":{},"text":{"27":{}},"component":{}}],["seen",{"_index":4686,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["segment",{"_index":2524,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["segsize=wal_segment_s",{"_index":3699,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seldom",{"_index":5009,"title":{},"name":{},"text":{"24":{}},"component":{}}],["select",{"_index":455,"title":{"27-119":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"13":{},"16":{},"18":{},"19":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["select_stat",{"_index":6158,"title":{},"name":{},"text":{"27":{}},"component":{}}],["self",{"_index":1991,"title":{},"name":{},"text":{"15":{},"17":{},"23":{},"27":{},"28":{}},"component":{}}],["self_tim",{"_index":4681,"title":{},"name":{},"text":{"23":{}},"component":{}}],["selinux",{"_index":6566,"title":{},"name":{},"text":{"28":{}},"component":{}}],["semant",{"_index":928,"title":{},"name":{},"text":{"4":{},"24":{},"27":{},"28":{}},"component":{}}],["semi",{"_index":2419,"title":{"16-190":{}},"name":{},"text":{"24":{}},"component":{}}],["semicolon",{"_index":3511,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["send",{"_index":1974,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sender",{"_index":4110,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["sender_host",{"_index":4529,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sender_port",{"_index":4530,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sender’",{"_index":4111,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sens",{"_index":5048,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["sensibl",{"_index":2946,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["sensit",{"_index":1626,"title":{},"name":{},"text":{"13":{},"23":{},"27":{}},"component":{}}],["sent",{"_index":2030,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"28":{}},"component":{}}],["sent_lsn",{"_index":4466,"title":{},"name":{},"text":{"23":{},"24":{},"26":{}},"component":{}}],["sentenc",{"_index":2090,"title":{},"name":{},"text":{"15":{}},"component":{}}],["sep",{"_index":3537,"title":{},"name":{},"text":{"16":{}},"component":{}}],["separ",{"_index":486,"title":{},"name":{},"text":{"2":{},"5":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["separately.a",{"_index":3154,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seq",{"_index":3858,"title":{},"name":{},"text":{"19":{},"23":{},"27":{},"28":{}},"component":{}}],["seq.nextv",{"_index":3859,"title":{},"name":{},"text":{"19":{}},"component":{}}],["seq_page_cost",{"_index":6649,"title":{},"name":{},"text":{"28":{}},"component":{}}],["seq_scan",{"_index":4637,"title":{},"name":{},"text":{"23":{}},"component":{}}],["seq_tup_read",{"_index":4638,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sequenc",{"_index":314,"title":{"19":{},"27-160":{}},"name":{},"text":{"2":{},"11":{},"16":{},"19":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sequence.command",{"_index":3585,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sequence_sh.sql",{"_index":670,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sequence`sequ",{"_index":6162,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sequenti",{"_index":4609,"title":{},"name":{},"text":{"23":{},"27":{},"28":{}},"component":{}}],["seri",{"_index":1990,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"28":{}},"component":{}}],["serial",{"_index":3125,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["serialbuff",{"_index":4418,"title":{},"name":{},"text":{"23":{}},"component":{}}],["serializ",{"_index":3353,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["serializablefinishedlist",{"_index":4419,"title":{},"name":{},"text":{"23":{}},"component":{}}],["serializablepredicatelist",{"_index":4420,"title":{},"name":{},"text":{"23":{}},"component":{}}],["serializablexacthash",{"_index":4424,"title":{},"name":{},"text":{"23":{}},"component":{}}],["serialization/deadlock",{"_index":3130,"title":{},"name":{},"text":{"16":{}},"component":{}}],["serialization_failur",{"_index":5823,"title":{},"name":{},"text":{"27":{}},"component":{}}],["serialization_failure`.thi",{"_index":3357,"title":{},"name":{},"text":{"16":{}},"component":{}}],["serialslru",{"_index":4425,"title":{},"name":{},"text":{"23":{}},"component":{}}],["seriou",{"_index":5338,"title":{},"name":{},"text":{"24":{}},"component":{}}],["serv",{"_index":2592,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["server",{"_index":237,"title":{"16-122":{},"16-148":{},"16-149":{},"16-150":{},"16-151":{},"24-20":{},"24-22":{},"24-23":{},"24-24":{}},"name":{},"text":{"2":{},"10":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["server(",{"_index":5191,"title":{},"name":{},"text":{"24":{}},"component":{}}],["server).needless",{"_index":6541,"title":{},"name":{},"text":{"28":{}},"component":{}}],["server).th",{"_index":3013,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.each",{"_index":3503,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.pg_basebackup",{"_index":2466,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.th",{"_index":3504,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.thi",{"_index":3026,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.when",{"_index":2935,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server.x86_64",{"_index":5362,"title":{},"name":{},"text":{"25":{}},"component":{}}],["server1",{"_index":4066,"title":{},"name":{},"text":{"23":{}},"component":{}}],["server:/some/path",{"_index":2901,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server:`simpl",{"_index":3133,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server=`connstr",{"_index":3717,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server=connstr",{"_index":3719,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server’",{"_index":2883,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["servic",{"_index":2599,"title":{},"name":{},"text":{"16":{},"22":{},"25":{},"28":{}},"component":{}}],["servicenam",{"_index":3608,"title":{},"name":{},"text":{"16":{}},"component":{}}],["session",{"_index":63,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["session.in",{"_index":3365,"title":{},"name":{},"text":{"16":{}},"component":{}}],["session_tim",{"_index":4622,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sessions_abandon",{"_index":4626,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sessions_fat",{"_index":4627,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sessions_kil",{"_index":4628,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sessiontimezon",{"_index":1453,"title":{"27-176":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["session’",{"_index":4409,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["set",{"_index":62,"title":{"24-24":{},"26-4":{},"26-10":{},"27-84":{},"27-89":{},"28-55":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"11":{},"13":{},"16":{},"18":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["set/reset/reset",{"_index":1087,"title":{},"name":{},"text":{"6":{}},"component":{}}],["setof",{"_index":4691,"title":{},"name":{},"text":{"23":{}},"component":{}}],["setup",{"_index":2584,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["setval",{"_index":5284,"title":{},"name":{},"text":{"24":{}},"component":{}}],["seven",{"_index":6863,"title":{},"name":{},"text":{"28":{}},"component":{}}],["seventh",{"_index":1853,"title":{"15-33":{}},"name":{},"text":{},"component":{}}],["sever",{"_index":2519,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sevic",{"_index":5434,"title":{"26-5":{},"26-11":{}},"name":{},"text":{},"component":{}}],["sh",{"_index":203,"title":{"2-15":{},"2-16":{}},"name":{},"text":{"2":{},"3":{}},"component":{}}],["sh','scott','hr",{"_index":449,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.channel",{"_index":756,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.custom",{"_index":757,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.fweek_pscat_sales_mv",{"_index":746,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.product",{"_index":755,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.sale",{"_index":744,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh.sql",{"_index":477,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh_data.conf",{"_index":632,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sh_data.sql",{"_index":637,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sha",{"_index":2992,"title":{},"name":{},"text":{"16":{},"25":{}},"component":{}}],["sha224",{"_index":2987,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sha256",{"_index":2988,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sha384",{"_index":2989,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sha512",{"_index":2990,"title":{},"name":{},"text":{"16":{}},"component":{}}],["shall",{"_index":2769,"title":{},"name":{},"text":{"16":{}},"component":{}}],["shape",{"_index":3597,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["share",{"_index":112,"title":{"24-12":{}},"name":{},"text":{"1":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["shared_buff",{"_index":4835,"title":{},"name":{},"text":{"23":{}},"component":{}}],["shared_preload_librari",{"_index":1117,"title":{},"name":{},"text":{"6":{}},"component":{}}],["sharedir",{"_index":3214,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sharedlock",{"_index":6447,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sharedtidbitmap",{"_index":4426,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sharedtuplestor",{"_index":4428,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sharing_claus",{"_index":1395,"title":{},"name":{},"text":{"12":{}},"component":{}}],["shawn",{"_index":160,"title":{},"name":{},"text":{"1":{}},"component":{}}],["shell",{"_index":2517,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["shell’",{"_index":5723,"title":{},"name":{},"text":{"27":{}},"component":{}}],["shiji",{"_index":162,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ship",{"_index":2464,"title":{"24-14":{},"24-20":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["shmemindex",{"_index":4429,"title":{},"name":{},"text":{"23":{}},"component":{}}],["shoot",{"_index":5269,"title":{},"name":{},"text":{"24":{}},"component":{}}],["short",{"_index":3638,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["shorter",{"_index":4077,"title":{},"name":{},"text":{"23":{}},"component":{}}],["shorthand",{"_index":3138,"title":{},"name":{},"text":{"16":{}},"component":{}}],["shoubo",{"_index":164,"title":{},"name":{},"text":{"1":{}},"component":{}}],["shouldn’t",{"_index":5808,"title":{},"name":{},"text":{"27":{}},"component":{}}],["show",{"_index":1084,"title":{"16-151":{}},"name":{},"text":{"6":{},"16":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["show_report",{"_index":518,"title":{},"name":{},"text":{"2":{}},"component":{}}],["show_vers",{"_index":500,"title":{},"name":{},"text":{"2":{}},"component":{}}],["shown",{"_index":2158,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["shrink",{"_index":4981,"title":{},"name":{},"text":{"24":{}},"component":{}}],["shuntian",{"_index":165,"title":{},"name":{},"text":{"1":{}},"component":{}}],["shut",{"_index":2609,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["shutdown",{"_index":2623,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["shutdown.if",{"_index":3639,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sibl",{"_index":4449,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sid=prod1;port=1521",{"_index":635,"title":{},"name":{},"text":{"2":{}},"component":{}}],["side",{"_index":192,"title":{"2-11":{}},"name":{},"text":{"2":{},"10":{},"13":{},"15":{},"16":{},"17":{},"27":{},"28":{}},"component":{}}],["side)gener",{"_index":3065,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sidestep",{"_index":6073,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sighup",{"_index":5128,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sigint",{"_index":3464,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sign",{"_index":2100,"title":{},"name":{},"text":{"15":{},"16":{},"27":{}},"component":{}}],["signal",{"_index":3465,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["signal_nam",{"_index":3605,"title":{},"name":{},"text":{"16":{}},"component":{}}],["signatur",{"_index":6586,"title":{},"name":{},"text":{"28":{}},"component":{}}],["signific",{"_index":897,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["significantli",{"_index":2661,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["silent",{"_index":3631,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["silli",{"_index":6081,"title":{},"name":{},"text":{"27":{}},"component":{}}],["similar",{"_index":915,"title":{},"name":{},"text":{"4":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["similarli",{"_index":1057,"title":{},"name":{},"text":{"5":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["simpl",{"_index":621,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["simpler",{"_index":3889,"title":{},"name":{},"text":{"21":{},"28":{}},"component":{}}],["simpli",{"_index":292,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["simplifi",{"_index":3890,"title":{},"name":{},"text":{"21":{},"27":{}},"component":{}}],["simul",{"_index":3103,"title":{},"name":{},"text":{"16":{}},"component":{}}],["simultan",{"_index":3266,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["singl",{"_index":2102,"title":{"16-191":{},"16-196":{},"28-38":{}},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sinvalread",{"_index":4430,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sinvalwrit",{"_index":4431,"title":{},"name":{},"text":{"23":{}},"component":{}}],["site",{"_index":32,"title":{},"name":{},"text":{"1":{},"15":{},"24":{},"27":{},"28":{}},"component":{}}],["situat",{"_index":1050,"title":{},"name":{},"text":{"5":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["situations.)pg_upgrad",{"_index":2698,"title":{},"name":{},"text":{"16":{}},"component":{}}],["six",{"_index":5855,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["sixth",{"_index":1849,"title":{"15-32":{}},"name":{},"text":{},"component":{}}],["size",{"_index":524,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["skew",{"_index":4100,"title":{},"name":{},"text":{"23":{}},"component":{}}],["skim",{"_index":4966,"title":{},"name":{},"text":{"24":{}},"component":{}}],["skip",{"_index":470,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["skip=`opt",{"_index":2838,"title":{},"name":{},"text":{"16":{}},"component":{}}],["skip_fpw",{"_index":4542,"title":{},"name":{},"text":{"23":{}},"component":{}}],["skip_init",{"_index":4539,"title":{},"name":{},"text":{"23":{}},"component":{}}],["skip_new",{"_index":4540,"title":{},"name":{},"text":{"23":{}},"component":{}}],["skip_rep",{"_index":4543,"title":{},"name":{},"text":{"23":{}},"component":{}}],["skipped.when",{"_index":3123,"title":{},"name":{},"text":{"16":{}},"component":{}}],["skytool",{"_index":3669,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slash",{"_index":2718,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["sleep",{"_index":3637,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slice",{"_index":5928,"title":{},"name":{},"text":{"27":{}},"component":{}}],["slightli",{"_index":3009,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["slon",{"_index":5858,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sloni",{"_index":3668,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["slot",{"_index":2540,"title":{"24-28":{},"24-29":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["slot=slot_nam",{"_index":3489,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slot=slotnam",{"_index":2980,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slot_nam",{"_index":3488,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["slot_typ",{"_index":5234,"title":{},"name":{},"text":{"24":{}},"component":{}}],["slotnam",{"_index":2979,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slots.it",{"_index":2541,"title":{},"name":{},"text":{"16":{}},"component":{}}],["slots.thi",{"_index":4713,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slot’",{"_index":97,"title":{},"name":{},"text":{"1":{},"23":{}},"component":{}}],["slow",{"_index":2686,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["slower",{"_index":3332,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["slowli",{"_index":4970,"title":{},"name":{},"text":{"24":{}},"component":{}}],["slru",{"_index":4133,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slruflushsync",{"_index":4267,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slruread",{"_index":4268,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slrusync",{"_index":4269,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slruwrit",{"_index":4270,"title":{},"name":{},"text":{"23":{}},"component":{}}],["slug",{"_index":2188,"title":{},"name":{},"text":{"15":{}},"component":{}}],["small",{"_index":959,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["smaller",{"_index":3022,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["smallest",{"_index":3661,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["smallint",{"_index":5745,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["smart",{"_index":3623,"title":{},"name":{},"text":{"16":{}},"component":{}}],["smgr",{"_index":4839,"title":{},"name":{},"text":{"23":{}},"component":{}}],["smooth",{"_index":250,"title":{},"name":{},"text":{"2":{}},"component":{}}],["smoothli",{"_index":5341,"title":{},"name":{},"text":{"24":{}},"component":{}}],["snapbuildread",{"_index":4271,"title":{},"name":{},"text":{"23":{}},"component":{}}],["snapbuildsync",{"_index":4272,"title":{},"name":{},"text":{"23":{}},"component":{}}],["snapbuildwrit",{"_index":4273,"title":{},"name":{},"text":{"23":{}},"component":{}}],["snapshot",{"_index":572,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["snapshot=`snapshotnam",{"_index":3364,"title":{},"name":{},"text":{"16":{}},"component":{}}],["snapshot_id",{"_index":5821,"title":{},"name":{},"text":{"27":{}},"component":{}}],["so.)for",{"_index":2590,"title":{},"name":{},"text":{"16":{}},"component":{}}],["socket",{"_index":2720,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"26":{},"27":{}},"component":{}}],["soft",{"_index":3613,"title":{},"name":{},"text":{"16":{}},"component":{}}],["softwar",{"_index":412,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"22":{},"24":{},"28":{},"29":{}},"component":{}}],["solari",{"_index":4074,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sole",{"_index":5054,"title":{},"name":{},"text":{"24":{}},"component":{}}],["solid",{"_index":1349,"title":{},"name":{},"text":{"11":{}},"component":{}}],["solut",{"_index":940,"title":{"24-11":{}},"name":{},"text":{"4":{},"11":{},"24":{},"27":{},"28":{}},"component":{}}],["solv",{"_index":1927,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["some/path",{"_index":2902,"title":{},"name":{},"text":{"16":{}},"component":{}}],["some2",{"_index":2140,"title":{},"name":{},"text":{"15":{}},"component":{}}],["somebodi",{"_index":3279,"title":{},"name":{},"text":{"16":{}},"component":{}}],["somefunc",{"_index":6061,"title":{},"name":{},"text":{"27":{}},"component":{}}],["somehow",{"_index":6603,"title":{},"name":{},"text":{"28":{}},"component":{}}],["someon",{"_index":2442,"title":{},"name":{},"text":{"16":{}},"component":{}}],["someremotehost",{"_index":3447,"title":{},"name":{},"text":{"16":{}},"component":{}}],["someremotehost:5432",{"_index":3448,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sometag$dianne'",{"_index":5900,"title":{},"name":{},"text":{"27":{}},"component":{}}],["someth",{"_index":2536,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["somethingels",{"_index":6881,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sometim",{"_index":2625,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["somewhat",{"_index":5052,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["somewher",{"_index":3574,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["soon",{"_index":1562,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"24":{},"27":{}},"component":{}}],["sophist",{"_index":5138,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sort",{"_index":587,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sourc",{"_index":9,"title":{"1-3":{},"2-11":{},"3-3":{},"4-6":{},"16-174":{},"25-5":{},"25-13":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"11":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["space",{"_index":981,"title":{"24-3":{}},"name":{},"text":{"4":{},"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sparser",{"_index":972,"title":{},"name":{},"text":{"4":{}},"component":{}}],["spatial",{"_index":881,"title":{},"name":{},"text":{"3":{}},"component":{}}],["speak",{"_index":5843,"title":{},"name":{},"text":{"27":{}},"component":{}}],["speci",{"_index":3560,"title":{},"name":{},"text":{"16":{}},"component":{}}],["special",{"_index":1792,"title":{"27-112":{}},"name":{},"text":{"13":{},"15":{},"16":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["species_record",{"_index":3564,"title":{},"name":{},"text":{"16":{}},"component":{}}],["specif",{"_index":492,"title":{"15-41":{},"15-49":{},"15-50":{},"20-3":{},"20-10":{}},"name":{},"text":{"2":{},"5":{},"15":{},"16":{},"18":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["specifi",{"_index":1209,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["specification.th",{"_index":3866,"title":{},"name":{},"text":{"20":{}},"component":{}}],["specification](#7.4",{"_index":2170,"title":{},"name":{},"text":{"15":{}},"component":{}}],["specified.th",{"_index":3469,"title":{},"name":{},"text":{"16":{}},"component":{}}],["specified.thi",{"_index":3240,"title":{},"name":{},"text":{"16":{}},"component":{}}],["specified.when",{"_index":3492,"title":{},"name":{},"text":{"16":{}},"component":{}}],["spectoken",{"_index":4362,"title":{},"name":{},"text":{"23":{}},"component":{}}],["specul",{"_index":4363,"title":{},"name":{},"text":{"23":{}},"component":{}}],["speed",{"_index":924,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["spell",{"_index":2084,"title":{},"name":{},"text":{"15":{},"16":{},"27":{}},"component":{}}],["spend",{"_index":1986,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["spent",{"_index":3150,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["spike",{"_index":4987,"title":{},"name":{},"text":{"24":{}},"component":{}}],["spill",{"_index":4500,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["spill_byt",{"_index":4504,"title":{},"name":{},"text":{"23":{}},"component":{}}],["spill_count",{"_index":4503,"title":{},"name":{},"text":{"23":{}},"component":{}}],["spill_txn",{"_index":4498,"title":{},"name":{},"text":{"23":{}},"component":{}}],["split",{"_index":5172,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["spread",{"_index":2959,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["spreadsheet",{"_index":6579,"title":{},"name":{},"text":{"28":{}},"component":{}}],["spuriou",{"_index":2000,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["sq",{"_index":6163,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sq.currval",{"_index":6165,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sq.nextval",{"_index":6164,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sql",{"_index":236,"title":{"24-17":{},"27-100":{},"28-16":{}},"name":{},"text":{"2":{},"8":{},"11":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sql/med",{"_index":531,"title":{},"name":{},"text":{"2":{},"28":{}},"component":{}}],["sql_ascii",{"_index":712,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sql_macro_claus",{"_index":1401,"title":{},"name":{},"text":{"12":{}},"component":{}}],["sql_standard",{"_index":6568,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sqlerrm",{"_index":6378,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sqlite",{"_index":806,"title":{},"name":{},"text":{"3":{}},"component":{}}],["sqlite3",{"_index":824,"title":{},"name":{},"text":{"3":{}},"component":{}}],["sqlite3.c",{"_index":817,"title":{},"name":{},"text":{"3":{}},"component":{}}],["sqlite_enable_column_metadata",{"_index":816,"title":{},"name":{},"text":{"3":{}},"component":{}}],["sqrt(2",{"_index":5975,"title":{},"name":{},"text":{"27":{}},"component":{}}],["squar",{"_index":5974,"title":{},"name":{},"text":{"27":{}},"component":{}}],["src/backend/utils/adt",{"_index":6601,"title":{},"name":{},"text":{"28":{}},"component":{}}],["src/backend/utils/probes.d",{"_index":4872,"title":{},"name":{},"text":{"23":{}},"component":{}}],["src/include/pg_config_manual.h",{"_index":5850,"title":{},"name":{},"text":{"27":{}},"component":{}}],["src/include/utils/probes.h",{"_index":4812,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ss",{"_index":4035,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["ss.reltoastrelid",{"_index":4907,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ss_old",{"_index":3566,"title":{},"name":{},"text":{"16":{}},"component":{}}],["ssl",{"_index":55,"title":{},"name":{},"text":{"1":{},"16":{},"23":{}},"component":{}}],["sslopenserv",{"_index":4218,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stabl",{"_index":274,"title":{},"name":{},"text":{"2":{}},"component":{}}],["stack",{"_index":3615,"title":{},"name":{},"text":{"16":{}},"component":{}}],["stacktrac",{"_index":2163,"title":{},"name":{},"text":{"15":{}},"component":{}}],["staff",{"_index":2224,"title":{},"name":{},"text":{"15":{},"28":{}},"component":{}}],["stage",{"_index":2562,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["stale",{"_index":4668,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stamp",{"_index":6179,"title":{},"name":{},"text":{"27":{}},"component":{}}],["standalon",{"_index":2607,"title":{},"name":{},"text":{"16":{}},"component":{}}],["standard",{"_index":581,"title":{"23-2":{}},"name":{},"text":{"2":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["standard_conforming_str",{"_index":5886,"title":{},"name":{},"text":{"27":{}},"component":{}}],["standbi",{"_index":2465,"title":{"24-16":{},"24-20":{},"24-22":{},"24-23":{},"24-24":{},"24-34":{},"24-37":{},"24-39":{},"24-43":{},"26-6":{}},"name":{},"text":{"16":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["standby.sign",{"_index":2893,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["standby.th",{"_index":2982,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["standby’",{"_index":4458,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["start",{"_index":1216,"title":{"22":{},"15-7":{},"16-148":{},"17-2":{},"25-7":{},"26-2":{},"26-11":{},"27-27":{},"27-95":{},"29-1":{}},"name":{},"text":{"8":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["start/commit",{"_index":5797,"title":{},"name":{},"text":{"27":{}},"component":{}}],["start/stop",{"_index":3303,"title":{},"name":{},"text":{"16":{}},"component":{}}],["start[\"start",{"_index":4857,"title":{},"name":{},"text":{"23":{}},"component":{}}],["startblock=`block",{"_index":2843,"title":{},"name":{},"text":{"16":{}},"component":{}}],["starting/stop",{"_index":6499,"title":{},"name":{},"text":{"28":{}},"component":{}}],["startpos=lsn",{"_index":3484,"title":{},"name":{},"text":{"16":{}},"component":{}}],["starttransactioncommand",{"_index":4883,"title":{},"name":{},"text":{"23":{}},"component":{}}],["startup",{"_index":1215,"title":{},"name":{},"text":{"8":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["stat",{"_index":3897,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["state",{"_index":72,"title":{},"name":{},"text":{"1":{},"2":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["state_chang",{"_index":4163,"title":{},"name":{},"text":{"23":{}},"component":{}}],["statement",{"_index":1213,"title":{"27-276":{}},"name":{},"text":{"8":{},"10":{},"16":{},"18":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["statement.`questionmark",{"_index":2792,"title":{},"name":{},"text":{"16":{}},"component":{}}],["statement_sysd",{"_index":6216,"title":{},"name":{},"text":{"27":{}},"component":{}}],["statement_timeout",{"_index":3341,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["statement_timestamp",{"_index":6177,"title":{},"name":{},"text":{"27":{}},"component":{}}],["statements.in",{"_index":3135,"title":{},"name":{},"text":{"16":{}},"component":{}}],["states.nam",{"_index":6011,"title":{},"name":{},"text":{"27":{}},"component":{}}],["static",{"_index":3199,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["statist",{"_index":113,"title":{"23-3":{},"23-4":{},"23-5":{},"23-27":{},"24-4":{},"28-37":{},"28-38":{},"28-39":{}},"name":{},"text":{"1":{},"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["stats_fetch_consist",{"_index":4101,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stats_reset",{"_index":4513,"title":{},"name":{},"text":{"23":{}},"component":{}}],["statu",{"_index":2277,"title":{"16-55":{},"16-77":{},"16-84":{},"16-107":{},"16-151":{},"26-13":{}},"name":{},"text":{"16":{},"22":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["stay",{"_index":5203,"title":{},"name":{},"text":{"24":{}},"component":{}}],["stderr",{"_index":3196,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["stdin",{"_index":4797,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["stdout",{"_index":2869,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["stdout.thi",{"_index":2881,"title":{},"name":{},"text":{"16":{}},"component":{}}],["steadi",{"_index":4980,"title":{},"name":{},"text":{"24":{}},"component":{}}],["step",{"_index":2056,"title":{},"name":{},"text":{"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["steps=init_step",{"_index":3058,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sticki",{"_index":1371,"title":{},"name":{},"text":{"11":{}},"component":{}}],["still",{"_index":103,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["stonith",{"_index":5268,"title":{},"name":{},"text":{"24":{}},"component":{}}],["stop",{"_index":2369,"title":{"16-149":{},"26-3":{},"26-8":{}},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["storag",{"_index":1095,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"21":{},"22":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["store",{"_index":509,"title":{"12":{}},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["stored/read",{"_index":6585,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stori",{"_index":4138,"title":{},"name":{},"text":{"23":{}},"component":{}}],["str",{"_index":6266,"title":{},"name":{},"text":{"27":{}},"component":{}}],["str,[fmt",{"_index":6265,"title":{},"name":{},"text":{"27":{}},"component":{}}],["str1",{"_index":1234,"title":{},"name":{},"text":{"9":{}},"component":{}}],["str2",{"_index":1238,"title":{},"name":{},"text":{"9":{}},"component":{}}],["straightforwardli",{"_index":6652,"title":{},"name":{},"text":{"28":{}},"component":{}}],["strang",{"_index":6583,"title":{},"name":{},"text":{"28":{}},"component":{}}],["strategi",{"_index":3702,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["stream",{"_index":335,"title":{"24-25":{},"26-9":{},"28-52":{}},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["stream_bytes``bigint`amount",{"_index":4510,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stream_count``bigint`numb",{"_index":4509,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stream_txn",{"_index":4507,"title":{},"name":{},"text":{"23":{}},"component":{}}],["stream`stream",{"_index":2934,"title":{},"name":{},"text":{"16":{}},"component":{}}],["strengthen",{"_index":2059,"title":{},"name":{},"text":{"15":{}},"component":{}}],["strict",{"_index":416,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"27":{}},"component":{}}],["strictli",{"_index":5006,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["string",{"_index":1093,"title":{"27-104":{},"27-105":{},"27-106":{},"27-107":{},"27-108":{}},"name":{},"text":{"6":{},"9":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["string'::typ",{"_index":5922,"title":{},"name":{},"text":{"27":{}},"component":{}}],["string_agg",{"_index":5989,"title":{},"name":{},"text":{"27":{}},"component":{}}],["string_agg(a",{"_index":5991,"title":{},"name":{},"text":{"27":{}},"component":{}}],["strive",{"_index":4971,"title":{},"name":{},"text":{"24":{}},"component":{}}],["strong",{"_index":1330,"title":{},"name":{},"text":{"11":{},"16":{}},"component":{}}],["strongli",{"_index":1316,"title":{},"name":{},"text":{"11":{},"16":{},"28":{}},"component":{}}],["struct",{"_index":88,"title":{},"name":{},"text":{"1":{}},"component":{}}],["structur",{"_index":195,"title":{"2-12":{},"2-15":{},"2-19":{},"2-21":{},"27-101":{},"27-255":{}},"name":{},"text":{"2":{},"4":{},"10":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["stts2",{"_index":6800,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stts3",{"_index":6811,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stuck",{"_index":6882,"title":{},"name":{},"text":{"28":{}},"component":{}}],["student",{"_index":6155,"title":{},"name":{},"text":{"27":{}},"component":{}}],["student_id",{"_index":6156,"title":{},"name":{},"text":{"27":{}},"component":{}}],["student_id,student_nam",{"_index":6154,"title":{},"name":{},"text":{"27":{}},"component":{}}],["student_nam",{"_index":6151,"title":{},"name":{},"text":{"27":{}},"component":{}}],["student_pid",{"_index":6153,"title":{},"name":{},"text":{"27":{}},"component":{}}],["students(student_id",{"_index":6149,"title":{},"name":{},"text":{"27":{}},"component":{}}],["students.student_nam",{"_index":6157,"title":{},"name":{},"text":{"27":{}},"component":{}}],["stxdndistinct",{"_index":6802,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stxkey",{"_index":6801,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stxname",{"_index":6807,"title":{},"name":{},"text":{"28":{}},"component":{}}],["stxoid",{"_index":6806,"title":{},"name":{},"text":{"28":{}},"component":{}}],["style",{"_index":2098,"title":{"27-105":{}},"name":{},"text":{"15":{},"16":{},"27":{},"28":{}},"component":{}}],["su",{"_index":697,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["sub",{"_index":3809,"title":{},"name":{},"text":{"18":{},"23":{},"27":{}},"component":{}}],["subclass",{"_index":5993,"title":{},"name":{},"text":{"27":{}},"component":{}}],["subdirectori",{"_index":2923,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["subexpress",{"_index":5951,"title":{},"name":{},"text":{"27":{}},"component":{}}],["subid",{"_index":4545,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subject",{"_index":2542,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["submiss",{"_index":1839,"title":{"15-19":{},"17-6":{}},"name":{},"text":{"15":{}},"component":{}}],["submit",{"_index":1842,"title":{"15-22":{},"15-25":{},"15-34":{},"15-45":{},"15-50":{}},"name":{},"text":{"15":{},"16":{},"17":{}},"component":{}}],["submitt",{"_index":1904,"title":{},"name":{},"text":{"15":{}},"component":{}}],["submitters/maintain",{"_index":1923,"title":{},"name":{},"text":{"15":{}},"component":{}}],["subnam",{"_index":4546,"title":{},"name":{},"text":{"23":{}},"component":{}}],["suboptim",{"_index":5782,"title":{},"name":{},"text":{"27":{}},"component":{}}],["subphas",{"_index":4766,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subplan",{"_index":4295,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["subprogram",{"_index":3864,"title":{},"name":{},"text":{"20":{}},"component":{}}],["subqueri",{"_index":5564,"title":{"27-126":{}},"name":{},"text":{"27":{},"28":{}},"component":{}}],["subquery’",{"_index":6039,"title":{},"name":{},"text":{"27":{}},"component":{}}],["subscrib",{"_index":3394,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["subscript",{"_index":3342,"title":{"27-118":{}},"name":{},"text":{"16":{},"23":{},"27":{}},"component":{}}],["subscriptions.thi",{"_index":4715,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subsect",{"_index":3055,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["subsequ",{"_index":2600,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["subset",{"_index":919,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["subsidiari",{"_index":3526,"title":{},"name":{},"text":{"16":{}},"component":{}}],["substanti",{"_index":4972,"title":{},"name":{},"text":{"24":{}},"component":{}}],["substitut",{"_index":2639,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["substr",{"_index":1429,"title":{},"name":{},"text":{"13":{}},"component":{}}],["substr('it",{"_index":1542,"title":{},"name":{},"text":{"13":{}},"component":{}}],["substrb",{"_index":1430,"title":{},"name":{},"text":{"13":{}},"component":{}}],["substrb('it",{"_index":1548,"title":{},"name":{},"text":{"13":{}},"component":{}}],["subtract",{"_index":3151,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["subtran",{"_index":4707,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subtransact",{"_index":4502,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["subtransbuff",{"_index":4432,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subtransslru",{"_index":4433,"title":{},"name":{},"text":{"23":{}},"component":{}}],["subtre",{"_index":3568,"title":{},"name":{},"text":{"16":{}},"component":{}}],["subvers",{"_index":345,"title":{},"name":{},"text":{"2":{}},"component":{}}],["succe",{"_index":3641,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["succeed.notethi",{"_index":3520,"title":{},"name":{},"text":{"16":{}},"component":{}}],["success",{"_index":2154,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["successfulli",{"_index":1146,"title":{},"name":{},"text":{"6":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["such",{"_index":935,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["sudden",{"_index":5022,"title":{},"name":{},"text":{"24":{}},"component":{}}],["suddenli",{"_index":5031,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sudo",{"_index":996,"title":{},"name":{},"text":{"4":{},"22":{},"25":{},"26":{}},"component":{}}],["suffer",{"_index":5021,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["suffici",{"_index":2593,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["suffix",{"_index":2938,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["suggest",{"_index":1003,"title":{},"name":{},"text":{"4":{},"24":{},"27":{},"28":{}},"component":{}}],["suit",{"_index":785,"title":{},"name":{},"text":{"3":{},"25":{},"27":{},"28":{}},"component":{}}],["suitabl",{"_index":1331,"title":{},"name":{},"text":{"11":{},"16":{},"24":{},"28":{}},"component":{}}],["sum",{"_index":3142,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["sum(timestamp",{"_index":4862,"title":{},"name":{},"text":{"23":{}},"component":{}}],["summar",{"_index":5164,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["summari",{"_index":1813,"title":{"15-1":{}},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["sunday",{"_index":6188,"title":{},"name":{},"text":{"27":{}},"component":{}}],["superfici",{"_index":6869,"title":{},"name":{},"text":{"28":{}},"component":{}}],["superus",{"_index":2439,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["superuser.)dropus",{"_index":2446,"title":{},"name":{},"text":{"16":{}},"component":{}}],["superuser.thi",{"_index":3314,"title":{},"name":{},"text":{"16":{}},"component":{}}],["superuser=`usernam",{"_index":3297,"title":{},"name":{},"text":{"16":{}},"component":{}}],["superuser=usernam",{"_index":3422,"title":{},"name":{},"text":{"16":{}},"component":{}}],["superuser_reserved_connect",{"_index":5095,"title":{},"name":{},"text":{"24":{}},"component":{}}],["supplement",{"_index":4964,"title":{},"name":{},"text":{"24":{}},"component":{}}],["supplementary_demograph",{"_index":593,"title":{},"name":{},"text":{"2":{}},"component":{}}],["suppli",{"_index":2678,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["support",{"_index":270,"title":{"21-7":{},"27-256":{}},"name":{},"text":{"2":{},"4":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["support@ivorysql.org",{"_index":6901,"title":{},"name":{},"text":{"29":{}},"component":{}}],["suppos",{"_index":3200,"title":{},"name":{},"text":{"16":{}},"component":{}}],["suppress",{"_index":2830,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sure",{"_index":789,"title":{},"name":{},"text":{"3":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["surrog",{"_index":5865,"title":{},"name":{},"text":{"27":{}},"component":{}}],["surround",{"_index":3626,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["surviv",{"_index":5259,"title":{},"name":{},"text":{"24":{}},"component":{}}],["suspend",{"_index":5779,"title":{},"name":{},"text":{"27":{}},"component":{}}],["suspicion",{"_index":2646,"title":{},"name":{},"text":{"16":{}},"component":{}}],["swap",{"_index":4787,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["switch",{"_index":1219,"title":{},"name":{},"text":{"8":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["switches.when",{"_index":3513,"title":{},"name":{},"text":{"16":{}},"component":{}}],["switchov",{"_index":5287,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["syear",{"_index":6243,"title":{},"name":{},"text":{"27":{}},"component":{}}],["symbol",{"_index":1793,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"27":{}},"component":{}}],["sync",{"_index":2682,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["sync_error_count",{"_index":4550,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sync_prior",{"_index":4480,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["sync_stat",{"_index":4484,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["synchron",{"_index":2079,"title":{"24-19":{},"24-32":{},"24-34":{}},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"26":{},"28":{}},"component":{}}],["synchronous.quorum",{"_index":4489,"title":{},"name":{},"text":{"23":{}},"component":{}}],["synchronous_commit",{"_index":2531,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["synchronous_standby_nam",{"_index":2534,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["syncrep",{"_index":4354,"title":{},"name":{},"text":{"23":{}},"component":{}}],["syncscan",{"_index":4434,"title":{},"name":{},"text":{"23":{}},"component":{}}],["synonym",{"_index":321,"title":{},"name":{},"text":{"2":{}},"component":{}}],["synonym_sh.sql",{"_index":687,"title":{},"name":{},"text":{"2":{}},"component":{}}],["synopsi",{"_index":2227,"title":{"16-4":{},"16-10":{},"16-16":{},"16-22":{},"16-28":{},"16-34":{},"16-39":{},"16-43":{},"16-49":{},"16-58":{},"16-62":{},"16-69":{},"16-75":{},"16-82":{},"16-89":{},"16-94":{},"16-101":{},"16-105":{},"16-109":{},"16-116":{},"16-124":{},"16-129":{},"16-134":{},"16-139":{},"16-142":{},"16-153":{},"16-158":{},"16-165":{},"16-169":{},"16-177":{},"16-182":{},"16-187":{},"27-21":{},"27-28":{},"27-35":{},"27-42":{},"27-49":{},"27-56":{},"27-64":{},"27-71":{},"27-78":{},"27-85":{},"27-90":{},"27-96":{},"28-23":{}},"name":{},"text":{},"component":{}}],["syntact",{"_index":5837,"title":{},"name":{},"text":{"27":{}},"component":{}}],["syntax",{"_index":269,"title":{"27-138":{},"27-142":{},"27-146":{},"27-154":{},"27-161":{},"27-245":{},"27-252":{},"27-257":{},"27-264":{},"27-269":{}},"name":{},"text":{"2":{},"5":{},"8":{},"10":{},"11":{},"12":{},"16":{},"18":{},"27":{},"28":{}},"component":{}}],["syntax_error",{"_index":6376,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sys/devices/system/clocksource/clocksource0/available_clocksourc",{"_index":3764,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sys/devices/system/clocksource/clocksource0/current_clocksourc",{"_index":3759,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sys@prod1>select",{"_index":444,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sys@prod1>set",{"_index":441,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sys_connect_by_path(col",{"_index":6424,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sys_extract_utc",{"_index":1452,"title":{"27-172":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["sys_extract_utc('2018",{"_index":6180,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sys_extract_utc(timestamp",{"_index":1749,"title":{},"name":{},"text":{"13":{}},"component":{}}],["sysadmin",{"_index":5241,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sysconfdir",{"_index":3215,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sysdat",{"_index":1417,"title":{"27-191":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["sysdate()+to_dsinterval('0",{"_index":1716,"title":{},"name":{},"text":{"13":{}},"component":{}}],["syslog",{"_index":5133,"title":{},"name":{},"text":{"24":{}},"component":{}}],["syslogg",{"_index":4209,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sysloggermain",{"_index":4208,"title":{},"name":{},"text":{"23":{}},"component":{}}],["system",{"_index":254,"title":{"23-3":{},"24-13":{},"28-20":{}},"name":{},"text":{"2":{},"10":{},"11":{},"13":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["systemctl",{"_index":5435,"title":{},"name":{},"text":{"26":{}},"component":{}}],["systemtap",{"_index":4809,"title":{},"name":{},"text":{"23":{}},"component":{}}],["system’",{"_index":4607,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["systimestamp",{"_index":1418,"title":{"27-169":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["syyyi",{"_index":6242,"title":{},"name":{},"text":{"27":{}},"component":{}}],["t",{"_index":499,"title":{},"name":{},"text":{"2":{},"13":{},"16":{},"18":{},"24":{},"27":{},"28":{}},"component":{}}],["t.f2",{"_index":6045,"title":{},"name":{},"text":{"27":{}},"component":{}}],["t.oid",{"_index":5068,"title":{},"name":{},"text":{"24":{}},"component":{}}],["t1",{"_index":6685,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t1.unique1",{"_index":6714,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t1.unique2",{"_index":6692,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t2",{"_index":6690,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t2.unique2",{"_index":6703,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t\\r\\n\\v",{"_index":5903,"title":{},"name":{},"text":{"27":{}},"component":{}}],["t_ora_lik",{"_index":1233,"title":{},"name":{},"text":{"9":{}},"component":{}}],["t_regexp_lik",{"_index":1640,"title":{},"name":{},"text":{"13":{}},"component":{}}],["tab",{"_index":2113,"title":{},"name":{},"text":{"15":{},"27":{},"28":{}},"component":{}}],["tab.sql.sql",{"_index":743,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tabl",{"_index":46,"title":{"2-12":{},"2-15":{},"2-19":{},"2-23":{},"18-5":{},"21-4":{},"27-6":{},"27-137":{},"27-141":{},"27-145":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"7":{},"9":{},"13":{},"16":{},"18":{},"19":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["table(",{"_index":580,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["table,view,grant,sequence,tablespace,procedure,trigger,function,package,partition,type,mview,query,dblink,synonym,directory,test,test_view",{"_index":473,"title":{},"name":{},"text":{"2":{}},"component":{}}],["table.col",{"_index":5978,"title":{},"name":{},"text":{"27":{}},"component":{}}],["table.not",{"_index":3531,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table.with",{"_index":3071,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table/column",{"_index":5935,"title":{},"name":{},"text":{"27":{}},"component":{}}],["table1",{"_index":5815,"title":{},"name":{},"text":{"27":{}},"component":{}}],["table=`pattern",{"_index":3299,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table=foo",{"_index":2741,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table=pattern",{"_index":2828,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table=schemapat",{"_index":2823,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table=t",{"_index":2714,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table_",{"_index":720,"title":{},"name":{},"text":{"2":{}},"component":{}}],["table_nam",{"_index":5065,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["table_sh.sql",{"_index":664,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tablenam",{"_index":5750,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tables)cr",{"_index":3063,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tables.f",{"_index":3078,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tables.p",{"_index":3076,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tables.t",{"_index":3062,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespac",{"_index":313,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["tablespace=`tablespac",{"_index":3093,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespace=index_tablespac",{"_index":3089,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespace=tablespac",{"_index":2743,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespace_map",{"_index":3033,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespace_sh.sql",{"_index":668,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tablespacecr",{"_index":4435,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tablespaces.if",{"_index":2919,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tablespaces_stream",{"_index":4791,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tablespaces_tot",{"_index":4790,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tablespace’",{"_index":2888,"title":{},"name":{},"text":{"16":{}},"component":{}}],["table’",{"_index":4674,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["tag",{"_index":2190,"title":{},"name":{},"text":{"15":{},"18":{},"23":{},"27":{},"28":{}},"component":{}}],["tag$str",{"_index":5904,"title":{},"name":{},"text":{"27":{}},"component":{}}],["take",{"_index":1105,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"18":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["taken",{"_index":2462,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["talk",{"_index":5030,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tamper",{"_index":2997,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tar",{"_index":388,"title":{},"name":{},"text":{"2":{},"3":{},"16":{},"28":{}},"component":{}}],["tar`output",{"_index":3263,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tar`th",{"_index":3499,"title":{},"name":{},"text":{"16":{}},"component":{}}],["target",{"_index":327,"title":{},"name":{},"text":{"2":{},"16":{},"21":{},"24":{},"27":{},"28":{}},"component":{}}],["target=target",{"_index":2900,"title":{},"name":{},"text":{"16":{}},"component":{}}],["task",{"_index":934,"title":{},"name":{},"text":{"4":{},"16":{},"23":{},"24":{}},"component":{}}],["tb_test1",{"_index":6107,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test1(id",{"_index":6104,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test2",{"_index":6114,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test2(id",{"_index":6113,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test3",{"_index":6129,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test3(id",{"_index":6118,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test4",{"_index":6143,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test4(id",{"_index":6142,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test5",{"_index":6146,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tb_test5(id",{"_index":6145,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tbl",{"_index":6008,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tcl",{"_index":5361,"title":{},"name":{},"text":{"25":{}},"component":{}}],["tcp",{"_index":2722,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"26":{}},"component":{}}],["tcp_keepalives_count",{"_index":5210,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tcp_keepalives_idl",{"_index":5208,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tcp_keepalives_interv",{"_index":5209,"title":{},"name":{},"text":{"24":{}},"component":{}}],["team",{"_index":1885,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["technic",{"_index":619,"title":{"11-6":{}},"name":{},"text":{"2":{},"24":{},"27":{}},"component":{}}],["techniqu",{"_index":3361,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["tell",{"_index":4804,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["temp_byt",{"_index":4616,"title":{},"name":{},"text":{"23":{}},"component":{}}],["temp_fil",{"_index":4614,"title":{},"name":{},"text":{"23":{}},"component":{}}],["temp_hi",{"_index":5737,"title":{},"name":{},"text":{"27":{}},"component":{}}],["temp_lo",{"_index":5735,"title":{},"name":{},"text":{"27":{}},"component":{}}],["temp_tablespac",{"_index":5331,"title":{},"name":{},"text":{"24":{}},"component":{}}],["temperatur",{"_index":5736,"title":{},"name":{},"text":{"27":{}},"component":{}}],["templat",{"_index":225,"title":{"2-26":{}},"name":{},"text":{"2":{},"15":{},"16":{}},"component":{}}],["template0",{"_index":715,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["template1",{"_index":718,"title":{},"name":{},"text":{"2":{},"16":{},"26":{}},"component":{}}],["template=templ",{"_index":2754,"title":{},"name":{},"text":{"16":{}},"component":{}}],["temporari",{"_index":536,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["temporarili",{"_index":3311,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["tempt",{"_index":6543,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ten",{"_index":6665,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tend",{"_index":5117,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tenk1",{"_index":6643,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tenk1_unique1",{"_index":6659,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tenk1_unique2",{"_index":6678,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tenk2",{"_index":6689,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tenk2_unique2",{"_index":6688,"title":{},"name":{},"text":{"28":{}},"component":{}}],["term",{"_index":361,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{}},"component":{}}],["termin",{"_index":2153,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["test",{"_index":197,"title":{"2-13":{},"8-3":{},"9-3":{},"10-3":{},"12-3":{},"14-3":{},"15-12":{},"15-56":{},"19-3":{},"20-9":{},"21-3":{},"27-248":{},"27-249":{}},"name":{},"text":{"4":{},"5":{},"6":{},"9":{},"13":{},"15":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["test')::myt",{"_index":6055,"title":{},"name":{},"text":{"27":{}},"component":{}}],["test',2.5",{"_index":6057,"title":{},"name":{},"text":{"27":{}},"component":{}}],["test(a",{"_index":6360,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["test.x86_64",{"_index":5363,"title":{},"name":{},"text":{"25":{}},"component":{}}],["test/valu",{"_index":3835,"title":{},"name":{},"text":{"18":{}},"component":{}}],["test1",{"_index":1254,"title":{},"name":{},"text":{"9":{}},"component":{}}],["test2",{"_index":1260,"title":{},"name":{},"text":{"9":{}},"component":{}}],["test3",{"_index":1264,"title":{},"name":{},"text":{"9":{}},"component":{}}],["test4",{"_index":1268,"title":{},"name":{},"text":{"9":{}},"component":{}}],["test_f",{"_index":3875,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_f(id",{"_index":3871,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_nls_dat",{"_index":1139,"title":{},"name":{},"text":{"6":{}},"component":{}}],["test_nls_date(a",{"_index":1136,"title":{},"name":{},"text":{"6":{}},"component":{}}],["test_p(id",{"_index":3872,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_piv1(id",{"_index":3878,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_piv2(id",{"_index":3879,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_pkg",{"_index":3882,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_pkg.t",{"_index":3886,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test_project",{"_index":771,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tester",{"_index":146,"title":{},"name":{},"text":{"1":{}},"component":{}}],["test’",{"_index":3747,"title":{},"name":{},"text":{"16":{}},"component":{}}],["text",{"_index":516,"title":{"28-27":{}},"name":{},"text":{"2":{},"9":{},"13":{},"15":{},"16":{},"18":{},"23":{},"27":{},"28":{}},"component":{}}],["text/text",{"_index":1661,"title":{},"name":{},"text":{"13":{}},"component":{}}],["text/timestamp/timestamp",{"_index":1669,"title":{},"name":{},"text":{"13":{}},"component":{}}],["text/varchar2",{"_index":1584,"title":{},"name":{},"text":{"13":{}},"component":{}}],["text_pattern_op",{"_index":560,"title":{},"name":{},"text":{"2":{}},"component":{}}],["text`a",{"_index":4497,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`act",{"_index":4514,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`connect",{"_index":4533,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`curr",{"_index":4168,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`distinguish",{"_index":4556,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`dn",{"_index":4564,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`host",{"_index":4154,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`nam",{"_index":4150,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`princip",{"_index":4567,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`repl",{"_index":4528,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`return",{"_index":4722,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`synchron",{"_index":4485,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`text",{"_index":4184,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`th",{"_index":4165,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`typ",{"_index":4187,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`vers",{"_index":4552,"title":{},"name":{},"text":{"23":{}},"component":{}}],["text`wait",{"_index":4167,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tgl",{"_index":4054,"title":{},"name":{},"text":{"23":{}},"component":{}}],["thank",{"_index":2165,"title":{},"name":{},"text":{"15":{}},"component":{}}],["that.)thi",{"_index":2885,"title":{},"name":{},"text":{"16":{}},"component":{}}],["that’",{"_index":310,"title":{},"name":{},"text":{"2":{},"16":{},"24":{},"27":{},"28":{}},"component":{}}],["the/etc/ora2pg/ora2pg.conf",{"_index":457,"title":{},"name":{},"text":{"2":{}},"component":{}}],["them.thi",{"_index":3533,"title":{},"name":{},"text":{"16":{}},"component":{}}],["themselv",{"_index":3248,"title":{},"name":{},"text":{"16":{},"22":{},"24":{},"25":{},"28":{}},"component":{}}],["theoret",{"_index":4810,"title":{},"name":{},"text":{"23":{}},"component":{}}],["theori",{"_index":5240,"title":{},"name":{},"text":{"24":{}},"component":{}}],["thereaft",{"_index":5060,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["therebi",{"_index":906,"title":{},"name":{},"text":{"4":{},"18":{},"23":{}},"component":{}}],["therefor",{"_index":1924,"title":{},"name":{},"text":{"15":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["there’",{"_index":3472,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["they’r",{"_index":5195,"title":{},"name":{},"text":{"24":{}},"component":{}}],["thing",{"_index":302,"title":{},"name":{},"text":{"2":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["think",{"_index":5010,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["third",{"_index":1343,"title":{"15-25":{},"15-29":{}},"name":{},"text":{"11":{},"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["third:submit",{"_index":1860,"title":{"15-37":{}},"name":{},"text":{},"component":{}}],["thorough",{"_index":242,"title":{},"name":{},"text":{"2":{}},"component":{}}],["those",{"_index":1790,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["though",{"_index":2701,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["thought",{"_index":6505,"title":{},"name":{},"text":{"28":{}},"component":{}}],["thrashing.onli",{"_index":3507,"title":{},"name":{},"text":{"16":{}},"component":{}}],["thread",{"_index":349,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["three",{"_index":1161,"title":{"7-3":{}},"name":{},"text":{"7":{},"13":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["threshold",{"_index":5096,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["throttl",{"_index":3118,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["through",{"_index":324,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{}}],["through.th",{"_index":3625,"title":{},"name":{},"text":{"16":{}},"component":{}}],["throughout",{"_index":4097,"title":{},"name":{},"text":{"23":{}},"component":{}}],["throughput",{"_index":2681,"title":{},"name":{},"text":{"16":{}},"component":{}}],["throw",{"_index":265,"title":{},"name":{},"text":{"2":{},"16":{},"27":{}},"component":{}}],["thrown",{"_index":3318,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["thu",{"_index":2928,"title":{},"name":{},"text":{"16":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["thumb",{"_index":2044,"title":{},"name":{},"text":{"15":{},"17":{},"24":{}},"component":{}}],["thursday",{"_index":6192,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ti",{"_index":5809,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tid",{"_index":4427,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tidb",{"_index":2106,"title":{},"name":{},"text":{"15":{}},"component":{}}],["tidi",{"_index":2964,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tidx_blks_hit",{"_index":4677,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tidx_blks_read",{"_index":4676,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tighter",{"_index":5285,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tightli",{"_index":5767,"title":{},"name":{},"text":{"27":{}},"component":{}}],["time",{"_index":479,"title":{"16-173":{},"16-174":{},"16-175":{},"27-84":{},"27-164":{},"28-21":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"11":{},"13":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["time.c",{"_index":3766,"title":{},"name":{},"text":{"16":{}},"component":{}}],["time.pg_dump",{"_index":3267,"title":{},"name":{},"text":{"16":{}},"component":{}}],["time=0.007..2.583",{"_index":6730,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.021..0.022",{"_index":6721,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.024..0.024",{"_index":6720,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.043..0.043",{"_index":6758,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.044..0.044",{"_index":6740,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.049..0.049",{"_index":6734,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.057..0.121",{"_index":6718,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.062..0.062",{"_index":6749,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.080..0.526",{"_index":6733,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.101..0.439",{"_index":6766,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.174..0.244",{"_index":6784,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.177..0.249",{"_index":6782,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.227..0.227",{"_index":6759,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.309..0.309",{"_index":6756,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.323..0.342",{"_index":6754,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.659..0.659",{"_index":6731,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=0.711..7.427",{"_index":6729,"title":{},"name":{},"text":{"28":{}},"component":{}}],["time=second",{"_index":3157,"title":{},"name":{},"text":{"16":{}},"component":{}}],["time[\"tot",{"_index":4861,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timeli",{"_index":1994,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["timelin",{"_index":2651,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["timelinehistoryfilesync",{"_index":4274,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timelinehistoryfilewrit",{"_index":4275,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timelinehistoryread",{"_index":4276,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timelinehistorysync",{"_index":4277,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timelinehistorywrit",{"_index":4278,"title":{},"name":{},"text":{"23":{}},"component":{}}],["timeout",{"_index":3024,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["timeout=`timeout",{"_index":3337,"title":{},"name":{},"text":{"16":{}},"component":{}}],["timeout=second",{"_index":3441,"title":{},"name":{},"text":{"16":{}},"component":{}}],["timer",{"_index":3772,"title":{},"name":{},"text":{"16":{}},"component":{}}],["times,ivorysqlmaintain",{"_index":6547,"title":{},"name":{},"text":{"28":{}},"component":{}}],["timestamp",{"_index":1118,"title":{},"name":{},"text":{"6":{},"9":{},"13":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["timestampltz",{"_index":1126,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timestamptz",{"_index":1120,"title":{},"name":{},"text":{"6":{},"13":{},"27":{}},"component":{}}],["timestamptz、timestampltz",{"_index":1130,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timestamp、timestampltz",{"_index":1128,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timestamp、timestamptz",{"_index":1122,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timestamp、timestamptz、timestampltz",{"_index":1132,"title":{},"name":{},"text":{"6":{}},"component":{}}],["timezon",{"_index":1753,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["time，thi",{"_index":1913,"title":{},"name":{},"text":{"15":{}},"component":{}}],["tip",{"_index":1884,"title":{"15-58":{},"27-18":{},"28-32":{}},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["titl",{"_index":1937,"title":{},"name":{},"text":{"15":{},"23":{}},"component":{}}],["tmp/.s.pgsql.5432",{"_index":5726,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tmp:5432",{"_index":3444,"title":{},"name":{},"text":{"16":{}},"component":{}}],["to.not",{"_index":3319,"title":{},"name":{},"text":{"16":{}},"component":{}}],["to.thi",{"_index":3450,"title":{},"name":{},"text":{"16":{}},"component":{}}],["to_char",{"_index":1442,"title":{"27-207":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_char('3",{"_index":6267,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_char('4.00'::numer",{"_index":6270,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_char(123,'xx",{"_index":6272,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_char(nul",{"_index":6271,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_char(sysd",{"_index":1670,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_char(sysdate(),'mm/dd/yyyi",{"_index":1672,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_char(sysdate()::timestamp",{"_index":1674,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_char(sysdate()::timestamp,'mm",{"_index":1677,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_dat",{"_index":1443,"title":{"27-215":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_date('20",{"_index":6290,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date('20110101','yyyymmdd')+to_yminterval('02",{"_index":1710,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_date('2019/11/22",{"_index":6289,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date('2019/11/27",{"_index":6293,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date('2020','rr",{"_index":6294,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date('20230706",{"_index":1680,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_date('50",{"_index":6284,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date(2454336",{"_index":6287,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date(nul",{"_index":6295,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_date(str,[fmt",{"_index":6282,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_dsinterv",{"_index":1447,"title":{"27-227":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_dsinterval('100",{"_index":6318,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_dsinterval(nul",{"_index":6320,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_dsinterval(str",{"_index":6317,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_multi_byt",{"_index":1458,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_multi_byte('1.2'::text",{"_index":1780,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_numb",{"_index":1441,"title":{"27-211":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_number('123'::text",{"_index":6281,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_number('5.01",{"_index":1666,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_number(1210.73::numer",{"_index":6277,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_number(nul",{"_index":6280,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_number(str,[fmt1",{"_index":6274,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_single_byt",{"_index":1459,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_timestamp",{"_index":1444,"title":{"27-219":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_timestamp('2011,12,18",{"_index":1692,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_timestamp('20181102.12.34.56.025",{"_index":1688,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_timestamp('2020/03/03",{"_index":6303,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp(1212121212.55::numer",{"_index":6300,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp(null,nul",{"_index":6309,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp(str,[fmt",{"_index":6298,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz",{"_index":1445,"title":{"27-231":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_timestamp_tz('10",{"_index":1703,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_timestamp_tz('2003/12/13",{"_index":6330,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz('2016",{"_index":1701,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to_timestamp_tz('2019",{"_index":6328,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz('2019','yyyi",{"_index":6327,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz('2019/12/13",{"_index":6334,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz(nul",{"_index":6336,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_timestamp_tz(str,[fmt",{"_index":6326,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_yminterv",{"_index":1446,"title":{"27-223":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["to_yminterval('p1i",{"_index":6313,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_yminterval('p1y2m2d",{"_index":6315,"title":{},"name":{},"text":{"27":{}},"component":{}}],["to_yminterval(str",{"_index":6310,"title":{},"name":{},"text":{"27":{}},"component":{}}],["toast",{"_index":2831,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["toast_blks_hit",{"_index":4675,"title":{},"name":{},"text":{"23":{}},"component":{}}],["toast_blks_read",{"_index":4673,"title":{},"name":{},"text":{"23":{}},"component":{}}],["toc",{"_index":3541,"title":{},"name":{},"text":{"16":{}},"component":{}}],["toc.md",{"_index":2109,"title":{},"name":{},"text":{"15":{}},"component":{}}],["today",{"_index":1541,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["today',5",{"_index":1543,"title":{},"name":{},"text":{"13":{}},"component":{}}],["today',5,8",{"_index":1550,"title":{},"name":{},"text":{"13":{}},"component":{}}],["togeth",{"_index":979,"title":{},"name":{},"text":{"4":{},"16":{},"20":{},"28":{}},"component":{}}],["token",{"_index":5836,"title":{},"name":{},"text":{"27":{}},"component":{}}],["took",{"_index":6776,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tool",{"_index":280,"title":{"16":{},"16-1":{},"23-2":{}},"name":{},"text":{"2":{},"10":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["tool——ora2pg",{"_index":174,"title":{"2-2":{}},"name":{},"text":{},"component":{}}],["top",{"_index":44,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["topmost",{"_index":6641,"title":{},"name":{},"text":{"28":{}},"component":{}}],["total",{"_index":585,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["total_bytes``bigint`amount",{"_index":4512,"title":{},"name":{},"text":{"23":{}},"component":{}}],["total_tim",{"_index":4680,"title":{},"name":{},"text":{"23":{}},"component":{}}],["total_txn",{"_index":4511,"title":{},"name":{},"text":{"23":{}},"component":{}}],["touch",{"_index":2010,"title":{},"name":{},"text":{"15":{},"16":{},"17":{}},"component":{}}],["toward",{"_index":5093,"title":{},"name":{},"text":{"24":{}},"component":{}}],["toy",{"_index":6779,"title":{},"name":{},"text":{"28":{}},"component":{}}],["tp",{"_index":3140,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tpc",{"_index":2487,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tpcb",{"_index":3097,"title":{},"name":{},"text":{"16":{}},"component":{}}],["trace",{"_index":3616,"title":{"23-36":{},"23-37":{}},"name":{},"text":{"16":{},"23":{}},"component":{}}],["trace_postgresql",{"_index":4875,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trace_postgresql_transaction_start",{"_index":4879,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trace_postgresql_transaction_start(some_funct",{"_index":4895,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trace_postgresql_transaction_start(vxid.localtransactionid",{"_index":4880,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trace_postgresql_transaction_start_en",{"_index":4894,"title":{},"name":{},"text":{"23":{}},"component":{}}],["track",{"_index":4082,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["track_act",{"_index":4080,"title":{},"name":{},"text":{"23":{}},"component":{}}],["track_activity_query_s",{"_index":4185,"title":{},"name":{},"text":{"23":{}},"component":{}}],["track_commit_timestamp",{"_index":5055,"title":{},"name":{},"text":{"24":{}},"component":{}}],["track_count",{"_index":3386,"title":{},"name":{},"text":{"16":{},"23":{},"24":{}},"component":{}}],["track_funct",{"_index":4081,"title":{},"name":{},"text":{"23":{}},"component":{}}],["track_io_tim",{"_index":4083,"title":{},"name":{},"text":{"23":{}},"component":{}}],["track_wal_io_tim",{"_index":4084,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trade",{"_index":952,"title":{},"name":{},"text":{"4":{},"28":{}},"component":{}}],["tradit",{"_index":6094,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["traffic",{"_index":4737,"title":{},"name":{},"text":{"23":{},"24":{},"28":{}},"component":{}}],["trail",{"_index":3711,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["trailer",{"_index":6458,"title":{"28-30":{}},"name":{},"text":{"28":{}},"component":{}}],["tranch",{"_index":4845,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transact",{"_index":1355,"title":{"24-6":{},"27-19":{},"27-20":{},"27-27":{},"27-34":{},"27-41":{},"27-48":{},"27-55":{},"27-63":{},"27-70":{},"27-77":{},"27-84":{},"27-89":{},"27-95":{}},"name":{},"text":{"11":{},"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["transaction__start",{"_index":4878,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transaction__start(localtransactionid",{"_index":4876,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transaction_deferr",{"_index":5833,"title":{},"name":{},"text":{"27":{}},"component":{}}],["transaction_id",{"_index":5803,"title":{},"name":{},"text":{"27":{}},"component":{}}],["transaction_isol",{"_index":5832,"title":{},"name":{},"text":{"27":{}},"component":{}}],["transaction_mod",{"_index":5795,"title":{},"name":{},"text":{"27":{}},"component":{}}],["transaction_read_onli",{"_index":5283,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["transactionid",{"_index":4364,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transactions.if",{"_index":3591,"title":{},"name":{},"text":{"16":{}},"component":{}}],["transactions=transact",{"_index":3156,"title":{},"name":{},"text":{"16":{}},"component":{}}],["transaction’",{"_index":4104,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["transfer",{"_index":229,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["transform",{"_index":903,"title":{},"name":{},"text":{"4":{}},"component":{}}],["transit",{"_index":5787,"title":{},"name":{},"text":{"27":{}},"component":{}}],["translat",{"_index":2092,"title":{},"name":{},"text":{"15":{},"24":{},"28":{}},"component":{}}],["transmiss",{"_index":2954,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["transmit",{"_index":5162,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["travers",{"_index":1561,"title":{},"name":{},"text":{"13":{}},"component":{}}],["treat",{"_index":2645,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["treatment",{"_index":5891,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tree",{"_index":549,"title":{},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["tri",{"_index":3124,"title":{},"name":{},"text":{"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["tricki",{"_index":3183,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["tries=0",{"_index":3129,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tries=`number_of_tri",{"_index":3166,"title":{},"name":{},"text":{"16":{}},"component":{}}],["trigger",{"_index":315,"title":{"24-16":{}},"name":{},"text":{"2":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["trigger=trigg",{"_index":3528,"title":{},"name":{},"text":{"16":{}},"component":{}}],["trigger_sh.sql",{"_index":674,"title":{},"name":{},"text":{"2":{}},"component":{}}],["trigram",{"_index":556,"title":{},"name":{},"text":{"2":{}},"component":{}}],["trim",{"_index":1431,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trim('aaa",{"_index":1557,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trip",{"_index":5247,"title":{},"name":{},"text":{"24":{}},"component":{}}],["trivial",{"_index":620,"title":{},"name":{},"text":{"2":{},"24":{},"27":{},"28":{}},"component":{}}],["troubl",{"_index":4840,"title":{},"name":{},"text":{"23":{}},"component":{}}],["true",{"_index":1187,"title":{},"name":{},"text":{"7":{},"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["truli",{"_index":3388,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["trunc",{"_index":1427,"title":{"27-198":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["trunc(sysd",{"_index":1521,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trunc(sysdate(),'mm",{"_index":1526,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trunc(sysdate(),'yyyi",{"_index":1524,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trunc(timestamp",{"_index":6257,"title":{},"name":{},"text":{"27":{}},"component":{}}],["trunc(timestamptz",{"_index":6259,"title":{},"name":{},"text":{"27":{}},"component":{}}],["truncat",{"_index":1522,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["trust",{"_index":66,"title":{},"name":{},"text":{"1":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["ts",{"_index":4858,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ts=0",{"_index":4863,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ts_",{"_index":3415,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tsc",{"_index":3755,"title":{},"name":{},"text":{"16":{}},"component":{}}],["tue",{"_index":699,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tuesday",{"_index":6190,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tune",{"_index":4506,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["tungsten",{"_index":5159,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tup_delet",{"_index":4613,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tup_fetch",{"_index":4610,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tup_insert",{"_index":4611,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tup_return",{"_index":4608,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tup_upd",{"_index":4612,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tupl",{"_index":2852,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["tuples_don",{"_index":4762,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tuples_exclud",{"_index":4803,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tuples_process",{"_index":4802,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tuples_tot",{"_index":4761,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tuple’",{"_index":6602,"title":{},"name":{},"text":{"28":{}},"component":{}}],["ture",{"_index":1764,"title":{},"name":{},"text":{"13":{}},"component":{}}],["turn",{"_index":2795,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["tutori",{"_index":5727,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tweak",{"_index":5012,"title":{},"name":{},"text":{"24":{}},"component":{}}],["twice",{"_index":5266,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["two",{"_index":129,"title":{"27-41":{},"27-55":{},"27-70":{}},"name":{},"text":{"1":{},"2":{},"4":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["two_phas",{"_index":3393,"title":{},"name":{},"text":{"16":{}},"component":{}}],["twophas",{"_index":4828,"title":{},"name":{},"text":{"23":{}},"component":{}}],["twophasefileread",{"_index":4279,"title":{},"name":{},"text":{"23":{}},"component":{}}],["twophasefilesync",{"_index":4280,"title":{},"name":{},"text":{"23":{}},"component":{}}],["twophasefilewrit",{"_index":4281,"title":{},"name":{},"text":{"23":{}},"component":{}}],["twophasest",{"_index":4436,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tx",{"_index":6824,"title":{},"name":{},"text":{"28":{}},"component":{}}],["txn_count.d",{"_index":4864,"title":{},"name":{},"text":{"23":{}},"component":{}}],["type",{"_index":268,"title":{"13":{},"4-8":{},"13-1":{},"15-24":{},"27-110":{},"27-124":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"9":{},"11":{},"13":{},"15":{},"16":{},"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["type%rowtyp",{"_index":6406,"title":{},"name":{},"text":{"27":{}},"component":{}}],["type_definit",{"_index":6392,"title":{},"name":{},"text":{"27":{}},"component":{}}],["type_sh.sql",{"_index":682,"title":{},"name":{},"text":{"2":{}},"component":{}}],["typecast",{"_index":5936,"title":{},"name":{},"text":{"27":{}},"component":{}}],["typedescript",{"_index":4141,"title":{},"name":{},"text":{"23":{}},"component":{}}],["typedescriptio",{"_index":4779,"title":{},"name":{},"text":{"23":{}},"component":{}}],["typenam",{"_index":5925,"title":{},"name":{},"text":{"27":{}},"component":{}}],["types:seri",{"_index":3162,"title":{},"name":{},"text":{"16":{}},"component":{}}],["typic",{"_index":1906,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["typo",{"_index":2047,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["typora",{"_index":2077,"title":{},"name":{},"text":{"15":{}},"component":{}}],["tz",{"_index":6166,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tz1",{"_index":6236,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tz2",{"_index":6237,"title":{},"name":{},"text":{"27":{}},"component":{}}],["tz_offset",{"_index":1426,"title":{},"name":{},"text":{"13":{}},"component":{}}],["tz_offset('us/eastern",{"_index":1514,"title":{},"name":{},"text":{"13":{}},"component":{}}],["tzh:tzm",{"_index":1705,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["u",{"_index":2071,"title":{},"name":{},"text":{"15":{},"16":{},"22":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["u&\"\\0441\\043b\\043e\\043d",{"_index":5861,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&\"d!0061t!+000061",{"_index":5863,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&\"d\\0061t\\+000061",{"_index":5856,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&\"foo",{"_index":5854,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&'\\0441\\043b\\043e\\043d",{"_index":5895,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&'d!0061t!+000061",{"_index":5896,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&'d\\0061t\\+000061",{"_index":5894,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u&'foo",{"_index":5893,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u*`xxxx",{"_index":5884,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u+ffff",{"_index":5866,"title":{},"name":{},"text":{"27":{}},"component":{}}],["u`xxxxxxxx",{"_index":5885,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ubi8",{"_index":3953,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["ue",{"_index":1596,"title":{},"name":{},"text":{"13":{}},"component":{}}],["uescap",{"_index":5862,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ui",{"_index":2156,"title":{},"name":{},"text":{"15":{}},"component":{}}],["uid",{"_index":1455,"title":{},"name":{},"text":{"13":{}},"component":{}}],["ukey",{"_index":472,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ultim",{"_index":5270,"title":{},"name":{},"text":{"24":{}},"component":{}}],["umask",{"_index":3619,"title":{},"name":{},"text":{"16":{}},"component":{}}],["un",{"_index":6577,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unabl",{"_index":3340,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["unacc",{"_index":740,"title":{},"name":{},"text":{"2":{}},"component":{}}],["unaccept",{"_index":5156,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unadorn",{"_index":6509,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unalign",{"_index":3582,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unam",{"_index":2052,"title":{},"name":{},"text":{"15":{}},"component":{}}],["unambigu",{"_index":3098,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unari",{"_index":5937,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unavail",{"_index":6893,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unbound",{"_index":4977,"title":{},"name":{},"text":{"24":{}},"component":{}}],["uncertain",{"_index":2005,"title":{},"name":{},"text":{"15":{},"17":{},"18":{}},"component":{}}],["unchang",{"_index":1173,"title":{},"name":{},"text":{"7":{},"16":{}},"component":{}}],["unclean",{"_index":4089,"title":{},"name":{},"text":{"23":{}},"component":{}}],["uncommit",{"_index":5796,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uncompress",{"_index":3261,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unconvinc",{"_index":6712,"title":{},"name":{},"text":{"28":{}},"component":{}}],["under",{"_index":360,"title":{},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["underestim",{"_index":6790,"title":{},"name":{},"text":{"28":{}},"component":{}}],["undergo",{"_index":1150,"title":{},"name":{},"text":{"6":{}},"component":{}}],["underli",{"_index":1361,"title":{},"name":{},"text":{"11":{},"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["underlin",{"_index":4877,"title":{},"name":{},"text":{"23":{}},"component":{}}],["underneath",{"_index":4099,"title":{},"name":{},"text":{"23":{}},"component":{}}],["underscor",{"_index":3785,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["understand",{"_index":243,"title":{},"name":{},"text":{"2":{},"9":{},"15":{},"18":{},"20":{},"24":{},"27":{},"28":{}},"component":{}}],["understood",{"_index":5768,"title":{},"name":{},"text":{"27":{}},"component":{}}],["undertak",{"_index":1914,"title":{},"name":{},"text":{"15":{}},"component":{}}],["undesir",{"_index":3385,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["undo",{"_index":5814,"title":{},"name":{},"text":{"27":{}},"component":{}}],["undon",{"_index":5730,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unduli",{"_index":3181,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unexpect",{"_index":4986,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["unfilt",{"_index":6006,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unfrozen",{"_index":3705,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["ungrant",{"_index":4736,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unicod",{"_index":1786,"title":{"27-106":{}},"name":{},"text":{"13":{},"27":{}},"component":{}}],["unifi",{"_index":1071,"title":{},"name":{},"text":{"6":{}},"component":{}}],["uniformli",{"_index":1073,"title":{},"name":{},"text":{"6":{},"15":{}},"component":{}}],["uninstal",{"_index":5343,"title":{"25-9":{},"25-10":{},"25-11":{},"25-12":{},"25-13":{},"25-14":{}},"name":{},"text":{"25":{}},"component":{}}],["unintend",{"_index":59,"title":{},"name":{},"text":{"1":{}},"component":{}}],["uninterrupt",{"_index":251,"title":{},"name":{},"text":{"2":{}},"component":{}}],["union",{"_index":5453,"title":{"27-9":{},"27-151":{}},"name":{},"text":{"27":{}},"component":{}}],["uniqu",{"_index":481,"title":{"27-267":{},"27-268":{},"27-271":{},"27-273":{},"27-276":{}},"name":{},"text":{"2":{},"15":{},"16":{},"23":{},"27":{},"28":{}},"component":{}}],["unique1",{"_index":6658,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unique2",{"_index":6681,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unit",{"_index":610,"title":{},"name":{},"text":{"2":{},"16":{},"20":{},"28":{}},"component":{}}],["unix",{"_index":2719,"title":{"23-2":{}},"name":{},"text":{"16":{},"23":{},"26":{},"28":{}},"component":{}}],["unless",{"_index":2454,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["unlik",{"_index":2659,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["unlimit",{"_index":3168,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unlisten",{"_index":5281,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["unload",{"_index":6453,"title":{"28-22":{}},"name":{},"text":{},"component":{}}],["unlog",{"_index":3094,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["unmodifi",{"_index":5155,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unnecessari",{"_index":4102,"title":{},"name":{},"text":{"23":{},"24":{},"27":{}},"component":{}}],["unnecessarili",{"_index":6573,"title":{},"name":{},"text":{"28":{}},"component":{}}],["unnot",{"_index":5332,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unord",{"_index":2117,"title":{},"name":{},"text":{"15":{}},"component":{}}],["unpack",{"_index":3032,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unpaus",{"_index":5312,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unqualifi",{"_index":2814,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unquot",{"_index":5851,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["unread",{"_index":2696,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unrecogn",{"_index":4710,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unregist",{"_index":3611,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unsaf",{"_index":5780,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unsign",{"_index":3174,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["unspecifi",{"_index":3091,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["unsuccessfulli",{"_index":4817,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unsupport",{"_index":6426,"title":{},"name":{},"text":{"27":{}},"component":{}}],["until",{"_index":3427,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["untrustworthi",{"_index":6069,"title":{},"name":{},"text":{"27":{}},"component":{}}],["unus",{"_index":5002,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unusable.when",{"_index":2932,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unusu",{"_index":3629,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["unvacuum",{"_index":5039,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unwis",{"_index":4990,"title":{},"name":{},"text":{"24":{},"27":{}},"component":{}}],["up",{"_index":617,"title":{"24-24":{}},"name":{},"text":{"2":{},"4":{},"13":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["up.catchup",{"_index":4461,"title":{},"name":{},"text":{"23":{}},"component":{}}],["updat",{"_index":28,"title":{"24-4":{},"24-5":{},"27-145":{},"27-272":{},"27-273":{}},"name":{},"text":{"1":{},"2":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["update/delet",{"_index":5102,"title":{},"name":{},"text":{"24":{}},"component":{}}],["update_process_titl",{"_index":4072,"title":{},"name":{},"text":{"23":{}},"component":{}}],["updatexml",{"_index":3792,"title":{"18-11":{}},"name":{},"text":{"18":{}},"component":{}}],["updatexml(xmltype('on",{"_index":3839,"title":{},"name":{},"text":{"18":{}},"component":{}}],["upgrad",{"_index":2694,"title":{"28-1":{},"28-2":{},"28-3":{},"28-4":{},"28-5":{}},"name":{},"text":{"16":{},"18":{},"24":{},"28":{}},"component":{}}],["upload",{"_index":1966,"title":{},"name":{},"text":{"15":{}},"component":{}}],["upon",{"_index":1151,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"24":{},"27":{}},"component":{}}],["upper",{"_index":971,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"27":{},"28":{}},"component":{}}],["upper($1",{"_index":6091,"title":{},"name":{},"text":{"27":{}},"component":{}}],["uppercas",{"_index":1174,"title":{},"name":{},"text":{"7":{},"27":{}},"component":{}}],["upstream",{"_index":272,"title":{"15-18":{},"17-5":{}},"name":{},"text":{"2":{},"15":{},"17":{},"24":{}},"component":{}}],["upstream/main",{"_index":2081,"title":{},"name":{},"text":{"15":{}},"component":{}}],["url",{"_index":2119,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["us",{"_index":296,"title":{"3-5":{},"7-5":{},"20-8":{},"20-15":{},"23-39":{},"26-14":{},"27-12":{},"27-131":{},"27-132":{},"27-133":{},"27-144":{},"28-12":{},"28-14":{},"28-18":{},"28-33":{},"28-37":{},"28-47":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{}},"component":{}}],["usabl",{"_index":2697,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["usag",{"_index":1001,"title":{"16-171":{},"16-179":{},"23-41":{},"23-42":{}},"name":{},"text":{"4":{},"6":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["used).ther",{"_index":2476,"title":{},"name":{},"text":{"16":{}},"component":{}}],["used.if",{"_index":2983,"title":{},"name":{},"text":{"16":{}},"component":{}}],["used.th",{"_index":2469,"title":{},"name":{},"text":{"16":{}},"component":{}}],["used.when",{"_index":2603,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usefulli",{"_index":5840,"title":{},"name":{},"text":{"27":{}},"component":{}}],["useless",{"_index":5059,"title":{},"name":{},"text":{"24":{},"27":{},"28":{}},"component":{}}],["usenam",{"_index":4149,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["user",{"_index":205,"title":{"2-16":{},"16-191":{},"16-196":{}},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["user'",{"_index":5214,"title":{},"name":{},"text":{"24":{}},"component":{}}],["user).thi",{"_index":2767,"title":{},"name":{},"text":{"16":{}},"component":{}}],["user.initdb",{"_index":2591,"title":{},"name":{},"text":{"16":{}},"component":{}}],["user=foo",{"_index":5198,"title":{},"name":{},"text":{"24":{}},"component":{}}],["userenv",{"_index":1456,"title":{},"name":{},"text":{"13":{}},"component":{}}],["userenv('isdba')from",{"_index":1765,"title":{},"name":{},"text":{"13":{}},"component":{}}],["userenv('sessionid')from",{"_index":1768,"title":{},"name":{},"text":{"13":{}},"component":{}}],["userlock",{"_index":4365,"title":{},"name":{},"text":{"23":{}},"component":{}}],["usernam",{"_index":2723,"title":{},"name":{},"text":{"16":{}},"component":{}}],["username=`usernam",{"_index":3377,"title":{},"name":{},"text":{"16":{}},"component":{}}],["username=login",{"_index":3198,"title":{},"name":{},"text":{"16":{}},"component":{}}],["username=us",{"_index":3490,"title":{},"name":{},"text":{"16":{}},"component":{}}],["username=usernam",{"_index":2724,"title":{},"name":{},"text":{"16":{}},"component":{}}],["user’",{"_index":3031,"title":{"24-40":{}},"name":{},"text":{"16":{},"20":{},"24":{},"27":{}},"component":{}}],["usesysid",{"_index":4148,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["using_list",{"_index":6138,"title":{},"name":{},"text":{"27":{}},"component":{}}],["usr/bin/perl",{"_index":415,"title":{},"name":{},"text":{"2":{}},"component":{}}],["usr/bin/sqlite3",{"_index":820,"title":{},"name":{},"text":{"3":{}},"component":{}}],["usr/includ",{"_index":2786,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/lib/oracle/18.3/client64",{"_index":633,"title":{},"name":{},"text":{"2":{}},"component":{}}],["usr/local/includ",{"_index":2784,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/ivorysql",{"_index":5393,"title":{},"name":{},"text":{"25":{}},"component":{}}],["usr/local/ivorysql/ivorysql",{"_index":986,"title":{},"name":{},"text":{"4":{},"22":{},"25":{},"26":{}},"component":{}}],["usr/local/pgsql",{"_index":6485,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr/local/pgsql.old",{"_index":6491,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr/local/pgsql/arch",{"_index":3467,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/pgsql/backup1234",{"_index":3575,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/pgsql/backup1234/backup_manifest",{"_index":3577,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/pgsql/bin/createdb",{"_index":5724,"title":{},"name":{},"text":{"27":{}},"component":{}}],["usr/local/pgsql/bin/initdb",{"_index":6494,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr/local/pgsql/bin/postgr",{"_index":3650,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["usr/local/pgsql/data",{"_index":3036,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["usr/local/pgsql/data/note.to.self",{"_index":3579,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/pgsql/data/pg_hba.conf",{"_index":6487,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr/local/pgsql/includ",{"_index":2785,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usr/local/pqsql/bin/psql",{"_index":6498,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr/local/sqlite/bin/sqlite3",{"_index":823,"title":{},"name":{},"text":{"3":{}},"component":{}}],["usr/sbin/dtrac",{"_index":4854,"title":{},"name":{},"text":{"23":{}},"component":{}}],["usr/ucb/p",{"_index":4075,"title":{},"name":{},"text":{"23":{}},"component":{}}],["usr1/proj/bray/sql/a_list_countries.copi",{"_index":6605,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usr1/proj/bray/sql/country_data.gz",{"_index":6606,"title":{},"name":{},"text":{"28":{}},"component":{}}],["usual",{"_index":2478,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["utc",{"_index":1746,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["utf",{"_index":5864,"title":{},"name":{},"text":{"27":{}},"component":{}}],["utf8",{"_index":3003,"title":{},"name":{},"text":{"16":{},"26":{}},"component":{}}],["util",{"_index":2428,"title":{"28-4":{}},"name":{},"text":{"16":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["uuid",{"_index":5328,"title":{},"name":{},"text":{"24":{},"25":{}},"component":{}}],["v",{"_index":343,"title":{},"name":{},"text":{"2":{},"16":{},"28":{}},"component":{}}],["v0.6.2",{"_index":994,"title":{},"name":{},"text":{"4":{}},"component":{}}],["v24.0",{"_index":523,"title":{},"name":{},"text":{"2":{}},"component":{}}],["v4.2",{"_index":6902,"title":{},"name":{},"text":{"29":{}},"component":{}}],["v5.16.3",{"_index":346,"title":{},"name":{},"text":{"2":{}},"component":{}}],["vacuum",{"_index":3069,"title":{"23-32":{},"24-1":{},"24-2":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["vacuum)invok",{"_index":3075,"title":{},"name":{},"text":{"16":{}},"component":{}}],["vacuum_count",{"_index":4657,"title":{},"name":{},"text":{"23":{}},"component":{}}],["vacuum_defer_cleanup_ag",{"_index":5227,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuum_freeze_min_ag",{"_index":5033,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuum_freeze_table_ag",{"_index":5037,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuum_multixact_freeze_min_ag",{"_index":5081,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuum_multixact_freeze_table_ag",{"_index":5083,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuum`",{"_index":4979,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vacuumdb",{"_index":2346,"title":{"16-115":{}},"name":{},"text":{"16":{},"24":{}},"component":{}}],["vacuumdelay",{"_index":4453,"title":{},"name":{},"text":{"23":{}},"component":{}}],["vacuumtrunc",{"_index":4454,"title":{},"name":{},"text":{"23":{}},"component":{}}],["vacuum’",{"_index":5072,"title":{},"name":{},"text":{"24":{}},"component":{}}],["valid",{"_index":222,"title":{"2-25":{}},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["valu",{"_index":873,"title":{"21-5":{},"27-115":{},"27-246":{}},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"9":{},"11":{},"13":{},"15":{},"16":{},"18":{},"19":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["valuabl",{"_index":6517,"title":{},"name":{},"text":{"28":{}},"component":{}}],["value:md5",{"_index":5373,"title":{},"name":{},"text":{"25":{}},"component":{}}],["values('1",{"_index":6115,"title":{},"name":{},"text":{"27":{}},"component":{}}],["values(1",{"_index":1140,"title":{},"name":{},"text":{"6":{},"18":{},"27":{}},"component":{}}],["values(1,xmltype('100",{"_index":3824,"title":{},"name":{},"text":{"18":{}},"component":{}}],["values(2",{"_index":1147,"title":{},"name":{},"text":{"6":{},"18":{}},"component":{}}],["values(3",{"_index":1152,"title":{},"name":{},"text":{"6":{}},"component":{}}],["var/lib/ivorysql/data",{"_index":5376,"title":{},"name":{},"text":{"25":{}},"component":{}}],["var/log/pgsql_log",{"_index":5125,"title":{},"name":{},"text":{"24":{}},"component":{}}],["var1",{"_index":3869,"title":{},"name":{},"text":{"20":{}},"component":{}}],["var2",{"_index":3870,"title":{},"name":{},"text":{"20":{}},"component":{}}],["var3",{"_index":3873,"title":{},"name":{},"text":{"20":{}},"component":{}}],["varchar",{"_index":563,"title":{},"name":{},"text":{"2":{},"13":{},"27":{}},"component":{}}],["varchar(10",{"_index":1642,"title":{},"name":{},"text":{"13":{}},"component":{}}],["varchar(20",{"_index":6150,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varchar(4",{"_index":1641,"title":{},"name":{},"text":{"13":{}},"component":{}}],["varchar(40",{"_index":6152,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varchar(8",{"_index":1235,"title":{},"name":{},"text":{"9":{}},"component":{}}],["varchar(80",{"_index":5734,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varchar(`n",{"_index":5747,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varchar2",{"_index":1227,"title":{"28-9":{}},"name":{},"text":{"9":{},"13":{},"27":{},"28":{}},"component":{}}],["varchar2(20",{"_index":1010,"title":{},"name":{},"text":{"4":{}},"component":{}}],["varchar2(5",{"_index":6361,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["varchar2(s",{"_index":5685,"title":{"27-250":{}},"name":{},"text":{"27":{},"28":{}},"component":{}}],["varchar2/varchar2",{"_index":1601,"title":{},"name":{},"text":{"13":{}},"component":{}}],["varchar_pattern_op",{"_index":559,"title":{},"name":{},"text":{"2":{}},"component":{}}],["vari",{"_index":4057,"title":{},"name":{},"text":{"23":{},"24":{},"27":{},"28":{}},"component":{}}],["variabl",{"_index":70,"title":{"6-1":{},"26-4":{},"26-10":{}},"name":{},"text":{"1":{},"2":{},"6":{},"12":{},"16":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{}},"component":{}}],["variable.set",{"_index":3176,"title":{},"name":{},"text":{"16":{}},"component":{}}],["variable_declar",{"_index":6403,"title":{},"name":{},"text":{"27":{}},"component":{}}],["variables(curr",{"_index":1062,"title":{"6-3":{}},"name":{},"text":{},"component":{}}],["variant",{"_index":3072,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["variat",{"_index":5844,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varieti",{"_index":24,"title":{},"name":{},"text":{"1":{},"16":{},"27":{},"28":{}},"component":{}}],["variou",{"_index":2568,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["varnam",{"_index":6412,"title":{},"name":{},"text":{"27":{}},"component":{}}],["varname=valu",{"_index":3104,"title":{},"name":{},"text":{"16":{}},"component":{}}],["vastli",{"_index":5019,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vector",{"_index":892,"title":{},"name":{},"text":{"4":{}},"component":{}}],["vector(3",{"_index":1024,"title":{},"name":{},"text":{"4":{}},"component":{}}],["vendor",{"_index":1332,"title":{},"name":{},"text":{"11":{},"16":{},"28":{}},"component":{}}],["ver",{"_index":420,"title":{},"name":{},"text":{"2":{}},"component":{}}],["verbos",{"_index":2706,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["veri",{"_index":294,"title":{},"name":{},"text":{"2":{},"10":{},"12":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["verif",{"_index":2560,"title":{},"name":{},"text":{"16":{}},"component":{}}],["verifi",{"_index":778,"title":{"3-4":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["versa",{"_index":5187,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["version",{"_index":1,"title":{"1-1":{},"3-4":{},"28-1":{},"28-6":{}},"name":{},"text":{"2":{},"3":{},"4":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"24":{},"25":{},"28":{}},"component":{}}],["version($_",{"_index":421,"title":{},"name":{},"text":{"2":{}},"component":{}}],["version(unam",{"_index":2053,"title":{},"name":{},"text":{"15":{}},"component":{}}],["versionfilewrit",{"_index":4282,"title":{},"name":{},"text":{"23":{}},"component":{}}],["versu",{"_index":3101,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["vertic",{"_index":6571,"title":{},"name":{},"text":{"28":{}},"component":{}}],["vi",{"_index":413,"title":{},"name":{},"text":{"2":{}},"component":{}}],["via",{"_index":1166,"title":{"28-3":{}},"name":{},"text":{"7":{},"16":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["viabil",{"_index":5272,"title":{},"name":{},"text":{"24":{}},"component":{}}],["viabl",{"_index":6798,"title":{},"name":{},"text":{"28":{}},"component":{}}],["vice",{"_index":5186,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["view",{"_index":217,"title":{"2-21":{},"2-22":{},"23-5":{},"23-28":{}},"name":{},"text":{"2":{},"6":{},"11":{},"12":{},"13":{},"15":{},"16":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["view.thi",{"_index":4701,"title":{},"name":{},"text":{"23":{}},"component":{}}],["view_sh.sql",{"_index":666,"title":{},"name":{},"text":{"2":{}},"component":{}}],["viewpoint",{"_index":3179,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["view’",{"_index":5222,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["vim",{"_index":3913,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["violat",{"_index":3382,"title":{},"name":{},"text":{"16":{},"24":{},"27":{}},"component":{}}],["virtual",{"_index":4367,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["virtualxid",{"_index":4366,"title":{},"name":{},"text":{"23":{}},"component":{}}],["visibl",{"_index":2031,"title":{"24-5":{}},"name":{},"text":{"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["visible.bi",{"_index":2841,"title":{},"name":{},"text":{"16":{}},"component":{}}],["visit",{"_index":30,"title":{},"name":{},"text":{"1":{},"23":{},"27":{},"28":{}},"component":{}}],["void",{"_index":6368,"title":{},"name":{},"text":{"27":{}},"component":{}}],["void`discard",{"_index":4695,"title":{},"name":{},"text":{"23":{}},"component":{}}],["void`reset",{"_index":4697,"title":{},"name":{},"text":{"23":{}},"component":{}}],["volum",{"_index":6544,"title":{},"name":{},"text":{"28":{}},"component":{}}],["volumin",{"_index":5118,"title":{},"name":{},"text":{"24":{}},"component":{}}],["vote",{"_index":2034,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["vulner",{"_index":6574,"title":{},"name":{},"text":{"28":{}},"component":{}}],["w",{"_index":2725,"title":{},"name":{},"text":{"16":{},"23":{},"27":{},"28":{}},"component":{}}],["w.if",{"_index":3643,"title":{},"name":{},"text":{"16":{}},"component":{}}],["wait",{"_index":2063,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{}},"component":{}}],["wait_ev",{"_index":4166,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wait_event_typ",{"_index":4164,"title":{},"name":{},"text":{"23":{}},"component":{}}],["waiter",{"_index":4846,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal",{"_index":105,"title":{"28-52":{}},"name":{},"text":{"1":{},"16":{},"23":{},"24":{},"28":{}},"component":{}}],["wal_buff",{"_index":4836,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_buffers_ful",{"_index":4591,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_byt",{"_index":4589,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_dist",{"_index":4535,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_fpi",{"_index":4588,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_keep_s",{"_index":2930,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["wal_level",{"_index":5306,"title":{},"name":{},"text":{"24":{},"26":{},"28":{}},"component":{}}],["wal_log_hint",{"_index":2675,"title":{},"name":{},"text":{"16":{}},"component":{}}],["wal_receiver_status_interv",{"_index":5250,"title":{},"name":{},"text":{"24":{}},"component":{}}],["wal_record",{"_index":4586,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_sender_timeout=5000",{"_index":5200,"title":{},"name":{},"text":{"24":{}},"component":{}}],["wal_sync",{"_index":4594,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_sync_method",{"_index":2677,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["wal_sync_tim",{"_index":4601,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_writ",{"_index":4592,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wal_write_tim",{"_index":4598,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walbootstrapsync",{"_index":4283,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walbootstrapwrit",{"_index":4284,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walbufmap",{"_index":4437,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walcopyread",{"_index":4285,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walcopysync",{"_index":4286,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walcopywrit",{"_index":4287,"title":{},"name":{},"text":{"23":{}},"component":{}}],["waldir",{"_index":2925,"title":{},"name":{},"text":{"16":{}},"component":{}}],["waldir=waldir",{"_index":2922,"title":{},"name":{},"text":{"16":{}},"component":{}}],["walfil",{"_index":3670,"title":{},"name":{},"text":{"16":{}},"component":{}}],["walinitsync",{"_index":4288,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walinitwrit",{"_index":4289,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walinsert",{"_index":4438,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wall",{"_index":359,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["walread",{"_index":4290,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walreceiv",{"_index":4188,"title":{},"name":{},"text":{"23":{},"24":{},"26":{}},"component":{}}],["walreceiverexit",{"_index":4355,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walreceivermain",{"_index":4210,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walreceiverwaitstart",{"_index":4356,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsend",{"_index":2475,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"26":{}},"component":{}}],["walsendermain",{"_index":4211,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsendertimelinehistoryread",{"_index":4291,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsenderwaitforw",{"_index":4219,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsenderwritedata",{"_index":4220,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsync",{"_index":4292,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walsyncmethodassign",{"_index":4293,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walwrit",{"_index":3942,"title":{},"name":{},"text":{"22":{},"23":{},"25":{}},"component":{}}],["walwritermain",{"_index":4212,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wang",{"_index":159,"title":{},"name":{},"text":{"1":{}},"component":{}}],["want",{"_index":584,"title":{},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["ware",{"_index":5166,"title":{},"name":{},"text":{"24":{}},"component":{}}],["wareh",{"_index":1372,"title":{},"name":{},"text":{"11":{}},"component":{}}],["warehous",{"_index":1375,"title":{"15-27":{},"15-28":{}},"name":{},"text":{"11":{},"15":{},"24":{}},"component":{}}],["warm",{"_index":5149,"title":{},"name":{},"text":{"24":{},"28":{}},"component":{}}],["warn",{"_index":2258,"title":{"16-41":{},"16-159":{}},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["washington",{"_index":6814,"title":{},"name":{},"text":{"28":{}},"component":{}}],["wast",{"_index":2730,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["way",{"_index":696,"title":{},"name":{},"text":{"2":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["weaker",{"_index":277,"title":{},"name":{},"text":{"2":{},"24":{}},"component":{}}],["weather",{"_index":5732,"title":{},"name":{},"text":{"27":{}},"component":{}}],["web",{"_index":1868,"title":{"15-44":{},"15-57":{}},"name":{},"text":{"15":{}},"component":{}}],["webpag",{"_index":2157,"title":{},"name":{},"text":{"15":{}},"component":{}}],["websit",{"_index":135,"title":{"15-13":{},"15-52":{}},"name":{},"text":{"1":{},"11":{},"15":{},"24":{},"28":{}},"component":{}}],["website:https://github.com/ivorysql/ivori",{"_index":1972,"title":{},"name":{},"text":{"15":{}},"component":{}}],["website:https://github.com/ivorysql/ivorysql",{"_index":2049,"title":{},"name":{},"text":{"15":{}},"component":{}}],["website:https://lists.ivorysql.org",{"_index":1973,"title":{},"name":{},"text":{"15":{}},"component":{}}],["wednesday",{"_index":6191,"title":{},"name":{},"text":{"27":{}},"component":{}}],["week",{"_index":1486,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{}}],["week_ending_day",{"_index":734,"title":{},"name":{},"text":{"2":{}},"component":{}}],["weekday",{"_index":6186,"title":{},"name":{},"text":{"27":{}},"component":{}}],["weight",{"_index":3100,"title":{},"name":{},"text":{"16":{}},"component":{}}],["welcom",{"_index":1890,"title":{"29":{}},"name":{"29":{}},"text":{"15":{}},"component":{}}],["well",{"_index":2021,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["west",{"_index":3408,"title":{},"name":{},"text":{"16":{}},"component":{}}],["west*gsm",{"_index":3411,"title":{},"name":{},"text":{"16":{}},"component":{}}],["we’d",{"_index":6695,"title":{},"name":{},"text":{"28":{}},"component":{}}],["we’r",{"_index":6711,"title":{},"name":{},"text":{"28":{}},"component":{}}],["wget",{"_index":807,"title":{},"name":{},"text":{"3":{},"25":{}},"component":{}}],["whatev",{"_index":3783,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["whatsoev",{"_index":5777,"title":{},"name":{},"text":{"27":{}},"component":{}}],["what’",{"_index":6887,"title":{},"name":{},"text":{"28":{}},"component":{}}],["whenev",{"_index":2834,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["wherea",{"_index":3369,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["wherebi",{"_index":4751,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wherein",{"_index":5799,"title":{},"name":{},"text":{"27":{}},"component":{}}],["wherev",{"_index":4870,"title":{},"name":{},"text":{"23":{}},"component":{}}],["whether",{"_index":329,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["whichev",{"_index":2765,"title":{},"name":{},"text":{"16":{}},"component":{}}],["white",{"_index":5741,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["whitespac",{"_index":2001,"title":{},"name":{},"text":{"15":{},"17":{},"27":{}},"component":{}}],["whole",{"_index":2578,"title":{},"name":{},"text":{"16":{},"24":{},"28":{}},"component":{}}],["whose",{"_index":3344,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["who’",{"_index":2026,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["wide",{"_index":2569,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["wider",{"_index":907,"title":{},"name":{},"text":{"4":{},"15":{},"17":{}},"component":{}}],["width",{"_index":1779,"title":{},"name":{},"text":{"13":{},"28":{}},"component":{}}],["width=0",{"_index":6662,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=14",{"_index":6768,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=244",{"_index":6646,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=250",{"_index":6765,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=32",{"_index":6739,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=488",{"_index":6728,"title":{},"name":{},"text":{"28":{}},"component":{}}],["width=97",{"_index":5772,"title":{},"name":{},"text":{"27":{}},"component":{}}],["wild",{"_index":3523,"title":{},"name":{},"text":{"16":{}},"component":{}}],["wildcard",{"_index":1229,"title":{},"name":{},"text":{"9":{},"16":{}},"component":{}}],["wildcards.ani",{"_index":3244,"title":{},"name":{},"text":{"16":{}},"component":{}}],["will",{"_index":2201,"title":{},"name":{},"text":{"15":{},"24":{},"28":{}},"component":{}}],["win",{"_index":3514,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["window",{"_index":2364,"title":{"16-144":{},"27-123":{}},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["wire",{"_index":3628,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["wise",{"_index":3184,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["wish",{"_index":1941,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"24":{},"27":{},"28":{}},"component":{}}],["wit",{"_index":5273,"title":{},"name":{},"text":{"24":{}},"component":{}}],["with_queri",{"_index":6137,"title":{},"name":{},"text":{"27":{}},"component":{}}],["withdrawn",{"_index":6513,"title":{},"name":{},"text":{"28":{}},"component":{}}],["within",{"_index":2896,"title":{"27-77":{}},"name":{},"text":{"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{}},"component":{}}],["without",{"_index":298,"title":{},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"15":{},"16":{},"17":{},"18":{},"21":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["won’t",{"_index":3143,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"28":{}},"component":{}}],["word",{"_index":739,"title":{"27-102":{}},"name":{},"text":{"2":{},"16":{},"27":{},"28":{}},"component":{}}],["work",{"_index":87,"title":{"16-163":{},"27-11":{}},"name":{},"text":{"1":{},"2":{},"4":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["work_mem",{"_index":3784,"title":{},"name":{},"text":{"16":{}},"component":{}}],["work_mem=1234",{"_index":3781,"title":{},"name":{},"text":{"16":{}},"component":{}}],["workabl",{"_index":5289,"title":{},"name":{},"text":{"24":{}},"component":{}}],["workaround",{"_index":575,"title":{},"name":{},"text":{"2":{},"27":{}},"component":{}}],["worker",{"_index":3112,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{}},"component":{}}],["workers.if",{"_index":2951,"title":{},"name":{},"text":{"16":{}},"component":{}}],["workflow",{"_index":1912,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["working_dir",{"_index":2065,"title":{},"name":{},"text":{"15":{}},"component":{}}],["working_dir/ivorysql",{"_index":2069,"title":{},"name":{},"text":{"15":{}},"component":{}}],["workload",{"_index":4992,"title":{},"name":{},"text":{"24":{}},"component":{}}],["world",{"_index":960,"title":{},"name":{},"text":{"4":{},"11":{},"13":{},"15":{},"17":{},"25":{},"27":{}},"component":{}}],["worri",{"_index":2220,"title":{},"name":{},"text":{"15":{},"23":{},"28":{}},"component":{}}],["wors",{"_index":2649,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["worst",{"_index":5786,"title":{},"name":{},"text":{"27":{}},"component":{}}],["worth",{"_index":2731,"title":{},"name":{},"text":{"16":{},"23":{},"28":{}},"component":{}}],["worthwhil",{"_index":5013,"title":{},"name":{},"text":{"24":{}},"component":{}}],["wouldn't",{"_index":3283,"title":{},"name":{},"text":{"16":{}},"component":{}}],["wouldn’t",{"_index":5047,"title":{},"name":{},"text":{"24":{}},"component":{}}],["wrap",{"_index":2120,"title":{},"name":{},"text":{"15":{},"16":{},"24":{}},"component":{}}],["wraparound",{"_index":4929,"title":{"24-6":{}},"name":{},"text":{"24":{},"27":{}},"component":{}}],["wraplimitsvacuum",{"_index":4439,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wrapper",{"_index":533,"title":{},"name":{},"text":{"2":{},"16":{},"28":{}},"component":{}}],["writabl",{"_index":3330,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["write",{"_index":1877,"title":{"15-51":{},"24-14":{},"27-7":{}},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["write_lag",{"_index":4471,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["write_lsn",{"_index":4468,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["writer",{"_index":3940,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{}},"component":{}}],["writers).pg_dump",{"_index":2492,"title":{},"name":{},"text":{"16":{}},"component":{}}],["written",{"_index":2095,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["written_lsn",{"_index":4519,"title":{},"name":{},"text":{"23":{}},"component":{}}],["wrong",{"_index":3391,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["wrote",{"_index":6060,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ww",{"_index":6247,"title":{},"name":{},"text":{"27":{}},"component":{}}],["www",{"_index":137,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{}}],["www.git",{"_index":2166,"title":{},"name":{},"text":{"15":{}},"component":{}}],["www/blog",{"_index":2171,"title":{},"name":{},"text":{"15":{}},"component":{}}],["www/i18n/zh",{"_index":2173,"title":{},"name":{},"text":{"15":{}},"component":{}}],["x",{"_index":451,"title":{},"name":{},"text":{"2":{},"16":{},"26":{},"27":{},"28":{}},"component":{}}],["x%'::text",{"_index":5774,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x'1ff",{"_index":5908,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x*@i",{"_index":5926,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x*`h",{"_index":5880,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x/open",{"_index":5805,"title":{},"name":{},"text":{"27":{}},"component":{}}],["x86_64",{"_index":348,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["x`hh",{"_index":5881,"title":{},"name":{},"text":{"27":{}},"component":{}}],["xa",{"_index":5806,"title":{},"name":{},"text":{"27":{}},"component":{}}],["xabcdef",{"_index":1760,"title":{},"name":{},"text":{"13":{}},"component":{}}],["xact",{"_index":4708,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xact_commit",{"_index":4603,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xact_rollback",{"_index":4604,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xact_start",{"_index":4161,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xactbuff",{"_index":4440,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xactgroupupd",{"_index":4357,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xactslru",{"_index":4441,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xacttrunc",{"_index":4442,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xdigit",{"_index":6572,"title":{},"name":{},"text":{"28":{}},"component":{}}],["xfetch",{"_index":2907,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xfetch.th",{"_index":2947,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xiangyu",{"_index":167,"title":{},"name":{},"text":{"1":{}},"component":{}}],["xid",{"_index":3703,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["xid,xid",{"_index":3656,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xid_epoch",{"_index":3664,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xid`th",{"_index":4177,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xid`thi",{"_index":4457,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xid`top",{"_index":4175,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xidgen",{"_index":4444,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xinji",{"_index":169,"title":{},"name":{},"text":{"1":{}},"component":{}}],["xjf",{"_index":406,"title":{},"name":{},"text":{"2":{}},"component":{}}],["xlogwrit",{"_index":4593,"title":{},"name":{},"text":{"23":{}},"component":{}}],["xmax",{"_index":5079,"title":{},"name":{},"text":{"24":{}},"component":{}}],["xmin",{"_index":4179,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["xml",{"_index":1386,"title":{"18":{},"18-4":{}},"name":{},"text":{"11":{},"18":{},"28":{}},"component":{}}],["xmlisvalid",{"_index":3804,"title":{"18-17":{}},"name":{},"text":{"18":{}},"component":{}}],["xmlisvalid(xmltyp",{"_index":3851,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmlnstest",{"_index":3828,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmlnstest(id",{"_index":3827,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltest",{"_index":3826,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltest(id",{"_index":3825,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype",{"_index":3810,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype('1111",{"_index":3840,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype('4142",{"_index":3829,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype('88",{"_index":3843,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype('newnod",{"_index":3837,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xmltype_inst",{"_index":3820,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xnone",{"_index":2908,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xpath_str",{"_index":3813,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xstream",{"_index":2906,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xvf",{"_index":811,"title":{},"name":{},"text":{"3":{}},"component":{}}],["xx",{"_index":408,"title":{},"name":{},"text":{"2":{}},"component":{}}],["xxx",{"_index":1609,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{}}],["xxx34abcd56789",{"_index":1611,"title":{},"name":{},"text":{"13":{}},"component":{}}],["xyzzi",{"_index":2740,"title":{},"name":{},"text":{"16":{}},"component":{}}],["y",{"_index":339,"title":{},"name":{},"text":{"2":{},"3":{},"16":{},"22":{},"25":{},"27":{},"28":{}},"component":{}}],["y/n",{"_index":2770,"title":{},"name":{},"text":{"16":{}},"component":{}}],["y/x",{"_index":6070,"title":{},"name":{},"text":{"27":{}},"component":{}}],["yaml",{"_index":6638,"title":{},"name":{},"text":{"28":{}},"component":{}}],["yan",{"_index":161,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ydt",{"_index":6235,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ye",{"_index":330,"title":{},"name":{},"text":{"2":{},"25":{},"27":{}},"component":{}}],["year",{"_index":1412,"title":{},"name":{},"text":{"13":{},"15":{},"27":{},"28":{}},"component":{}}],["yellow",{"_index":5720,"title":{},"name":{},"text":{"27":{}},"component":{}}],["yes，in",{"_index":331,"title":{},"name":{},"text":{"2":{}},"component":{}}],["yield",{"_index":3729,"title":{},"name":{},"text":{"16":{},"24":{},"27":{},"28":{}},"component":{}}],["york",{"_index":6831,"title":{},"name":{},"text":{"28":{}},"component":{}}],["your",{"_index":5948,"title":{},"name":{},"text":{"27":{}},"component":{}}],["yourself",{"_index":2445,"title":{},"name":{},"text":{"16":{},"27":{}},"component":{}}],["you’ll",{"_index":3053,"title":{},"name":{},"text":{"16":{},"27":{},"28":{}},"component":{}}],["you’r",{"_index":1947,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"27":{}},"component":{}}],["yst",{"_index":6234,"title":{},"name":{},"text":{"27":{}},"component":{}}],["yum",{"_index":3899,"title":{"22-3":{},"25-2":{},"25-10":{}},"name":{},"text":{"22":{},"25":{},"26":{}},"component":{}}],["yy",{"_index":1145,"title":{},"name":{},"text":{"6":{},"27":{}},"component":{}}],["yyyi",{"_index":1108,"title":{},"name":{},"text":{"6":{},"13":{},"27":{}},"component":{}}],["yyyy/mm/dd",{"_index":6306,"title":{},"name":{},"text":{"27":{}},"component":{}}],["z",{"_index":1697,"title":{},"name":{},"text":{"13":{},"16":{},"27":{},"28":{}},"component":{}}],["zambia",{"_index":6614,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zcat",{"_index":6533,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zero",{"_index":2612,"title":{},"name":{},"text":{"16":{},"23":{},"24":{},"27":{},"28":{}},"component":{}}],["zero.thi",{"_index":4698,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zhao",{"_index":153,"title":{},"name":{},"text":{"1":{}},"component":{}}],["zhibin",{"_index":171,"title":{},"name":{},"text":{"1":{}},"component":{}}],["zhou",{"_index":155,"title":{},"name":{},"text":{"1":{}},"component":{}}],["zimbabw",{"_index":6616,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zip",{"_index":6787,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zipcod",{"_index":6791,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zlib",{"_index":5396,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["zm",{"_index":6613,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zone",{"_index":1116,"title":{},"name":{},"text":{"6":{},"9":{},"13":{},"27":{}},"component":{}}],["zone`last",{"_index":4652,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zone`receipt",{"_index":4525,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zone`return",{"_index":4694,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zone`send",{"_index":4492,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zone`tim",{"_index":4160,"title":{},"name":{},"text":{"23":{}},"component":{}}],["zst",{"_index":2953,"title":{},"name":{},"text":{"16":{}},"component":{}}],["zstd",{"_index":2949,"title":{},"name":{},"text":{"16":{}},"component":{}}],["zw",{"_index":6615,"title":{},"name":{},"text":{"28":{}},"component":{}}],["zxvf",{"_index":389,"title":{},"name":{},"text":{"2":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"[Release date: January 13, 2025] IvorySQL 4.2, based on PostgreSQL 17.2 and includes a variety of bug fixes. For a comprehensive list of updates, please visit our documentation site. PostgreSQL 17.1 Enhancements Ensure cached plans are marked as dependent on the calling role when RLS applies to a non-top-level table reference. Make libpq discard error messages received during SSL or GSS protocol negotiation. Fix unintended interactions between SET SESSION AUTHORIZATION and SET ROLE. Prevent trusted PL/Perl code from changing environment variables. Fix updates of catalog state for foreign-key constraints when attaching or detaching table partitions. For further details, visit PostgreSQL’s release notes. PostgreSQL 17.2 Enhancements Repair ABI break for extensions that work with struct ResultRelInfo. Restore functionality of ALTER {ROLE|DATABASE} SET role. Fix cases where a logical replication slot’s restart_lsn could go backwards. Avoid deleting still-needed WAL files during pg_rewind. Fix race conditions associated with dropping shared statistics entries. For further details, visit PostgreSQL’s release notes. IvorySQL 4.2 Fix issue for pg_upgrade: Issue #721 Provide Rocky9 installation package: Issue #724 EN grammatical fixes in ivorysql_docs: Issue #95 IvorySQL’s development is maintained across two main repositories: IvorySQL database source code: https://github.com/IvorySQL/IvorySQL IvorySQL official website: https://github.com/IvorySQL/Ivory-www The following individuals (in alphabetical order) have contributed to this release as patch authors, committers, reviewers, testers, or reporters of issues. Cary Huang Denis Lussier Fawei Zhao Grant Zhou Hope Gao Lily Wang Shawn Yan Shiji Niu Shoubo Wang Shuntian Jiao Xiangyu Liang Xinjie Lv Zhibin Wang","title":"","component":"ivorysql-doc","version":"v4.2","name":"1","url":"/ivorysql-doc/v4.2/v4.2/1.html","titles":[{"text":"1. Version Overview","hash":"version-overview","id":1},{"text":"2. Enhancements & Fixed Issue","hash":"enhancements-fixed-issue","id":2},{"text":"3. Source Code","hash":"source-code","id":3},{"text":"4. Contributors","hash":"contributors","id":4}]},"2":{"id":2,"text":"Database migration refers to the process of transferring data from one database to another, and the databases at both ends may be PostgreSql, IvoySQL, MySQL, Oracle, SQL Server, etc. The migration process is a challenging, complex process that requires a thorough understanding of how databases work and their characteristics. If the application has been deployed to the production environment and is in a normal operating state, a smooth application migration is required after database migration to maintain uninterrupted business operation and no data loss. After migration, databases and systems should meet the following requirements: The migrated database system should fully host the data of the original database system. Avoid data loss during migration that causes incomplete data to the new database system. The migrated database system should fully adapt to the functions of the original database. Avoid the inability to run or throw errors of the entire business system due to data types, syntax, and functions that are not supported after migration, and there is no alternative. The migrated database should be adapted to the upstream and downstream of the entire business system to ensure the stable and reliable operation of the entire business system. The comprehensive performance of the migrated database cannot be weaker than that of the original database, providing performance guarantee for the entire business system. Ora2Pg is a free tool for migrating Oracle databases to an IvorySQL-compatible schema. It connects to your Oracle database, automatically scans and extracts its structure or data, and then generates SQL scripts that can be loaded into an IvorySQL database. Ora2Pg can migrate from a reverse-engineered Oracle database to a large enterprise database, or simply copy some Oracle data into an IvorySQL database. It is very easy to use and does not require any Oracle database knowledge without providing the parameters required to connect to Oracle Database. Ora2Pg consists of a Perl script (ora2pg) and a Perl module(Ora2Pg.pm), the only thing that needs to be done is to modify its configuration file, ora2pg.conf, set the DSN to connect to the Oracle database, and an optional SCHEMA name. ONCE THAT’S DONE, YOU ONLY NEED TO SET THE EXPORTED TYPE: TABLE (INCLUDING CONSTRAINTS AND INDEXES), VIEW, MVIEW, TABLESPACE, SEQUENCE, INDEXES, TRIGGER, GRANT, FUNCTION, PROCEDURE, PACKAGE, PARTITION, TYPE, INSERT OR COPY, FDW, QUERY, KETTLE, AND SYNONYM. By default, Ora2Pg exports an SQL file, which can be executed through the IvorySQL client tool psql. When performing data migration, you can set the DSN of the target database in the configuration file to import data directly from Oracle into the IvorySQL database. Object Whether ora2pg is supported view yes trigger yes，In some cases, you need to modify the script manually sequence yes function yes procedure yes，In some cases, you need to modify the script manually type yes，In some cases, you need to modify the script manually materialized view yes，In some cases, you need to modify the script manually linux Oracle Version IvorySQL Version Centos Stream 9 19.0.0.0 4.2 # dnf install -y perl perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker # perl -v This is perl 5, version 16, subversion 3 (v5.16.3) built for x86_64-linux-thread-multi (with 44 registered patches, see perl -V for more detail) Copyright 1987-2012, Larry Wall Perl may be copied only under the terms of either the Artistic License or the GNU General Public License, which may be found in the Perl 5 source kit. Complete documentation for Perl, including FAQ lists, should be found on this system using \"man perl\" or \"perldoc perl\". If you have access to the Internet, point your browser at http://www.perl.org/, the Perl Home Page. DBI，Database Independent Interface，is the interface of the Perl language to connect to the database Download address: https://cpan.metacpan.org/authors/id/T/TI/TIMB/DBI-1.643.tar.gz # tar zxvf DBI-1.643.tar.gz # cd DBI-1.643/ # perl Makefile.PL # make # make install Download address：https://sourceforge.net/projects/ora2pg/ Set environment variables; Load environment variables; Because ORACLE must be defined_ HOME environment variable; This example configures environment variables under the ivorysql user export LD_LIBRARY_PATH=/usr/lib/oracle/18.3/client64/lib:$LD_LIBRARY_PATH export ORACLE_HOME=/usr/lib/oracle/18.3/client64 # tar -zxvf DBD-Oracle-1.76.tar.gz # source /home/postgres/.bashrc # cd DBD-Oracle-1.76 # perl Makefile.PL # make # make install Download address：https://metacpan.org/release/DBD-Pg/ Set environment variables： export POSTGRES_HOME=/opt/ivorysql/3.2 # tar -zxvf DBD-Pg-3.80.tar.gz # source /home/ivorysql/.bashrc # cd DBD-Pg-3.8.0 # perl Makefile.PL # make # make install Download address：https://sourceforge.net/projects/ora2pg/ # tar -xjf ora2pg-24.0.tar.bz2 # cd ora2pg-xx/ # perl Makefile.PL PREFIX= # make && make install Installed in/usr/local/bin/directory by default Check the software environment: # vi check.pl #!/usr/bin/perl use strict; use ExtUtils::Installed; my $inst= ExtUtils::Installed->new(); my @modules = $inst->modules(); foreach(@modules) { my $ver = $inst->version($_) || \"???\"; printf(\"%-12s -- %s\\n\", $_, $ver); } exit; # perl check.pl DBD::Oracle -- 1.76 DBD::Pg -- 3.8.0 DBI -- 1.643 Ora2Pg -- 24.0 Perl -- 5.16.3 Set environment variables export PERL5LIB= #export PERL5LIB=/usr/local/bin/ Update oracle statistics to improve performance BEGIN DBMS_STATS.GATHER_SCHEMA_STATS('SH'); DBMS_STATS.GATHER_SCHEMA_STATS('SCOTT'); DBMS_STATS.GATHER_SCHEMA_STATS('HR'); DBMS_STATS.GATHER_DATABASE_STATS ; DBMS_STATS.GATHER_DICTIONARY_STATS; END;/ Query the source end object pair type SYS@PROD1>set pagesize 200 SYS@PROD1>select distinct OBJECT_TYPE from dba_objects where OWNER in ('SH','SCOTT','HR'); OBJECT_TYPE ------------------- INDEX PARTITION TABLE PARTITION SEQUENCE PROCEDURE LOB X TRIGGER DIMENSION X MATERIALIZED VIEW TABLE INDEX VIEW 11 rows selected. Configure ora2pg.conf By default, Ora2Pg will find the/etc/ora2pg/ora2pg.conf configuration file. If the file exists, you only need to execute:/usr/local/bin/ora2pg cat /etc/ora2pg/ora2pg.conf.dist | grep -v ^# |grep -v ^$ >ora2pg.conf vi ora2pg.conf # cat ora2pg.conf ORACLE_HOME /opt/oracle/product/19c/dbhome_1 ORACLE_DSN dbi:Oracle:host=localhost;sid=ORCLCDB;port=1521 ORACLE_USER system ORACLE_PWD oracle SCHEMA SH EXPORT_SCHEMA 1 SKIP fkeys ukeys checks TYPE TABLE,VIEW,GRANT,SEQUENCE,TABLESPACE,PROCEDURE,TRIGGER,FUNCTION,PACKAGE,PARTITION,TYPE,MVIEW,QUERY,DBLINK,SYNONYM,DIRECTORY,TEST,TEST_VIEW NLS_LANG AMERICAN_AMERICA.UTF8 OUTPUT sh.sql Only one type of export can be executed at the same time, so the TYPE instruction must be unique. If you have more than one, only the last one will be found in the file. But I can export multiple types at the same time. Please note that you can link multiple exports by providing a comma-separated list of export types to the TYPE directive, but in this case, you cannot use COPY or INSERT with other export types. Some export types cannot or should not be directly loaded into the IvorySQL database, and still require little manual editing. This is the case for GRANT, TABLESPACE, TRIGGER, FUNCTION, PROCEDURE, TYPE, QUERY and PACKAGE export types, especially if you have PLSQL code or Oracle specific SQL. For TABLESPACE, you must ensure that the file path exists on the system. For SYNONYM, you can ensure that the owner and schema of the object correspond to the new PostgreSQL database design. It is recommended to export the table structure one type at a time to avoid other errors affecting each other. After setting the Oracle database DSN, you can execute ora2pg to check whether it is valid： # ora2pg -t SHOW_VERSION -c config/ora2pg.conf Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 It is not easy to estimate the cost of the migration process from Oracle to PostgreSQL. In order to obtain a good evaluation of the migration cost, Ora2Pg will check all database objects, all functions and stored procedures to detect whether there are still some objects and PL/SQL code that cannot be automatically converted by Ora2Pg. Ora2Pg has a content analysis mode, which checks the Oracle database to generate a text report about the content contained in the Oracle database and the content that cannot be exported. # ora2pg -t SHOW_REPORT --estimate_cost -c ora2pg.conf [========================>] 11/11 tables (100.0%) end of scanning. [========================>] 11/11 objects types (100.0%) end of objects auditing. ------------------------------------------------------------------------------- Ora2Pg v24.0 - Database Migration Report ------------------------------------------------------------------------------- Version Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 Schema SH Size 287.25 MB ------------------------------------------------------------------------------- Object Number Invalid Estimated cost Comments Details ------------------------------------------------------------------------------- DATABASE LINK 0 0 0 Database links will be exported as SQL/MED IvorySQL's Foreign Data Wrapper (FDW) extensions using oracle_fdw. DIMENSION 5 0 0 GLOBAL TEMPORARY TABLE 0 0 0 Global temporary table are not supported by PostgreSQL and will not be exported. You will have to rewrite some application code to match the PostgreSQL temporary table behavior. INDEX 20 0 3.4 14 index(es) are concerned by the export, others are automatically generated and will do so on PostgreSQL. Bitmap will be exported as btree_gin index(es) and hash index(es) will be exported as b-tree index(es) if any. Domain index are exported as b-tree but commented to be edited to mainly use FTS. Cluster, bitmap join and IOT indexes will not be exported at all. Reverse indexes are not exported too, you may use a trigram-based index (see pg_trgm) or a reverse() function based index and search. Use 'varchar_pattern_ops', 'text_pattern_ops' or 'bpchar_pattern_ops' operators in your indexes to improve search with the LIKE operator respectively into varchar, text or char columns. 11 bitmap index(es). 1 domain index(es). 2 b-tree index(es). INDEX PARTITION 196 0 0 Only local indexes partition are exported, they are build on the column used for the partitioning. JOB 0 0 0 Job are not exported. You may set external cron job with them. MATERIALIZED VIEW 2 0 6 All materialized view will be exported as snapshot materialized views, they are only updated when fully refreshed. SYNONYM 0 0 0 SYNONYMs will be exported as views. SYNONYMs do not exists with PostgreSQL but a common workaround is to use views or set the PostgreSQL search_path in your session to access object outside the current schema. TABLE 11 0 1.1 1 external table(s) will be exported as standard table. See EXTERNAL_TO_FDW configuration directive to export as file_fdw foreign tables or use COPY in your code if you just want to load data from external files. Total number of rows: 1063384. Top 10 of tables sorted by number of rows:. sales has 918843 rows. costs has 82112 rows. customers has 55500 rows. supplementary_demographics has 4500 rows. times has 1826 rows. promotions has 503 rows. products has 72 rows. countries has 23 rows. channels has 5 rows. sales_transactions_ext has 0 rows. Top 10 of largest tables:. TABLE PARTITION 56 0 5.6 Partitions are exported using table inheritance and check constraint. Hash and Key partitions are not supported by PostgreSQL and will not be exported. 56 RANGE partitions.. VIEW 1 0 1 Views are fully supported but can use specific functions. ------------------------------------------------------------------------------- Total 291 0 17.10 17.10 cost migration units means approximatively 1 man-day(s). The migration unit was set to 5 minute(s) ------------------------------------------------------------------------------ Migration level : A-1 ------------------------------------------------------------------------------- Migration levels: A - Migration that might be run automatically B - Migration with code rewrite and a human-days cost up to 5 days C - Migration with code rewrite and a human-days cost above 5 days Technical levels: 1 = trivial: no stored functions and no triggers 2 = easy: no stored functions but with triggers, no manual rewriting 3 = simple: stored functions and/or triggers, no manual rewriting 4 = manual: no stored functions but with triggers or views with code rewriting 5 = difficult: stored functions and/or triggers with code rewriting ------------------------------------------------------------------------------- # ora2pg -c ora2pg.conf [========================>] 11/11 tables (100.0%) end of scanning. [========================>] 12/12 tables (100.0%) end of table export. [========================>] 1/1 views (100.0%) end of output. [========================>] 0/0 sequences (100.0%) end of output. [========================>] 0/0 procedures (100.0%) end of procedures export. [========================>] 0/0 triggers (100.0%) end of output. [========================>] 0/0 functions (100.0%) end of functions export. [========================>] 0/0 packages (100.0%) end of output. [========================>] 56/56 partitions (100.0%) end of output. [========================>] 0/0 types (100.0%) end of output. [========================>] 2/2 materialized views (100.0%) end of output. [========================>] 0/0 dblink (100.0%) end of output. [========================>] 0/0 synonyms (100.0%) end of output. [========================>] 2/2 directory (100.0%) end of output. Fixing function calls in output files.... Configure the type of ora2pg.conf as COPY or INSERT # cp ora2pg.conf sh_data.conf # vi sh_data.conf ORACLE_HOME /usr/lib/oracle/18.3/client64 ORACLE_DSN dbi:Oracle:host=10.85.10.6 ;sid=PROD1;port=1521 ORACLE_USER system ORACLE_PWD oracle SCHEMA SH EXPORT_SCHEMA 1 DISABLE_UNLOGGED 1 SKIP fkeys ukeys checks TYPE COPY NLS_LANG AMERICAN_AMERICA.UTF8 OUTPUT sh_data.sql Export Data # ora2pg -c sh_data.conf [========================>] 11/11 tables (100.0%) end of scanning. [========================>] 5/5 rows (100.0%) Table CHANNELS (5 recs/sec) [> ] 5/1063384 total rows (0.0%) - (0 sec., avg: 5 recs/sec). [> ] 0/82112 rows (0.0%) Table COSTS_1995 (0 recs/sec) [> ] 5/1063384 total rows (0.0%) - (0 sec., avg: 5 recs/sec). [> ] 0/82112 rows (0.0%) Table COSTS_H1_1997 (0 recs/sec) [> ] 5/1063384 total rows (0.0%) - (0 sec., avg: 5 recs/sec). [> ] 0/82112 rows (0.0%) Table COSTS_1996 (0 recs/sec) [> ] 5/1063384 total rows (0.0%) - (0 sec., avg: 5 recs/sec). …………………………………………………………… [========================>] 4500/4500 rows (100.0%) Table SUPPLEMENTARY_DEMOGRAPHICS (4500 recs/sec) [=======================> ] 1061558/1063384 total rows (99.8%) - (45 sec., avg: 23590 recs/sec). [========================>] 1826/1826 rows (100.0%) Table TIMES (1826 recs/sec) [========================>] 1063384/1063384 total rows (100.0%) - (45 sec., avg: 23630 recs/sec). [========================>] 1063384/1063384 rows (100.0%) on total estimated data (45 sec., avg: 23630 recs/sec) Fixing function calls in output files... To view the exported file: # ls -lrt *.sql -rw-r--r-- 1 root root 15716 Jul 2 21:21 TABLE_sh.sql -rw-r--r-- 1 root root 858 Jul 2 21:21 VIEW_sh.sql -rw-r--r-- 1 root root 2026 Jul 2 21:21 TABLESPACE_sh.sql -rw-r--r-- 1 root root 345 Jul 2 21:21 SEQUENCE_sh.sql -rw-r--r-- 1 root root 2382 Jul 2 21:21 GRANT_sh.sql -rw-r--r-- 1 root root 344 Jul 2 21:21 TRIGGER_sh.sql -rw-r--r-- 1 root root 346 Jul 2 21:21 PROCEDURE_sh.sql -rw-r--r-- 1 root root 344 Jul 2 21:21 PACKAGE_sh.sql -rw-r--r-- 1 root root 345 Jul 2 21:21 FUNCTION_sh.sql -rw-r--r-- 1 root root 6771 Jul 2 21:21 PARTITION_sh.sql -rw-r--r-- 1 root root 341 Jul 2 21:21 TYPE_sh.sql -rw-r--r-- 1 root root 342 Jul 2 21:21 QUERY_sh.sql -rw-r--r-- 1 root root 950 Jul 2 21:21 MVIEW_sh.sql -rw-r--r-- 1 root root 344 Jul 2 21:21 SYNONYM_sh.sql -rw-r--r-- 1 root root 926 Jul 2 21:21 DIRECTORY_sh.sql -rw-r--r-- 1 root root 343 Jul 2 21:21 DBLINK_sh.sql -rw-r--r-- 1 root root 55281235 Jul 2 17:11 sh_data.sql Export HR and SCOTT user data in the same way. Create ORCL database # su - ivorysql Last login: Tue Jul 2 20:04:30 CST 2019 on pts/3 $ createdb orcl $ psql psql (17.2) Type \"help\" for help. ivorysql=# \\l List of databases Name | Owner | Encoding | Collate | Ctype | ICU Locale | Locale Provider | Access privileges -----------+----------+-----------+---------+-------+------------+-----------------+----------------------- ivorysql | ivorysql | SQL_ASCII | C | C | | libc | orcl | ivorysql | SQL_ASCII | C | C | | libc | postgres | ivorysql | SQL_ASCII | C | C | | libc | template0 | ivorysql | SQL_ASCII | C | C | | libc | =c/ivorysql + | | | | | | | ivorysql=CTc/ivorysql template1 | ivorysql | SQL_ASCII | C | C | | libc | =c/ivorysql + | | | | | | | ivorysql=CTc/ivorysql (5 rows) ivorysql=# Create SH, HR, SCOTT users: $ psql orcl psql (17.2) Type \"help\" for help. orcl=# orcl=# create user sh with password 'sh'; CREATE ROLE Because of the materialized view, in TABLE_ The sh.sql contains the index of the materialized view, which will fail to create. You need to first create a table, then create a materialized view, and finally create an index. Cancel the materialized view index and create it separately later: CREATE INDEX fw_psc_s_mv_chan_bix ON fweek_pscat_sales_mv (channel_id); CREATE INDEX fw_psc_s_mv_promo_bix ON fweek_pscat_sales_mv (promo_id); CREATE INDEX fw_psc_s_mv_subcat_bix ON fweek_pscat_sales_mv (prod_subcategory); CREATE INDEX fw_psc_s_mv_wd_bix ON fweek_pscat_sales_mv (week_ending_day); CREATE TEXT SEARCH CONFIGURATION en (COPY = pg_catalog.english); ALTER TEXT SEARCH CONFIGURATION en ALTER MAPPING FOR hword, hword_part, word WITH unaccent, english_stem; psql orcl -f tab.sql.sql ALTER TABLE PARTITION sh.sales OWNER TO sh; COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT COMMENT ALTER TABLE ALTER TABLE ALTER TABLE ……………………………… cat psql orcl -f GRANT_sh.sql CREATE USER SH WITH PASSWORD 'change_my_secret' LOGIN; ALTER TABLE sh.fweek_pscat_sales_mv OWNER TO sh; GRANT ALL ON sh.fweek_pscat_sales_mv TO sh; Materialized views require relevant query permissions, so import permissions. Please keep up with users here $ psql orcl sh -f MVIEW_sh.sql SELECT 0 SELECT 0 CREATE INDEX CREATE INDEX CREATE INDEX CREATE INDEX $ psql orcl -f VIEW_sh.sql SET SET SET CREATE VIEW $ psql orcl -f PARTITION_sh.sql SET SET SET CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE ………………………… $ psql orcl -f sh_data.sql SET COPY 0 SET COPY 0 SET COPY 0 SET COPY 0 SET COPY 0 SET COPY 0 SET COPY 0 SET COPY 4500 SET COPY 1826 COMMIT Source database and target side extract part of objects for comparison： SYS@PROD1>select count(*) from sh.products; COUNT(*) ---------- 72 orcl=# select count(*) from sh.products; count ------- 72 (1 row) --------------------------------------------------------------------------- SYS@PROD1>select count(*) from sh.channels; COUNT(*) ---------- 5 orcl=# select count(*) from sh.channels; count ------- 5 (1 row) -------------------------------------------------------------------------- SYS@PROD1>select count(*) from sh.customers ; COUNT(*) ---------- 55500 orcl=# select count(*) from sh.customers ; count ------- 55500 (1 row) When using, there are two options — project_ Base and — init_ Project indicates to ora2pg that he must create a project template, which contains the work tree, configuration files and scripts for exporting all objects from the Oracle database. Generate a generic configuration file. 1. Create script export_ Schema.sh to automatically perform all exports. 2. Create script import_ All.sh to automatically perform all imports. example： mkdir -p /ora2pg/migration # ora2pg --project_base /ora2pg/migration/ --init_project test_project Creating project test_project. /ora2pg/migration//test_project/ schema/ dblinks/ directories/ functions/ grants/ mviews/ packages/ partitions/ procedures/ sequences/ synonyms/ tables/ tablespaces/ triggers/ types/ views/ sources/ functions/ mviews/ packages/ partitions/ procedures/ triggers/ types/ views/ data/ config/ reports/ Generating generic configuration file Creating script export_schema.sh to automate all exports. Creating script import_all.sh to automate all imports.","title":"Migration guide","component":"ivorysql-doc","version":"v4.2","name":"10","url":"/ivorysql-doc/v4.2/v4.2/10.html","titles":[{"text":"1. Migration overview","hash":"migration-overview","id":1},{"text":"2. Migration tool——Ora2Pg","hash":"migration-toolora2pg","id":2},{"text":"3. Migrate Oracle Database to IvorySQL","hash":"migrate-oracle-database-to-ivorysql","id":3},{"text":"3.1. Environment preparation","hash":"environment-preparation","id":4},{"text":"3.2. Environment-dependent installation","hash":"environment-dependent-installation","id":5},{"text":"3.2.1. Install Perl","hash":"install-perl","id":6},{"text":"3.2.2. Install the DBI module","hash":"install-the-dbi-module","id":7},{"text":"3.2.3. Install DBD-Oracle","hash":"install-dbd-oracle","id":8},{"text":"3.2.4. Install DBD-PG (optional)","hash":"install-dbd-pg-optional","id":9},{"text":"3.3. Install Ora2pg","hash":"install-ora2pg","id":10},{"text":"3.4. Source side preparation","hash":"source-side-preparation","id":11},{"text":"3.5. Ora2pg export table structure","hash":"ora2pg-export-table-structure","id":12},{"text":"3.5.1. Test connection","hash":"test-connection","id":13},{"text":"3.5.2. Migration cost assessment","hash":"migration-cost-assessment","id":14},{"text":"3.5.3. Export SH table structure","hash":"export-sh-table-structure","id":15},{"text":"3.5.4. Export SH user data","hash":"export-sh-user-data","id":16},{"text":"3.6. Create orcl library in IvorySQL environment","hash":"create-orcl-library-in-ivorysql-environment","id":17},{"text":"4. Migration Portal","hash":"migration-portal","id":18},{"text":"4.1. Import table structure","hash":"import-table-structure","id":19},{"text":"4.2. Authorize objects","hash":"authorize-objects","id":20},{"text":"4.3. Import materialized view structure","hash":"import-materialized-view-structure","id":21},{"text":"4.4. Import View","hash":"import-view","id":22},{"text":"4.5. Import partition table","hash":"import-partition-table","id":23},{"text":"4.6. Import data","hash":"import-data","id":24},{"text":"5. Data validation","hash":"data-validation","id":25},{"text":"6. Generate migration template","hash":"generate-migration-template","id":26}]},"3":{"id":3,"text":"IvorySQL is fully compatible with PostgreSQL, allowing for seamless integration with PostGIS. Users can select the installation method for PostGIS that best suits their development environment from the PostGIS installation page. Apart from the installation methods provided by the PostGIS community, the IvorySQL community also offers a source code installation method, with CentOS Stream 9 (x86_64) as the environment for source code installation. Please make sure that IvorySQL version 3.0 or newer is installed in the environment. Install dependencies dnf install -y gcc gcc-c++ libtiff libtiff-devel.x86_64 libcurl-devel.x86_64 libtool libxml2-devel redhat-rpm-config clang llvm geos311 automake protobuf-c-devel Install SQLITE $ wget https://www.sqlite.org/2022/sqlite-autoconf-3400000.tar.gz $ tar -xvf sqlite-autoconf-3400000.tar.gz $ cd sqlite-autoconf-3400000 $ sed -n '1i\\#define SQLITE_ENABLE_COLUMN_METADATA 1' sqlite3.c $ ./configure --prefix=/usr/local/sqlite $ make && make install $ rm usr/bin/sqlite3 && ln -s /usr/local/sqlite/bin/sqlite3 /usr/bin/sqlite3 $ sqlite3 -version $ export PKG_CONFIG_PATH=/usr/local/sqlite/lib/pkgconfig:$PKG_CONFIG_PATH Install PROJ $ wget https://download.osgeo.org/proj/proj-8.2.1.tar.gz $ tar -xvf proj-8.2.1.tar.gz $ cd proj-8.2.1 $ ./configure --prefix=/usr/local/proj-8.2.1 $ make && make install Install GDAL $ wget https://github.com/OSGeo/gdal/releases/download/v3.4.3/gdal-3.4.3.tar.gz $ tar -xvf gdal-3.4.3.tar.gz $ cd gdal-3.4.3 $ sh autogen.sh $ ./configure --prefix=/usr/local/gdal-3.4.3 --with-proj=/usr/local/proj-8.2.1 $ make && make install Install GEOS $ wget https://download.osgeo.org/geos/geos-3.9.2.tar.bz2 $ tar -xvf geos-3.9.2.tar.bz2 $ cd geos-3.9.2 $ ./configure --prefix=/usr/local/geos-3.9.2 $ make && make install Install Protobuf $ wget https://plug-neomirror.rcac.purdue.edu/adelie/source/archive/protobuf-3.20.1/protobuf-3.20.1.tar.gz $ tar -xvf protobuf-3.20.1.tar.gz $ cd protobuf-3.20.1 $ sh autogen.sh $ ./configure --prefix=/usr/local/protobuf-3.20.1 $ make && make install $ export PROTOBUF_HOME=/usr/local/protobuf-3.20.1 $ export PATH=$PROTOBUF_HOME/bin:$PATH $ export PKG_CONFIG_PATH=$PROTOBUF_HOME/lib/pkgconfig:$PKG_CONFIG_PATH Install Protobuf-c $ wget --no-check-certificate https://sources.buildroot.net/protobuf-c/protobuf-c-1.4.1.tar.gz $ tar -xvf protobuf-c-1.4.1.tar.gz $ cd protobuf-c-1.4.1 $ ./configure --prefix=/usr/local/protobuf-c-1.4.1 $ make && make install $ export PROTOBUFC_HOME=/usr/local/protobuf-c-1.4.1 $ export PATH=$PROTOBUF_HOME/bin:$PROTOBUFC_HOME/bin:$PATH $ export PKG_CONFIG_PATH=$PROTOBUFC_HOME/lib:$PKG_CONFIG_PATH Install PostGIS $ wget https://download.osgeo.org/postgis/source/postgis-3.4.0.tar.gz $ tar -xvf postgis-3.4.0.tar.gz $ cd postgis-3.4.0 $ sh autogen.sh $ ./configure --with-geosconfig=/usr/local/geos-3.9.2/bin/geos-config --with-projdir=/usr/local/proj-8.2.1 --with-gdalconfig=/usr/local/gdal-3.4.3/bin/gdal-config --with-protobufdir=/usr/local/protobuf-c-1.4.1 --with-pgconfig=/usr/local/ivorysql/ivorysql-4/bin/pg_config $ make && make install If configure reports PGXS error, please change --with-pgconfig parameter value and confirm the parameter value based on the installation path of IvorySQL in the environment. Connect to the database with psql and execute the following command: ivorysql=# CREATE extension postgis; CREATE EXTENSION ivorysql=# SELECT * FROM pg_available_extensions WHERE name = 'postgis'; name | default_version | installed_version | comment ---------+-----------------+-------------------+------------------------------------------------------------ postgis | 3.4.0 | 3.4.0 | PostGIS geometry and geography spatial types and functions (1 row) To learn more about using PostGIS, please consult the official documentation for PostGIS 3.4.","title":"PostGIS","component":"ivorysql-doc","version":"v4.2","name":"11","url":"/ivorysql-doc/v4.2/v4.2/11.html","titles":[{"text":"1. Overview","hash":"overview","id":1},{"text":"2. Installation","hash":"installation","id":2},{"text":"2.1. Source Code Installation","hash":"source-code-installation","id":3},{"text":"3. Create the extension and verify the PostGIS version.","hash":"create-the-extension-and-verify-the-postgis-version","id":4},{"text":"4. Using","hash":"using","id":5}]},"4":{"id":4,"text":"The vector database is an important component of Generative Artificial Intelligence (GenAI). As a significant extension of PostgreSQL, pgvector not only supports vector calculations of up to 16000 dimensions but also provides powerful vector operations and indexing capabilities, enabling PostgreSQL to directly transform into an efficient vector database. IvorySQL, being developed based on PostgreSQL, inherits the seamless integration capability with pgvector extension, thereby offering users a wider range of data processing and analysis options. Additionally, in Oracle compatibility mode, the pgvector extension is also available, providing great convenience for Oracle users to use vector databases, allowing for easy migration and management of data and achieving more efficient business operations. PGVector has two indexing algorithms, IVFFLAT and HNSW. The working principle of IVFFLAT is to cluster similar vectors into regions and build an inverted index mapping each region to its vectors. This allows queries to focus on a subset of the data, enabling fast searches. By adjusting the parameters of lists and probes, IVFFLAT can balance the speed and accuracy of the dataset, enabling PostgreSQL to perform rapid semantic similarity searches on complex data. Through simple queries, applications can find the nearest neighbors to a query vector among millions of high-dimensional vectors. For tasks such as natural language processing and information retrieval, IVFFLAT provides an effective solution. When building an IVFFLAT index, you need to decide how many lists to include in the index. Each list represents a \"center\" which are computed using the k-means algorithm. Once all centers are determined, IVFFLAT determines which center each vector is closest to and adds it to the index. When querying vector data, you can decide how many centers to check, which is determined by the ivfflat.probes parameter. This results in a trade-off between ANN performance/recall: the more centers accessed, the more accurate the results, but at the expense of performance. HNSW (Hierarchical Navigating Small World) is a graph-based indexing algorithm consisting of multiple layers of neighborhood graphs, hence the name \"hierarchical\" NSW method. It constructs multiple layers of navigation graphs for a given graph according to certain rules, with the upper layers of the graph being sparser and the distances between nodes farther apart; and the lower layers of the graph being denser and the distances between nodes closer together. HNSW algorithm is a classic trade-off between space and time, as it achieves high search quality and speed, but at the cost of significant memory overhead. This is because it not only requires storing all vectors in memory but also maintaining the structure of the graph, which also needs to be stored. The IvorySQL 4.2(above version) has been installed in the environment, and the installation path is /usr/local/ivorysql/ivorysql-4 Setting PG_CONFIG export PG_CONFIG=/usr/local/ivorysql/ivorysql-4/bin/pg_config Pull pg_vector source code git clone --branch v0.6.2 https://github.com/pgvector/pgvector.git Install pgvector cd pgvector sudo --preserve-env=PG_CONFIG make sudo --preserve-env=PG_CONFIG make install Create pgvector extension [ivorysql@localhost ivorysql-4]$ psql psql (17.2) Type \"help\" for help. ivorysql=# create extension vector; CREATE EXTENSION Now, pgvector is installed completely. For more usage cases, please refer to pgvector document In IvorySQL’s Oracle compatibility mode, the pgvector extension can also work correctly. We suggest users to test using port 1521, using the command: psql -p 1521. ivorysql=# CREATE TABLE items5 (id bigserial PRIMARY KEY, name varchar2(20), num number(20), embedding bit(3)); CREATE TABLE ivorysql=# INSERT INTO items5 (name, num, embedding) VALUES ('1st oracle data',0, '000'), ('2nd oracle data', 111, '111'); INSERT 0 2 ivorysql=# SELECT * FROM items5 ORDER BY bit_count(embedding # '101') LIMIT 5; id | name | num | embedding ----+-----------------+-----+----------- 2 | 2nd oracle data | 111 | 111 1 | 1st oracle data | 0 | 000 ivorysql=# declare i vector(3) := '[1,2,3]'; begin raise notice '%', i; end; ivorysql-# / NOTICE: [1,2,3] DO ivorysql=# CREATE OR REPLACE PROCEDURE ora_procedure() AS p vector(3) := '[4,5,6]'; begin raise notice '%', p; end; / CREATE PROCEDURE ivorysql=# call ora_procedure(); NOTICE: [4,5,6] CALL ivorysql=# CREATE OR REPLACE FUNCTION AddVector(a vector(3), b vector(3)) RETURN vector(3) IS BEGIN RETURN a + b; END; / CREATE FUNCTION ivorysql=# SELECT AddVector('[1,2,3]','[4,5,6]') FROM DUAL; addvector ---------------- [5,7,9] (1 row)","title":"pgvector","component":"ivorysql-doc","version":"v4.2","name":"12","url":"/ivorysql-doc/v4.2/v4.2/12.html","titles":[{"text":"1. Overview","hash":"overview","id":1},{"text":"2. Principles","hash":"principles","id":2},{"text":"2.1. IVFFLAT","hash":"ivfflat","id":3},{"text":"2.2. HNSW","hash":"hnsw","id":4},{"text":"3. Installation","hash":"installation","id":5},{"text":"3.1. Source Code Installation","hash":"source-code-installation","id":6},{"text":"4. Oracle Compatible","hash":"oracle-compatible","id":7},{"text":"4.1. Data Type","hash":"data-type","id":8},{"text":"4.2. Anonymous Block","hash":"anonymous-block","id":9},{"text":"4.3. PROCEDURE","hash":"procedure","id":10},{"text":"4.3.1. FUNCTION","hash":"function","id":11}]},"5":{"id":5,"text":"In order to minimize changes to the original PostgreSQL, it is compatible with Oracle. We need to implement a framework for dual-parser, dual-port, modal PL/PGSQL to implement PL/iSQL. The implementation flowchart is as follows: The Ivorysql port 5432 is kept compatible with the original PostgreSQL situation, so Ivorysql uses another separate port to log in, which defaults to 1521. Log in from this port, and the Oracle compatibility mode is used by default. If you need to log in from port 5432 and also enter compatibility mode, you need to set it through the ivorysql.compatible_mode parameters. In order to minimize the interference between Oracle syntax and PostgreSQL syntax, a parser module has been added to handle oracle-related syntax. -Similarly, in order to reduce the conflict between Oracle compatibility and PostgreSQL syntax, a separate set of Oracle-specific test cases is designed,This set of test cases is a copy of PostgreSQL' original test framework.","title":"IVORYSQL framework design","component":"ivorysql-doc","version":"v4.2","name":"14","url":"/ivorysql-doc/v4.2/v4.2/14.html","titles":[{"text":"1. Function","hash":"function","id":1},{"text":"1.1. Dual-port design","hash":"dual-port-design","id":2},{"text":"1.2. Parser module design","hash":"parser-module-design","id":3},{"text":"1.3. Added PL/iSQL procedural language","hash":"added-plisql-procedural-language","id":4}]},"6":{"id":6,"text":"In order to be compatible with Oracle, it is necessary to add some variables for controlling the database execution results on the basis of the original GUC variables, so as to achieve the same behavior as Oracle. In order to better add compatible GUC parameters and to minimize changes to the PG kernel source code, we need to design a framework to add GUC to a unified location. When adding guc parameters, we need to add them uniformly in the ivy_guc.c. Where Ivy_ConfigureNamesBool, Ivy_ConfigureNamesInt, Ivy_ConfigureNamesString, Ivy_ConfigureNamesReal and Ivy_ConfigureNamesEnum represent 5 different types of guc parameters. When adding guc parameters, simply add the value of guc to the corresponding array. Variable Description ivorysql.compatible_mode Indicates which database (pg/oracle) is currently compatible with, which can be viewed through the show command. The set command changes this variable, and the reset command resets it to the database mode at the time of connection. Resetting all will affect this variable ivorysql.database_mode Indicates the current database schema (pg/oracle), which can be viewed through the show command. The set/reset/reset all command does not affect this variable ivorysql.datetime_ignore_nls_mask Indicates whether the date format will be affected by the NLS parameter. The default value is 0, which can be set using the set command. The reset command resets the date format, and the reset all command resets the variable ivorysql.enable_emptystring_to_NULL The value is (on/off), and when this variable is on, it will convert the inserted empty string into a NULL value for storage ivorysql.identifier_case_switch Set character case conversion mode ivorysql.listen_address Indicates the address for compatibility mode listening. When initializing the database, read the configuration from the ivorysql.conf file, modify the value in the configuration file, and restart the database to take effect. This can be viewed through the show command ivorysql.port Indicates the port number for connecting in compatibility mode. When initializing the database, read the configuration from the ivorysql.conf file and modify the value in the configuration file. To take effect, restart the database and view it through the show command nls_date_format Represents the default date format, which can be viewed through the show command and defaults to 'YYYY-MM-DD'. It can be set through the set command and reset back to the default value through the reset command. The reset all command will reset this variable nls_length_semantics Compatible with oracle parameters of the same name, controlling the size of memory occupied by a character nls_timestamp_format Compatible with oracle parameters of the same name, controlling date format with time nls_timestamp_tz_format Compatible with oracle parameters of the same name, controlling the date format with time zone shared_preload_libraries When initializing the database, read from the ivorysql.conf file and view it through the show command. Modify the value in the configuration file and restart the database to take effect. The optional values ​​of this GUC variable are from 0 to 15. optional values Types not formatted through NLS 0 Does not block any types, all time formats are formatted by NLS. 1 date 2 timestamp 3 date、timestamp 4 timestamptz 5 date、timestamptz 6 timestamp、timestamptz 7 date、timestamp、timestamptz 8 timestampltz 9 date、timestampltz 10 timestamp、timestampltz 11 date、timestamp、timestampltz 12 timestamptz、timestampltz 13 date、timestamptz、timestampltz 14 timestamp、timestamptz、timestampltz 15 date、timestamp、timestamptz、timestampltz Usage Example(date) check value of nls_date_format and datetime_ignore_nls_mask ivorysql=# set ivorysql.compatible_mode to oracle; SET ivorysql=# show nls_date_format; nls_date_format ----------------- YYYY-MM-DD (1 row) ivorysql=# show ivorysql.datetime_ignore_nls_mask; ivorysql.datetime_ignore_nls_mask ----------------------------------- 0 (1 row) create a table for testing ivorysql=# create table test_nls_date(a int, created_at date); CREATE TABLE insert data ivorysql=# insert into test_nls_date values(1, '2024/04/05'); INSERT 0 1 ivorysql=# select * from test_nls_date; a | created_at ---+------------ 1 | 2024-04-05 (1 row) modify nls_date_format ivorysql=# set nls_date_format to 'yy-mm-dd'; SET Insert NLS formatted data and view, insert successfully. ivorysql=# insert into test_nls_date values(2, '24/04/15'); INSERT 0 1 ivorysql=# select * from test_nls_date; a | created_at ---+------------ 1 | 24-04-05 2 | 24-04-15 (2 rows) Changing the date type to not undergo NLS processing, and inserting the same data, such as changing it to 1 (3, 5, 7, etc.), will result in an error upon data insertion. NLS formatting will not affect the query results for dates. ivorysql=# set ivorysql.datetime_ignore_nls_mask to 1; SET ivorysql=# insert into test_nls_date values(3, '24/05/15'); ERROR: date/time field value out of range: \"24/05/15\" LINE 1: insert into test_nls_date values(3, '24/05/15'); ^ HINT: Perhaps you need a different \"datestyle\" setting. ivorysql=# select * from test_nls_date; a | created_at ---+------------ 1 | 2024-04-05 2 | 2024-04-15 (2 rows)","title":"GUC Framework","component":"ivorysql-doc","version":"v4.2","name":"15","url":"/ivorysql-doc/v4.2/v4.2/15.html","titles":[{"text":"1. New GUC variables","hash":"new-guc-variables","id":1},{"text":"1.1. Achieve","hash":"achieve","id":2},{"text":"1.2. New variables(currently)","hash":"new-variablescurrently","id":3},{"text":"1.3. Example","hash":"example","id":4},{"text":"1.3.1. ivorysql.datetime_ignore_nls_mask","hash":"ivorysql-datetime_ignore_nls_mask","id":5}]},"7":{"id":7,"text":"In order to meet the case compatibility of PG and Oracle’s reference identifiers, ivorysql has designed three case conversion modes for reference identifiers. Select the conversion mode via the GUC parameter \"identifier_case_switch\"; If the value of the guc parameter \"identifier_case_switch\" is \"normal\": 1). The letters in the identifier referenced by the double quotation mark are left unchanged. If the value of the guc parameter \"identifier_case_switch\" is \"interchange\": 1). If the letters in the identifier referenced by the double quotation mark are all uppercase, uppercase is converted to lowercase. 2). If the letters in the identifier referenced by the double quotation mark are all lowercase, lowercase is converted to uppercase. 3). If the letters in the identifier enclosed in double quotation marks are mixed-case, the identifier is left unchanged. If the value of the guc parameter \"identifier_case_switch\" is \"lowercase\": 1). If the letters in the identifier referenced by the double quotation mark are all uppercase, uppercase is converted to lowercase. 2). If the letters in the identifier enclosed in double quotation marks are mixed-case, the identifier is left unchanged. Add the -C option to the initdb program to set the case conversion mode, and the corresponding value of -C is: \"normal\" ------ \"0\"synonymy \"interchange\" ------ \"1\"synonymy \"lowercase\" ------ \"2\"synonymy During initialization of the database cluster, the case conversion pattern is saved to the global/pg_control file in the data directory; normal ivorysql=# SET ivorysql.compatible_mode to oracle; SET ivorysql=# SET ivorysql.enable_case_switch = true; SET ivorysql=# SET ivorysql.identifier_case_switch = normal; SET ivorysql=# CREATE TABLE \"NORMAL_1\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"Normal_2\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"normal_3\"(c1 int, c2 int); CREATE TABLE ivorysql=# select * from \"NORMAL_1\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"Normal_1\"; ERROR: relation \"Normal_1\" does not exist LINE 1: select * from \"Normal_1\"; ivorysql=# select * from \"normal_1\"; ERROR: relation \"normal\" does not exist LINE 1: select * from \"normal\"; ivorysql=# select * from NORMAL_1; ERROR: relation \"normal_1\" does not exist LINE 1: select * from NORMAL_1; ivorysql=# select * from \"Normal_2\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"NORMAL_2\"; ERROR: relation \"NORMAL_2\" does not exist LINE 1: select * from \"NORMAL_2\"; ivorysql=# select * from \"normal_2\"; ERROR: relation \"normal_2\" does not exist LINE 1: select * from \"normal_2\"; ivorysql=# select * from Normal_2; ERROR: relation \"normal_2\" does not exist LINE 1: select * from Normal_2; ivorysql=# select * from \"normal_3\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"NORMAL_3\"; ERROR: relation \"NORMAL_3\" does not exist LINE 1: select * from \"NORMAL_3\"; ivorysql=# select * from \"Normal_3\"; ERROR: relation \"Normal_3\" does not exist LINE 1: select * from \"Normal_3\"; ivorysql=# drop table \"NORMAL_1\"; DROP TABLE ivorysql=# drop table \"Normal_2\"; DROP TABLE ivorysql=# drop table \"normal_3\"; DROP TABLE interchange ivorysql=# SET ivorysql.compatible_mode to oracle; SET ivorysql=# SET ivorysql.enable_case_switch = true; SET ivorysql=# SET ivorysql.identifier_case_switch = interchange; SET ivorysql=# CREATE TABLE \"INTER_CHANGE_1\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"Inter_Change_2\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"inter_change_3\"(c1 int, c2 int); CREATE TABLE ivorysql=# select * from \"INTER_CHANGE_1\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"Inter_Change_1\"; ERROR: relation \"Inter_Change_1\" does not exist LINE 1: select * from \"Inter_Change_1\"; ivorysql=# select * from \"inter_change_1\"; ERROR: relation \"INTER_CHANGE_1\" does not exist LINE 1: select * from \"inter_change_1\"; ivorysql=# select * from INTER_CHANGE_1; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"Inter_Change_2\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"INTER_CHANGE_2\"; ERROR: relation \"inter_change_2\" does not exist LINE 1: select * from \"INTER_CHANGE_2\"; ivorysql=# select * from \"inter_change_2\"; ERROR: relation \"INTER_CHANGE_2\" does not exist LINE 1: select * from \"inter_change_2\"; ivorysql=# select * from Inter_Change_2; ERROR: relation \"inter_change_2\" does not exist LINE 1: select * from Inter_Change_2; ivorysql=# select * from \"inter_change_3\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"INTER_CHANGE_3\"; ERROR: relation \"inter_change_3\" does not exist LINE 1: select * from \"INTER_CHANGE_3\"; ivorysql=# select * from \"Inter_Change_3\"; ERROR: relation \"Inter_Change_3\" does not exist LINE 1: select * from \"Inter_Change_3\"; ivorysql=# select * from inter_change_3; ERROR: relation \"inter_change_3\" does not exist LINE 1: select * from \"INTER_CHANGE_3\"; ivorysql=# drop table \"INTER_CHANGE_1\"; DROP TABLE ivorysql=# drop table \"Inter_Change_2\"; DROP TABLE ivorysql=# drop table \"inter_change_3\"; DROP TABLE lowercase ivorysql=# SET ivorysql.compatible_mode to oracle; SET ivorysql=# SET ivorysql.enable_case_switch = true; SET ivorysql=# SET ivorysql.identifier_case_switch = lowercase; SET ivorysql=# CREATE TABLE \"LOWER_CASE_1\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"Lower_Case_2\"(c1 int, c2 int); CREATE TABLE ivorysql=# CREATE TABLE \"lower_case_3\"(c1 int, c2 int); CREATE TABLE ivorysql=# select * from \"LOWER_CASE_1\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"Lower_Case_1\"; ERROR: relation \"Lower_Case_1\" does not exist LINE 1: select * from \"Lower_Case_1\"; ivorysql=# select * from \"lower_case_1\"; c1 | c2 ----+---- (0 行记录) ivorysql=# select * from LOWER_CASE_1; c1 | c2 ----+---- (0 行记录) ivorysql=# select * from \"Lower_Case_2\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"LOWER_CASE_2\"; ERROR: relation \"lower_case_2\" does not exist LINE 1: select * from \"LOWER_CASE_2\"; ivorysql=# select * from \"lower_case_2\"; ERROR: relation \"lower_case_2\" does not exist LINE 1: select * from \"lower_case_2\"; ivorysql=# select * from Lower_Case_2; ERROR: relation \"lower_case_2\" does not exist LINE 1: select * from Lower_Case_2; ivorysql=# select * from \"lower_case_3\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"LOWER_CASE_3\"; c1 | c2 ----+---- (0 rows) ivorysql=# select * from \"Lower_Case_3\"; ERROR: relation \"Lower_Case_3\" does not exist LINE 1: select * from \"Lower_Case_3\"; ivorysql=# select * from LOWER_CASE_3; c1 | c2 ----+---- (0 行记录) ivorysql=# drop table \"NORMAL_1\"; DROP TABLE ivorysql=# drop table \"Normal_2\"; DROP TABLE ivorysql=# drop table \"normal_3\"; DROP TABLE","title":"Reference identifier case conversion design","component":"ivorysql-doc","version":"v4.2","name":"16","url":"/ivorysql-doc/v4.2/v4.2/16.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function","hash":"function","id":2},{"text":"2.1. Three modes of case conversion (interchange by default)","hash":"three-modes-of-case-conversion-interchange-by-default","id":3},{"text":"2.2. When the database cluster is initialized","hash":"when-the-database-cluster-is-initialized","id":4},{"text":"2.3. Use Cases","hash":"use-cases","id":5}]},"8":{"id":8,"text":"In order to support both the PG mode and Oracle-compatible mode, IvorySQL allows specifying the -m parameter during initdb to obtain either a PG mode database or an Oracle-compatible mode database. If the -m parameter is not specified, it defaults to Oracle-compatible mode. If the -m parameter is specified as pg, the database will no longer be compatible with Oracle syntax. Initdb -m initialization requires judgment of different modes, among which oracle mode requires the execution of SQL statements postgres_oracle.bki. The default is Oracle compatibility mode, and the process is as follows: Startup: When starting, it determines whether it is an Oracle compatibility mode based on the initialization mode; Description: database_mode: Used to indicate initialization mode; database_mode=DB_PG，PG mode, and cannot be switched; database_mode=DB_ORACLE， oracle compatibility mode; Initialize the PG mode: ./initdb -D ../data -m pg Initialize the Oracle compatibility mode: ./initdb -D ../data -m oracle or ./initdb -D ../data","title":"Dual-mode design","component":"ivorysql-doc","version":"v4.2","name":"17","url":"/ivorysql-doc/v4.2/v4.2/17.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function","hash":"function","id":2},{"text":"3. Test cases","hash":"test-cases","id":3}]},"9":{"id":9,"text":"This document is intended to provide people using like fuzzy queries with an in-depth understanding of Oracle-compatible fuzzy query like implementations. Database name Like fuzzy queries oracle oracle’s string type is varchar2, which supports fuzzy queries using the Like keyword with wildcards for columns of number, date, and string field types IvorySQL The basic type of IvorySQL’s string is text, so like is based on text, and other IvorySQL types can be implicitly converted to text, so that they can be automatically converted without creating opeartor create table t_ora_like (id int ,str1 varchar(8), date1 timestamp with time zone, date2 time with time zone, num int, str2 varchar(8)); insert into t_ora_like (id ,str1 ,date1 ,date2) values (123456,'test1','2022-09-26 16:39:20','2022-09-26 16:39:20'); insert into t_ora_like (id ,str1 ,date1 ,date2) values (123457,'test2','2022-09-26 16:40:20','2022-09-26 16:40:20'); insert into t_ora_like (id ,str1 ,date1 ,date2) values (223456,'test3','2022-09-26 16:41:20','2022-09-26 16:41:20'); insert into t_ora_like (id ,str1 ,date1 ,date2) values (123458,'test4','2022-09-26 16:42:20','2022-09-26 16:42:20'); select * from t_ora_like where str1 like 'test%'; id | str1 | date1 | date2 | num | str2 --------+-------+-----------------------------------+-------------+-----+------ 123456 | test1 | 2022-09-26 16:39:20.000000 +08:00 | 16:39:20+08 | | 123457 | test2 | 2022-09-26 16:40:20.000000 +08:00 | 16:40:20+08 | | 223456 | test3 | 2022-09-26 16:41:20.000000 +08:00 | 16:41:20+08 | | 123458 | test4 | 2022-09-26 16:42:20.000000 +08:00 | 16:42:20+08 | | (4 rows) select * from t_ora_like where date1 like '2022%'; id | str1 | date1 | date2 | num | str2 --------+-------+-----------------------------------+-------------+-----+------ 123456 | test1 | 2022-09-26 16:39:20.000000 +08:00 | 16:39:20+08 | | 123457 | test2 | 2022-09-26 16:40:20.000000 +08:00 | 16:40:20+08 | | 223456 | test3 | 2022-09-26 16:41:20.000000 +08:00 | 16:41:20+08 | | 123458 | test4 | 2022-09-26 16:42:20.000000 +08:00 | 16:42:20+08 | | (4 rows) select * from t_ora_like where date2 like '16%'; id | str1 | date1 | date2 | num | str2 --------+-------+-----------------------------------+-------------+-----+------ 123456 | test1 | 2022-09-26 16:39:20.000000 +08:00 | 16:39:20+08 | | 123457 | test2 | 2022-09-26 16:40:20.000000 +08:00 | 16:40:20+08 | | 223456 | test3 | 2022-09-26 16:41:20.000000 +08:00 | 16:41:20+08 | | 123458 | test4 | 2022-09-26 16:42:20.000000 +08:00 | 16:42:20+08 | | (4 rows) select * from t_ora_like where id like '123%'; id | str1 | date1 | date2 | num | str2 --------+-------+-----------------------------------+-------------+-----+------ 123456 | test1 | 2022-09-26 16:39:20.000000 +08:00 | 16:39:20+08 | | 123457 | test2 | 2022-09-26 16:40:20.000000 +08:00 | 16:40:20+08 | | 123458 | test4 | 2022-09-26 16:42:20.000000 +08:00 | 16:42:20+08 | | (3 rows) select * from t_ora_like where id like null; id | str1 | date1 | date2 | num | str2 ----+------+-------+-------+-----+------ (0 rows)","title":"Compatible with Oracle Like","component":"ivorysql-doc","version":"v4.2","name":"18","url":"/ivorysql-doc/v4.2/v4.2/18.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function description","hash":"function-description","id":2},{"text":"3. Test cases","hash":"test-cases","id":3}]},"10":{"id":10,"text":"This document is a design document for the PLSQL anonymous block compatible Oracle syntax function, in order to be compatible with Oracle’s anonymous block statements in IvorySQL. Anonymous blocks are PLSQL structures that dynamically create and execute procedural code without the need to persistently store the code as database objects in the system directory. In this implementation, IvorySQL is mainly compatible with the syntax format of PLSQL anonymous blocks, and the parts we mainly deal with include client tool psql, master server and PSQL side support. declare i integer := 10; begin raise notice '%', i; end; / NOTICE: 10 DECLARE grade CHAR(1); BEGIN grade := 'B'; CASE grade WHEN 'A' THEN raise notice 'Excellent'; WHEN 'B' THEN raise notice 'Very Good'; END CASE; EXCEPTION WHEN CASE_NOT_FOUND THEN raise notice 'No such grade'; END; / NOTICE: Very Good","title":"Compatible with Oracle anonymous block","component":"ivorysql-doc","version":"v4.2","name":"19","url":"/ivorysql-doc/v4.2/v4.2/19.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function description","hash":"function-description","id":2},{"text":"3. Test cases","hash":"test-cases","id":3}]},"11":{"id":11,"text":"IvorySQL is an advanced, full-featured, Oracle open source compatible PostgreSQL with a firm commitment to always remain 100% compatible and a direct replacement for the latest PostgreSQL. IvorySQL adds a GUC parameter called 'ivorysql.compatible_mode' to control the compatibility mode of IvorySQL, which has two values: 'oracle' and 'pg'.When initializing the data directory, specify the compatibility mode of the data directory by specifying the '-m' parameter, and '-m pg' then the data directory is PostgreSQL mode.In this mode, the 'ivorysql.compatible_mode' parameter will be invalidated, and the '-m oracle' or if the '-m' parameter is not specified, the data directory will be compatible with Oracle mode.In this mode, the initial value of the 'ivorysql.compatible_mode' parameter is 'oracle' and does not support some PostgreSQL syntax, and the database can support 100% of PostgreSQL syntax and functions by 'set ivorysql.compatible_mode to pg'. One of the highlights of IvorySQL is the PL/iSQL procedural language, which supports Oracle’s PL/SQL syntax. At the same time, IvorySQL implements Oracle-compatible functions by adding plug-ins ivorysql_ora bound to the kernel, and the functions currently implemented include built-in functions, data types, system views, merges, and the addition of GUC parameters, and will continue to implement new compatible functions in the form of plug-ins bound to the kernel in the future. We are committed to the principles of the open source approach and we strongly believe in building a healthy and inclusive community. We insist that good ideas can come from anywhere. Only by including different perspectives can we make the best decisions. While the first release of IvorySQL focuses on Oracle-compatible features, the future roadmap and feature set will be defined by the community in an open source manner. IvorySQL is developed based on PostgreSQL database and is compatible with Oracle database for strong compatibility. Suitable for PostgreSQL database and Oracle database scenarios. Core Open Source: IvorySQL’s core code including compatible features are all open under the open source protocol, with no vendor restrictions. It is also used in Hankook database company instances and has an active developer community. Oracle compatible: Oracle databases can be migrated to IvorySQL. Customizable: Simply download the code and customize it the way you want. Easy to use: For system administrators, IvorySQL dramatically reduces the cost of administration and maintenance. For developers, IvorySQL provides a simple interface, a minimalist solution, and seamless integration with third-party tools. For data analysis professionals, IvorySQL provides easy access to data. Hemco Support: Powered by the leading PostgreSQL database provider, Hemco. IvorySQL is based on PostgreSQL, with complete SQL, rock-solid reliability and a huge ecosystem. Ivory database’s main application scenarios. Enterprise database For example, ERP, transaction system, financial system involves funds, customers and other information, data cannot be lost and business logic is complex. Choosing IvorySQL as the underlying data storage can help you provide high availability under the premise of data consistency, and you can implement complex business logic with simple programming. Applications with LBS Large-scale games, O2O and other applications need to support world map, nearby businesses, distance between two points and other capabilities. PostGIS adds support for geographic objects, allowing you to run location queries in SQL without complex coding, helping you to rationalize your logic more easily, implement LBS more conveniently, and improve user stickiness. Data Warehousing and Big Data With more data types and powerful computing power, IvorySQL makes it easier for you to build a database warehouse or big data analytics platform to enhance your business operations. Website or App Building IvorySQL's good performance and powerful features can effectively improve website performance and reduce development difficulty. Database Migration If you need to migrate Oracle database to PostgreSQL database, you can directly use IvorySQL database for migration. IvorySQL is a powerful open source object-relational database management system (ORDBMS). Used to store data securely, support best practices, and allow them to be retrieved when requests are processed. In addition, it is also compatible with Oracle’s syntax, which is suitable for scenarios where Oracle is used. 1. Ivorysql frame design 2. GUC Framework 3. Case conversion 4. Dual-mode design 5. Compatible with Oracle like 6. Compatible with Oracle anonymous block 7. Compatible with Oracle functions and stored procedures 8. Built-in data types and built-in functions 9. Added Oracle compatibility mode ports and IP 10. XML Function 11. Compatible with Oracle sequence 12. Package 13. Invisible Columns","title":"","component":"ivorysql-doc","version":"v4.2","name":"2","url":"/ivorysql-doc/v4.2/v4.2/2.html","titles":[{"text":"1. Introduction to IvorySQL","hash":"introduction-to-ivorysql","id":1},{"text":"1.1. Overview","hash":"overview","id":2},{"text":"1.2. Product Goals and Scope","hash":"product-goals-and-scope","id":3},{"text":"1.3. Core Features","hash":"core-features","id":4},{"text":"1.4. Competitive Advantages","hash":"competitive-advantages","id":5},{"text":"1.5. Technical Ecology","hash":"technical-ecology","id":6},{"text":"1.6. Core Application Scenarios","hash":"core-application-scenarios","id":7},{"text":"2. Main, Basic Features","hash":"main-basic-features","id":8},{"text":"3. Compatibility with Oracle","hash":"compatibility-with-oracle","id":9}]},"12":{"id":12,"text":"This document is intended to be compatible with the syntax of Oracle PLSQL functions and stored procedures, which we call PLISQL in IvorySQL. FUNCTION THE FUNCTION SYNTAX SUPPORTS EDITIONABLE/NONEDITIONABLE THE FUNCTION syntax supports the RETURN, IS keywords, and does not specify language THE FUNCTION syntax functions have no arguments, and the function name does not follow () The maximum number of CREATE FUNCTION parameters is 32767 THE CREATE FUNCTION in END; End with / in psql THE CREATE FUNCTION syntax variable declaration is not preceded by the DECLARE keyword THE CREATE FUNCTION SYNTAX SUPPORTS THE OUT PARAMETER NOCOPY THE CREATE FUNCTION syntax supports sharing_clause THE CREATE FUNCTION syntax supports invoker_rights_clause, and the default permission is changed to DR (DEFINER) THE CREATE FUNCTION syntax supports ACCESSIBLE BY THE CREATE FUNCTION SYNTAX SUPPORTS DEFAULT COLLATION THE CREATE FUNCTION syntax supports result_cache_clause THE CREATE FUNCTION syntax supports aggregate_clause THE CREATE FUNCTION syntax supports pipelined_clause THE CREATE FUNCTION syntax supports sql_macro_clause ALTER FUNCTION syntax Functions and stored procedure-related views Stored procedures THE CREATE PROCEDURE SYNTAX SUPPORTS EDITIONABLE/NONEDITIONABLE THE CREATE PROCEDURE syntax function has no arguments, no () after the function name The maximum number of CREATE PROCEDURE parameters is 32767 THE CREATE PROCEDURE in END; End with / in psql THE CREATE PROCEDURE syntax supports sharing_clause THE CREATE PROCEDURE SYNTAX SUPPORTS DEFAULT COLLATION THE CREATE PROCEDURE syntax supports invoker_rights_clause THE CREATE PROCEDURE syntax supports ACCESSIBLE BY ALTER PROCEDURE syntax Stored procedures have no parameters, and invocation support is not carried out with () Stored procedure calls support EXEC When calling a stored procedure in PL/SQL, you can omit CALL and use the stored procedure name directly Both annotation methods are supported — and /**/ declare i integer := 10; begin raise notice '%', i; raise notice '%', main.i; end; / NOTICE: 10 NOTICE: 10 DECLARE grade CHAR(1); BEGIN grade := 'B'; CASE grade WHEN 'A' THEN raise notice 'Excellent'; WHEN 'B' THEN raise notice 'Very Good'; END CASE; EXCEPTION WHEN CASE_NOT_FOUND THEN raise notice 'No such grade'; END; / NOTICE: Very Good","title":"Compatible with Oracle functions and stored procedures","component":"ivorysql-doc","version":"v4.2","name":"20","url":"/ivorysql-doc/v4.2/v4.2/20.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function description","hash":"function-description","id":2},{"text":"3. Test cases","hash":"test-cases","id":3}]},"13":{"id":13,"text":"char varchar varchar2 number binary_float binary_double date timestamp timestamp with time zone timestamp with local time zone interval year to month interval day to second raw long sysdate systimestamp add_months last_day next_day months_between current_date current_timestamp new_time tz_offset trunc instrb substr substrb trim ltrim rtrim length lengthb rawtohex replace regexp_replace regexp_substr regexp_instr regexp_like to_number to_char to_date to_timestamp to_timestamp_tz to_yminterval to_dsinterval numtodsinterval numtoyminterval localtimestamp from_tz sys_extract_utc sessiontimezone hextoraw uid USERENV asciistr to_multi_byte to_single_byte compose decompose 1、Compatible with sysdate function, function: view the corresponding date and time, the test cases are as follows: Query the date of the current system: select sysdate() from dual; sysdate ------------ 2023-07-06 (1 row) Check the date pushed forward by 1 day: select sysdate()-1 from dual; ?column? ------------ 2023-07-05 (1 row) 2、Compatible with the systimestamp function, function: return the current system date and time (including microseconds and time zone) on the local database, the test cases are as follows: Date and time to query the current date: select systimestamp() from dual; systimestamp ----------------------------------- 2023-07-06 10:18:31.674322 +08:00 (1 row) 3、Compatible with add_months functions, function: the function adds a date to the number of months (n), and returns the same day that is n months apart, supporting parameters: date, number; The test cases are as follows: Check the same day of the following month on the current date (July 6): select add_months(sysdate(),1) from dual; add_months ------------ 2023-08-06 (1 row) Query the same day of the previous month for the current date: select add_months(sysdate(),-1) from dual; add_months ------------ 2023-06-06 (1 row) 4、Compatible with last_day functions, function: return the last day of the month where the specified date is located, support parameters: date, the test cases are as follows: Check the last day of the month in which the day is located: select last_day(sysdate())from dual; last_day ------------ 2023-07-31 (1 row) Query the last day of the month on which a day falls: select last_day(to_date('2019-09-01'))from dual; last_day ------------ 2019-09-30 (1 row) 5、 Compatible with next_day functions, function: return the next date of the specified date. Supported parameters: date, integer /date, text, Note: When the second parameter in the function passes the number of weeks more hours than the existing week, the date of the next week will be returned; When the date passed by the second parameter in the function is greater than the existing number of weeks, the corresponding day of the week of the week is returned. The test cases are as follows: Query the next day of the current date: select next_day(sysdate(),1) from dual; next_day ------------ 2023-07-07 (1 row) Next Friday for the current date: select next_day(sysdate(),'FRIDAY') from dual; next_day ------------ 2023-07-07 (1 row) 6、Compatible with months_between functions, function: return the month of difference between date1 and date2 of date type, support parameters: date, date, description: if date1 is later than date2, return a positive number; If date1 is earlier than date2, a negative number is returned; If date1 and date2 are the same day of a month, the return result is an integer; If not the same day, results with decimal parts are returned on a monthly basis of 31 days. The test cases are as follows: To find the month that differs between the same day in different months: select months_between(to_date('2023-07-06'),to_date('2023-08-06')) from dual; months_between ---------------- -1 (1 row) Query the month that differs between different days of different months: select months_between(to_date('2023-07-06'),to_date('2023-08-05')) from dual; months_between -------------------- -0.967741935483871 (1 row) 7、Compatible with current_date functions, functions: return the current date of the current time zone, the test cases are as follows: To query the current date in the current time zone: select current_date from dual; current_date -------------- 2023-07-06 (1 row) 8、Compatible with current_timestamp functions, function: return the current date and current time of the current time zone, including the current time zone information. Support parameters: integer, Note: The returned time can be adjusted with precision. The test cases are as follows: To query the current date and time in the current time zone: select current_timestamp from dual; current_timestamp ----------------------------------- 2023-07-06 10:27:01.440600 +08:00 (1 row) Query the current date and time in the current time zone (the precision is adjusted to the first three decimal places): select current_timestamp(3) from dual; current_timestamp ----------------------------------- 2023-07-06 10:27:14.182000 +08:00 (1 row) 9、Compatible with new_time functions, function: return the date in another time zone corresponding to a certain time zone, support parameters: date, text, text, the test case is as follows: Returns the date for the current date in another time zone: select sysdate() bj_time,new_time(sysdate(),'PDT','GMT')los_angles from dual; bj_time | los_angles ------------+------------ 2023-07-06 | 2023-07-06 (1 row) 10、Compatible with tz_offset functions, function: return the offset of the given time zone and the standard time zone, support parameters: text, the test case is as follows: Returns the offset of a given time zone from the standard time zone: select tz_offset('US/Eastern') from dual; tz_offset ----------- -04:00 (1 row) 11、Compatible with trunc function, function: you can intercept the date to get the desired value, such as year, month, day, hour, minute, support parameters: date/date, text, the test case is as follows: Intercept the current date: select trunc(sysdate()) from dual; trunc ------------ 2023-07-06 (1 row) Truncating the year, only the year is correct, and the month and day are not accurate values: select trunc(sysdate(),'yyyy') from dual; trunc ------------ 2023-01-01 (1 row) Intercept the month, the return value only the month is correct, the year and day are not accurate values: select trunc(sysdate(),'mm') from dual; trunc ------------ 2023-07-01 (1 row) 12、Compatible with instrb function, function: string lookup function, return the position of the string, support parameters: varchar2, text, number DEFAULT 1, number DEFAULT 1, the following are test cases: RETURNS THE POSITION OF THE STRING IN CORPORATE FLOOR WHEN THE FIRST OR OCCURS BY DEFAULT: SELECT INSTRB('CORPORATE FLOOR','OR') \"Instring in bytes\" FROM DUAL; Instring in bytes ------------------- 2 (1 row) Returns the position of the string in the corporate floor where the query starts with the fifth character and the second occurrence of or: SELECT INSTRB('CORPORATE FLOOR','OR',5,2) \"Instring in bytes\" FROM DUAL; Instring in bytes ------------------- 14 (1 row) 13、Compatible with substr function, function: intercept string function, truncated in characters, support parameters: text, integer, test cases are as follows: Intercept the string from the fifth character in 'It is nice today', followed by: SELECT SUBSTR('It is nice today',5) \"Substring with bytes\" FROM DUAL; Substring with bytes ---------------------- s nice today (1 row) 14、Compatible with substrb function, function: intercept string function, intercept in bytes, support parameters: varchar2, number/varchar2, number, number, the test cases are as follows: Intercept the string starting with the fifth byte in 'It’s nice today' and then onwards: SELECT SUBSTRB('It is nice today',5) \"Substring with bytes\" FROM DUAL; Substring with bytes ---------------------- s nice today (1 row) Intercept the string in 'It is nice today' starting with the fifth byte and ending with the eighth byte: SELECT SUBSTRB('It is nice today',5,8) \"Substring with bytes\" FROM DUAL; Substring with bytes ---------------------- s nice t (1 row) 15、Compatible with trim function, function: remove the left and right spaces or corresponding data of the specified string, support parameters: varchar2 / varchar2, varchar2, the test cases are as follows: Remove the left and right spaces of ' aaa bbb ccc ': select trim(' aaa bbb ccc ')trim from dual; trim ------------- aaa bbb ccc (1 row) Remove aaa from 'aaa bbb ccc': select trim('aaa bbb ccc','aaa')trim from dual; trim ---------- bbb ccc (1 row) 16、Compatible with ltrim function, function: remove the left space or corresponding data of the specified string, support parameters: varchar2 / varchar2, varchar2, the test cases are as follows: Remove the space to the left of ' abcdefg ': select ltrim(' abcdefg ')ltrim from dual; ltrim ------------ abcdefg (1 row) Traverse from the left side of 'abcdefg', remove it as soon as a character appears in 'fegab', and return the result if it is absent: select ltrim('abcdefg','fegab')ltrim from dual; ltrim ------- cdefg (1 row) 17、Compatible with rtrim function, function: remove the space on the right side of the specified string, the test case is as follows: Remove the space to the right of ' abcdefg ': select rtrim(' abcdefg ')rtrim from dual; rtrim ---------------- abcdefg (1 row) Traverse from the right side of 'abcdefg', remove it as soon as a character appears in 'fegab', and return the result if it is absent: select rtrim('abcdefg','fegab')rtrim from dual; rtrim ------- abcd (1 row) 18、Compatible with the length function, function: find the length of the specified string character, support parameters: char/integer/varchar2 The test cases are as follows: Query the character length of 223: select length(223) from dual; length -------- 3 (1 row) Query the character length of '223': select length('223') from dual; length -------- 3 (1 row) To query the character length of 'ivorysql database' : select length('ivorysql database') from dual; length -------- 17 (1 row) 19、Compatible with lengthb function: find the length of the specified string byte, support parameters: char/bytea/varchar2 test cases are as follows: Query the byte lengthb of 'ivorysql': select lengthb('ivorysq'::char) from dual; lengthb --------- 1 (1 row) Query the byte lengthb of '0x2C': select lengthb('0x2C'::bytea) from dual; lengthb --------- 4 (1 row) Query the byte lengthb of the 'ivorysql database': select lengthb('ivorysql database') from dual; lengthb --------- 17 (1 row) 20、compatible with replace function, function: replace the character in the specified string or delete the character, support parameters: text, text, text/varchar2, varchar2, varchar2 DEFAULT NULL::varchar2, test for example: Replace 'j' in 'jack and jue' with 'bl' : select replace('jack and jue','j','bl') from dual; replace ---------------- black and blue (1 row) Remove the 'j' in 'jack and jue' : select replace('jack and jue','j') from dual; replace ------------ ack and ue (1 row) 21、compatible with the regexp_replace function, which is an extension of the replace function. Function: Used to perform matching and replacement through regular expressions. Supported parameters: text, text, text /text, text, text, integer/varchar2, varchar2/varchar2, varchar2 varchar2, varchar2 varchar2, for example: Replace the matched number with *#: select regexp_replace('01234abcd56789','[0-9]','*#')from dual; regexp_replace -------------------------- *#*#*#*#*#abcd*#*#*#*#*# (1 row) Start with the second number by replacing the matched number with *#: select regexp_replace('01234abcd56789','[0-9]','*#',2)from dual; regexp_replace ------------------------- 0*#*#*#*#abcd*#*#*#*#*# Delete '01' from '01234abcd56789': select regexp_replace('01234abcd56789','01')from dual; regexp_replace ---------------- 234abcd56789 (1 row) Replace 01234abcd56789' with 'xxx': select regexp_replace('01234abcd56789','012','xxx')from dual; regexp_replace ---------------- xxx34abcd56789 (1 row) 22、Compatible with regexp_substr functions, function: pick up the character substring described by the regular expression, support parameters: text, text, integer /text, text, integer, integer / text, text, integer, integer, text /varchar2, varchar2, the test cases are as follows: Query the 012 string starting with the first number in '012ab34': select regexp_substr('012ab34', '012',1) from dual; regexp_substr --------------- 012 (1 row) Query the 012 string in '012ab34' starting from the first number of the first group: select regexp_substr('012ab34', '012',1,1) from dual; regexp_substr --------------- 012 (1 row) Query '012a012Ab34' for case-insensitive 012 strings starting from the first number of the first group: select regexp_substr('012a012Ab34', '012A',1,1,'i') from dual; regexp_substr --------------- 012a (1 row) Query '012a012Ab34' for case-sensitive 012 strings starting from the first group of numbers: select regexp_substr('012a012Ab34', '012A',1,1,'c') from dual; regexp_substr --------------- 012A (1 row) Query the 'Database' substring in 'Data': select regexp_substr('Database' , 'Data') from dual; regexp_substr --------------- Data (1 row)s 23、Compatible with regexp_instr functions, function: used to calibrate the start position of the character substring that conforms to the regular expression, support parameters: text, text, integer /text, text, integer, integer / text, text, integer, integer, text, integer / varchar2, varchar2, the test case is as follows: Query 'abcaBcabc' for the position of the abc substring starting from the first character: SELECT regexp_instr('abcaBcabc', 'abc', 1); regexp_instr -------------- 1 (1 row) Query 'abcaBcabc' starting from the first character, where the abc substring appears for the third time: SELECT regexp_instr('abcaBcabc', 'abc', 1, 3); regexp_instr -------------- 7 (1 row) Query 'abcabcabc' starting from the first character and occurring after the second occurrence of the abc substring: SELECT regexp_instr('abcaBcabc', 'abc', 1, 2,1); regexp_instr -------------- 7 (1 row) Query 'abcaBcabc' from the first character, where it occurs after the first occurrence of the abc substring (case sensitive): SELECT regexp_instr('abcaBcabc', 'abc',1,2,1,'c'); regexp_instr -------------- 7 (1 row) Query the 'Database' substring in 'Data': SELECT regexp_instr('Database', 'Data'); regexp_instr -------------- 1 (1 row) 24、Compatible with regexp_like functions, function: similar to like, used for fuzzy queries. Supported parameters: varchar2, varchar2 /varchar2, varchar2 varchar2, First create a regexp_like table for the test case query: create table t_regexp_like ( id varchar(4), value varchar(10) ); insert into t_regexp_like values ('1','1234560'); insert into t_regexp_like values ('2','1234560'); insert into t_regexp_like values ('3','1b3b560'); insert into t_regexp_like values ('4','abc'); insert into t_regexp_like values ('5','abcde'); insert into t_regexp_like values ('6','ADREasx'); insert into t_regexp_like values ('7','123 45'); insert into t_regexp_like values ('8','adc de'); insert into t_regexp_like values ('9','adc,.de'); insert into t_regexp_like values ('10','abcbvbnb'); insert into t_regexp_like values ('11','11114560'); The test cases are as follows: Query t_regexp_like columns with abc in the table: select * from t_regexp_like where regexp_like(value,'abc'); id | value ----+---------- 4 | abc 5 | abcde 10 | abcbvbnb (3 rows) Query t_regexp_like columns with ABC in the table (not case sensitive): select * from t_regexp_like where regexp_like(value,'ABC','i'); id | value ----+---------- 4 | abc 5 | abcde 10 | abcbvbnb (3 rows) 25、Compatible with to_number functions, function: is to change some processed strings arranged in a certain format back to a numeric format, support parameters: text/text, text test cases are as follows: Convert the string '-34,338,492' to numeric format: SELECT to_number('-34,338,492', '99,999,999') from dual; to_number ----------- -34338492 (1 row) Convert the string '5.01-' to numeric format: SELECT to_number('5.01-', '9.99S'); to_number ----------- -5.01 (1 row) 26、Compatible with to_char functions, functions: convert numbers or dates to character types, support parameters: date/date, text/timestamp/timestamp, text test cases are as follows: To convert the current system date to character format: select to_char(sysdate()) from dual; to_char ------------ 2023-07-10 (1 row) Convert current system date to month/day/year character format: select to_char(sysdate(),'mm/dd/yyyy') from dual; to_char ------------ 07/10/2023 (1 row) Converts the timestamp format of the current date to character format SELECT to_char(sysdate()::timestamp); to_char ---------------------------- 2023-07-10 09:46:44.000000 Convert timestamp format of current date to month/date/year character format: SELECT to_char(sysdate()::timestamp,'MM-YYYY-DD'); to_char ------------ 07-2023-10 (1 row) 27、Compatible with to_date functions, function: convert character type to date type, support parameters: text/text, text test cases are as follows: Convert '2023/07/06' to date type: select to_date('20230706') from dual; to_date ------------ 2023-07-06 (1 row) Convert '-44-02-01' to date type: SELECT to_date('-44,0201','YYYY-MM-DD'); to_date ------------ 0044-02-01 (1 row) 28、Compatible with to_timestamp functions, functions: can store year, month, day, hour, minute, second, and can also store fractional parts of seconds. Supported parameters: text/text, text test cases are as follows: Query '2018-11-02 12:34:56.025' output as a date: SELECT to_timestamp('20181102.12.34.56.025'); to_timestamp ---------------------------- 2018-11-02 12:34:56.025000 (1 row) Query '2011,12,18 11:38' output as a date: SELECT to_timestamp('2011,12,18 11:38 ', 'YYYY-MM-DD HH24:MI:SS'); to_timestamp ---------------------------- 2011-12-18 11:38:00.000000 (1 row) 29、Compatible with to_timestamp_tz functions, functions: according to the time query, the time string has T, Z and milliseconds, time zone. The test cases are as follows: Query '2016-10-9 14:10:10.123000' output as a date: SELECT to_timestamp_tz('2016-10-9 14:10:10.123000') FROM DUAL; to_timestamp_tz ----------------------------------- 2016-10-09 14:10:10.123000 +08:00 (1 row) Query '10-9-2016 14:10:10.123000 +8:30' output as a date: SELECT to_timestamp_tz('10-9-2016 14:10:10.123000 +8:30', 'DD-MM-YYYY HH24:MI:SS.FF TZH:TZM') FROM DUAL; to_timestamp_tz ----------------------------------- 2016-09-10 13:40:10.123000 +08:00 (1 row) 30、Compatible with to_yminterval functions, function: convert a string type to a year and month time difference type, support parameters: text, The test cases are as follows: Query the date after two years and eight months after '20110101': select to_date('20110101','yyyymmdd')+to_yminterval('02-08') from dual; ?column? ------------ 2013-09-01 (1 row) 31、Compatible with to_dsinterval functions, function: add a date plus a certain hour or number of days into another date, support parameters: text, test cases are as follows: Query the current system time plus the date in 9 and a half hours (currently 2023-07-06, 18:00): select sysdate()+to_dsinterval('0 09:30:00')as newdate from dual; newdate ------------ 2023-07-07 (1 row) 32、compatible with numtodsinterval function, function: convert numbers into time interval type data. The supporting parameters: double precision, text test cases are as follows: Convert 100.00 hours to interval type data: SELECT NUMTODSINTERVAL(100.00, 'hour'); numtodsinterval ------------------------------- +000000004 04:00:00.000000000 (1 row) Convert 100 minutes to interval type data: SELECT NUMTODSINTERVAL(100, 'minute'); numtodsinterval ------------------------------- +000000000 01:40:00.000000000 (1 row) 33、Compatible with the numtoyminterval function, function: convert numbers into date interval type data. Convert 1, year to date interval: double precision, text, the test case is as follows: SELECT NUMTOYMINTERVAL(1.00,'year'); numtoyminterval ----------------- +000000001-00 (1 row) Convert 1, mouth to date interval: SELECT NUMTOYMINTERVAL(1,'month'); numtoyminterval ----------------- +000000000-01 (1 row) 34、Compatible with the localtimestamp function, function: return the date and time in the session, support parameters: integer, add parameters to the function as precision, the test cases are as follows: To return the date and time in the current session: select localtimestamp from dual; localtimestamp ---------------------------- 2023-07-07 09:18:15.896472 (1 row) Returns the date and time in the current session with a precision of 1: select localtimestamp(1) from dual; localtimestamp ---------------------------- 2023-07-07 09:18:16.100000 (1 row) 35、Compatible with from_tz functions, functions: convert time from one time zone to another, support parameters; timestamp, text, the test case is as follows: Convert '2000-03-28 08:00:00', '3:00' to the current time zone: SELECT FROM_TZ(TIMESTAMP '2000-03-28 08:00:00', '3:00') FROM DUAL; from_tz ----------------------------------- 2000-03-28 13:00:00.000000 +08:00 (1 row) 36、Compatible with sys_extract_utc functions, function: convert a timestamptz to UTC time zone time. Supported parameters: timestamp with time zone The test cases are as follows: Query conversion timestamp '2000-03-28 11:30:00.00 -8:00' to the time after UTC time zone: select sys_extract_utc(timestamp '2000-03-28 11:30:00.00 -8:00') from dual; sys_extract_utc ---------------------------- 2000-03-28 19:30:00.000000 (1 row) 37、Compatible with sessiontimezone function, function: view time zone details, test cases are as follows: To view the details of the current time zone: select sessiontimezone() from dual; sessiontimezone ----------------- Asia/Shanghai (1 row) After modifying the timezone, check the time zone belief information: set timezone = 'Asia/Hong_Kong'; SET select sessiontimezone() from dual; sessiontimezone ----------------- Asia/Hong_Kong (1 row) 38、compatible with hextoraw function, function: convert the binary value represented by the string into a RAW value. Support parameters: text, the test cases are as follows: Convert the string 'abcdef' to a raw value: select hextoraw('abcdef')from dual; hextoraw ---------- \\xabcdef (1 row) 39、Compatible with uid function, function: get the instance name of the database. The test cases are as follows: Get the instance name of the current database: select uid() from dual; uid ----- 10 (1 row) 40、Compatible with USERENV function, function: return the information of the current user environment, the test cases are as follows: Check whether the current user is DBA, and if so, return ture: select userenv('isdba')from dual; get_isdba ----------- TRUE (1 row) To view the session flag: select userenv('sessionid')from dual; get_sessionid --------------- 1 (1 row) 41、Compatible with ASCIISTR function, function: input string, return ASCII characters, the test cases are as follows: string with only ascii chars: select asciistr('Hello, World!') from dual; asciistr --------------- Hello, World! (1 row) string with non-ascii chars: select asciistr('你好') from dual; asciistr ------------ \\4F60\\597D string with mixed ascii and non-ascii: select asciistr('ABÄCDE') from dual; asciistr ------------ AB\\00C4CDE (1 row) 42、Compatible with TO_MULTI_BYTE function, function: Convert half-width characters in a string to full-width characters: input half-width characters, Convert to full-width characters: select to_multi_byte('1.2'::text) ; to_multi_byte --------------- １．２ 43、Compatible with TO_SINGLE_BYTE function, function: Convert full-width characters in a string to half-width characters: input full-width characters, Convert to half-width characters: 输入全角字符，转换为半角字符： select to_single_byte('１．２'); to_single_byte ---------------- 1.2 44、Compatible with COMPOSE function,function: Combine base characters and combining marks into a composite Unicode character: input base character 'a' with a combining mark '768', return à： select compose('a'||chr(768)) from dual; compose --------- à (1 row) 45、ompatible with DECOMPOSE function, function: Decompose composite Unicode characters (like those with accents or special symbols) into their base characters and combining marks. input é, return a base character 'e' with a combining mark '301'： select asciistr(decompose('é')) from dual; asciistr ---------- e\\0301","title":"Built-in data types and built-in functions","component":"ivorysql-doc","version":"v4.2","name":"21","url":"/ivorysql-doc/v4.2/v4.2/21.html","titles":[{"text":"1. Built-in data types","hash":"built-in-data-types","id":1},{"text":"2. Built-in functions","hash":"built-in-functions","id":2},{"text":"3. Built-in function descriptions","hash":"built-in-function-descriptions","id":3}]},"14":{"id":14,"text":"In order to distinguish the Oracle port, IP and PG port IP. THERE IS NOW A NEED TO INCREASE THE PROCESSING OF ORAPORT AND ORAHOST; Add ivoryhost: You need to add the parameter ivoryhost when connecting, and its function is similar to host; New ivoryport: Compared to host, the function of port is relatively complex. It involves specifying ports in the configure phase and connection phase; ./configure --with-oraport=5555 ./initdb .... ./pg_ctl -D ../data start ./pg_ctl -o \"-p 5433 -o 1522\" -D ../data","title":"Added Oracle compatibility mode ports and IP","component":"ivorysql-doc","version":"v4.2","name":"22","url":"/ivorysql-doc/v4.2/v4.2/22.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function","hash":"function","id":2},{"text":"3. Test method:","hash":"test-method","id":3}]},"15":{"id":15,"text":"IvorySQL is maintained by a core development team, which has commit access to the main repository of IvorySQL on GitHub. We are eager to get contributions from members of the wider IvorySQL community. If you want to see your changes to code or documents added to IvorySQL and appear in future versions, you need to understand the content of this section. ​IvorySQL community welcomes and appreciates all types of contributions and we are looking forward to your participation! Every member, contributor and leader should read our principles of conduct. We promise that everyone can participate in community and pay equal attention to everyone, no matter who. We are committed to acting and interacting in a way that contributes to the establishment of an open, enthusiastic, diverse, inclusive and healthy community. Our team is a continuously open team, focusing on parts of IvorySQL. In our team, there are reviewers, submitters and maintainers, and we have one or more repositories. The decision for the team is made by the maintainer. The typical promotion path for IvorySQL developers is from user to reviewer, then submitter and maintainer. But getting more roles doesn’t mean you have any privileges to other community members. Everyone in the IvorySQL community is equal and has the responsibility to cooperate constructively with other contributors to build a friendly community. These roles are natural rewards for your significant contributions to the development of IvorySQL, and provide you with more rights in the development workflow to improve your efficiency. At the same time，this requires you to undertake some additional duty: ​Team honor: now you are already one of the team reviewers/submitters/maintainers, it means that you represent the project and your team members. So, please be Mr.Nice Guy to defend the reputation of the team. ​Responsibility: submitters/maintainers have the right to merge pull requests, therefore, they take additional responsibility to deal with the consequences of accepting changes to the code base or documents. When a bug occurs, they should fix it. If they can not solve it, they should roll back the project. Also, they need to help the release manager solve any problems found in the test cycle. Before contributing, we need to know the current version of IvorySQL and the version of the document.At present, we maintain versions after version 4.2. Our version follows the update pace of PG. Please update to the latest version before contributing. After that, we need to read the format requirements carefully and be familiar with code format, code comment format, issue format, pull PR title format, document contribution format, and article contribution format. These can help you become a contributor of IvorySQL as soon as possible. IvorySQL is developed on GitHub. Anyone who wishes to contribute to it must have a Github account and be familiar with Git tools and workflow. It is also recommended that you follow the developer’s mailing list since some of the contributions may generate more detailed discussions there. Once you have your GitHub account, fork this repository so that you can have your private copy to start hacking on and to use as a source of pull requests. If the contribution you’re submitting is original work, you can assume that IvorySQL will release it as part of an overall IvorySQL release available to the downstream consumers under the Apache License, Version 2.0. If the contribution you’re submitting is NOT original work you have to indicate the name of the license and also make sure that it is similar in terms to the Apache License 2.0. Apache Software Foundation maintains a list of these licenses under Category A. In addition to that, you may be required to make proper attributions. Finally, keep in mind that it is NEVER a good idea to remove licensing headers from the work that is not your original one. Even if you are using parts of the file that originally had a licensing header at the top you should err on the side of preserving it. As always, if you are not quite sure about the licensing implications of your contributions, feel free to reach out to us on the developer mailing list. You can upload your modified bugs, new functions and other codes to your personal warehouse, and finally submit PR requests to merge them on the official website: https://github.com/IvorySQL/IvorySQL. The IvorySQL community provides Chinese and English documents. English documents are saved in …​ document repository, Chinese documents are saved in i18n document repository. You can contribute to one of them or both. GitHub: https://github.com/IvorySQL/IvorySQL Gitee:https://gitee.com/IvorySQL/ IvorySQL official website:https://github.com/IvorySQL/Ivory-www Mailing List website:https://lists.ivorysql.org/ You can submit your article to the blog in the IvorySQL-WWW code warehouse, or send it to the mailbox renjiao@highgo.com. Your chances of getting feedback and seeing your code merged into the project greatly depend on how granular your changes are. If you happen to have a bigger change in mind, we highly recommend engaging on the developer’s mailing list first and sharing your proposal with us before you spend a lot of time writing code. Even when your proposal gets validated by the community, we still recommend doing the actual work as a series of small, self-contained commits. This makes the reviewer’s job much easier and increases the timeliness of feedback. When it comes to C and C++ parts of IvorySQL, we follow PostgreSQL Coding Conventions. In addition to that: For C and Perl code, please run pgindent if necessary. We recommend using git diff --color when reviewing your changes so that you don’t have any spurious whitespace issues in the code that you submit. All new functionality that is contributed to IvorySQL should be covered by regression tests that are contributed alongside it. If you are uncertain about how to test or document your work, please raise the question on the ivorysql-hackers mailing list and the developer community will do its best to help you. At the very minimum, you should always be running make installcheck-world to make sure that you’re not breaking anything. If the change you’re working on touches functionality that is common between PostgreSQL and IvorySQL, you may be asked to forward-port it to PostgreSQL. This is not only so that we keep reducing the delta between the two projects, but also so that any change that is relevant to PostgreSQL can benefit from a much broader review of the upstream PostgreSQL community. In general, it is a good idea to keep both codebases handy so you can be sure whether your changes may need to be forward-ported. Once you are ready to share your work with the IvorySQL core team and the rest of the IvorySQL community, you should push all the commits to a branch in your own repository forked from the official IvorySQL and send us a pull request. A submitted pull request with passing validation checks is assumed to be available for peer review. Peer review is the process that ensures that contributions to IvorySQL are of high quality and align well with the road map and community expectations. Every member of the IvorySQL community is encouraged to review pull requests and provide feedback. Since you don’t have to be a core team member to be able to do that, we recommend following a stream of pull reviews to anybody who’s interested in becoming a long-term contributor to IvorySQL. One outcome of the peer review could be a consensus that you need to modify your pull request in certain ways. GitHub allows you to push additional commits into a branch from which a pull request was sent. Those additional commits will be then visible to all of the reviewers. A peer review converges when it receives at least one +1 and no -1s votes from the participants. At that point, you should expect one of the core team members to pull your changes into the project. At any time during the patch review, you may experience delays based on the availability of reviewers and core team members. Please be patient. That being said, don’t get discouraged either. If you’re not getting expected feedback for a few days add a comment asking for updates on the pull request itself or send an email to the mailing list. On occasion, you will see core team members committing directly to the repository without going through the pull request workflow. This is reserved for small changes only and the rule of thumb we use is this: if the change touches any functionality that may result in a test failure, then it has to go through a pull request workflow. If, on the other hand, the change is in the non-functional part of the codebase (such as fixing a typo inside of a comment block) core team members can decide to just commit to the repository directly. 1 Enter IvorySQL official website:https://github.com/IvorySQL/IvorySQL 2 Click New issue 1 bug report Title: ## Bug Report Describe the bug \\### IvorySQL Version The version of IvorySQL you are using \\### OS Version (uname -a) Operating system version(uname -a) \\### Configuration options ( config.status --config ) \\### Current Behavior \\### Expected behavior/code \\### Step to reproduce \\### Additional context that can be helpful for identifying the problem 2 Enhancement Title: ## Enhancement Describe the functions that you expect to be strengthened 3 Feature Request Title: ## Feature Request Describe the feature that you expect to be real Click submit new issue button. WELL DONE! 1 Open the ivorysql warehouse: https://github.com/IvorySQL/IvorySQL 2 Click the fork button in the upper right corner, Wait for the fork to finish cd $working_dir # $working_dir can be replaced by the directory where you want to place repo. For example, `cd ~/Documents/GitHub` git clone git@github.com:$user/IvorySQL.git # `$user` can be replaced by your GitHub ID. cd $working_dir/IvorySQL git checkout -b new-branch-name You can modify the code in new-branch-name. Git add Git commit -m “commit-message” Git push -u origin new-branch-name 1 Open your warehouse: https://github.com/$user/IvorySQL ($user is your GitHub ID) . 2 Click Compare & pull request button and create a PR. A PR submission should contain only one function or one bug. Prohibit submitting multiple functions at one time. 1 Open your warehouse: https://github.com/$user/IvorySQL ($user is your GitHub ID) 。 2 Click Compare & pull request button. Fix test Describe the function leave a comment Give a detailed description of the submission function Click Create pull request button. WELL DONE! (1) Download Markdown or Typora document editor. (2) Check whether the source warehouse has updates. If there are updates, please update and synchronize to your own warehouse first. Refer to the following steps to update to the latest version: git remote git fetch upstream git merge upstream/main git push (3) Familiar with format [_pecification]. The IvorySQL community provides Chinese and English documents. English documents are saved in IvorySQL document repository, Chinese documents are saved in i18n document repository. You can contribute to one of them or both. You can start from any of following to help improve the IvorySQL documents on the IvorySQL website: ​ (1) Prepare complete documents. ​ (2) Fix incorrect spelling and formatting (Punctuation, space, indentation, code block, etc) . ​ (3) Improper or outdated instructions corrected or updated. ​ (4) Add missing content (sentences, paragraphs, or new documents) . ​ (5) Translate document from English to Chinese, or from Chinese to English. ​ (6) Submit, reply and resolve document issues or document-i18n issues. ​ (7) (Advanced) View pull requests created by others. The IvorySQL document is written in 'markdown'. To ensure the quality and consistency of the format, certain Markdown rules should be followed when modifying and updating the document. Markdown Specification ​ 1 Titles are used incrementally from the first level, and skipping is prohibited. For example: The third level title cannot be used directly under the first level title; The fourth level title cannot be used directly under the second level title. ​ 2 The title must use the ATX style uniformly. Indicate the title level by adding # before the title. ​ 3 The leading symbol # of the title must be followed by a blank space. ​ 4 The leading symbol \"#\" of the title can only be followed by one blank space and then the title content. There can be no more than one space. ​ 5 The title must appear at the beginning of a line, there must be no space before the # sign of the title. ​ 6 Only Chinese and English question marks, back quotes, Chinese and English single and double quotes and other symbols can appear at the end of the title. Other symbols such as colon, comma, period and exclamation point cannot be used at the end of the title. ​ 7 One line must be empty above the title. ​ 8 The same title cannot appear continuously in the document. If the first level title is # TiDB architecture, the next level title cannot be # # TiDB architecture. If it is not a continuous title, the title content can be repeated. ​ 9 Only one first level title in document. ​ 10 In general, except for TOC.md files, which can be indented by two spaces, other .md files must be indented by four spaces by default foe each level of indentation. ​ 11 Tab is not allowed in documents(including code blocks) . If indentation is required, spaces must be uniformly used instead. ​ 12 Continuous blank lines are prohibited. ​ 13 Multiple spaces are not allowed after the block reference symbol > . Only one space can be used, followed by the reference content. ​ 14 When using a ordered list, it must start from 1 and increase in order. ​ 15 When using a list, the identifier (+, -, * or number) of each list item can only be left blank, followed by the list content. ​ 16 The list (includeing ordered and unordered lists) must be empty before and after each line. ​ 17 There must be one blank line before and after the code block. ​ 18 Exposed URLs are prohibited in documents. If you want users to click and open the URL directly, wrap the URL with a pair of angle brackets () . If the exposed URL must be used due to special circumstances, and the user does not need to open it by clicking, a pair of back quatation marks (URL) will be used to wrap the URL. ​ 19 When using bold, italic and other emphasis effects, redundant spaces are prohibited in the emphasis identifier, such as text . ​ 20 No extra space is allowed in the code block wrapped by a single backquote, such as ` text `. ​ 21 No extra spaces are allowed on both sides of the link text, such as [Link](https://www.example.com/) ​ 22 The link must have a link path. [Empty link]() and [empty link](#) are not allowed. 1 Titles are used incrementally from the first level, and skipping is prohibited. # Heading 1 ### Heading 3 We skipped out a 2nd level heading in this document 2 The title must use the ATX style uniformly. Indicate the title level by adding # before the title. # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ## Another Heading 2 ### Another Heading 3 3 The leading symbol # of the title must be followed by a blank space. Multiple spaces after # are prohibited, and spaces before # are prohibited. Incorrect Example: # Heading 1 ## Heading 2 Correct Example: # Heading 1 ## Heading 2 4 Only Chinese and English question marks, back quotes, Chinese and English single and double quotes and other symbols can appear at the end of the title. Incorrect Example: # This is a heading. Correct Example: # This is a heading 5 One line must be empty above the title. Incorrect Example: # Heading 1 Some text Some more text## Heading 2 Correct Example: # Heading 1 Some text Some more text ## Heading 2 6 he same title cannot appear continuously in the document. If the first level title is # TiDB architecture, the next level title cannot be ## TiDB architecture. If it is not a continuous title, the title content can be repeated. Incorrect Example: # Some text ## Some text Correct Example: # Some text ## Some more text 7 Only one first level title in document. Incorrect Example: # Top level heading # Another top-level heading Correct Example: # Title ## Heading ## Another heading 8 In general, except for TOC.md files, which can be indented by two spaces, other .md files must be indented by four spaces by default foe each level of indentation. Incorrect Example: * List item * Nested list item indented by 3 spaces Correct Example: * List item * Nested list item indented by 4 spaces 9 Tab is not allowed in documents(including code blocks) . If indentation is required, spaces must be uniformly used instead. Incorrect Example: Some text * hard tab character used to indent the list item Correct Example: Some text * Spaces used to indent the list item instead 10 Continuous blank lines are prohibited. Incorrect Example: Some text here Some more text here Correct Example: Some text here Some more text here 11 Multiple spaces are not allowed after the block reference symbol > . Only one space can be used, followed by the reference content. Incorrect Example: > This is a blockquote with bad indentation> there should only be one. Correct Example: > This is a blockquote with correct> indentation. 12 When using a ordered list, it must start from 1 and increase in order. Incorrect Example: 1. Do this. 1. Do that. 1. Done. 0. Do this. 1. Do that. 2. Done. Correct Example: 1. Do this. 2. Do that. 3. Done. 13 When using a list, the identifier (+, -, * or number) of each list item can only be left blank, followed by the list content. Correct Example: * Foo * Bar * Baz 1. Foo * Bar 1. Baz 14 The list (includeing ordered and unordered lists) must be empty before and after each line. Incorrect Example: Some text* Some* List 1. Some2. List Some text Correct Example: Some text * Some * List 1. Some 2. List Some text 15 There must be one blank line before and after the code block. Incorrect Example: Some text ​``` Code block ​``` ​``` Another code block ​``` Some more text Correct Example: Some text ​``` Code block ​``` ​``` Another code block ​``` Some more text 16 Exposed URLs are prohibited in documents. If you want users to click and open the URL directly, wrap the URL with a pair of angle brackets () . If the exposed URL must be used due to special circumstances, and the user does not need to open it by clicking, a pair of back quatation marks (URL) will be used to wrap the URL. Incorrect Example: For more information, see https://www.example.com/. Correct Example: For more information, see . 17 When using bold, italic and other emphasis effects, redundant spaces are prohibited in the emphasis identifier, such as text . Incorrect Example: Here is some ** bold ** text. Here is some * italic * text. Here is some more __ bold __ text. Here is some more _ italic _ text. Correct Example: Here is some **bold** text. Here is some *italic* text. Here is some more __bold__ text. Here is some more _italic_ text. 18 No extra space is allowed in the code block wrapped by a single backquote, such as ` text `. Incorrect Example: some text some text Correct Example: some text 19 No extra spaces are allowed on both sides of the link text, such as [ Link ](https://www.example.com/) . Incorrect Example: [a link](https://www.example.com/) Correct Example: [a link](https://www.example.com/) 20 The link must have a link path. [Empty link]() and [empty link](#) are not allowed. Incorrect Example: [an empty link]() [an empty fragment](#) Correct Example: [a valid link](https://example.com/) [a valid fragment](#fragment) 21 Code blocks in the document are wrapped with three backquote, and the use of indented four-space code blocks is prohibited. Incorrect Example: Some text. # Indented code More text. Correct Example: ​```ruby # Fenced code ​``` More text. In order to test your modifications, you need to prepare the following environment. Node.js install Antora install Please refer to Antora docs。 After installation, the following display on the terminal indicates successful installation. Firstly, you need to know the location of the corresponding UI for the webpage, as shown in the following figure: The UI templates for both Chinese and English web pages are basically the same, so when making modifications, it is best to ensure that both templates are modified at the same time. After uploading the modified UI to your personal Github, you can consider generating your modified web page locally. IvorySQL Document Site is built by Antora. Before running Antora, remember to modify the corresponding playbook.yml file. After completing the above process, please run the command antora antora-playbook.yml --stacktrace on the terminal, and then patiently wait. After the successful operation is completed, you can view the webpage you have generated. You can start uploading to our ivorysql_web, the process of submitting PR is the same as before. Thank you for your contribution to the community _. We will consider whether to update the website after the review. 1 Download Markdown or Typora . 2 Check whether the source warehouse (https://github.com/IvorySQL/Ivory-www) has updates. If there are updates, please update and synchronize to your own warehouse first. Refer to the following steps to update to the latest version: # Download source code git clone https://github.com/IvorySQL/Ivory-www.git # Synchronize updates warehouse git pull 3 Familiar with format ([_specification_2]) The IvorySQL community provides Chinese and English documents. English documents are saved in IvorySQL document repository, Chinese documents are saved in i18n document repository. You can contribute to one of them or both. Let’s take a quick look at the information about the maintenance of the IvorySQL blog before contributing. It is helpful for you to submit blog and to be a contributor. (1) Clone code to local warehouse git clone https://github.com/IvorySQL/Ivory-www.git (2) Create a branch git checkout -b (3) Create a directory of your own articles in the blog directory, and please name your own directory according to the ([Specification](#7.4 Specification) ) . # Make English blog directory and files cd Ivory-www/blog mkdir cd touch index.md # Make Chinese blog directory and files cd Ivory-www/i18n/zh-CN/docusaurus-plugin-content-blog mkdir cd touch index.md (4) Write the blog to publish in index.md, put the required pictures in the blog in the same directory as index.md. (5) Submit Blog git add git commit -m \"\" git push origin : (1) Format of folder naming: year-month-day-foldername Example: 2022-1-28-ivorysql-arrived (2) File property is index.md (3) Picture property is .png, and put the pictures to be uploaded into the folder to be submitted in advance. Notice:The name of every picture is unique and cannot be repeated. Example: po-one.png Blogs are written in markdown or Typora, you can understand the design of blog by reading Blog | Docusaurus. (1) The header of blog includes the following information: --- slug: IvorySQL title: Welcome to IvorySQL community authors: [official] authorTwitter: IvorySql tags: [IvorySQL, Welcome, Database, Join Us] --- Prompt:You can copy the above template to your file and edit it. Notice:1) Add one space after slug, title, authors, tags. 2) The name of every slug is unique, the Chinese and English versions of the same blog can be the same. (2) Text format The text paragraph title is h2/\"Second level title\"; The body uses the default font size. (3) Naming format of inserted pictures [Hello](Hello-banner.png) (4) Naming format of inserted hyperlink [name](link) Github page Download source code and published packages. IvorySQL Document Site uses Antora to build. Also, IvorySQL Document Site is open source. It consists of three parts, such as ivorysql_docs, ivorysql_web and ivory-doc-builder. Welcome everyone who is willing to participate in open source work to join us, and remember to follow our code of conduct _. Due to the fact that IvorySQL Document Site is all hosted on Github, this allows any users to fork our document repository into their personal repository, make modifications to it, and then submit a PR. After being reviewed by our open source team, the modifications can be updated to our Document Site. In order to achieve the goat of correcting document errors more conveniently, you first need to establish a personal warehouse according to the size you want to update. As follows: If you want to modify the existing content or add a new page, you only need to fork ivorysql_docs to your personal repository. If you want to participate more deeply in the construction of IvorySQL Document Site, in addition to the ivorysql_docs, you also need to fork ivorysql_web and ivory-doc-builder to your personal repository. This section will introduce the process of modifying webpage content after discovering that it is inappropriate. In the upper right corner of a webpage with incorrect content, there is a button called edit this page, click on the button. As shown in the figure: After clicking, it will redirect to the editing page where we store the current page source .adoc file. Please modify the content in the Asciidoc format. As shown in the figure: After editing is completed. As shown in the figure: After confirming the update. As shown in the figure: Next, the relevant person of the open source team will be responsible for reviewing the content you submitted. After the review is completed, the updates you submitted will appear on the corresponding page. This section will introduce how to add new page components to a website, and the modifications involved in adding new pages mainly include the following: Add the .adoc file in the CN/modules/ROOT/pages/vX.X. Modify the CN/modules/ROOT/nav.adoc. If the modification involves modifying or adding images, please modify the images in images. Add the .adoc file in the EN/modules/ROOT/pages/vX.X. Modify the EN/modules/ROOT/nav.adoc. If the modification involves modifying or adding images, please modify the images in images. Firstly, you need to download the warehouse that you fork from IvorySQL to your personal computer. git clone https://github.com/$username$/ivorysql_docs.git Then, place the .adoc file to be added in the correct directory, remembering that both Chinese and English files should be prepared (Chinese and English files should have the same name), and each file should be placed in the correct directory. At the same time, modify the corresponding nav.adoc file (the modification method can refer to the existing content of the file). After the above modifications are completed, submit them to the personal warehouse first. git add . git commit -m \"$describe your change$\" git push Afterwards, submit the PR as follows If you are not satisfied with simply submitting on the webpage or only modifying the webpage content, or if you want to modify the webpage UI, this section will help you. Before reading this section, you need to confirm whether your Github personal repository has forked ivorysql_docs, ivorysql_web and ivory-doc-builder. The deployment of web pages is currently the responsibility of the open-source team. We value every submission and issue, so please do not worry about your contribution to the community being buried. If you don’t have much time, you can send an email to ivorysql-docs@ivorysql.org. We will have dedicated staff to handle every your letter, and we looking forward to hearing from you.","title":"IvorySQL Community Contribution Guide","component":"ivorysql-doc","version":"v4.2","name":"23","url":"/ivorysql-doc/v4.2/v4.2/23.html","titles":[{"text":"1. Summary","hash":"summary","id":1},{"text":"1.1. Illustration","hash":"illustration","id":2},{"text":"1.2. Principles of Conduct","hash":"principles-of-conduct","id":3},{"text":"1.3. Description of Community Governance","hash":"description-of-community-governance","id":4},{"text":"2. Contributor’s Guide","hash":"contributors-guide","id":5},{"text":"2.1. Preparation before Contribution","hash":"preparation-before-contribution","id":6},{"text":"2.1.1. Getting started","hash":"getting-started","id":7},{"text":"2.1.2. Licensing of IvorySQL contributions","hash":"licensing-of-ivorysql-contributions","id":8},{"text":"2.2. What Contribution Can You Make","hash":"what-contribution-can-you-make","id":9},{"text":"2.2.1. Code Contribution","hash":"code-contribution","id":10},{"text":"2.2.2. Document Contribution(https://www.ivorysql.org/zh-CN/docs/intro)","hash":"document-contributionhttpswww-ivorysql-orgzh-cndocsintro","id":11},{"text":"2.2.3. Test IvorySQL and Report Bugs","hash":"test-ivorysql-and-report-bugs","id":12},{"text":"2.2.4. Participate in the Construction of IvorySQL Website","hash":"participate-in-the-construction-of-ivorysql-website","id":13},{"text":"2.2.5. Answer Questions on the Mailing List","hash":"answer-questions-on-the-mailing-list","id":14},{"text":"2.2.6. Contribute Article","hash":"contribute-article","id":15},{"text":"2.3. How to Contribute","hash":"how-to-contribute","id":16},{"text":"2.3.1. Coding Guidelines","hash":"coding-guidelines","id":17},{"text":"2.3.2. Changes applicable to upstream PostgreSQL","hash":"changes-applicable-to-upstream-postgresql","id":18},{"text":"2.3.3. Patch submission","hash":"patch-submission","id":19},{"text":"2.3.4. Patch review","hash":"patch-review","id":20},{"text":"2.3.5. Direct commits to the repository","hash":"direct-commits-to-the-repository","id":21},{"text":"3. Submit Issue","hash":"submit-issue","id":22},{"text":"3.1. First: Get into New issue page:","hash":"first-get-into-new-issue-page","id":23},{"text":"3.1.1. Second:Select the issue type","hash":"secondselect-the-issue-type","id":24},{"text":"3.1.2. Third: Submit","hash":"third-submit","id":25},{"text":"4. Contribute Code","hash":"contribute-code","id":26},{"text":"4.1. First: Fork ivorysql.org  warehouse","hash":"first-fork-ivorysql-org-warehouse","id":27},{"text":"4.2. Second: Clone the warehouse to local","hash":"second-clone-the-warehouse-to-local","id":28},{"text":"4.3. Third: Create a new Branch","hash":"third-create-a-new-branch","id":29},{"text":"4.4. Fourth: Edit Document or Modify Code","hash":"fourth-edit-document-or-modify-code","id":30},{"text":"4.5. Fifth: Generate commit","hash":"fifth-generate-commit","id":31},{"text":"4.6. Sixth: Push the modification to the remote end","hash":"sixth-push-the-modification-to-the-remote-end","id":32},{"text":"4.7. Seventh: Create a Pull Request","hash":"seventh-create-a-pull-request","id":33},{"text":"5. Submit PR","hash":"submit-pr","id":34},{"text":"5.1. First:Create a Pull Request","hash":"firstcreate-a-pull-request","id":35},{"text":"5.2. Second:Fill in PR information","hash":"secondfill-in-pr-information","id":36},{"text":"5.3. Third:Submit PR","hash":"thirdsubmit-pr","id":37},{"text":"6. Edit Documents","hash":"edit-documents","id":38},{"text":"6.1. Preparation","hash":"preparation","id":39},{"text":"6.2. Where to Contribute","hash":"where-to-contribute","id":40},{"text":"6.3. Specification","hash":"specification","id":41},{"text":"6.4. Example","hash":"example","id":42},{"text":"6.5. Environmental preparation","hash":"environmental-preparation","id":43},{"text":"6.6. Generate web pages","hash":"generate-web-pages","id":44},{"text":"7. Submit Blog","hash":"submit-blog","id":45},{"text":"7.1. Preparation","hash":"preparation-2","id":46},{"text":"7.2. Where to Congtribute","hash":"where-to-congtribute","id":47},{"text":"7.3. How to Contribute","hash":"how-to-contribute-2","id":48},{"text":"7.4. Specification","hash":"specification-2","id":49},{"text":"7.4.1. Submit specifications","hash":"submit-specifications","id":50},{"text":"7.4.2. Write blog","hash":"write-blog","id":51},{"text":"8. Website Contribution Guide","hash":"website-contribution-guide","id":52},{"text":"8.1. How to Contribute","hash":"how-to-contribute-3","id":53},{"text":"8.2. Modify Content","hash":"modify-content","id":54},{"text":"8.3. Add Page","hash":"add-page","id":55},{"text":"8.4. Test","hash":"test","id":56},{"text":"8.5. Deploy web pages","hash":"deploy-web-pages","id":57},{"text":"8.6. Tip","hash":"tip","id":58}]},"16":{"id":16,"text":"This part contains reference information for IvorySQL client applications and utilities. Not all of these commands are of general utility; some might require special privileges. The common feature of Client Applications is that they can be run on any host, independent of where the database server resides. When specified on the command line, user and database names have their case preserved — the presence of spaces or special characters might require quoting. Table names and other identifiers do not have their case preserved, except where documented, and might require quoting. category Tool name Description Client Applications clusterdb clusterdb is a utility for reclustering tables in a IvorySQL database. It finds tables that have previously been clustered, and clusters them again on the same index that was last used. Tables that have never been clustered are not affected.clusterdb is a wrapper around the SQL command CLUSTER. There is no effective difference between clustering databases via this utility and via other methods for accessing the server. createdb createdb creates a new IvorySQL database.Normally, the database user who executes this command becomes the owner of the new database. However, a different owner can be specified via the -O option, if the executing user has appropriate privileges.createdb is a wrapper around the SQL command CREATE DATABASE. There is no effective difference between creating databases via this utility and via other methods for accessing the server. createuser createuser creates a new IvorySQL user (or more precisely, a role). Only superusers and users with CREATEROLE privilege can create new users, so createuser must be invoked by someone who can connect as a superuser or a user with CREATEROLE privilege. createuser is a wrapper around the SQL command CREATE ROLE. There is no effective difference between creating users via this utility and via other methods for accessing the server. dropdb dropdb destroys an existing IvorySQL database. The user who executes this command must be a database superuser or the owner of the database.dropdb is a wrapper around the SQL command DROP DATABASE. There is no effective difference between dropping databases via this utility and via other methods for accessing the server. dropuser dropuser removes an existing IvorySQL user. Only superusers and users with the CREATEROLE privilege can remove IvorySQL users. (To remove a superuser, you must yourself be a superuser.)dropuser is a wrapper around the SQL command DROP ROLE. There is no effective difference between dropping users via this utility and via other methods for accessing the server. ecpg ecpg is the embedded SQL preprocessor for C programs. It converts C programs with embedded SQL statements to normal C code by replacing the SQL invocations with special function calls. The output files can then be processed with any C compiler tool chain.ecpg will convert each input file given on the command line to the corresponding C output file. If an input file name does not have any extension, .pgc is assumed. The file’s extension will be replaced by .c to construct the output file name. But the output file name can be overridden using the -o option.If an input file name is just -, ecpg reads the program from standard input (and writes to standard output, unless that is overridden with -o).This reference page does not describe the embedded SQL language. pg_amcheck pg_amcheck supports running amcheck's corruption checking functions against one or more databases, with options to select which schemas, tables and indexes to check, which kinds of checking to perform, and whether to perform the checks in parallel, and if so, the number of parallel connections to establish and use. pg_basebackup pg_basebackup is used to take a base backup of a running IvorySQL database cluster. The backup is taken without affecting other clients of the database, and can be used both for point-in-time recovery and as the starting point for a log-shipping or streaming-replication standby server.pg_basebackup makes an exact copy of the database cluster’s files, while making sure the server is put into and out of backup mode automatically. Backups are always taken of the entire database cluster; it is not possible to back up individual databases or database objects. For selective backups, another tool such as pg_dump must be used.The backup is made over a regular IvorySQL connection that uses the replication protocol. The connection must be made with a user ID that has REPLICATION permissions or is a superuser, and pg_hba.conf must permit the replication connection. The server must also be configured with max_wal_senders set high enough to provide at least one walsender for the backup plus one for WAL streaming (if used).There can be multiple pg_basebackup`s running at the same time, but it is usually better from a performance point of view to take only one backup, and copy the result.pg_basebackup can make a base backup from not only a primary server but also a standby. To take a backup from a standby, set up the standby so that it can accept replication connections (that is, set `max_wal_senders and hot_standby, and configure its pg_hba.conf appropriately). You will also need to enable full_page_writes on the primary. pgbench pgbench is a simple program for running benchmark tests on IvorySQL. It runs the same sequence of SQL commands over and over, possibly in multiple concurrent database sessions, and then calculates the average transaction rate (transactions per second). By default, pgbench tests a scenario that is loosely based on TPC-B, involving five SELECT, UPDATE, and INSERT commands per transaction. However, it is easy to test other cases by writing your own transaction script files. pg_config The pg_config utility prints configuration parameters of the currently installed version of IvorySQL. It is intended, for example, to be used by software packages that want to interface to IvorySQL to facilitate finding the required header files and libraries. pg_dump pg_dump is a utility for backing up a IvorySQL database. It makes consistent backups even if the database is being used concurrently. pg_dump does not block other users accessing the database (readers or writers).pg_dump only dumps a single database. To back up an entire cluster, or to back up global objects that are common to all databases in a cluster (such as roles and tablespaces), use pg_dumpall. Dumps can be output in script or archive file formats. Script dumps are plain-text files containing the SQL commands required to reconstruct the database to the state it was in at the time it was saved. To restore from such a script, feed it to psql. Script files can be used to reconstruct the database even on other machines and other architectures; with some modifications, even on other SQL database products.The alternative archive file formats must be used with pg_restore to rebuild the database. They allow pg_restore to be selective about what is restored, or even to reorder the items prior to being restored. The archive file formats are designed to be portable across architectures.When used with one of the archive file formats and combined with pg_restore, pg_dump provides a flexible archival and transfer mechanism. pg_dump can be used to backup an entire database, then pg_restore can be used to examine the archive and/or select which parts of the database are to be restored. The most flexible output file formats are the “custom” format ( -Fc ) and the “directory” format ( -Fd ). They allow for selection and reordering of all archived items, support parallel restoration, and are compressed by default. The “directory” format is the only format that supports parallel dumps.While running pg_dump, one should examine the output for any warnings (printed on standard error), especially in light of the limitations listed below. pg_dumpall pg_dumpall is a utility for writing out (“dumping”) all IvorySQL databases of a cluster into one script file. The script file contains SQL commands that can be used as input to psql to restore the databases. It does this by calling pg_dump for each database in the cluster. pg_dumpall also dumps global objects that are common to all databases, namely database roles, tablespaces, and privilege grants for configuration parameters. (pg_dump does not save these objects.)Since pg_dumpall reads tables from all databases you will most likely have to connect as a database superuser in order to produce a complete dump. Also you will need superuser privileges to execute the saved script in order to be allowed to add roles and create databases.The SQL script will be written to the standard output. Use the -f/--file option or shell operators to redirect it into a file.pg_dumpall needs to connect several times to the IvorySQL server (once per database). If you use password authentication it will ask for a password each time. It is convenient to have a ~/.pgpass file in such cases. pg_isready pg_isready is a utility for checking the connection status of a IvorySQL database server. The exit status specifies the result of the connection check. pg_receivewal pg_receivewal is used to stream the write-ahead log from a running IvorySQL cluster. The write-ahead log is streamed using the streaming replication protocol, and is written to a local directory of files. This directory can be used as the archive location for doing a restore using point-in-time recovery.pg_receivewal streams the write-ahead log in real time as it’s being generated on the server, and does not wait for segments to complete like archive_command does. For this reason, it is not necessary to set archive_timeout when using pg_receivewal.Unlike the WAL receiver of a IvorySQL standby server, pg_receivewal by default flushes WAL data only when a WAL file is closed. The option --synchronous must be specified to flush WAL data in real time. Since pg_receivewal does not apply WAL, you should not allow it to become a synchronous standby when synchronous_commit equals remote_apply. If it does, it will appear to be a standby that never catches up, and will cause transaction commits to block. To avoid this, you should either configure an appropriate value for synchronous_standby_names, or specify application_name for pg_receivewal that does not match it, or change the value of synchronous_commit to something other than remote_apply.The write-ahead log is streamed over a regular IvorySQL connection and uses the replication protocol. The connection must be made with a user having REPLICATION permissions or a superuser, and pg_hba.conf must permit the replication connection. The server must also be configured with max_wal_senders set high enough to leave at least one session available for the stream. pg_recvlogical pg_recvlogical controls logical decoding replication slots and streams data from such replication slots.It creates a replication-mode connection, so it is subject to the same constraints as pg_receivewal, plus those for logical replication .pg_recvlogical has no equivalent to the logical decoding SQL interface’s peek and get modes. It sends replay confirmations for data lazily as it receives it and on clean exit. To examine pending data on a slot without consuming it, use pg_logical_slot_peek_changes. pg_restore pg_restore is a utility for restoring a IvorySQL database from an archive created by pg_dump in one of the non-plain-text formats. It will issue the commands necessary to reconstruct the database to the state it was in at the time it was saved. The archive files also allow pg_restore to be selective about what is restored, or even to reorder the items prior to being restored. The archive files are designed to be portable across architectures.pg_restore can operate in two modes. If a database name is specified, pg_restore connects to that database and restores archive contents directly into the database. Otherwise, a script containing the SQL commands necessary to rebuild the database is created and written to a file or standard output. This script output is equivalent to the plain text output format of pg_dump. Some of the options controlling the output are therefore analogous to pg_dump options.Obviously, pg_restore cannot restore information that is not present in the archive file. For instance, if the archive was made using the “dump data as INSERT commands” option, pg_restore will not be able to load the data using COPY statements. pg_verifybackup pg_verifybackup is used to check the integrity of a database cluster backup taken using pg_basebackup against a backup_manifest generated by the server at the time of the backup. The backup must be stored in the \"plain\" format; a \"tar\" format backup can be checked after extracting it.It is important to note that the validation which is performed by pg_verifybackup does not and cannot include every check which will be performed by a running server when attempting to make use of the backup. Even if you use this tool, you should still perform test restores and verify that the resulting databases work as expected and that they appear to contain the correct data. However, pg_verifybackup can detect many problems that commonly occur due to storage problems or user error.Backup verification proceeds in four stages. First, pg_verifybackup reads the backup_manifest file. If that file does not exist, cannot be read, is malformed, or fails verification against its own internal checksum, pg_verifybackup will terminate with a fatal error. psql psql is a terminal-based front-end to IvorySQL. It enables you to type in queries interactively, issue them to IvorySQL, and see the query results. Alternatively, input can be from a file or from command line arguments. In addition, psql provides a number of meta-commands and various shell-like features to facilitate writing scripts and automating a wide variety of tasks. reindexdb reindexdb is a utility for rebuilding indexes in a IvorySQL database.reindexdb is a wrapper around the SQL command REINDEX. There is no effective difference between reindexing databases via this utility and via other methods for accessing the server. vacuumdb vacuumdb is a utility for cleaning a IvorySQL database. vacuumdb will also generate internal statistics used by the IvorySQL query optimizer. Server Applications initdb(1) initdb creates a new IvorySQL database cluster. A database cluster is a collection of databases that are managed by a single server instance.Creating a database cluster consists of creating the directories in which the database data will live, generating the shared catalog tables (tables that belong to the whole cluster rather than to any particular database), and creating the postgres, template1, and template0 databases. The postgres database is a default database meant for use by users, utilities and third party applications. template1 and template0 are meant as source databases to be copied by later CREATE DATABASE commands. template0 should never be modified, but you can add objects to template1, which by default will be copied into databases created later.Although initdb will attempt to create the specified data directory, it might not have permission if the parent directory of the desired data directory is root-owned. To initialize in such a setup, create an empty data directory as root, then use chown to assign ownership of that directory to the database user account, then su to become the database user to run initdb. Server Applications initdb(2) initdb must be run as the user that will own the server process, because the server needs to have access to the files and directories that initdb creates. Since the server cannot be run as root, you must not run initdb as root either. (It will in fact refuse to do so.)For security reasons the new cluster created by initdb will only be accessible by the cluster owner by default. The --allow-group-access option allows any user in the same group as the cluster owner to read files in the cluster. This is useful for performing backups as a non-privileged user.initdb initializes the database cluster’s default locale and character set encoding. These can also be set separately for each database when it is created. initdb determines those settings for the template databases, which will serve as the default for all other databases. By default, initdb uses the locale provider libc, takes the locale settings from the environment, and determines the encoding from the locale settings. This is almost always sufficient, unless there are special requirements.To choose a different locale for the cluster, use the option --locale. There are also individual options --lc-* (see below) to set values for the individual locale categories. Note that inconsistent settings for different locale categories can give nonsensical results, so this should be used with care.Alternatively, the ICU library can be used to provide locale services. (Again, this only sets the default for subsequently created databases.) To select this option, specify --locale-provider=icu. To choose the specific ICU locale ID to apply, use the option --icu-locale. Note that for implementation reasons and to support legacy code, initdb will still select and initialize libc locale settings when the ICU locale provider is used.When initdb runs, it will print out the locale settings it has chosen. If you have complex requirements or specified multiple options, it is advisable to check that the result matches what was intended. pg_archivecleanup pg_archivecleanup is designed to be used as an archive_cleanup_command to clean up WAL file archives when running as a standby server .pg_archivecleanup can also be used as a standalone program to clean WAL file archives. pg_checksums pg_checksums checks, enables or disables data checksums in a IvorySQL cluster. The server must be shut down cleanly before running pg_checksums. When verifying checksums, the exit status is zero if there are no checksum errors, and nonzero if at least one checksum failure is detected. When enabling or disabling checksums, the exit status is nonzero if the operation failed.When verifying checksums, every file in the cluster is scanned. When enabling checksums, each relation file block with a changed checksum is rewritten in-place. Disabling checksums only updates the file pg_control. pg_controldata pg_controldata prints information initialized during initdb, such as the catalog version. It also shows information about write-ahead logging and checkpoint processing. This information is cluster-wide, and not specific to any one database.This utility can only be run by the user who initialized the cluster because it requires read access to the data directory. You can specify the data directory on the command line, or use the environment variable PGDATA. This utility supports the options -V and --version, which print the pg_controldata version and exit. It also supports options -? and --help, which output the supported arguments. pg_ctl pg_ctl is a utility for initializing a IvorySQL database cluster, starting, stopping, or restarting the IvorySQL database server (postgres), or displaying the status of a running server. Although the server can be started manually, pg_ctl encapsulates tasks such as redirecting log output and properly detaching from the terminal and process group. It also provides convenient options for controlled shutdown. pg_resetwal pg_resetwal clears the write-ahead log (WAL) and optionally resets some other control information stored in the pg_control file. This function is sometimes needed if these files have become corrupted. It should be used only as a last resort, when the server will not start due to such corruption.After running this command, it should be possible to start the server, but bear in mind that the database might contain inconsistent data due to partially-committed transactions. You should immediately dump your data, run initdb, and restore. After restore, check for inconsistencies and repair as needed.This utility can only be run by the user who installed the server, because it requires read/write access to the data directory. For safety reasons, you must specify the data directory on the command line. pg_resetwal does not use the environment variable PGDATA.If pg_resetwal complains that it cannot determine valid data for pg_control, you can force it to proceed anyway by specifying the -f (force) option. In this case plausible values will be substituted for the missing data. Most of the fields can be expected to match, but manual assistance might be needed for the next OID, next transaction ID and epoch, next multitransaction ID and offset, and WAL starting location fields. These fields can be set using the options discussed below. If you are not able to determine correct values for all these fields, -f can still be used, but the recovered database must be treated with even more suspicion than usual: an immediate dump and restore is imperative. Do not execute any data-modifying operations in the database before you dump, as any such action is likely to make the corruption worse. pg_rewind(1) pg_rewind is a tool for synchronizing a IvorySQL cluster with another copy of the same cluster, after the clusters' timelines have diverged. A typical scenario is to bring an old primary server back online after failover as a standby that follows the new primary.After a successful rewind, the state of the target data directory is analogous to a base backup of the source data directory. Unlike taking a new base backup or using a tool like rsync, pg_rewind does not require comparing or copying unchanged relation blocks in the cluster. Only changed blocks from existing relation files are copied; all other files, including new relation files, configuration files, and WAL segments, are copied in full. As such the rewind operation is significantly faster than other approaches when the database is large and only a small fraction of blocks differ between the clusters.pg_rewind examines the timeline histories of the source and target clusters to determine the point where they diverged, and expects to find WAL in the target cluster’s pg_wal directory reaching all the way back to the point of divergence. The point of divergence can be found either on the target timeline, the source timeline, or their common ancestor. In the typical failover scenario where the target cluster was shut down soon after the divergence, this is not a problem, but if the target cluster ran for a long time after the divergence, its old WAL files might no longer be present. In this case, you can manually copy them from the WAL archive to the pg_wal directory, or run pg_rewind with the -c option to automatically retrieve them from the WAL archive. The use of pg_rewind is not limited to failover, e.g., a standby server can be promoted, run some write transactions, and then rewound to become a standby again.After running pg_rewind, WAL replay needs to complete for the data directory to be in a consistent state. pg_rewind(2) When the target server is started again it will enter archive recovery and replay all WAL generated in the source server from the last checkpoint before the point of divergence. If some of the WAL was no longer available in the source server when pg_rewind was run, and therefore could not be copied by the pg_rewind session, it must be made available when the target server is started. This can be done by creating a recovery.signal file in the target data directory and by configuring a suitable restore_command in IvorySQL.conf.pg_rewind requires that the target server either has the wal_log_hints option enabled in IvorySQL.conf or data checksums enabled when the cluster was initialized with initdb. Neither of these are currently on by default. full_page_writes must also be set to on, but is enabled by default. pg_test_fsync pg_test_fsync is intended to give you a reasonable idea of what the fastest wal_sync_method is on your specific system, as well as supplying diagnostic information in the event of an identified I/O problem. However, differences shown by pg_test_fsync might not make any significant difference in real database throughput, especially since many database servers are not speed-limited by their write-ahead logs. pg_test_fsync reports average file sync operation time in microseconds for each wal_sync_method, which can also be used to inform efforts to optimize the value of commit_delay. pg_test_timing pg_test_timing is a tool to measure the timing overhead on your system and confirm that the system time never moves backwards. Systems that are slow to collect timing data can give less accurate EXPLAIN ANALYZE results. pg_upgrade Major IvorySQL releases regularly add new features that often change the layout of the system tables, but the internal data storage format rarely changes. pg_upgrade uses this fact to perform rapid upgrades by creating new system tables and simply reusing the old user data files. If a future major release ever changes the data storage format in a way that makes the old data format unreadable, pg_upgrade will not be usable for such upgrades. (The community will attempt to avoid such situations.)pg_upgrade does its best to make sure the old and new clusters are binary-compatible, e.g., by checking for compatible compile-time settings, including 32/64-bit binaries. It is important that any external modules are also binary compatible, though this cannot be checked by pg_upgrade. pg_waldump pg_waldump displays the write-ahead log (WAL) and is mainly useful for debugging or educational purposes.This utility can only be run by the user who installed the server, because it requires read-only access to the data directory. postgres postgres is the IvorySQL database server. In order for a client application to access a database it connects (over a network or locally) to a running postgres instance. The postgres instance then starts a separate server process to handle the connection. clusterdb [connection-option…​] [ --verbose | -v ] [ --table | -t table ] …​ [dbname] clusterdb` [*`connection-option`*...] [ `--verbose` | `-v` ] `--all` | `-a clusterdb accepts the following command-line arguments: -a --all Cluster all databases. [-d] dbname dbname Specifies the name of the database to be clustered, when -a / --all is not used. If this is not specified, the database name is read from the environment variable PGDATABASE. If that is not set, the user name specified for the connection is used. The dbname can be a connection string. If so, connection string parameters will override any conflicting command line options. -e --echo Echo the commands that clusterdb generates and sends to the server. -q --quiet Do not display progress messages. -t table --table=table Cluster table only. Multiple tables can be clustered by writing multiple -t switches. -v --verbose Print detailed information during processing. -V --version Print the clusterdb version and exit. -? --help Show help about clusterdb command line arguments, and exit.clusterdb also accepts the following command-line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. -U username --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force clusterdb to prompt for a password before connecting to a database.This option is never essential, since clusterdb will automatically prompt for a password if the server demands password authentication. However, clusterdb will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. --maintenance-db=dbname Specifies the name of the database to connect to to discover which databases should be clustered, when -a / --all is used. If not specified, the postgres database will be used, or if that does not exist, template1 will be used. This can be a connection string. If so, connection string parameters will override any conflicting command line options. Also, connection string parameters other than the database name itself will be re-used when connecting to other databases. PGDATABASE PGHOST PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq In case of difficulty, see CLUSTER and psql for discussions of potential problems and error messages. The database server must be running at the targeted host. Also, any default connection settings and environment variables used by the libpq front-end library will apply. To cluster the database test: $ clusterdb test To cluster a single table foo in a database named xyzzy: $ clusterdb --table=foo xyzzy createdb — create a new IvorySQL database createdb [connection-option…​] [option…​] [dbname [description]] createdb accepts the following command-line arguments: dbname Specifies the name of the database to be created. The name must be unique among all IvorySQL databases in this cluster. The default is to create a database with the same name as the current system user. description Specifies a comment to be associated with the newly created database. -D tablespace --tablespace=tablespace Specifies the default tablespace for the database. (This name is processed as a double-quoted identifier.) -e --echo Echo the commands that createdb generates and sends to the server. -E encoding --encoding=encoding Specifies the character encoding scheme to be used in this database. -l locale --locale=locale Specifies the locale to be used in this database. This is equivalent to specifying both --lc-collate and --lc-ctype. --lc-collate=`locale` Specifies the LC_COLLATE setting to be used in this database. --lc-ctype=locale Specifies the LC_CTYPE setting to be used in this database. --icu-locale=`locale` Specifies the ICU locale ID to be used in this database, if the ICU locale provider is selected. --locale-provider={libc|icu} Specifies the locale provider for the database’s default collation. -O `owner` --owner=`owner` Specifies the database user who will own the new database. (This name is processed as a double-quoted identifier.) -T template --template=template Specifies the template database from which to build this database. (This name is processed as a double-quoted identifier.) -V --version Print the createdb version and exit. -? --help Show help about createdb command line arguments, and exit. The options -D, -l, -E, -O, and -T correspond to options of the underlying SQL command CREATE DATABASE; see there for more information about them. createdb also accepts the following command-line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or the local Unix domain socket file extension on which the server is listening for connections. -U username --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force createdb to prompt for a password before connecting to a database.This option is never essential, since createdb will automatically prompt for a password if the server demands password authentication. However, createdb will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. --maintenance-db=`dbname` Specifies the name of the database to connect to when creating the new database. If not specified, the postgres database will be used; if that does not exist (or if it is the name of the new database being created), template1 will be used. This can be a connection string. If so, connection string parameters will override any conflicting command line options. PGDATABASE If set, the name of the database to create, unless overridden on the command line. PGHOST PGPORT PGUSER Default connection parameters. PGUSER also determines the name of the database to create, if it is not specified on the command line or by PGDATABASE. PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq In case of difficulty, see CREATE DATABASE and psql for discussions of potential problems and error messages. The database server must be running at the targeted host. Also, any default connection settings and environment variables used by the libpq front-end library will apply. To create the database demo using the default database server: $ createdb demo To create the database demo using the server on host eden, port 5000, using the template0 template database, here is the command-line command and the underlying SQL command: $ createdb -p 5000 -h eden -T template0 -e demo CREATE DATABASE demo TEMPLATE template0; createuser — define a new IvorySQL user account createuser [connection-option…​] [option…​] [username] createuser accepts the following command-line arguments: username Specifies the name of the IvorySQL user to be created. -c number --connection-limit=number Set a maximum number of connections for the new user. The default is to set no limit. -d --createdb The new user will be allowed to create databases. -D --no-createdb The new user will not be allowed to create databases. This is the default. -e --echo Echo the commands that createuser generates and sends to the server. -E --encrypted This option is obsolete but still accepted for backward compatibility. -g role --role=role Indicates role to which this role will be added immediately as a new member. Multiple roles to which this role will be added as a member can be specified by writing multiple -g switches. -i --inherit The new role will automatically inherit privileges of roles it is a member of. This is the default. -I --no-inherit The new role will not automatically inherit privileges of roles it is a member of. --interactive Prompt for the user name if none is specified on the command line, and also prompt for whichever of the options -d / -D, -r / -R, -s / -S is not specified on the command line. -l --login The new user will be allowed to log in (that is, the user name can be used as the initial session user identifier). This is the default. -L --no-login The new user will not be allowed to log in. (A role without login privilege is still useful as a means of managing database permissions.) -P --pwprompt If given, createuser will issue a prompt for the password of the new user. This is not necessary if you do not plan on using password authentication. -r --createrole The new user will be allowed to create new roles. That is, this user will have CREATEROLE privilege. -R --no-createrole The new user will not be allowed to create new roles. This is the default. -s --superuser The new user will be a superuser. -S --no-superuser The new user will not be a superuser. This is the default. -V --version Print the createuser version and exit. --replication The new user will have the REPLICATION privilege, which is described more fully in the documentation for CREATE ROLE. --no-replication The new user will not have the REPLICATION privilege, which is described more fully in the documentation for CREATE ROLE. -? --help Show help about createuser command line arguments, and exit. createuser also accepts the following command-line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. -U username --username=username User name to connect as (not the user name to create). -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force createuser to prompt for a password (for connecting to the server, not for the password of the new user).This option is never essential, since createuser will automatically prompt for a password if the server demands password authentication. However, createuser will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. PGHOST PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq In case of difficulty, see CREATE ROLE and psql for discussions of potential problems and error messages. The database server must be running at the targeted host. Also, any default connection settings and environment variables used by the libpq front-end library will apply. To create a user joe on the default database server: $ createuser joe To create a user joe on the default database server with prompting for some additional attributes: $ createuser --interactive joe Shall the new role be a superuser? (y/n) n Shall the new role be allowed to create databases? (y/n) n Shall the new role be allowed to create more new roles? (y/n) n To create the same user joe using the server on host eden, port 5000, with attributes explicitly specified, taking a look at the underlying command: $ createuser -h eden -p 5000 -S -D -R -e joe CREATE ROLE joe NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN; To create the user joe as a superuser, and assign a password immediately: $ createuser -P -s -e joe Enter password for new role: xyzzy Enter it again: xyzzy CREATE ROLE joe PASSWORD 'md5b5f5ba1a423792b526f799ae4eb3d59e' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN; In the above example, the new password isn’t actually echoed when typed, but we show what was typed for clarity. As you see, the password is encrypted before it is sent to the client. dropdb — remove a IvorySQL database dropdb [connection-option…​] [option…​] dbname dropdb accepts the following command-line arguments: dbname Specifies the name of the database to be removed. -e --echo Echo the commands that dropdb generates and sends to the server. -f --force Attempt to terminate all existing connections to the target database before dropping it. See DROP DATABASE for more information on this option. -i --interactive Issues a verification prompt before doing anything destructive. -V --version Print the dropdb version and exit. --if-exists Do not throw an error if the database does not exist. A notice is issued in this case. -? --help Show help about dropdb command line arguments, and exit. dropdb also accepts the following command-line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. -U username --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force dropdb to prompt for a password before connecting to a database.This option is never essential, since dropdb will automatically prompt for a password if the server demands password authentication. However, dropdb will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. --maintenance-db=dbname Specifies the name of the database to connect to in order to drop the target database. If not specified, the postgres database will be used; if that does not exist (or is the database being dropped), template1 will be used. This can be a connection string. If so, connection string parameters will override any conflicting command line options. PGHOST PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq . In case of difficulty, see DROP DATABASE and psql for discussions of potential problems and error messages. The database server must be running at the targeted host. Also, any default connection settings and environment variables used by the libpq front-end library will apply. To destroy the database demo on the default database server: $ dropdb demo To destroy the database demo using the server on host eden, port 5000, with verification and a peek at the underlying command: $ dropdb -p 5000 -h eden -i -e demo Database \"demo\" will be permanently deleted. Are you sure? (y/n) y DROP DATABASE demo; dropuser — remove a IvorySQL user account dropuser [connection-option…​] [option…​] [username] dropuser accepts the following command-line arguments: username Specifies the name of the IvorySQL user to be removed. You will be prompted for a name if none is specified on the command line and the -i / --interactive option is used. -e --echo Echo the commands that dropuser generates and sends to the server. -i --interactive Prompt for confirmation before actually removing the user, and prompt for the user name if none is specified on the command line. -V --version Print the dropuser version and exit. --if-exists Do not throw an error if the user does not exist. A notice is issued in this case. -? --help Show help about dropuser command line arguments, and exit. dropuser also accepts the following command-line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. -U username --username=username User name to connect as (not the user name to drop). -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force dropuser to prompt for a password before connecting to a database.This option is never essential, since dropuser will automatically prompt for a password if the server demands password authentication. However, dropuser will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. PGHOST PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq In case of difficulty, see DROP ROLE and psql for discussions of potential problems and error messages. The database server must be running at the targeted host. Also, any default connection settings and environment variables used by the libpq front-end library will apply. To remove user joe from the default database server: $ dropuser joe To remove user joe using the server on host eden, port 5000, with verification and a peek at the underlying command: $ dropuser -p 5000 -h eden -i -e joe Role \"joe\" will be permanently removed. Are you sure? (y/n) y DROP ROLE joe; ecpg — embedded SQL C preprocessor ecpg [option…​] file…​ ecpg accepts the following command-line arguments: -c Automatically generate certain C code from SQL code. Currently, this works for EXEC SQL TYPE. -C mode Set a compatibility mode. mode can be INFORMIX, INFORMIX_SE, or ORACLE. -D `symbol` Define a C preprocessor symbol. -h Process header files. When this option is specified, the output file extension becomes .h not .c, and the default input file extension is .pgh not .pgc. Also, the -c option is forced on. -i Parse system include files as well. -I `directory` Specify an additional include path, used to find files included via EXEC SQL INCLUDE. Defaults are . (current directory), /usr/local/include, the IvorySQL include directory which is defined at compile time (default: /usr/local/pgsql/include), and /usr/include, in that order. -o `filename` Specifies that ecpg should write all its output to the given filename. Write -o - to send all output to standard output. -r `option` Selects run-time behavior. Option can be one of the following:`no_indicator`Do not use indicators but instead use special values to represent null values. Historically there have been databases using this approach.prepare`Prepare all statements before using them. Libecpg will keep a cache of prepared statements and reuse a statement if it gets executed again. If the cache runs full, libecpg will free the least used statement.`questionmarks Allow question mark as placeholder for compatibility reasons. This used to be the default long ago. -t Turn on autocommit of transactions. In this mode, each SQL command is automatically committed unless it is inside an explicit transaction block. In the default mode, commands are committed only when EXEC SQL COMMIT is issued. -v Print additional information including the version and the \"include\" path. --version Print the ecpg version and exit. -? --help Show help about ecpg command line arguments, and exit. When compiling the preprocessed C code files, the compiler needs to be able to find the ECPG header files in the IvorySQL include directory. Therefore, you might have to use the -I option when invoking the compiler (e.g., -I/usr/local/pgsql/include). Programs using C code with embedded SQL have to be linked against the libecpg library, for example using the linker options -L/usr/local/pgsql/lib -lecpg. The value of either of these directories that is appropriate for the installation can be found out using pg_config. If you have an embedded SQL C source file named prog1.pgc, you can create an executable program using the following sequence of commands: ecpg prog1.pgc cc -I/usr/local/pgsql/include -c prog1.c cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg pg_amcheck — checks for corruption in one or more IvorySQL databases pg_amcheck [option…​] [dbname] The following command-line options control what is checked: -a --all Check all databases, except for any excluded via --exclude-database. -d pattern --database=pattern Check databases matching the specified pattern, except for any excluded by --exclude-database. This option can be specified more than once. -D pattern --exclude-database=pattern Exclude databases matching the given pattern. This option can be specified more than once. -i pattern --index=pattern Check indexes matching the specified pattern, unless they are otherwise excluded. This option can be specified more than once.This is similar to the --relation option, except that it applies only to indexes, not to other relation types. -I pattern --exclude-index=pattern Exclude indexes matching the specified pattern. This option can be specified more than once.This is similar to the --exclude-relation option, except that it applies only to indexes, not other relation types. -r `pattern` --relation=`pattern` Check relations matching the specified pattern, unless they are otherwise excluded. This option can be specified more than once.Patterns may be unqualified, e.g. myrel*, or they may be schema-qualified, e.g. myschema*.myrel* or database-qualified and schema-qualified, e.g. mydb*.myscheam*.myrel*. A database-qualified pattern will add matching databases to the list of databases to be checked. -R pattern --exclude-relation=pattern Exclude relations matching the specified pattern. This option can be specified more than once.As with --relation, the pattern may be unqualified, schema-qualified, or database- and schema-qualified. -s pattern --schema=pattern Check tables and indexes in schemas matching the specified pattern, unless they are otherwise excluded. This option can be specified more than once.To select only tables in schemas matching a particular pattern, consider using something like --table=SCHEMAPAT.* --no-dependent-indexes. To select only indexes, consider using something like --index=SCHEMAPAT..A schema pattern may be database-qualified. For example, you may write --schema=mydb.myschema* to select schemas matching myschema* in databases matching mydb*. -S pattern --exclude-schema=pattern Exclude tables and indexes in schemas matching the specified pattern. This option can be specified more than once.As with --schema, the pattern may be database-qualified. -t pattern --table=pattern Check tables matching the specified pattern, unless they are otherwise excluded. This option can be specified more than once.This is similar to the --relation option, except that it applies only to tables, materialized views, and sequences, not to indexes. -T pattern --exclude-table=pattern Exclude tables matching the specified pattern. This option can be specified more than once.This is similar to the --exclude-relation option, except that it applies only to tables, materialized views, and sequences, not to indexes. --no-dependent-indexes By default, if a table is checked, any btree indexes of that table will also be checked, even if they are not explicitly selected by an option such as --index or --relation. This option suppresses that behavior. --no-dependent-toast By default, if a table is checked, its toast table, if any, will also be checked, even if it is not explicitly selected by an option such as --table or --relation. This option suppresses that behavior. --no-strict-names By default, if an argument to --database, --table, --index, or --relation matches no objects, it is a fatal error. This option downgrades that error to a warning. The following command-line options control checking of tables: --exclude-toast-pointers By default, whenever a toast pointer is encountered in a table, a lookup is performed to ensure that it references apparently-valid entries in the toast table. These checks can be quite slow, and this option can be used to skip them. --on-error-stop After reporting all corruptions on the first page of a table where corruption is found, stop processing that table relation and move on to the next table or index.Note that index checking always stops after the first corrupt page. This option only has meaning relative to table relations. --skip=`option` If all-frozen is given, table corruption checks will skip over pages in all tables that are marked as all frozen.If all-visible is given, table corruption checks will skip over pages in all tables that are marked as all visible.By default, no pages are skipped. This can be specified as none, but since this is the default, it need not be mentioned. --startblock=`block` Start checking at the specified block number. An error will occur if the table relation being checked has fewer than this number of blocks. This option does not apply to indexes, and is probably only useful when checking a single table relation. See --endblock for further caveats. --endblock=`block` End checking at the specified block number. An error will occur if the table relation being checked has fewer than this number of blocks. This option does not apply to indexes, and is probably only useful when checking a single table relation. If both a regular table and a toast table are checked, this option will apply to both, but higher-numbered toast blocks may still be accessed while validating toast pointers, unless that is suppressed using --exclude-toast-pointers. The following command-line options control checking of B-tree indexes: --heapallindexed For each index checked, verify the presence of all heap tuples as index tuples in the index using amcheck's heapallindexed option. --parent-check For each btree index checked, use amcheck's bt_index_parent_check function, which performs additional checks of parent/child relationships during index checking.The default is to use amcheck’s bt_index_check function, but note that use of the --rootdescend option implicitly selects bt_index_parent_check. --rootdescend For each index checked, re-find tuples on the leaf level by performing a new search from the root page for each tuple using amcheck's rootdescend option.Use of this option implicitly also selects the --parent-check option.This form of verification was originally written to help in the development of btree index features. It may be of limited use or even of no use in helping detect the kinds of corruption that occur in practice. It may also cause corruption checking to take considerably longer and consume considerably more resources on the server. The extra checks performed against B-tree indexes when the --parent-check option or the --rootdescend option is specified require relatively strong relation-level locks. These checks are the only checks that will block concurrent data modification from INSERT, UPDATE, and DELETE commands. The following command-line options control the connection to the server: -h hostname --host=hostname Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. -U --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_amcheck to prompt for a password before connecting to a database.This option is never essential, since pg_amcheck will automatically prompt for a password if the server demands password authentication. However, pg_amcheck will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. --maintenance-db=dbname Specifies a database or connection string to be used to discover the list of databases to be checked. If neither --all nor any option including a database pattern is used, no such connection is required and this option does nothing. Otherwise, any connection string parameters other than the database name which are included in the value for this option will also be used when connecting to the databases being checked. If this option is omitted, the default is postgres or, if that fails, template1. Other options are also available: -e --echo Echo to stdout all SQL sent to the server. -j `num` --jobs=`num` Use num concurrent connections to the server, or one per object to be checked, whichever is less.The default is to use a single connection. -P --progress Show progress information. Progress information includes the number of relations for which checking has been completed, and the total size of those relations. It also includes the total number of relations that will eventually be checked, and the estimated size of those relations. -v --verbose Print more messages. In particular, this will print a message for each relation being checked, and will increase the level of detail shown for server errors. -V --version Print the pg_amcheck version and exit. --install-missing --install-missing=`schema` Install any missing extensions that are required to check the database(s). If not yet installed, each extension’s objects will be installed into the given schema, or if not specified into schema pg_catalog.At present, the only required extension is amcheck. -? --help Show help about pg_amcheck command line arguments, and exit. pg_basebackup — take a base backup of a IvorySQL cluster pg_basebackup [option…​] The following command-line options control the location and format of the output: -D directory --pgdata=directory Sets the target directory to write the output to. pg_basebackup will create this directory (and any missing parent directories) if it does not exist. If it already exists, it must be empty.When the backup is in tar format, the target directory may be specified as - (dash), causing the tar file to be written to stdout.This option is required. -F format --format=format Selects the format for the output. format can be one of the following: p plain Write the output as plain files, with the same layout as the source server’s data directory and tablespaces. When the cluster has no additional tablespaces, the whole database will be placed in the target directory. If the cluster contains additional tablespaces, the main data directory will be placed in the target directory, but all other tablespaces will be placed in the same absolute path as they have on the source server. (See --tablespace-mapping to change that.)This is the default format. t tar Write the output as tar files in the target directory. The main data directory’s contents will be written to a file named base.tar, and each other tablespace will be written to a separate tar file named after that tablespace’s OID.If the target directory is specified as - (dash), the tar contents will be written to standard output, suitable for piping to (for example) gzip. This is only allowed if the cluster has no additional tablespaces and WAL streaming is not used. -R --write-recovery-conf Creates a standby.signal file and appends connection settings to the IvorySQL.auto.conf file in the target directory (or within the base archive file when using tar format). This eases setting up a standby server using the results of the backup.The IvorySQL.auto.conf file will record the connection settings and, if specified, the replication slot that pg_basebackup is using, so that streaming replication will use the same settings later on. -t target --target=target Instructs the server where to place the base backup. The default target is client, which specifies that the backup should be sent to the machine where pg_basebackup is running. If the target is instead set to server:/some/path, the backup will be stored on the machine where the server is running in the /some/path directory. Storing a backup on the server requires superuser privileges or having privileges of the pg_write_server_files role. If the target is set to blackhole, the contents are discarded and not stored anywhere. This should only be used for testing purposes, as you will not end up with an actual backup.Since WAL streaming is implemented by pg_basebackup rather than by the server, this option cannot be used together with -Xstream. Since that is the default, when this option is specified, you must also specify either -Xfetch or -Xnone. -T olddir=newdir --tablespace-mapping=olddir=newdir Relocates the tablespace in directory olddir to newdir during the backup. To be effective, olddir must exactly match the path specification of the tablespace as it is defined on the source server. (But it is not an error if there is no tablespace in olddir on the source server.) Meanwhile newdir is a directory in the receiving host’s filesystem. As with the main target directory, newdir need not exist already, but if it does exist it must be empty. Both olddir and newdir must be absolute paths. If either path needs to contain an equal sign (=), precede that with a backslash. This option can be specified multiple times for multiple tablespaces.If a tablespace is relocated in this way, the symbolic links inside the main data directory are updated to point to the new location. So the new data directory is ready to be used for a new server instance with all tablespaces in the updated locations.Currently, this option only works with plain output format; it is ignored if tar format is selected. --waldir=waldir Sets the directory to write WAL (write-ahead log) files to. By default WAL files will be placed in the pg_wal subdirectory of the target directory, but this option can be used to place them elsewhere. waldir must be an absolute path. As with the main target directory, waldir need not exist already, but if it does exist it must be empty. This option can only be specified when the backup is in plain format. -X method --wal-method=method Includes the required WAL (write-ahead log) files in the backup. This will include all write-ahead logs generated during the backup. Unless the method none is specified, it is possible to start a postmaster in the target directory without the need to consult the log archive, thus making the output a completely standalone backup.The following methods for collecting the write-ahead logs are supported: n none Don’t include write-ahead logs in the backup. f fetch`The write-ahead log files are collected at the end of the backup. Therefore, it is necessary for the source server’s wal_keep_size parameter to be set high enough that the required log data is not removed before the end of the backup. If the required log data has been recycled before it’s time to transfer it, the backup will fail and be unusable.When tar format is used, the write-ahead log files will be included in the `base.tar file.s stream`Stream write-ahead log data while the backup is being taken. This method will open a second connection to the server and start streaming the write-ahead log in parallel while running the backup. Therefore, it will require two replication connections not just one. As long as the client can keep up with the write-ahead log data, using this method requires no extra write-ahead logs to be saved on the source server.When tar format is used, the write-ahead log files will be written to a separate file named `pg_wal.tar (if the server is a version earlier than 10, the file will be named pg_xlog.tar).This value is the default. -z --gzip Enables gzip compression of tar file output, with the default compression level. Compression is only available when using the tar format, and the suffix .gz will automatically be added to all tar filenames. -Z level -Z method[:*detail*] --compress=level --compress=method[:*detail*] Requests compression of the backup. If client or server is included, it specifies where the compression is to be performed. Compressing on the server will reduce transfer bandwidth but will increase server CPU consumption. The default is client except when --target is used. In that case, the backup is not being sent to the client, so only server compression is sensible. When -Xstream, which is the default, is used, server-side compression will not be applied to the WAL. To compress the WAL, use client-side compression, or specify -Xfetch.The compression method can be set to gzip, lz4, zstd, or none for no compression. A compression detail string can optionally be specified. If the detail string is an integer, it specifies the compression level. Otherwise, it should be a comma-separated list of items, each of the form keyword or keyword=value. Currently, the supported keywords are level and workers.If no compression level is specified, the default compression level will be used. If only a level is specified without mentioning an algorithm, gzip compression will be used if the level is greater than 0, and no compression will be used if the level is 0.When the tar format is used with gzip, lz4, or zstd, the suffix .gz, .lz4, or .zst, respectively, will be automatically added to all tar filenames. When the plain format is used, client-side compression may not be specified, but it is still possible to request server-side compression. If this is done, the server will compress the backup for transmission, and the client will decompress and extract it.When this option is used in combination with -Xstream, pg_wal.tar will be compressed using gzip if client-side gzip compression is selected, but will not be compressed if any other compression algorithm is selected, or if server-side compression is selected. The following command-line options control the generation of the backup and the invocation of the program: -c {fast|spread} --checkpoint={fast|spread} Sets checkpoint mode to fast (immediate) or spread (the default) . -C --create-slot Specifies that the replication slot named by the --slot option should be created before starting the backup. An error is raised if the slot already exists. -l label --label=label Sets the label for the backup. If none is specified, a default value of “pg_basebackup base backup” will be used. -n --no-clean By default, when pg_basebackup aborts with an error, it removes any directories it might have created before discovering that it cannot finish the job (for example, the target directory and write-ahead log directory). This option inhibits tidying-up and is thus useful for debugging.Note that tablespace directories are not cleaned up either way. -N --no-sync By default, pg_basebackup will wait for all files to be written safely to disk. This option causes pg_basebackup to return without waiting, which is faster, but means that a subsequent operating system crash can leave the base backup corrupt. Generally, this option is useful for testing but should not be used when creating a production installation. -P --progress Enables progress reporting. Turning this on will deliver an approximate progress report during the backup. Since the database may change during the backup, this is only an approximation and may not end at exactly 100%. In particular, when WAL log is included in the backup, the total amount of data cannot be estimated in advance, and in this case the estimated target size will increase once it passes the total estimate without WAL. -r rate --max-rate=rate Sets the maximum transfer rate at which data is collected from the source server. This can be useful to limit the impact of pg_basebackup on the server. Values are in kilobytes per second. Use a suffix of M to indicate megabytes per second. A suffix of k is also accepted, and has no effect. Valid values are between 32 kilobytes per second and 1024 megabytes per second.This option always affects transfer of the data directory. Transfer of WAL files is only affected if the collection method is fetch. -S slotname --slot=slotname This option can only be used together with -X stream. It causes WAL streaming to use the specified replication slot. If the base backup is intended to be used as a streaming-replication standby using a replication slot, the standby should then use the same replication slot name as primary_slot_name. This ensures that the primary server does not remove any necessary WAL data in the time between the end of the base backup and the start of streaming replication on the new standby.The specified replication slot has to exist unless the option -C is also used.If this option is not specified and the server supports temporary replication slots (version 10 and later), then a temporary replication slot is automatically used for WAL streaming. -v --verbose Enables verbose mode. Will output some extra steps during startup and shutdown, as well as show the exact file name that is currently being processed if progress reporting is also enabled. --manifest-checksums=algorithm Specifies the checksum algorithm that should be applied to each file included in the backup manifest. Currently, the available algorithms are NONE, CRC32C, SHA224, SHA256, SHA384, and SHA512. The default is CRC32C.If NONE is selected, the backup manifest will not contain any checksums. Otherwise, it will contain a checksum of each file in the backup using the specified algorithm. In addition, the manifest will always contain a SHA256 checksum of its own contents. The SHA algorithms are significantly more CPU-intensive than CRC32C, so selecting one of them may increase the time required to complete the backup.Using a SHA hash function provides a cryptographically secure digest of each file for users who wish to verify that the backup has not been tampered with, while the CRC32C algorithm provides a checksum that is much faster to calculate; it is good at catching errors due to accidental changes but is not resistant to malicious modifications. Note that, to be useful against an adversary who has access to the backup, the backup manifest would need to be stored securely elsewhere or otherwise verified not to have been modified since the backup was taken. pg_verifybackup can be used to check the integrity of a backup against the backup manifest. --manifest-force-encode Forces all filenames in the backup manifest to be hex-encoded. If this option is not specified, only non-UTF8 filenames are hex-encoded. This option is mostly intended to test that tools which read a backup manifest file properly handle this case. --no-estimate-size Prevents the server from estimating the total amount of backup data that will be streamed, resulting in the backup_total column in the pg_stat_progress_basebackup view always being NULL.Without this option, the backup will start by enumerating the size of the entire database, and then go back and send the actual contents. This may make the backup take slightly longer, and in particular it will take longer before the first data is sent. This option is useful to avoid such estimation time if it’s too long.This option is not allowed when using --progress. --no-manifest Disables generation of a backup manifest. If this option is not specified, the server will generate and send a backup manifest which can be verified using pg_verifybackup. The manifest is a list of every file present in the backup with the exception of any WAL files that may be included. It also stores the size, last modification time, and an optional checksum for each file. --no-slot Prevents the creation of a temporary replication slot for the backup.By default, if log streaming is selected but no slot name is given with the -S option, then a temporary replication slot is created (if supported by the source server).The main purpose of this option is to allow taking a base backup when the server has no free replication slots. Using a replication slot is almost always preferred, because it prevents needed WAL from being removed by the server during the backup. --no-verify-checksums Disables verification of checksums, if they are enabled on the server the base backup is taken from.By default, checksums are verified and checksum failures will result in a non-zero exit status. However, the base backup will not be removed in such a case, as if the --no-clean option had been used. Checksum verification failures will also be reported in the pg_stat_database view. The following command-line options control the connection to the source server: -d connstr --dbname=connstr Specifies parameters used to connect to the server, as a connection string; these will override any conflicting command line options.The option is called --dbname for consistency with other client applications, but because pg_basebackup doesn’t connect to any particular database in the cluster, any database name in the connection string will be ignored. -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for a Unix domain socket. The default is taken from the PGHOST environment variable, if set, else a Unix domain socket connection is attempted. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the PGPORT environment variable, if set, or a compiled-in default. -s interval --status-interval=interval Specifies the number of seconds between status packets sent back to the source server. Smaller values allow more accurate monitoring of backup progress from the server. A value of zero disables periodic status updates completely, although an update will still be sent when requested by the server, to avoid timeout-based disconnects. The default value is 10 seconds. -U username --username=username Specifies the user name to connect as. -w --no-password Prevents issuing a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Forces pg_basebackup to prompt for a password before connecting to the source server.This option is never essential, since pg_basebackup will automatically prompt for a password if the server demands password authentication. However, pg_basebackup will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. Other options are also available: -V --version Prints the pg_basebackup version and exits. -? --help Shows help about pg_basebackup command line arguments, and exits. This utility, like most other IvorySQL utilities, uses the environment variables supported by libpq . The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. At the beginning of the backup, a checkpoint needs to be performed on the source server. This can take some time (especially if the option --checkpoint=fast is not used), during which pg_basebackup will appear to be idle. The backup will include all files in the data directory and tablespaces, including the configuration files and any additional files placed in the directory by third parties, except certain temporary files managed by IvorySQL. But only regular files and directories are copied, except that symbolic links used for tablespaces are preserved. Symbolic links pointing to certain directories known to IvorySQL are copied as empty directories. Other symbolic links and special device files are skipped. In plain format, tablespaces will be backed up to the same path they have on the source server, unless the option --tablespace-mapping is used. Without this option, running a plain format base backup on the same host as the server will not work if tablespaces are in use, because the backup would have to be written to the same directory locations as the original tablespaces. When tar format is used, it is the user’s responsibility to unpack each tar file before starting a IvorySQL server that uses the data. If there are additional tablespaces, the tar files for them need to be unpacked in the correct locations. In this case the symbolic links for those tablespaces will be created by the server according to the contents of the tablespace_map file that is included in the base.tar file. pg_basebackup works with servers of the same or an older major version. pg_basebackup will preserve group permissions for data files if group permissions are enabled on the source cluster. To create a base backup of the server at mydbserver and store it in the local directory /usr/local/pgsql/data: $ pg_basebackup -h mydbserver -D /usr/local/pgsql/data To create a backup of the local server with one compressed tar file for each tablespace, and store it in the directory backup, showing a progress report while running: $ pg_basebackup -D backup -Ft -z -P To create a backup of a single-tablespace local database and compress this with bzip2: $ pg_basebackup -D - -Ft -X fetch | bzip2 > backup.tar.bz2 (This command will fail if there are multiple tablespaces in the database.) To create a backup of a local database where the tablespace in /opt/ts is relocated to ./backup/ts: $ pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts To create a backup of a local server with one tar file for each tablespace compressed with gzip at level 9, stored in the directory backup: $ pg_basebackup -D backup -Ft --compress=gzip:9 pgbench — run a benchmark test on IvorySQL pgbench -i [option…​] [dbname] pgbench [option…​] [dbname] pgbench -i creates four tables pgbench_accounts, pgbench_branches, pgbench_history, and pgbench_tellers, destroying any existing tables of these names. Be very careful to use another database if you have tables having these names! At the default “scale factor” of 1, the tables initially contain this many rows: table # of rows --------------------------------- pgbench_branches 1 pgbench_tellers 10 pgbench_accounts 100000 pgbench_history 0 You can (and, for most purposes, probably should) increase the number of rows by using the -s (scale factor) option. The -F (fillfactor) option might also be used at this point. Once you have done the necessary setup, you can run your benchmark with a command that doesn’t include -i, that is pgbench [ options ] dbname In nearly all cases, you’ll need some options to make a useful test. The most important options are -c (number of clients), -t (number of transactions), -T (time limit), and -f (specify a custom script file). See below for a full list. The following is divided into three subsections. Different options are used during database initialization and while running benchmarks, but some options are useful in both cases. pgbench accepts the following command-line initialization arguments: dbname Specifies the name of the database to test in. If this is not specified, the environment variable PGDATABASE is used. If that is not set, the user name specified for the connection is used. -i --initialize Required to invoke initialization mode. -I init_steps --init-steps=init_steps Perform just a selected set of the normal initialization steps. init_steps specifies the initialization steps to be performed, using one character per step. Each step is invoked in the specified order. The default is dtgvp. The available steps are:`d` (Drop)Drop any existing pgbench tables.t (create Tables)Create the tables used by the standard pgbench scenario, namely pgbench_accounts, pgbench_branches, pgbench_history, and pgbench_tellers.g or G (Generate data, client-side or server-side)Generate data and load it into the standard tables, replacing any data already present.With g (client-side data generation), data is generated in pgbench client and then sent to the server. This uses the client/server bandwidth extensively through a COPY. pgbench uses the FREEZE option with version 14 or later of IvorySQL to speed up subsequent VACUUM, unless partitions are enabled. Using g causes logging to print one message every 100,000 rows while generating data for the pgbench_accounts table.With G (server-side data generation), only small queries are sent from the pgbench client and then data is actually generated in the server. No significant bandwidth is required for this variant, but the server will do more work. Using G causes logging not to print any progress message while generating data.The default initialization behavior uses client-side data generation (equivalent to g).v (Vacuum)Invoke VACUUM on the standard tables.p (create Primary keys)Create primary key indexes on the standard tables.f (create Foreign keys)Create foreign key constraints between the standard tables. (Note that this step is not performed by default.) -F fillfactor --fillfactor= fillfactor Create the pgbench_accounts, pgbench_tellers and pgbench_branches tables with the given fillfactor. Default is 100. -n --no-vacuum Perform no vacuuming during initialization. (This option suppresses the v initialization step, even if it was specified in -I.) -q --quiet Switch logging to quiet mode, producing only one progress message per 5 seconds. The default logging prints one message each 100,000 rows, which often outputs many lines per second (especially on good hardware).This setting has no effect if G is specified in -I. -s scale_factor --scale=scale_factor Multiply the number of rows generated by the scale factor. For example, -s 100 will create 10,000,000 rows in the pgbench_accounts table. Default is 1. When the scale is 20,000 or larger, the columns used to hold account identifiers (aid columns) will switch to using larger integers (bigint), in order to be big enough to hold the range of account identifiers. --foreign-keys Create foreign key constraints between the standard tables. (This option adds the f step to the initialization step sequence, if it is not already present.) --index-tablespace=index_tablespace Create indexes in the specified tablespace, rather than the default tablespace. --partition-method=`NAME` Create a partitioned pgbench_accounts table with NAME method. Expected values are range or hash. This option requires that --partitions is set to non-zero. If unspecified, default is range. --partitions=NUM Create a partitioned pgbench_accounts table with NUM partitions of nearly equal size for the scaled number of accounts. Default is 0, meaning no partitioning. --tablespace=`tablespace` Create tables in the specified tablespace, rather than the default tablespace. --unlogged-tables Create all tables as unlogged tables, rather than permanent tables. pgbench accepts the following command-line benchmarking arguments: -b scriptname[@weight] --builtin=scriptname[@weight] Add the specified built-in script to the list of scripts to be executed. Available built-in scripts are: tpcb-like, simple-update and select-only. Unambiguous prefixes of built-in names are accepted. With the special name list, show the list of built-in scripts and exit immediately.Optionally, write an integer weight after @ to adjust the probability of selecting this script versus other ones. The default weight is 1. See below for details. -c clients --client=clients Number of clients simulated, that is, number of concurrent database sessions. Default is 1. -C --connect Establish a new connection for each transaction, rather than doing it just once per client session. This is useful to measure the connection overhead. -d --debug Print debugging output. -D varname=value --define=varname=value Define a variable for use by a custom script (see below). Multiple -D options are allowed. -f filename[@weight] --file=filename[@weight] Add a transaction script read from filename to the list of scripts to be executed.Optionally, write an integer weight after @ to adjust the probability of selecting this script versus other ones. The default weight is 1. (To use a script file name that includes an @ character, append a weight so that there is no ambiguity, for example filen@me@1.) See below for details. -j threads --jobs=threads Number of worker threads within pgbench. Using more than one thread can be helpful on multi-CPU machines. Clients are distributed as evenly as possible among available threads. Default is 1. -l --log Write information about each transaction to a log file. See below for details. -L limit --latency-limit=limit Transactions that last more than limit milliseconds are counted and reported separately, as late.When throttling is used (--rate=…​), transactions that lag behind schedule by more than limit ms, and thus have no hope of meeting the latency limit, are not sent to the server at all. They are counted and reported separately as skipped.When the --max-tries option is used, a transaction which fails due to a serialization anomaly or from a deadlock will not be retried if the total time of all its tries is greater than limit ms. To limit only the time of tries and not their number, use --max-tries=0. By default, the option --max-tries is set to 1 and transactions with serialization/deadlock errors are not retried. -M querymode --protocol=querymode Protocol to use for submitting queries to the server:`simple`: use simple query protocol. extended : use extended query protocol. prepared : use extended query protocol with prepared statements.In the prepared mode, pgbench reuses the parse analysis result starting from the second query iteration, so pgbench runs faster than in other modes.The default is simple query protocol. -n --no-vacuum Perform no vacuuming before running the test. This option is necessary if you are running a custom test scenario that does not include the standard tables pgbench_accounts, pgbench_branches, pgbench_history, and pgbench_tellers. -N --skip-some-updates Run built-in simple-update script. Shorthand for -b simple-update. -P sec --progress=sec Show progress report every sec seconds. The report includes the time since the beginning of the run, the TPS since the last report, and the transaction latency average, standard deviation, and the number of failed transactions since the last report. Under throttling (-R), the latency is computed with respect to the transaction scheduled start time, not the actual transaction beginning time, thus it also includes the average schedule lag time. When --max-tries is used to enable transaction retries after serialization/deadlock errors, the report includes the number of retried transactions and the sum of all retries. -r --report-per-command Report the following statistics for each command after the benchmark finishes: the average per-statement latency (execution time from the perspective of the client), the number of failures, and the number of retries after serialization or deadlock errors in this command. The report displays retry statistics only if the --max-tries option is not equal to 1. -R rate --rate=rate Execute transactions targeting the specified rate instead of running as fast as possible (the default). The rate is given in transactions per second. If the targeted rate is above the maximum possible rate, the rate limit won’t impact the results.The rate is targeted by starting transactions along a Poisson-distributed schedule time line. The expected start time schedule moves forward based on when the client first started, not when the previous transaction ended. That approach means that when transactions go past their original scheduled end time, it is possible for later ones to catch up again.When throttling is active, the transaction latency reported at the end of the run is calculated from the scheduled start times, so it includes the time each transaction had to wait for the previous transaction to finish. The wait time is called the schedule lag time, and its average and maximum are also reported separately. The transaction latency with respect to the actual transaction start time, i.e., the time spent executing the transaction in the database, can be computed by subtracting the schedule lag time from the reported latency.If --latency-limit is used together with --rate, a transaction can lag behind so much that it is already over the latency limit when the previous transaction ends, because the latency is calculated from the scheduled start time. Such transactions are not sent to the server, but are skipped altogether and counted separately.A high schedule lag time is an indication that the system cannot process transactions at the specified rate, with the chosen number of clients and threads. When the average transaction execution time is longer than the scheduled interval between each transaction, each successive transaction will fall further behind, and the schedule lag time will keep increasing the longer the test run is. When that happens, you will have to reduce the specified transaction rate. -s scale_factor --scale=scale_factor Report the specified scale factor in pgbench’s output. With the built-in tests, this is not necessary; the correct scale factor will be detected by counting the number of rows in the pgbench_branches table. However, when testing only custom benchmarks (-f option), the scale factor will be reported as 1 unless this option is used. -S --select-only Run built-in select-only script. Shorthand for -b select-only. -t transactions --transactions=transactions Number of transactions each client runs. Default is 10. -T seconds --time=seconds Run the test for this many seconds, rather than a fixed number of transactions per client. -t and -T are mutually exclusive. -v --vacuum-all Vacuum all four standard tables before running the test. With neither -n nor -v, pgbench will vacuum the pgbench_tellers and pgbench_branches tables, and will truncate pgbench_history. --aggregate-interval=`seconds` Length of aggregation interval (in seconds). May be used only with -l option. With this option, the log contains per-interval summary data, as described below. --failures-detailed Report failures in per-transaction and aggregation logs, as well as in the main and per-script reports, grouped by the following types:serialization failures;deadlock failures. --log-prefix=`prefix` Set the filename prefix for the log files created by --log. The default is pgbench_log. --max-tries=`number_of_tries` Enable retries for transactions with serialization/deadlock errors and set the maximum number of these tries. This option can be combined with the --latency-limit option which limits the total time of all transaction tries; moreover, you cannot use an unlimited number of tries (--max-tries=0) without --latency-limit or --time. The default value is 1 and transactions with serialization/deadlock errors are not retried. --progress-timestamp When showing progress (option -P), use a timestamp (Unix epoch) instead of the number of seconds since the beginning of the run. The unit is in seconds, with millisecond precision after the dot. This helps compare logs generated by various tools. --random-seed=seed Set random generator seed. Seeds the system random number generator, which then produces a sequence of initial generator states, one for each thread. Values for seed may be: time (the default, the seed is based on the current time), rand (use a strong random source, failing if none is available), or an unsigned decimal integer value. The random generator is invoked explicitly from a pgbench script (random…​ functions) or implicitly (for instance option --rate uses it to schedule transactions). When explicitly set, the value used for seeding is shown on the terminal. Any value allowed for seed may also be provided through the environment variable PGBENCH_RANDOM_SEED. To ensure that the provided seed impacts all possible uses, put this option first or use the environment variable.Setting the seed explicitly allows to reproduce a pgbench run exactly, as far as random numbers are concerned. As the random state is managed per thread, this means the exact same pgbench run for an identical invocation if there is one client per thread and there are no external or data dependencies. From a statistical viewpoint reproducing runs exactly is a bad idea because it can hide the performance variability or improve performance unduly, e.g., by hitting the same pages as a previous run. However, it may also be of great help for debugging, for instance re-running a tricky case which leads to an error. Use wisely. --sampling-rate=`rate` Sampling rate, used when writing data into the log, to reduce the amount of log generated. If this option is given, only the specified fraction of transactions are logged. 1.0 means all transactions will be logged, 0.05 means only 5% of the transactions will be logged.Remember to take the sampling rate into account when processing the log file. For example, when computing TPS values, you need to multiply the numbers accordingly (e.g., with 0.01 sample rate, you’ll only get 1/100 of the actual TPS). --show-script=scriptname Show the actual code of builtin script scriptname on stderr, and exit immediately. --verbose-errors Print messages about all errors and failures (errors without retrying) including which limit for retries was exceeded and how far it was exceeded for the serialization/deadlock failures. (Note that in this case the output can be significantly increased.). pgbench also accepts the following common command-line arguments for connection parameters: -h hostname --host=hostname The database server’s host name -p port --port=port The database server’s port number -U login --username=login The user name to connect as -V --version Print the pgbench version and exit. -? --help Show help about pgbench command line arguments, and exit. A successful run will exit with status 0. Exit status 1 indicates static problems such as invalid command-line options or internal errors which are supposed to never occur. Early errors that occur when starting benchmark such as initial connection failures also exit with status 1. Errors during the run such as database errors or problems in the script will result in exit status 2. In the latter case, pgbench will print partial results. PGDATABASE PGHOST PGPORT PGUSER Default connection parameters. This utility, like most other IvorySQL utilities, uses the environment variables supported by libpq . The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. pg_config — retrieve information about the installed version of IvorySQL pg_config [option…​] To use pg_config, supply one or more of the following options: --bindir Print the location of user executables. Use this, for example, to find the psql program. This is normally also the location where the pg_config program resides. --docdir Print the location of documentation files. --htmldir Print the location of HTML documentation files. --includedir Print the location of C header files of the client interfaces. --pkgincludedir Print the location of other C header files. --includedir-server Print the location of C header files for server programming. --libdir Print the location of object code libraries. --pkglibdir Print the location of dynamically loadable modules, or where the server would search for them. (Other architecture-dependent data files might also be installed in this directory.) --localedir Print the location of locale support files. (This will be an empty string if locale support was not configured when IvorySQL was built.) --mandir Print the location of manual pages. --sharedir Print the location of architecture-independent support files. --sysconfdir Print the location of system-wide configuration files. --pgxs Print the location of extension makefiles. --configure Print the options that were given to the configure script when IvorySQL was configured for building. This can be used to reproduce the identical configuration, or to find out with what options a binary package was built. (Note however that binary packages often contain vendor-specific custom patches.) See also the examples below. --cc Print the value of the CC variable that was used for building IvorySQL. This shows the C compiler used. --cppflags Print the value of the CPPFLAGS variable that was used for building IvorySQL. This shows C compiler switches needed at preprocessing time (typically, -I switches). --cflags Print the value of the CFLAGS variable that was used for building IvorySQL. This shows C compiler switches. --cflags_sl Print the value of the CFLAGS_SL variable that was used for building IvorySQL. This shows extra C compiler switches used for building shared libraries. --ldflags Print the value of the LDFLAGS variable that was used for building IvorySQL. This shows linker switches. --ldflags_ex Print the value of the LDFLAGS_EX variable that was used for building IvorySQL. This shows linker switches used for building executables only. --ldflags_sl Print the value of the LDFLAGS_SL variable that was used for building IvorySQL. This shows linker switches used for building shared libraries only. --libs Print the value of the LIBS variable that was used for building IvorySQL. This normally contains -l switches for external libraries linked into IvorySQL. --version Print the version of IvorySQL. -? --help Show help about pg_config command line arguments, and exit. If more than one option is given, the information is printed in that order, one item per line. If no options are given, all available information is printed, with labels. To reproduce the build configuration of the current IvorySQL installation, run the following command: eval ./configure `pg_config --configure` The output of pg_config --configure contains shell quotation marks so arguments with spaces are represented correctly. Therefore, using eval is required for proper results. pg_dump — extract a IvorySQL database into a script file or other archive file pg_dump [connection-option…​] [option…​] [dbname] The following command-line options control the content and format of the output. dbname Specifies the name of the database to be dumped. If this is not specified, the environment variable `PGDATABASE` is used. If that is not set, the user name specified for the connection is used. -a --data-only Dump only the data, not the schema (data definitions). Table data, large objects, and sequence values are dumped.This option is similar to, but for historical reasons not identical to, specifying `--section=data`. -b --blobs Include large objects in the dump. This is the default behavior except when `--schema`, `--table`, or `--schema-only` is specified. The `-b` switch is therefore only useful to add large objects to dumps where a specific schema or table has been requested. Note that blobs are considered data and therefore will be included when `--data-only` is used, but not when `--schema-only` is. -B --no-blobs Exclude large objects in the dump.When both `-b` and `-B` are given, the behavior is to output large objects, when data is being dumped, see the `-b` documentation. -c --clean Output commands to clean (drop) database objects prior to outputting the commands for creating them. (Unless `--if-exists` is also specified, restore might generate some harmless error messages, if any objects were not present in the destination database.)This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call `pg_restore`. -C --create Begin the output with a command to create the database itself and reconnect to the created database. (With a script of this form, it doesn't matter which database in the destination installation you connect to before running the script.) If `--clean` is also specified, the script drops and recreates the target database before reconnecting to it.With `--create`, the output also includes the database's comment if any, and any configuration variable settings that are specific to this database, that is, any `ALTER DATABASE ... SET ...` and `ALTER ROLE ... IN DATABASE ... SET ...` commands that mention this database. Access privileges for the database itself are also dumped, unless `--no-acl` is specified.This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call `pg_restore`. -e `pattern` --extension=`pattern` Dump only extensions matching *`pattern`*. When this option is not specified, all non-system extensions in the target database will be dumped. Multiple extensions can be selected by writing multiple `-e` switches. The *`pattern`* parameter is interpreted as a pattern according to the same rules used by psql's `\\d` commands , so multiple extensions can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards.Any configuration relation registered by `pg_extension_config_dump` is included in the dump if its extension is specified by `--extension`.NoteWhen `-e` is specified, pg_dump makes no attempt to dump any other database objects that the selected extension(s) might depend upon. Therefore, there is no guarantee that the results of a specific-extension dump can be successfully restored by themselves into a clean database. -E `encoding` --encoding=`encoding` Create the dump in the specified character set encoding. By default, the dump is created in the database encoding. (Another way to get the same result is to set the `PGCLIENTENCODING` environment variable to the desired dump encoding.) -f `file` --file=`file` Send output to the specified file. This parameter can be omitted for file based output formats, in which case the standard output is used. It must be given for the directory output format however, where it specifies the target directory instead of a file. In this case the directory is created by `pg_dump` and must not exist before. -F `format` --format=`format` Selects the format of the output. *`format`* can be one of the following:`p` `plain`Output a plain-text SQL script file (the default).`c` `custom`Output a custom-format archive suitable for input into pg_restore. Together with the directory output format, this is the most flexible output format in that it allows manual selection and reordering of archived items during restore. This format is also compressed by default.`d` `directory`Output a directory-format archive suitable for input into pg_restore. This will create a directory with one file for each table and blob being dumped, plus a so-called Table of Contents file describing the dumped objects in a machine-readable format that pg_restore can read. A directory format archive can be manipulated with standard Unix tools; for example, files in an uncompressed archive can be compressed with the gzip tool. This format is compressed by default and also supports parallel dumps.`t` `tar`Output a `tar`-format archive suitable for input into pg_restore. The tar format is compatible with the directory format: extracting a tar-format archive produces a valid directory-format archive. However, the tar format does not support compression. Also, when using tar format the relative order of table data items cannot be changed during restore. -j `njobs` --jobs=`njobs` Run the dump in parallel by dumping *`njobs`* tables simultaneously. This option may reduce the time needed to perform the dump but it also increases the load on the database server. You can only use this option with the directory output format because this is the only output format where multiple processes can write their data at the same time.pg_dump will open *`njobs`* + 1 connections to the database, so make sure your http://www.postgresql.org/docs/17/runtime-config-connection.html#GUC-MAX-CONNECTIONS[max_connections] setting is high enough to accommodate all connections.Requesting exclusive locks on database objects while running a parallel dump could cause the dump to fail. The reason is that the pg_dump leader process requests shared locks on the objects that the worker processes are going to dump later in order to make sure that nobody deletes them and makes them go away while the dump is running. If another client then requests an exclusive lock on a table, that lock will not be granted but will be queued waiting for the shared lock of the leader process to be released. Consequently any other access to the table will not be granted either and will queue after the exclusive lock request. This includes the worker process trying to dump the table. Without any precautions this would be a classic deadlock situation. To detect this conflict, the pg_dump worker process requests another shared lock using the `NOWAIT` option. If the worker process is not granted this shared lock, somebody else must have requested an exclusive lock in the meantime and there is no way to continue with the dump, so pg_dump has no choice but to abort the dump.To perform a parallel dump, the database server needs to support synchronized snapshots, a feature that was introduced in IvorySQL for primary servers and 10 for standbys. With this feature, database clients can ensure they see the same data set even though they use different connections. `pg_dump -j` uses multiple database connections; it connects to the database once with the leader process and once again for each worker job. Without the synchronized snapshot feature, the different worker jobs wouldn't be guaranteed to see the same data in each connection, which could lead to an inconsistent backup. -n `pattern` --schema=`pattern` Dump only schemas matching *`pattern`*; this selects both the schema itself, and all its contained objects. When this option is not specified, all non-system schemas in the target database will be dumped. Multiple schemas can be selected by writing multiple `-n` switches. The *`pattern`* parameter is interpreted as a pattern according to the same rules used by psql's `\\d` commands, so multiple schemas can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards. NoteWhen `-n` is specified, pg_dump makes no attempt to dump any other database objects that the selected schema(s) might depend upon. Therefore, there is no guarantee that the results of a specific-schema dump can be successfully restored by themselves into a clean database.NoteNon-schema objects such as blobs are not dumped when `-n` is specified. You can add blobs back to the dump with the `--blobs` switch. -N `pattern` --exclude-schema=`pattern` Do not dump any schemas matching *`pattern`*. The pattern is interpreted according to the same rules as for `-n`. `-N` can be given more than once to exclude schemas matching any of several patterns.When both `-n` and `-N` are given, the behavior is to dump just the schemas that match at least one `-n` switch but no `-N` switches. If `-N` appears without `-n`, then schemas matching `-N` are excluded from what is otherwise a normal dump. -O --no-owner Do not output commands to set ownership of objects to match the original database. By default, pg_dump issues `ALTER OWNER` or `SET SESSION AUTHORIZATION` statements to set ownership of created database objects. These statements will fail when the script is run unless it is started by a superuser (or the same user that owns all of the objects in the script). To make a script that can be restored by any user, but will give that user ownership of all the objects, specify `-O`.This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call `pg_restore`. -R --no-reconnect This option is obsolete but still accepted for backwards compatibility. -s --schema-only Dump only the object definitions (schema), not data.This option is the inverse of `--data-only`. It is similar to, but for historical reasons not identical to, specifying `--section=pre-data --section=post-data`.(Do not confuse this with the `--schema` option, which uses the word “schema” in a different meaning.)To exclude table data for only a subset of tables in the database, see `--exclude-table-data`. -S `username` --superuser=`username` Specify the superuser user name to use when disabling triggers. This is relevant only if `--disable-triggers` is used. (Usually, it's better to leave this out, and instead start the resulting script as superuser.) -t `pattern` --table=`pattern` Dump only tables with names matching *`pattern`*. Multiple tables can be selected by writing multiple `-t` switches. The *`pattern`* parameter is interpreted as a pattern according to the same rules used by psql's `\\d` commands , so multiple tables can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards; As well as tables, this option can be used to dump the definition of matching views, materialized views, foreign tables, and sequences. It will not dump the contents of views or materialized views, and the contents of foreign tables will only be dumped if the corresponding foreign server is specified with `--include-foreign-data`.The `-n` and `-N` switches have no effect when `-t` is used, because tables selected by `-t` will be dumped regardless of those switches, and non-table objects will not be dumped.NoteWhen `-t` is specified, pg_dump makes no attempt to dump any other database objects that the selected table(s) might depend upon. Therefore, there is no guarantee that the results of a specific-table dump can be successfully restored by themselves into a clean database. -T `pattern` --exclude-table=`pattern` Do not dump any tables matching *`pattern`*. The pattern is interpreted according to the same rules as for `-t`. `-T` can be given more than once to exclude tables matching any of several patterns.When both `-t` and `-T` are given, the behavior is to dump just the tables that match at least one `-t` switch but no `-T` switches. If `-T` appears without `-t`, then tables matching `-T` are excluded from what is otherwise a normal dump. -v --verbose Specifies verbose mode. This will cause pg_dump to output detailed object comments and start/stop times to the dump file, and progress messages to standard error. Repeating the option causes additional debug-level messages to appear on standard error. -V --version Print the pg_dump version and exit. -x --no-privileges --no-acl Prevent dumping of access privileges (grant/revoke commands). -Z `0..9` --compress=`0..9` Specify the compression level to use. Zero means no compression. For the custom and directory archive formats, this specifies compression of individual table-data segments, and the default is to compress at a moderate level. For plain text output, setting a nonzero compression level causes the entire output file to be compressed, as though it had been fed through gzip; but the default is not to compress. The tar archive format currently does not support compression at all. --binary-upgrade This option is for use by in-place upgrade utilities. Its use for other purposes is not recommended or supported. The behavior of the option may change in future releases without notice. --column-inserts --attribute-inserts Dump data as `INSERT` commands with explicit column names (`INSERT INTO *`table`* (*`column`*, ...) VALUES ...`). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-IvorySQL databases. Any error during restoring will cause only rows that are part of the problematic `INSERT` to be lost, rather than the entire table contents. --disable-dollar-quoting This option disables the use of dollar quoting for function bodies, and forces them to be quoted using SQL standard string syntax. --disable-triggers This option is relevant only when creating a data-only dump. It instructs pg_dump to include commands to temporarily disable triggers on the target tables while the data is restored. Use this if you have referential integrity checks or other triggers on the tables that you do not want to invoke during data restore.Presently, the commands emitted for `--disable-triggers` must be done as superuser. So, you should also specify a superuser name with `-S`, or preferably be careful to start the resulting script as a superuser.This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call `pg_restore`. --enable-row-security This option is relevant only when dumping the contents of a table which has row security. By default, pg_dump will set http://www.postgresql.org/docs/17/runtime-config-client.html#GUC-ROW-SECURITY[row_security] to off, to ensure that all data is dumped from the table. If the user does not have sufficient privileges to bypass row security, then an error is thrown. This parameter instructs pg_dump to set http://www.postgresql.org/docs/17/runtime-config-client.html#GUC-ROW-SECURITY[row_security] to on instead, allowing the user to dump the parts of the contents of the table that they have access to.Note that if you use this option currently, you probably also want the dump be in `INSERT` format, as the `COPY FROM` during restore does not support row security. --exclude-table-data=`pattern` Do not dump data for any tables matching *`pattern`*. The pattern is interpreted according to the same rules as for `-t`. `--exclude-table-data` can be given more than once to exclude tables matching any of several patterns. This option is useful when you need the definition of a particular table even though you do not need the data in it.To exclude data for all tables in the database, see `--schema-only`. --extra-float-digits=`ndigits` Use the specified value of `extra_float_digits` when dumping floating-point data, instead of the maximum available precision. Routine dumps made for backup purposes should not use this option. --if-exists Use conditional commands (i.e., add an `IF EXISTS` clause) when cleaning database objects. This option is not valid unless `--clean` is also specified. --include-foreign-data=`foreignserver` Dump the data for any foreign table with a foreign server matching *`foreignserver`* pattern. Multiple foreign servers can be selected by writing multiple `--include-foreign-data` switches. Also, the *`foreignserver`* parameter is interpreted as a pattern according to the same rules used by psql's `\\d` commands, so multiple foreign servers can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards; The only exception is that an empty pattern is disallowed.NoteWhen `--include-foreign-data` is specified, pg_dump does not check that the foreign table is writable. Therefore, there is no guarantee that the results of a foreign table dump can be successfully restored. --inserts Dump data as `INSERT` commands (rather than `COPY`). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-IvorySQL databases. Any error during restoring will cause only rows that are part of the problematic `INSERT` to be lost, rather than the entire table contents. Note that the restore might fail altogether if you have rearranged column order. The `--column-inserts` option is safe against column order changes, though even slower. --load-via-partition-root When dumping data for a table partition, make the `COPY` or `INSERT` statements target the root of the partitioning hierarchy that contains it, rather than the partition itself. This causes the appropriate partition to be re-determined for each row when the data is loaded. This may be useful when restoring data on a server where rows do not always fall into the same partitions as they did on the original server. That could happen, for example, if the partitioning column is of type text and the two systems have different definitions of the collation used to sort the partitioning column.It is best not to use parallelism when restoring from an archive made with this option, because pg_restore will not know exactly which partition(s) a given archive data item will load data into. This could result in inefficiency due to lock conflicts between parallel jobs, or perhaps even restore failures due to foreign key constraints being set up before all the relevant data is loaded. --lock-wait-timeout=`timeout` Do not wait forever to acquire shared table locks at the beginning of the dump. Instead fail if unable to lock a table within the specified *`timeout`*. The timeout may be specified in any of the formats accepted by `SET statement_timeout` --no-comments Do not dump comments. --no-publications Do not dump publications. --no-security-labels Do not dump security labels. --no-subscriptions Do not dump subscriptions. --no-sync By default, `pg_dump` will wait for all files to be written safely to disk. This option causes `pg_dump` to return without waiting, which is faster, but means that a subsequent operating system crash can leave the dump corrupt. Generally, this option is useful for testing but should not be used when dumping data from production installation. --no-tablespaces Do not output commands to select tablespaces. With this option, all objects will be created in whichever tablespace is the default during restore.This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call `pg_restore`. --no-toast-compression Do not output commands to set TOAST compression methods. With this option, all columns will be restored with the default compression setting. --no-unlogged-table-data Do not dump the contents of unlogged tables and sequences. This option has no effect on whether or not the table and sequence definitions (schema) are dumped; it only suppresses dumping the table and sequence data. Data in unlogged tables and sequences is always excluded when dumping from a standby server. --on-conflict-do-nothing Add `ON CONFLICT DO NOTHING` to `INSERT` commands. This option is not valid unless `--inserts`, `--column-inserts` or `--rows-per-insert` is also specified. --quote-all-identifiers Force quoting of all identifiers. This option is recommended when dumping a database from a server whose IvorySQL major version is different from pg_dump's, or when the output is intended to be loaded into a server of a different major version. By default, pg_dump quotes only identifiers that are reserved words in its own major version. This sometimes results in compatibility issues when dealing with servers of other versions that may have slightly different sets of reserved words. Using `--quote-all-identifiers` prevents such issues, at the price of a harder-to-read dump script. --rows-per-insert=`nrows` Dump data as `INSERT` commands (rather than `COPY`). Controls the maximum number of rows per `INSERT` command. The value specified must be a number greater than zero. Any error during restoring will cause only rows that are part of the problematic `INSERT` to be lost, rather than the entire table contents. --section=`sectionname` Only dump the named section. The section name can be `pre-data`, `data`, or `post-data`. This option can be specified more than once to select multiple sections. The default is to dump all sections.The data section contains actual table data, large-object contents, and sequence values. Post-data items include definitions of indexes, triggers, rules, and constraints other than validated check constraints. Pre-data items include all other data definition items. --serializable-deferrable Use a `serializable` transaction for the dump, to ensure that the snapshot used is consistent with later database states; but do this by waiting for a point in the transaction stream at which no anomalies can be present, so that there isn't a risk of the dump failing or causing other transactions to roll back with a `serialization_failure`.This option is not beneficial for a dump which is intended only for disaster recovery. It could be useful for a dump used to load a copy of the database for reporting or other read-only load sharing while the original database continues to be updated. Without it the dump may reflect a state which is not consistent with any serial execution of the transactions eventually committed. For example, if batch processing techniques are used, a batch may show as closed in the dump without all of the items which are in the batch appearing.This option will make no difference if there are no read-write transactions active when pg_dump is started. If read-write transactions are active, the start of the dump may be delayed for an indeterminate length of time. Once running, performance with or without the switch is the same. --snapshot=`snapshotname` Use the specified synchronized snapshot when making a dump of the database.This option is useful when needing to synchronize the dump with a logical replication slot or with a concurrent session.In the case of a parallel dump, the snapshot name defined by this option is used rather than taking a new snapshot. --strict-names Require that each extension (`-e`/`--extension`), schema (`-n`/`--schema`) and table (`-t`/`--table`) qualifier match at least one extension/schema/table in the database to be dumped. Note that if none of the extension/schema/table qualifiers find matches, pg_dump will generate an error even without `--strict-names`.This option has no effect on `-N`/`--exclude-schema`, `-T`/`--exclude-table`, or `--exclude-table-data`. An exclude pattern failing to match any objects is not considered an error. --use-set-session-authorization Output SQL-standard `SET SESSION AUTHORIZATION` commands instead of `ALTER OWNER` commands to determine object ownership. This makes the dump more standards-compatible, but depending on the history of the objects in the dump, might not restore properly. Also, a dump using `SET SESSION AUTHORIZATION` will certainly require superuser privileges to restore correctly, whereas `ALTER OWNER` requires lesser privileges. -? --help Show help about pg_dump command line arguments, and exit. The following command-line options control the database connection parameters. -d `dbname` --dbname=`dbname` Specifies the name of the database to connect to. This is equivalent to specifying *`dbname`* as the first non-option argument on the command line. The *`dbname`* can be a http://www.postgresql.org/docs/17/libpq-connect.html#LIBPQ-CONNSTRING[connection string]. If so, connection string parameters will override any conflicting command line options. -h `host` --host=`host` Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the `PGHOST` environment variable, if set, else a Unix domain socket connection is attempted. -p `port` --port=`port` Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the `PGPORT` environment variable, if set, or a compiled-in default. -U `username` --username=`username` User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a `.pgpass` file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_dump to prompt for a password before connecting to a database.This option is never essential, since pg_dump will automatically prompt for a password if the server demands password authentication. However, pg_dump will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing `-W` to avoid the extra connection attempt. --role=`rolename` Specifies a role name to be used to create the dump. This option causes pg_dump to issue a `SET ROLE` *`rolename`* command after connecting to the database. It is useful when the authenticated user (specified by `-U`) lacks privileges needed by pg_dump, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows dumps to be made without violating the policy. PGDATABASE PGHOST PGOPTIONS PGPORT PGUSER Default connection parameters. PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are `always`, `auto` and `never`. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq. pg_dump internally executes SELECT statements. If you have problems running pg_dump, make sure you are able to select information from the database using, for example, psql. Also, any default connection settings and environment variables used by the libpq front-end library will apply. The database activity of pg_dump is normally collected by the cumulative statistics system. If this is undesirable, you can set parameter track_counts to false via PGOPTIONS or the ALTER USER command. If your database cluster has any local additions to the template1 database, be careful to restore the output of pg_dump into a truly empty database; otherwise you are likely to get errors due to duplicate definitions of the added objects. To make an empty database without any local additions, copy from template0 not template1, for example: CREATE DATABASE foo WITH TEMPLATE template0; When a data-only dump is chosen and the option --disable-triggers is used, pg_dump emits commands to disable triggers on user tables before inserting the data, and then commands to re-enable them after the data has been inserted. If the restore is stopped in the middle, the system catalogs might be left in the wrong state. The dump file produced by pg_dump does not contain the statistics used by the optimizer to make query planning decisions. Therefore, it is wise to run ANALYZE after restoring from a dump file to ensure optimal performance. When dumping logical replication subscriptions, pg_dump will generate CREATE SUBSCRIPTION commands that use the connect = false option, so that restoring the subscription does not make remote connections for creating a replication slot or for initial table copy. That way, the dump can be restored without requiring network access to the remote servers. It is then up to the user to reactivate the subscriptions in a suitable way. If the involved hosts have changed, the connection information might have to be changed. It might also be appropriate to truncate the target tables before initiating a new full table copy. If users intend to copy initial data during refresh they must create the slot with two_phase = false. After the initial sync, the two_phase option will be automatically enabled by the subscriber if the subscription had been originally created with two_phase = true option. To dump a database called mydb into an SQL-script file: $ pg_dump mydb > db.sql To reload such a script into a (freshly created) database named newdb: $ psql -d newdb -f db.sql To dump a database into a custom-format archive file: $ pg_dump -Fc mydb > db.dump To dump a database into a directory-format archive: $ pg_dump -Fd mydb -f dumpdir To dump a database into a directory-format archive in parallel with 5 worker jobs: $ pg_dump -Fd mydb -j 5 -f dumpdir To reload an archive file into a (freshly created) database named newdb: $ pg_restore -d newdb db.dump To reload an archive file into the same database it was dumped from, discarding the current contents of that database: $ pg_restore -d postgres --clean --create db.dump To dump a single table named mytab: $ pg_dump -t mytab mydb > db.sql To dump all tables whose names start with emp in the detroit schema, except for the table named employee_log: $ pg_dump -t 'detroit.emp*' -T detroit.employee_log mydb > db.sql To dump all schemas whose names start with east or west and end in gsm, excluding any schemas whose names contain the word test: $ pg_dump -n 'east*gsm' -n 'west*gsm' -N '*test*' mydb > db.sql The same, using regular expression notation to consolidate the switches: $ pg_dump -n '(east|west)*gsm' -N '*test*' mydb > db.sql To dump all database objects except for tables whose names begin with ts_: $ pg_dump -T 'ts_*' mydb > db.sql To specify an upper-case or mixed-case name in -t and related switches, you need to double-quote the name; else it will be folded to lower case.But double quotes are special to the shell, so in turn they must be quoted. Thus, to dump a single table with a mixed-case name, you need something like $ pg_dump -t \"\\\"MixedCaseName\\\"\" mydb > mytab.sql pg_dumpall — extract a IvorySQL database cluster into a script file pg_dumpall [connection-option…​] [option…​] The following command-line options control the content and format of the output. -a --data-only Dump only the data, not the schema (data definitions). -c --clean Include SQL commands to clean (drop) databases before recreating them. DROP commands for roles and tablespaces are added as well. -E encoding --encoding=encoding Create the dump in the specified character set encoding. By default, the dump is created in the database encoding. (Another way to get the same result is to set the PGCLIENTENCODING environment variable to the desired dump encoding.) -f filename --file=filename Send output to the specified file. If this is omitted, the standard output is used. -g --globals-only Dump only global objects (roles and tablespaces), no databases. -O --no-owner Do not output commands to set ownership of objects to match the original database. By default, pg_dumpall issues ALTER OWNER or SET SESSION AUTHORIZATION statements to set ownership of created schema elements. These statements will fail when the script is run unless it is started by a superuser (or the same user that owns all of the objects in the script). To make a script that can be restored by any user, but will give that user ownership of all the objects, specify -O. -r --roles-only Dump only roles, no databases or tablespaces. -s --schema-only Dump only the object definitions (schema), not data. -S username --superuser=username Specify the superuser user name to use when disabling triggers. This is relevant only if --disable-triggers is used. (Usually, it’s better to leave this out, and instead start the resulting script as superuser.) -t --tablespaces-only Dump only tablespaces, no databases or roles. -v --verbose Specifies verbose mode. This will cause pg_dumpall to output start/stop times to the dump file, and progress messages to standard error. Repeating the option causes additional debug-level messages to appear on standard error. The option is also passed down to pg_dump. -V --version Print the pg_dumpall version and exit. -x --no-privileges --no-acl Prevent dumping of access privileges (grant/revoke commands). --binary-upgrade This option is for use by in-place upgrade utilities. Its use for other purposes is not recommended or supported. The behavior of the option may change in future releases without notice. --column-inserts --attribute-inserts Dump data as INSERT commands with explicit column names (INSERT INTO table (column, …​) VALUES …​). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-IvorySQL databases. --disable-dollar-quoting This option disables the use of dollar quoting for function bodies, and forces them to be quoted using SQL standard string syntax. --disable-triggers This option is relevant only when creating a data-only dump. It instructs pg_dumpall to include commands to temporarily disable triggers on the target tables while the data is restored. Use this if you have referential integrity checks or other triggers on the tables that you do not want to invoke during data restore.Presently, the commands emitted for --disable-triggers must be done as superuser. So, you should also specify a superuser name with -S, or preferably be careful to start the resulting script as a superuser. --exclude-database=`pattern` Do not dump databases whose name matches pattern. Multiple patterns can be excluded by writing multiple --exclude-database switches. The pattern parameter is interpreted as a pattern according to the same rules used by psql’s \\d commands, so multiple databases can also be excluded by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent shell wildcard expansion. --extra-float-digits=`ndigits` Use the specified value of extra_float_digits when dumping floating-point data, instead of the maximum available precision. Routine dumps made for backup purposes should not use this option. --if-exists Use conditional commands (i.e., add an IF EXISTS clause) to drop databases and other objects. This option is not valid unless --clean is also specified. --inserts Dump data as INSERT commands (rather than COPY). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-IvorySQL databases. Note that the restore might fail altogether if you have rearranged column order. The --column-inserts option is safer, though even slower. --load-via-partition-root When dumping data for a table partition, make the COPY or INSERT statements target the root of the partitioning hierarchy that contains it, rather than the partition itself. This causes the appropriate partition to be re-determined for each row when the data is loaded. This may be useful when restoring data on a server where rows do not always fall into the same partitions as they did on the original server. That could happen, for example, if the partitioning column is of type text and the two systems have different definitions of the collation used to sort the partitioning column. --lock-wait-timeout=`timeout` Do not wait forever to acquire shared table locks at the beginning of the dump. Instead, fail if unable to lock a table within the specified timeout. The timeout may be specified in any of the formats accepted by SET statement_timeout. --no-comments Do not dump comments. --no-publications Do not dump publications. --no-role-passwords Do not dump passwords for roles. When restored, roles will have a null password, and password authentication will always fail until the password is set. Since password values aren’t needed when this option is specified, the role information is read from the catalog view pg_roles instead of pg_authid. Therefore, this option also helps if access to pg_authid is restricted by some security policy. --no-security-labels Do not dump security labels. --no-subscriptions Do not dump subscriptions. --no-sync By default, pg_dumpall will wait for all files to be written safely to disk. This option causes pg_dumpall to return without waiting, which is faster, but means that a subsequent operating system crash can leave the dump corrupt. Generally, this option is useful for testing but should not be used when dumping data from production installation. --no-table-access-method Do not output commands to select table access methods. With this option, all objects will be created with whichever table access method is the default during restore. --no-tablespaces Do not output commands to create tablespaces nor select tablespaces for objects. With this option, all objects will be created in whichever tablespace is the default during restore. --no-toast-compression Do not output commands to set TOAST compression methods. With this option, all columns will be restored with the default compression setting. --no-unlogged-table-data Do not dump the contents of unlogged tables. This option has no effect on whether or not the table definitions (schema) are dumped; it only suppresses dumping the table data. --on-conflict-do-nothing Add ON CONFLICT DO NOTHING to INSERT commands. This option is not valid unless --inserts or --column-inserts is also specified. --quote-all-identifiers Force quoting of all identifiers. This option is recommended when dumping a database from a server whose IvorySQL major version is different from pg_dumpall’s, or when the output is intended to be loaded into a server of a different major version. By default, pg_dumpall quotes only identifiers that are reserved words in its own major version. This sometimes results in compatibility issues when dealing with servers of other versions that may have slightly different sets of reserved words. Using --quote-all-identifiers prevents such issues, at the price of a harder-to-read dump script. --rows-per-insert=`nrows` Dump data as INSERT commands (rather than COPY). Controls the maximum number of rows per INSERT command. The value specified must be a number greater than zero. Any error during restoring will cause only rows that are part of the problematic INSERT to be lost, rather than the entire table contents. --use-set-session-authorization Output SQL-standard SET SESSION AUTHORIZATION commands instead of ALTER OWNER commands to determine object ownership. This makes the dump more standards compatible, but depending on the history of the objects in the dump, might not restore properly. -? --help Show help about pg_dumpall command line arguments, and exit. The following command-line options control the database connection parameters. -d connstr --dbname=connstr Specifies parameters used to connect to the server, as a connection string; these will override any conflicting command line options.The option is called --dbname for consistency with other client applications, but because pg_dumpall needs to connect to many databases, the database name in the connection string will be ignored. Use the -l option to specify the name of the database used for the initial connection, which will dump global objects and discover what other databases should be dumped. -h host --host=host Specifies the host name of the machine on which the database server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the PGHOST environment variable, if set, else a Unix domain socket connection is attempted. -l dbname --database=dbname Specifies the name of the database to connect to for dumping global objects and discovering what other databases should be dumped. If not specified, the postgres database will be used, and if that does not exist, template1 will be used. -p `port` --port=`port` Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the PGPORT environment variable, if set, or a compiled-in default. -U username --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_dumpall to prompt for a password before connecting to a database.This option is never essential, since pg_dumpall will automatically prompt for a password if the server demands password authentication. However, pg_dumpall will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt.Note that the password prompt will occur again for each database to be dumped. Usually, it’s better to set up a ~/.pgpass file than to rely on manual password entry. --role=`rolename` Specifies a role name to be used to create the dump. This option causes pg_dumpall to issue a SET ROLE rolename command after connecting to the database. It is useful when the authenticated user (specified by -U) lacks privileges needed by pg_dumpall, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows dumps to be made without violating the policy. PGHOST PGOPTIONS PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq Since pg_dumpall calls pg_dump internally, some diagnostic messages will refer to pg_dump. The --clean option can be useful even when your intention is to restore the dump script into a fresh cluster. Use of --clean authorizes the script to drop and re-create the built-in postgres and template1 databases, ensuring that those databases will retain the same properties (for instance, locale and encoding) that they had in the source cluster. Without the option, those databases will retain their existing database-level properties, as well as any pre-existing contents. Once restored, it is wise to run ANALYZE on each database so the optimizer has useful statistics. You can also run vacuumdb -a -z to analyze all databases. The dump script should not be expected to run completely without errors. In particular, because the script will issue CREATE ROLE for every role existing in the source cluster, it is certain to get a “role already exists” error for the bootstrap superuser, unless the destination cluster was initialized with a different bootstrap superuser name. This error is harmless and should be ignored. Use of the --clean option is likely to produce additional harmless error messages about non-existent objects, although you can minimize those by adding --if-exists. pg_dumpall requires all needed tablespace directories to exist before the restore; otherwise, database creation will fail for databases in non-default locations. To dump all databases: $ pg_dumpall > db.out To restore database(s) from this file, you can use: $ psql -f db.out postgres It is not important to which database you connect here since the script file created by pg_dumpall will contain the appropriate commands to create and connect to the saved databases. An exception is that if you specified --clean, you must connect to the postgres database initially; the script will attempt to drop other databases immediately, and that will fail for the database you are connected to. pg_isready — check the connection status of a IvorySQL server pg_isready [connection-option…​] [option…​] -d dbname --dbname=dbname Specifies the name of the database to connect to. The dbname can be a connection string. If so, connection string parameters will override any conflicting command line options. -h hostname --host=hostname Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix-domain socket. -p port --port=port Specifies the TCP port or the local Unix-domain socket file extension on which the server is listening for connections. Defaults to the value of the PGPORT environment variable or, if not set, to the port specified at compile time, usually 5432. -q --quiet Do not display status message. This is useful when scripting. -t seconds --timeout=seconds The maximum number of seconds to wait when attempting connection before returning that the server is not responding. Setting to 0 disables. The default is 3 seconds. -U username --username=username Connect to the database as the user username instead of the default. -V --version Print the pg_isready version and exit. -? --help Show help about pg_isready command line arguments, and exit. pg_isready returns 0 to the shell if the server is accepting connections normally, 1 if the server is rejecting connections (for example during startup), 2 if there was no response to the connection attempt, and 3 if no attempt was made (for example due to invalid parameters). pg_isready, like most other IvorySQL utilities, also uses the environment variables supported by libpq . The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. It is not necessary to supply correct user name, password, or database name values to obtain the server status; however, if incorrect values are provided, the server will log a failed connection attempt. Standard Usage: $ pg_isready /tmp:5432 - accepting connections $ echo $? 0 Running with connection parameters to a IvorySQL cluster in startup: $ pg_isready -h localhost -p 5433 localhost:5433 - rejecting connections $ echo $? 1 Running with connection parameters to a non-responsive IvorySQL cluster: $ pg_isready -h someremotehost someremotehost:5432 - no response $ echo $? 2 pg_receivewal — stream write-ahead logs from a IvorySQL server pg_receivewal [option…​] -D directory --directory=directory Directory to write the output to.This parameter is required. -E lsn --endpos=lsn Automatically stop replication and exit with normal exit status 0 when receiving reaches the specified LSN.If there is a record with LSN exactly equal to lsn, the record will be processed. --if-not-exists Do not error out when --create-slot is specified and a slot with the specified name already exists. -n --no-loop Don’t loop on connection errors. Instead, exit right away with an error. --no-sync This option causes pg_receivewal to not force WAL data to be flushed to disk. This is faster, but means that a subsequent operating system crash can leave the WAL segments corrupt. Generally, this option is useful for testing but should not be used when doing WAL archiving on a production deployment.This option is incompatible with --synchronous. -s interval --status-interval=interval Specifies the number of seconds between status packets sent back to the server. This allows for easier monitoring of the progress from server. A value of zero disables the periodic status updates completely, although an update will still be sent when requested by the server, to avoid timeout disconnect. The default value is 10 seconds. -S slotname --slot=slotname Require pg_receivewal to use an existing replication slot, When this option is used, pg_receivewal will report a flush position to the server, indicating when each segment has been synchronized to disk so that the server can remove that segment if it is not otherwise needed.When the replication client of pg_receivewal is configured on the server as a synchronous standby, then using a replication slot will report the flush position to the server, but only when a WAL file is closed. Therefore, that configuration will cause transactions on the primary to wait for a long time and effectively not work satisfactorily. The option --synchronous (see below) must be specified in addition to make this work correctly. --synchronous Flush the WAL data to disk immediately after it has been received. Also send a status packet back to the server immediately after flushing, regardless of --status-interval.This option should be specified if the replication client of pg_receivewal is configured on the server as a synchronous standby, to ensure that timely feedback is sent to the server. -v --verbose Enables verbose mode. -Z level -Z method[:*detail*] --compress=level --compress=method[:*detail*] Enables compression of write-ahead logs.The compression method can be set to gzip, lz4 (if IvorySQL was compiled with --with-lz4) or none for no compression. A compression detail string can optionally be specified. If the detail string is an integer, it specifies the compression level. Otherwise, it should be a comma-separated list of items, each of the form keyword or keyword=value. Currently, the only supported keyword is level.If no compression level is specified, the default compression level will be used. If only a level is specified without mentioning an algorithm, gzip compression will be used if the level is greater than 0, and no compression will be used if the level is 0.The suffix .gz will automatically be added to all filenames when using gzip, and the suffix .lz4 is added when using lz4. The following command-line options control the database connection parameters. -d connstr --dbname=connstr Specifies parameters used to connect to the server, as a connection string; these will override any conflicting command line options.The option is called --dbname for consistency with other client applications, but because pg_receivewal doesn’t connect to any particular database in the cluster, database name in the connection string will be ignored. -h `host` --host=`host` Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the PGHOST environment variable, if set, else a Unix domain socket connection is attempted. -p `port` --port=`port` Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the PGPORT environment variable, if set, or a compiled-in default. -U `username` --username=`username` User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_receivewal to prompt for a password before connecting to a database.This option is never essential, since pg_receivewal will automatically prompt for a password if the server demands password authentication. However, pg_receivewal will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. pg_receivewal can perform one of the two following actions in order to control physical replication slots: --create-slot Create a new physical replication slot with the name specified in --slot, then exit. --drop-slot Drop the replication slot with the name specified in --slot, then exit. Other options are also available: -V --version Print the pg_receivewal version and exit. -? --help Show help about pg_receivewal command line arguments, and exit. pg_receivewal will exit with status 0 when terminated by the SIGINT signal. (That is the normal way to end it. Hence it is not an error.) For fatal errors or other signals, the exit status will be nonzero. This utility, like most other IvorySQL utilities, uses the environment variables supported by libpq The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. When using pg_receivewal instead of archive_command as the main WAL backup method, it is strongly recommended to use replication slots. Otherwise, the server is free to recycle or remove write-ahead log files before they are backed up, because it does not have any information, either from archive_command or the replication slots, about how far the WAL stream has been archived. Note, however, that a replication slot will fill up the server’s disk space if the receiver does not keep up with fetching the WAL data. pg_receivewal will preserve group permissions on the received WAL files if group permissions are enabled on the source cluster. To stream the write-ahead log from the server at mydbserver and store it in the local directory /usr/local/pgsql/archive: $ pg_receivewal -h mydbserver -D /usr/local/pgsql/archive pg_recvlogical — control IvorySQL logical decoding streams pg_recvlogical [option…​] At least one of the following options must be specified to select an action: --create-slot Create a new logical replication slot with the name specified by --slot, using the output plugin specified by --plugin, for the database specified by --dbname.The --two-phase can be specified with --create-slot to enable decoding of prepared transactions. --drop-slot Drop the replication slot with the name specified by --slot, then exit. --start Begin streaming changes from the logical replication slot specified by --slot, continuing until terminated by a signal. If the server side change stream ends with a server shutdown or disconnect, retry in a loop unless --no-loop is specified.The stream format is determined by the output plugin specified when the slot was created.The connection must be to the same database used to create the slot. --create-slot and --start can be specified together. --drop-slot cannot be combined with another action. The following command-line options control the location and format of the output and other replication behavior: -E lsn --endpos=lsn In --start mode, automatically stop replication and exit with normal exit status 0 when receiving reaches the specified LSN. If specified when not in --start mode, an error is raised.If there’s a record with LSN exactly equal to lsn, the record will be output.The --endpos option is not aware of transaction boundaries and may truncate output partway through a transaction. Any partially output transaction will not be consumed and will be replayed again when the slot is next read from. Individual messages are never truncated. -f filename --file=filename Write received and decoded transaction data into this file. Use - for stdout. -F interval_seconds --fsync-interval=interval_seconds Specifies how often pg_recvlogical should issue fsync() calls to ensure the output file is safely flushed to disk.The server will occasionally request the client to perform a flush and report the flush position to the server. This setting is in addition to that, to perform flushes more frequently.Specifying an interval of 0 disables issuing fsync() calls altogether, while still reporting progress to the server. In this case, data could be lost in the event of a crash. -I lsn --startpos=lsn In --start mode, start replication from the given LSN. For details on the effect of this. --if-not-exists Do not error out when --create-slot is specified and a slot with the specified name already exists. -n --no-loop When the connection to the server is lost, do not retry in a loop, just exit. -o name[=value] --option=name[=value] Pass the option name to the output plugin with, if specified, the option value value. Which options exist and their effects depends on the used output plugin. -P plugin --plugin=plugin When creating a slot, use the specified logical decoding output plugin. This option has no effect if the slot already exists. -s interval_seconds --status-interval=interval_seconds This option has the same effect as the option of the same name in pg_receivewal. See the description there. -S slot_name --slot=slot_name In --start mode, use the existing logical replication slot named slot_name. In --create-slot mode, create the slot with this name. In --drop-slot mode, delete the slot with this name. -t --two-phase Enables decoding of prepared transactions. This option may only be specified with --create-slot -v --verbose Enables verbose mode. The following command-line options control the database connection parameters. -d dbname --dbname=dbname The database to connect to. See the description of the actions for what this means in detail. The dbname can be a connection string. If so, connection string parameters will override any conflicting command line options. Defaults to the user name. -h hostname-or-ip --host=hostname-or-ip Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the PGHOST environment variable, if set, else a Unix domain socket connection is attempted. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the PGPORT environment variable, if set, or a compiled-in default. -U user --username=user User name to connect as. Defaults to current operating system user name. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_recvlogical to prompt for a password before connecting to a database.This option is never essential, since pg_recvlogical will automatically prompt for a password if the server demands password authentication. However, pg_recvlogical will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. The following additional options are available: -V --version Print the pg_recvlogical version and exit. -? --help Show help about pg_recvlogical command line arguments, and exit. This utility, like most other IvorySQL utilities, uses the environment variables supported by libpq . The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. pg_recvlogical will preserve group permissions on the received WAL files if group permissions are enabled on the source cluster. pg_restore — restore a IvorySQL database from an archive file created by pg_dump pg_restore [connection-option…​] [option…​] [filename] pg_restore accepts the following command line arguments. filename Specifies the location of the archive file (or directory, for a directory-format archive) to be restored. If not specified, the standard input is used. -a --data-only Restore only the data, not the schema (data definitions). Table data, large objects, and sequence values are restored, if present in the archive.This option is similar to, but for historical reasons not identical to, specifying --section=data. -c --clean Clean (drop) database objects before recreating them. (Unless --if-exists is used, this might generate some harmless error messages, if any objects were not present in the destination database.) -C --create Create the database before restoring into it. If --clean is also specified, drop and recreate the target database before connecting to it.With --create, pg_restore also restores the database’s comment if any, and any configuration variable settings that are specific to this database, that is, any ALTER DATABASE …​ SET …​ and ALTER ROLE …​ IN DATABASE …​ SET …​ commands that mention this database. Access privileges for the database itself are also restored, unless --no-acl is specified.When this option is used, the database named with -d is used only to issue the initial DROP DATABASE and CREATE DATABASE commands. All data is restored into the database name that appears in the archive. -d dbname --dbname=dbname Connect to database dbname and restore directly into the database. The dbname can be a connection string. If so, connection string parameters will override any conflicting command line options. -e --exit-on-error Exit if an error is encountered while sending SQL commands to the database. The default is to continue and to display a count of errors at the end of the restoration. -f `filename` --file=`filename` Specify output file for generated script, or for the listing when used with -l. Use - for stdout. -F format --format=format Specify format of the archive. It is not necessary to specify the format, since pg_restore will determine the format automatically. If specified, it can be one of the following:`c` custom`The archive is in the custom format of pg_dump.`d directory`The archive is a directory archive.`t tar`The archive is a `tar archive. -I index --index=index Restore definition of named index only. Multiple indexes may be specified with multiple -I switches. -j number-of-jobs --jobs=number-of-jobs Run the most time-consuming steps of pg_restore — those that load data, create indexes, or create constraints — concurrently, using up to number-of-jobs concurrent sessions. This option can dramatically reduce the time to restore a large database to a server running on a multiprocessor machine. This option is ignored when emitting a script rather than connecting directly to a database server.Each job is one process or one thread, depending on the operating system, and uses a separate connection to the server.The optimal value for this option depends on the hardware setup of the server, of the client, and of the network. Factors include the number of CPU cores and the disk setup. A good place to start is the number of CPU cores on the server, but values larger than that can also lead to faster restore times in many cases. Of course, values that are too high will lead to decreased performance because of thrashing.Only the custom and directory archive formats are supported with this option. The input must be a regular file or directory (not, for example, a pipe or standard input). Also, multiple jobs cannot be used together with the option --single-transaction. -l --list List the table of contents of the archive. The output of this operation can be used as input to the -L option. Note that if filtering switches such as -n or -t are used with -l, they will restrict the items listed. -L list-file --use-list=list-file Restore only those archive elements that are listed in list-file, and restore them in the order they appear in the file. Note that if filtering switches such as -n or -t are used with -L, they will further restrict the items restored.list-file is normally created by editing the output of a previous -l operation. Lines can be moved or removed, and can also be commented out by placing a semicolon (;) at the start of the line. See below for examples. -n schema --schema=schema Restore only objects that are in the named schema. Multiple schemas may be specified with multiple -n switches. This can be combined with the -t option to restore just a specific table. -N schema --exclude-schema=schema Do not restore objects that are in the named schema. Multiple schemas to be excluded may be specified with multiple -N switches.When both -n and -N are given for the same schema name, the -N switch wins and the schema is excluded. -O --no-owner Do not output commands to set ownership of objects to match the original database. By default, pg_restore issues ALTER OWNER or SET SESSION AUTHORIZATION statements to set ownership of created schema elements. These statements will fail unless the initial connection to the database is made by a superuser (or the same user that owns all of the objects in the script). With -O, any user name can be used for the initial connection, and this user will own all the created objects. -P function-name(argtype [, …​]) --function=function-name(argtype [, …​]) Restore the named function only. Be careful to spell the function name and arguments exactly as they appear in the dump file’s table of contents. Multiple functions may be specified with multiple -P switches. -R --no-reconnect This option is obsolete but still accepted for backwards compatibility. -s --schema-only Restore only the schema (data definitions), not data, to the extent that schema entries are present in the archive.This option is the inverse of --data-only. It is similar to, but for historical reasons not identical to, specifying --section=pre-data --section=post-data.(Do not confuse this with the --schema option, which uses the word “schema” in a different meaning.) -S username --superuser=username Specify the superuser user name to use when disabling triggers. This is relevant only if --disable-triggers is used. -t table --table=table Restore definition and/or data of only the named table. For this purpose, “table” includes views, materialized views, sequences, and foreign tables. Multiple tables can be selected by writing multiple -t switches. This option can be combined with the -n option to specify table(s) in a particular schema.NoteWhen -t is specified, pg_restore makes no attempt to restore any other database objects that the selected table(s) might depend upon. Therefore, there is no guarantee that a specific-table restore into a clean database will succeed.NoteThis flag does not behave identically to the -t flag of pg_dump. There is not currently any provision for wild-card matching in pg_restore, nor can you include a schema name within its -t. And, while pg_dump’s -t flag will also dump subsidiary objects (such as indexes) of the selected table(s), pg_restore’s -t flag does not include such subsidiary objects. -T trigger --trigger=trigger Restore named trigger only. Multiple triggers may be specified with multiple -T switches. -v --verbose Specifies verbose mode. This will cause pg_restore to output detailed object comments and start/stop times to the output file, and progress messages to standard error. Repeating the option causes additional debug-level messages to appear on standard error. -V --version Print the pg_restore version and exit. -x --no-privileges --no-acl Prevent restoration of access privileges (grant/revoke commands). -1 --single-transaction Execute the restore as a single transaction (that is, wrap the emitted commands in BEGIN / COMMIT). This ensures that either all the commands complete successfully, or no changes are applied. This option implies --exit-on-error. --disable-triggers This option is relevant only when performing a data-only restore. It instructs pg_restore to execute commands to temporarily disable triggers on the target tables while the data is restored. Use this if you have referential integrity checks or other triggers on the tables that you do not want to invoke during data restore.Presently, the commands emitted for --disable-triggers must be done as superuser. So you should also specify a superuser name with -S or, preferably, run pg_restore as a IvorySQL superuser. --enable-row-security This option is relevant only when restoring the contents of a table which has row security. By default, pg_restore will set row_security to off, to ensure that all data is restored in to the table. If the user does not have sufficient privileges to bypass row security, then an error is thrown. This parameter instructs pg_restore to set row_security to on instead, allowing the user to attempt to restore the contents of the table with row security enabled. This might still fail if the user does not have the right to insert the rows from the dump into the table.Note that this option currently also requires the dump be in INSERT format, as COPY FROM does not support row security. --if-exists Use conditional commands (i.e., add an IF EXISTS clause) to drop database objects. This option is not valid unless --clean is also specified. --no-comments Do not output commands to restore comments, even if the archive contains them. --no-data-for-failed-tables By default, table data is restored even if the creation command for the table failed (e.g., because it already exists). With this option, data for such a table is skipped. This behavior is useful if the target database already contains the desired table contents. For example, auxiliary tables for IvorySQL extensions such as PostGIS might already be loaded in the target database; specifying this option prevents duplicate or obsolete data from being loaded into them.This option is effective only when restoring directly into a database, not when producing SQL script output. --no-publications Do not output commands to restore publications, even if the archive contains them. --no-security-labels Do not output commands to restore security labels, even if the archive contains them. --no-subscriptions Do not output commands to restore subscriptions, even if the archive contains them. --no-table-access-method Do not output commands to select table access methods. With this option, all objects will be created with whichever access method is the default during restore. --no-tablespaces Do not output commands to select tablespaces. With this option, all objects will be created in whichever tablespace is the default during restore. --section=`sectionname` Only restore the named section. The section name can be pre-data, data, or post-data. This option can be specified more than once to select multiple sections. The default is to restore all sections.The data section contains actual table data as well as large-object definitions. Post-data items consist of definitions of indexes, triggers, rules and constraints other than validated check constraints. Pre-data items consist of all other data definition items. --strict-names Require that each schema (-n/--schema) and table (-t/--table) qualifier match at least one schema/table in the backup file. --use-set-session-authorization Output SQL-standard SET SESSION AUTHORIZATION commands instead of ALTER OWNER commands to determine object ownership. This makes the dump more standards-compatible, but depending on the history of the objects in the dump, might not restore properly. -? --help Show help about pg_restore command line arguments, and exit. pg_restore also accepts the following command line arguments for connection parameters: -h host --host=host Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the PGHOST environment variable, if set, else a Unix domain socket connection is attempted. -p port --port=port Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the PGPORT environment variable, if set, or a compiled-in default. -U username --username=username User name to connect as. -w --no-password Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password. -W --password Force pg_restore to prompt for a password before connecting to a database.This option is never essential, since pg_restore will automatically prompt for a password if the server demands password authentication. However, pg_restore will waste a connection attempt finding out that the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt. --role=`rolename` Specifies a role name to be used to perform the restore. This option causes pg_restore to issue a SET ROLE rolename command after connecting to the database. It is useful when the authenticated user (specified by -U) lacks privileges needed by pg_restore, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows restores to be performed without violating the policy. PGHOST PGOPTIONS PGPORT PGUSER Default connection parameters PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This utility, like most other IvorySQL utilities, also uses the environment variables supported by libpq. However, it does not read PGDATABASE when a database name is not supplied. When a direct database connection is specified using the -d option, pg_restore internally executes SQL statements. If you have problems running pg_restore, make sure you are able to select information from the database using, for example, psql. Also, any default connection settings and environment variables used by the libpq front-end library will apply. If your installation has any local additions to the template1 database, be careful to load the output of pg_restore into a truly empty database; otherwise you are likely to get errors due to duplicate definitions of the added objects. To make an empty database without any local additions, copy from template0 not template1, for example: CREATE DATABASE foo WITH TEMPLATE template0; The limitations of pg_restore are detailed below. When restoring data to a pre-existing table and the option --disable-triggers is used, pg_restore emits commands to disable triggers on user tables before inserting the data, then emits commands to re-enable them after the data has been inserted. If the restore is stopped in the middle, the system catalogs might be left in the wrong state. pg_restore cannot restore large objects selectively; for instance, only those for a specific table. If an archive contains large objects, then all large objects will be restored, or none of them if they are excluded via -L, -t, or other options. Assume we have dumped a database called mydb into a custom-format dump file: $ pg_dump -Fc mydb > db.dump To drop the database and recreate it from the dump: $ dropdb mydb $ pg_restore -C -d postgres db.dump The database named in the -d switch can be any database existing in the cluster; pg_restore only uses it to issue the CREATE DATABASE command for mydb. With -C, data is always restored into the database name that appears in the dump file. To restore the dump into a new database called newdb: $ createdb -T template0 newdb $ pg_restore -d newdb db.dump Notice we don’t use -C, and instead connect directly to the database to be restored into. Also note that we clone the new database from template0 not template1, to ensure it is initially empty. To reorder database items, it is first necessary to dump the table of contents of the archive: $ pg_restore -l db.dump > db.list The listing file consists of a header and one line for each item, e.g.: ; ; Archive created at Mon Sep 14 13:55:39 2009 ; dbname: DBDEMOS ; TOC Entries: 81 ; Compression: 9 ; Dump Version: 1.10-0 ; Format: CUSTOM ; Integer: 4 bytes ; Offset: 8 bytes ; Dumped from database version: 8.3.5 ; Dumped by pg_dump version: 8.3.8 ; ; ; Selected TOC Entries: ; 3; 2615 2200 SCHEMA - public pasha 1861; 0 0 COMMENT - SCHEMA public pasha 1862; 0 0 ACL - public pasha 317; 1247 17715 TYPE public composite pasha 319; 1247 25899 DOMAIN public domain0 pasha Semicolons start a comment, and the numbers at the start of lines refer to the internal archive ID assigned to each item. Lines in the file can be commented out, deleted, and reordered. For example: 10; 145433 TABLE map_resolutions postgres ;2; 145344 TABLE species postgres ;4; 145359 TABLE nt_header postgres 6; 145402 TABLE species_records postgres ;8; 145416 TABLE ss_old postgres could be used as input to pg_restore and would only restore items 10 and 6, in that order: $ pg_restore -L db.list db.dump pg_verifybackup — verify the integrity of a base backup of a IvorySQL cluster pg_verifybackup [option…​] pg_verifybackup accepts the following command-line arguments: -e --exit-on-error Exit as soon as a problem with the backup is detected. If this option is not specified, pg_verifybackup will continue checking the backup even after a problem has been detected, and will report all problems detected as errors. -i path --ignore=path Ignore the specified file or directory, which should be expressed as a relative path name, when comparing the list of data files actually present in the backup to those listed in the backup_manifest file. If a directory is specified, this option affects the entire subtree rooted at that location. Complaints about extra files, missing files, file size differences, or checksum mismatches will be suppressed if the relative path name matches the specified path name. This option can be specified multiple times. -m path --manifest-path=path Use the manifest file at the specified path, rather than one located in the root of the backup directory. -n --no-parse-wal Don’t attempt to parse write-ahead log data that will be needed to recover from this backup. -q --quiet Don’t print anything when a backup is successfully verified. -s --skip-checksums Do not verify data file checksums. The presence or absence of files and the sizes of those files will still be checked. This is much faster, because the files themselves do not need to be read. -w path --wal-directory=path Try to parse WAL files stored in the specified directory, rather than in pg_wal. This may be useful if the backup is stored in a separate location from the WAL archive. Other options are also available: -V --version Print the pg_verifybackup version and exit. -? --help Show help about pg_verifybackup command line arguments, and exit. To create a base backup of the server at mydbserver and verify the integrity of the backup: $ pg_basebackup -h mydbserver -D /usr/local/pgsql/data $ pg_verifybackup /usr/local/pgsql/data To create a base backup of the server at mydbserver, move the manifest somewhere outside the backup directory, and verify the backup: $ pg_basebackup -h mydbserver -D /usr/local/pgsql/backup1234 $ mv /usr/local/pgsql/backup1234/backup_manifest /my/secure/location/backup_manifest.1234 $ pg_verifybackup -m /my/secure/location/backup_manifest.1234 /usr/local/pgsql/backup1234 To verify a backup while ignoring a file that was added manually to the backup directory, and also skipping checksum verification: $ pg_basebackup -h mydbserver -D /usr/local/pgsql/data $ edit /usr/local/pgsql/data/note.to.self $ pg_verifybackup --ignore=note.to.self --skip-checksums /usr/local/pgsql/data psql — IvorySQL interactive terminal psql [option…​] [dbname [username]] -a --echo-all Print all nonempty input lines to standard output as they are read. (This does not apply to lines read interactively.) This is equivalent to setting the variable ECHO to all. -A --no-align Switches to unaligned output mode. (The default output mode is aligned.) This is equivalent to \\pset format unaligned. -b --echo-errors Print failed SQL commands to standard error output. This is equivalent to setting the variable ECHO to errors. -c command --command=command Specifies that psql is to execute the given command string, command. This option can be repeated and combined in any order with the -f option. When either -c or -f is specified, psql does not read commands from standard input; instead it terminates after processing all the -c and -f options in sequence.command must be either a command string that is completely parsable by the server (i.e., it contains no psql-specific features), or a single backslash command. Thus you cannot mix SQL and psql meta-commands within a -c option. To achieve that, you could use repeated -c options or pipe the string into psql, for example:`psql -c '\\x' -c 'SELECT * FROM foo;' or`echo '\\x \\\\ SELECT * FROM foo;' | psql `(\\\\` is the separator meta-command.)Each SQL command string passed to -c is sent to the server as a single request. Because of this, the server executes it as a single transaction even if the string contains multiple SQL commands, unless there are explicit BEGIN/COMMIT commands included in the string to divide it into multiple transactions.If having several commands executed in one transaction is not desired, use repeated -c commands or feed multiple commands to psql’s standard input, either using echo as illustrated above, or via a shell here-document, for example:`psql >cleanup.log' where the archive directory is physically located on the standby server, so that the archive_command is accessing it across NFS, but the files are local to the standby. This will: produce debugging output in cleanup.log remove no-longer-needed files from the archive directory pg_checksums — enable, disable or check data checksums in a IvorySQL database cluster pg_checksums [option…​] [[ -D | --pgdata ] datadir] The following command-line options are available: -D directory --pgdata=directory Specifies the directory where the database cluster is stored. -c --check Checks checksums. This is the default mode if nothing else is specified. -d --disable Disables checksums. -e --enable Enables checksums. -f filenode --filenode=filenode Only validate checksums in the relation with filenode filenode. -N --no-sync By default, pg_checksums will wait for all files to be written safely to disk. This option causes pg_checksums to return without waiting, which is faster, but means that a subsequent operating system crash can leave the updated data directory corrupt. Generally, this option is useful for testing but should not be used on a production installation. This option has no effect when using --check. -P --progress Enable progress reporting. Turning this on will deliver a progress report while checking or enabling checksums. -v --verbose Enable verbose output. Lists all checked files. -V --version Print the pg_checksums version and exit. -? --help Show help about pg_checksums command line arguments, and exit. PGDATA Specifies the directory where the database cluster is stored; can be overridden using the -D option. PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. Enabling checksums in a large cluster can potentially take a long time. During this operation, the cluster or other programs that write to the data directory must not be started or else data loss may occur. When using a replication setup with tools which perform direct copies of relation file blocks (for example pg_rewind), enabling or disabling checksums can lead to page corruptions in the shape of incorrect checksums if the operation is not done consistently across all nodes. When enabling or disabling checksums in a replication setup, it is thus recommended to stop all the clusters before switching them all consistently. Destroying all standbys, performing the operation on the primary and finally recreating the standbys from scratch is also safe. If pg_checksums is aborted or killed while enabling or disabling checksums, the cluster’s data checksum configuration remains unchanged, and pg_checksums can be re-run to perform the same operation. pg_controldata — display control information of a IvorySQL database cluster pg_controldata [option] [[ -D | --pgdata ] datadir] PGDATA Default data directory location PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. pg_ctl — initialize, start, stop, or control a IvorySQL server pg_ctl init[db] [-D datadir] [-s] [-o initdb-options] pg_ctl start [-D datadir] [-l filename] [-W] [-t seconds] [-s] [-o options] [-p path] [-c] pg_ctl stop [-D datadir] [-m s[mart] | f[ast] | i[mmediate] ] [-W] [-t seconds] [-s] pg_ctl restart [-D datadir] [-m s[mart] | f[ast] | i[mmediate] ] [-W] [-t seconds] [-s] [-o options] [-c] pg_ctl reload [-D datadir] [-s] pg_ctl status [-D datadir] pg_ctl promote [-D datadir] [-W] [-t seconds] [-s] pg_ctl logrotate [-D datadir] [-s] pg_ctl kill signal_name process_id On Microsoft Windows, also: pg_ctl register [-D datadir] [-N servicename] [-U username] [-P password] [-S a[uto] | d[emand] ] [-e source] [-W] [-t seconds] [-s] [-o options] pg_ctl unregister [-N servicename] -c --core-files Attempt to allow server crashes to produce core files, on platforms where this is possible, by lifting any soft resource limit placed on core files. This is useful in debugging or diagnosing problems by allowing a stack trace to be obtained from a failed server process. -D datadir --pgdata=datadir Specifies the file system location of the database configuration files. If this option is omitted, the environment variable PGDATA is used. -l filename --log=filename Append the server log output to filename. If the file does not exist, it is created. The umask is set to 077, so access to the log file is disallowed to other users by default. -m mode --mode=mode Specifies the shutdown mode. mode can be smart, fast, or immediate, or the first letter of one of these three. If this option is omitted, fast is the default. -o options --options=options Specifies options to be passed directly to the postgres command. -o can be specified multiple times, with all the given options being passed through.The options should usually be surrounded by single or double quotes to ensure that they are passed through as a group. -o initdb-options --options=initdb-options Specifies options to be passed directly to the initdb command. -o can be specified multiple times, with all the given options being passed through.The initdb-options should usually be surrounded by single or double quotes to ensure that they are passed through as a group. -p path Specifies the location of the postgres executable. By default the postgres executable is taken from the same directory as pg_ctl, or failing that, the hard-wired installation directory. It is not necessary to use this option unless you are doing something unusual and get errors that the postgres executable was not found.In init mode, this option analogously specifies the location of the initdb executable. -s --silent Print only errors, no informational messages. -t seconds --timeout=seconds Specifies the maximum number of seconds to wait when waiting for an operation to complete (see option -w). Defaults to the value of the PGCTLTIMEOUT environment variable or, if not set, to 60 seconds. -V --version Print the pg_ctl version and exit. -w --wait Wait for the operation to complete. This is supported for the modes start, stop, restart, promote, and register, and is the default for those modes.When waiting, pg_ctl repeatedly checks the server’s PID file, sleeping for a short amount of time between checks. Startup is considered complete when the PID file indicates that the server is ready to accept connections. Shutdown is considered complete when the server removes the PID file. pg_ctl returns an exit code based on the success of the startup or shutdown.If the operation does not complete within the timeout (see option -t), then pg_ctl exits with a nonzero exit status. But note that the operation might continue in the background and eventually succeed. -W --no-wait Do not wait for the operation to complete. This is the opposite of the option -w.If waiting is disabled, the requested action is triggered, but there is no feedback about its success. In that case, the server log file or an external monitoring system would have to be used to check the progress and success of the operation.In prior releases of IvorySQL, this was the default except for the stop mode. -? --help Show help about pg_ctl command line arguments, and exit. If an option is specified that is valid, but not relevant to the selected operating mode, pg_ctl ignores it. -e source Name of the event source for pg_ctl to use for logging to the event log when running as a Windows service. The default is IvorySQL. Note that this only controls messages sent from pg_ctl itself; once started, the server will use the event source specified by its event_source parameter. Should the server fail very early in startup, before that parameter has been set, it might also log using the default event source name IvorySQL. -N `servicename` Name of the system service to register. This name will be used as both the service name and the display name. The default is IvorySQL. -P `password` Password for the user to run the service as. -S start-type Start type of the system service. start-type can be auto, or demand, or the first letter of one of these two. If this option is omitted, auto is the default. -U username User name for the user to run the service as. For domain users, use the format DOMAIN\\username. PGCTLTIMEOUT Default limit on the number of seconds to wait when waiting for startup or shutdown to complete. If not set, the default is 60 seconds. PGDATA Default data directory location. Most pg_ctl modes require knowing the data directory location; therefore, the -D option is required unless PGDATA is set. pg_ctl, like most other IvorySQL utilities, also uses the environment variables supported by libpq. postmaster.pid pg_ctl examines this file in the data directory to determine whether the server is currently running. postmaster.opts If this file exists in the data directory, pg_ctl (in restart mode) will pass the contents of the file as options to postgres, unless overridden by the -o option. The contents of this file are also displayed in status mode. To start the server, waiting until the server is accepting connections: $ pg_ctl start To start the server using port 5433, and running without fsync, use: $ pg_ctl -o \"-F -p 5433\" start To stop the server, use: $ pg_ctl stop The -m option allows control over how the server shuts down: $ pg_ctl stop -m smart Restarting the server is almost equivalent to stopping the server and starting it again, except that by default, pg_ctl saves and reuses the command line options that were passed to the previously-running instance. To restart the server using the same options as before, use: $ pg_ctl restart But if -o is specified, that replaces any previous options. To restart using port 5433, disabling fsync upon restart: $ pg_ctl -o \"-F -p 5433\" restart Here is sample status output from pg_ctl: $ pg_ctl status pg_ctl: server is running (PID: 13718) /usr/local/pgsql/bin/postgres \"-D\" \"/usr/local/pgsql/data\" \"-p\" \"5433\" \"-B\" \"128\" The second line is the command that would be invoked in restart mode. pg_resetwal — reset the write-ahead log and other control information of a IvorySQL database cluster pg_resetwal [ -f | --force ] [ -n | --dry-run ] [option…​] [ -D | --pgdata ] datadir -f --force Force pg_resetwal to proceed even if it cannot determine valid data for pg_control, as explained above. -n --dry-run The -n / --dry-run option instructs pg_resetwal to print the values reconstructed from pg_control and values about to be changed, and then exit without modifying anything. This is mainly a debugging tool, but can be useful as a sanity check before allowing pg_resetwal to proceed for real. -V --version Display version information, then exit. -? --help Show help, then exit. The following options are only needed when pg_resetwal is unable to determine appropriate values by reading pg_control. Safe values can be determined as described below. For values that take numeric arguments, hexadecimal values can be specified by using the prefix 0x. -c xid,xid --commit-timestamp-ids=xid,xid Manually set the oldest and newest transaction IDs for which the commit time can be retrieved.A safe value for the oldest transaction ID for which the commit time can be retrieved (first part) can be determined by looking for the numerically smallest file name in the directory pg_commit_ts under the data directory. Conversely, a safe value for the newest transaction ID for which the commit time can be retrieved (second part) can be determined by looking for the numerically greatest file name in the same directory. The file names are in hexadecimal. -e xid_epoch --epoch=xid_epoch Manually set the next transaction ID’s epoch.The transaction ID epoch is not actually stored anywhere in the database except in the field that is set by pg_resetwal, so any value will work so far as the database itself is concerned. You might need to adjust this value to ensure that replication systems such as Slony-I and Skytools work correctly — if so, an appropriate value should be obtainable from the state of the downstream replicated database. -l walfile --next-wal-file=walfile Manually set the WAL starting location by specifying the name of the next WAL segment file.The name of next WAL segment file should be larger than any WAL segment file name currently existing in the directory pg_wal under the data directory. These names are also in hexadecimal and have three parts. The first part is the “timeline ID” and should usually be kept the same. For example, if 00000001000000320000004A is the largest entry in pg_wal, use -l 00000001000000320000004B or higher.Note that when using nondefault WAL segment sizes, the numbers in the WAL file names are different from the LSNs that are reported by system functions and system views. This option takes a WAL file name, not an LSN.Note`pg_resetwal` itself looks at the files in pg_wal and chooses a default -l setting beyond the last existing file name. Therefore, manual adjustment of -l should only be needed if you are aware of WAL segment files that are not currently present in pg_wal, such as entries in an offline archive; or if the contents of pg_wal have been lost entirely. -m mxid,mxid --multixact-ids=mxid,mxid Manually set the next and oldest multitransaction ID.A safe value for the next multitransaction ID (first part) can be determined by looking for the numerically largest file name in the directory pg_multixact/offsets under the data directory, adding one, and then multiplying by 65536 (0x10000). Conversely, a safe value for the oldest multitransaction ID (second part of -m) can be determined by looking for the numerically smallest file name in the same directory and multiplying by 65536. The file names are in hexadecimal, so the easiest way to do this is to specify the option value in hexadecimal and append four zeroes. -o oid --next-oid=oid Manually set the next OID.There is no comparably easy way to determine a next OID that’s beyond the largest one in the database, but fortunately it is not critical to get the next-OID setting right. -O mxoff --multixact-offset=mxoff Manually set the next multitransaction offset.A safe value can be determined by looking for the numerically largest file name in the directory pg_multixact/members under the data directory, adding one, and then multiplying by 52352 (0xCC80). The file names are in hexadecimal. There is no simple recipe such as the ones for other options of appending zeroes. --wal-segsize=wal_segment_size Set the new WAL segment size, in megabytes. The value must be set to a power of 2 between 1 and 1024 (megabytes). See the same option of initdb for more information.NoteWhile pg_resetwal will set the WAL starting address beyond the latest existing WAL segment file, some segment size changes can cause previous WAL file names to be reused. It is recommended to use -l together with this option to manually set the WAL starting address if WAL file name overlap will cause problems with your archiving strategy. -u xid --oldest-transaction-id=xid Manually set the oldest unfrozen transaction ID.A safe value can be determined by looking for the numerically smallest file name in the directory pg_xact under the data directory and then multiplying by 1048576 (0x100000). Note that the file names are in hexadecimal. It is usually easiest to specify the option value in hexadecimal too. For example, if 0007 is the smallest entry in pg_xact, -u 0x700000 will work (five trailing zeroes provide the proper multiplier). -x xid --next-transaction-id=xid Manually set the next transaction ID.A safe value can be determined by looking for the numerically largest file name in the directory pg_xact under the data directory, adding one, and then multiplying by 1048576 (0x100000). Note that the file names are in hexadecimal. It is usually easiest to specify the option value in hexadecimal too. For example, if 0011 is the largest entry in pg_xact, -x 0x1200000 will work (five trailing zeroes provide the proper multiplier). PG_COLOR Specifies whether to use color in diagnostic messages. Possible values are always, auto and never. This command must not be used when the server is running. pg_resetwal will refuse to start up if it finds a server lock file in the data directory. If the server crashed then a lock file might have been left behind; in that case you can remove the lock file to allow pg_resetwal to run. But before you do so, make doubly certain that there is no server process still alive. pg_resetwal works only with servers of the same major version. pg_rewind — synchronize a IvorySQL data directory with another data directory that was forked from it pg_rewind [option…​] { -D | --target-pgdata } directory { --source-pgdata=`directory` | --source-server=`connstr` } If pg_rewind fails while processing, then the data folder of the target is likely not in a state that can be recovered. In such a case, taking a new fresh backup is recommended. As pg_rewind copies configuration files entirely from the source, it may be required to correct the configuration used for recovery before restarting the target server, especially if the target is reintroduced as a standby of the source. If you restart the server after the rewind operation has finished but without configuring recovery, the target may again diverge from the primary. pg_rewind will fail immediately if it finds files it cannot write directly to. This can happen for example when the source and the target server use the same file mapping for read-only SSL keys and certificates. If such files are present on the target server it is recommended to remove them before running pg_rewind. After doing the rewind, some of those files may have been copied from the source, in which case it may be necessary to remove the data copied and restore back the set of links used before the rewind. pg_rewind accepts the following command-line arguments: -D directory --target-pgdata=directory This option specifies the target data directory that is synchronized with the source. The target server must be shut down cleanly before running pg_rewind --source-pgdata=directory Specifies the file system path to the data directory of the source server to synchronize the target with. This option requires the source server to be cleanly shut down. --source-server=connstr Specifies a libpq connection string to connect to the source IvorySQL server to synchronize the target with. The connection must be a normal (non-replication) connection with a role having sufficient permissions to execute the functions used by pg_rewind on the source server (see Notes section for details) or a superuser role. This option requires the source server to be running and accepting connections. -R --write-recovery-conf Create standby.signal and append connection settings to IvorySQL.auto.conf in the output directory. --source-server is mandatory with this option. -n --dry-run Do everything except actually modifying the target directory. -N --no-sync By default, pg_rewind will wait for all files to be written safely to disk. This option causes pg_rewind to return without waiting, which is faster, but means that a subsequent operating system crash can leave the data directory corrupt. Generally, this option is useful for testing but should not be used on a production installation. -P --progress Enables progress reporting. Turning this on will deliver an approximate progress report while copying data from the source cluster. -c --restore-target-wal Use restore_command defined in the target cluster configuration to retrieve WAL files from the WAL archive if these files are no longer available in the pg_wal directory. --config-file=filename Use the specified main server configuration file for the target cluster. This affects pg_rewind when it uses internally the postgres command for the rewind operation on this cluster (when retrieving restore_command with the option -c/--restore-target-wal and when forcing a completion of crash recovery). --debug Print verbose debugging output that is mostly useful for developers debugging pg_rewind. --no-ensure-shutdown pg_rewind requires that the target server is cleanly shut down before rewinding. By default, if the target server is not shut down cleanly, pg_rewind starts the target server in single-user mode to complete crash recovery first, and stops it. By passing this option, pg_rewind skips this and errors out immediately if the server is not cleanly shut down. Users are expected to handle the situation themselves in that case. -V --version Display version information, then exit. -? --help Show help, then exit. When --source-server option is used, pg_rewind also uses the environment variables supported by libpq . The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. When executing pg_rewind using an online cluster as source, a role having sufficient permissions to execute the functions used by pg_rewind on the source cluster can be used instead of a superuser. Here is how to create such a role, named rewind_user here: CREATE USER rewind_user LOGIN; GRANT EXECUTE ON function pg_catalog.pg_ls_dir(text, boolean, boolean) TO rewind_user; GRANT EXECUTE ON function pg_catalog.pg_stat_file(text, boolean) TO rewind_user; GRANT EXECUTE ON function pg_catalog.pg_read_binary_file(text) TO rewind_user; GRANT EXECUTE ON function pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean) TO rewind_user; When executing pg_rewind using an online cluster as source which has been recently promoted, it is necessary to execute a CHECKPOINT after promotion such that its control file reflects up-to-date timeline information, which is used by pg_rewind to check if the target cluster can be rewound using the designated source cluster. The basic idea is to copy all file system-level changes from the source cluster to the target cluster: 1.Scan the WAL log of the target cluster, starting from the last checkpoint before the point where the source cluster’s timeline history forked off from the target cluster. For each WAL record, record each data block that was touched. This yields a list of all the data blocks that were changed in the target cluster, after the source cluster forked off. If some of the WAL files are no longer available, try re-running pg_rewind with the -c option to search for the missing files in the WAL archive. 2.Copy all those changed blocks from the source cluster to the target cluster, either using direct file system access (--source-pgdata) or SQL (--source-server). Relation files are now in a state equivalent to the moment of the last completed checkpoint prior to the point at which the WAL timelines of the source and target diverged plus the current state on the source of any blocks changed on the target after that divergence. 3.Copy all other files, including new relation files, WAL segments, pg_xact, and configuration files from the source cluster to the target cluster. Similarly to base backups, the contents of the directories pg_dynshmem/, pg_notify/, pg_replslot/, pg_serial/, pg_snapshots/, pg_stat_tmp/, and pg_subtrans/ are omitted from the data copied from the source cluster. The files backup_label, tablespace_map, pg_internal.init, postmaster.opts, and postmaster.pid, as well as any file or directory beginning with pgsql_tmp, are omitted. 4.Create a backup_label file to begin WAL replay at the checkpoint created at failover and configure the pg_control file with a minimum consistency LSN defined as the result of pg_current_wal_insert_lsn() when rewinding from a live source or the last checkpoint LSN when rewinding from a stopped source. 5.When starting the target, IvorySQL replays all the required WAL, resulting in a data directory in a consistent state. pg_test_fsync — determine fastest wal_sync_method for IvorySQL pg_test_fsync [option…​] pg_test_fsync accepts the following command-line options: -f --filename Specifies the file name to write test data in. This file should be in the same file system that the pg_wal directory is or will be placed in. (pg_wal contains the WAL files.) The default is pg_test_fsync.out in the current directory. -s --secs-per-test Specifies the number of seconds for each test. The more time per test, the greater the test’s accuracy, but the longer it takes to run. The default is 5 seconds, which allows the program to complete in under 2 minutes. -V --version Print the pg_test_fsync version and exit. -? --help Show help about pg_test_fsync command line arguments, and exit. The environment variable PG_COLOR specifies whether to use color in diagnostic messages. Possible values are always, auto and never. pg_test_timing — measure timing overhead pg_test_timing [option…​] pg_test_timing accepts the following command-line options: -d `duration` --duration=`duration` Specifies the test duration, in seconds. Longer durations give slightly better accuracy, and are more likely to discover problems with the system clock moving backwards. The default test duration is 3 seconds. -V --version Print the pg_test_timing version and exit. -? --help Show help about pg_test_timing command line arguments, and exit. Good results will show most (>90%) individual timing calls take less than one microsecond. Average per loop overhead will be even lower, below 100 nanoseconds. This example from an Intel i7-860 system using a TSC clock source shows excellent performance: Testing timing overhead for 3 seconds. Per loop time including overhead: 35.96 ns Histogram of timing durations: /sys/devices/system/clocksource/clocksource0/current_clocksource # pg_test_timing Per loop time including overhead: 722.92 ns Histogram of timing durations: TSC Other systems may only allow setting the time source on boot. On older Linux systems the \"clock\" kernel setting is the only way to make this sort of change. And even on some more recent ones, the only option you’ll see for a clock source is \"jiffies\". Jiffies are the older Linux software clock implementation, which can have good resolution when it’s backed by fast enough timing hardware, as in this example: $ cat /sys/devices/system/clocksource/clocksource0/available_clocksource jiffies $ dmesg | grep time.c time.c: Using 3.579545 MHz WALL PM GTOD PIT/TSC timer. time.c: Detected 2400.153 MHz processor. $ pg_test_timing Testing timing overhead for 3 seconds. Per timing duration including loop overhead: 97.75 ns Histogram of timing durations: logfile 2>&1 </dev/null & To start postgres with a specific port, e.g., 1234: $ postgres -p 1234 To connect to this server using psql, specify this port with the -p option: $ psql -p 1234 or set the environment variable PGPORT: $ export PGPORT=1234 $ psql Named run-time parameters can be set in either of these styles: $ postgres -c work_mem=1234 $ postgres --work-mem=1234 Either form overrides whatever setting might exist for work_mem in IvorySQL.conf. Notice that underscores in parameter names can be written as either underscore or dash on the command line. Except for short-term experiments, it’s probably better practice to edit the setting in IvorySQL.conf than to rely on a command-line switch to set a parameter.","title":"Tool Reference","component":"ivorysql-doc","version":"v4.2","name":"24","url":"/ivorysql-doc/v4.2/v4.2/24.html","titles":[{"text":"1. List of tools","hash":"list-of-tools","id":1},{"text":"2. Client Applications","hash":"client-applications","id":2},{"text":"2.1. clusterdb","hash":"clusterdb","id":3},{"text":"2.1.1. Synopsis","hash":"synopsis","id":4},{"text":"2.1.2. Options","hash":"options","id":5},{"text":"2.1.3. Environment","hash":"environment","id":6},{"text":"2.1.4. Diagnostics","hash":"diagnostics","id":7},{"text":"2.1.5. Examples","hash":"examples","id":8},{"text":"2.2. createdb","hash":"createdb","id":9},{"text":"2.2.1. Synopsis","hash":"synopsis-2","id":10},{"text":"2.2.2. Options","hash":"options-2","id":11},{"text":"2.2.3. Environment","hash":"environment-2","id":12},{"text":"2.2.4. Diagnostics","hash":"diagnostics-2","id":13},{"text":"2.2.5. Examples","hash":"examples-2","id":14},{"text":"2.3. createuser","hash":"createuser","id":15},{"text":"2.3.1. Synopsis","hash":"synopsis-3","id":16},{"text":"2.3.2. Options","hash":"options-3","id":17},{"text":"2.3.3. Environment","hash":"environment-3","id":18},{"text":"2.3.4. Diagnostics","hash":"diagnostics-3","id":19},{"text":"2.3.5. Examples","hash":"examples-3","id":20},{"text":"2.4. dropdb","hash":"dropdb","id":21},{"text":"2.4.1. Synopsis","hash":"synopsis-4","id":22},{"text":"2.4.2. Options","hash":"options-4","id":23},{"text":"2.4.3. Environment","hash":"environment-4","id":24},{"text":"2.4.4. Diagnostics","hash":"diagnostics-4","id":25},{"text":"2.4.5. Examples","hash":"examples-4","id":26},{"text":"2.5. dropuser","hash":"dropuser","id":27},{"text":"2.5.1. Synopsis","hash":"synopsis-5","id":28},{"text":"2.5.2. Options","hash":"options-5","id":29},{"text":"2.5.3. Environment","hash":"environment-5","id":30},{"text":"2.5.4. Diagnostics","hash":"diagnostics-5","id":31},{"text":"2.5.5. Examples","hash":"examples-5","id":32},{"text":"2.6. ecpg","hash":"ecpg","id":33},{"text":"2.6.1. Synopsis","hash":"synopsis-6","id":34},{"text":"2.6.2. Options","hash":"options-6","id":35},{"text":"2.6.3. Notes","hash":"notes","id":36},{"text":"2.6.4. Examples","hash":"examples-6","id":37},{"text":"2.7. pg_amcheck","hash":"pg_amcheck","id":38},{"text":"2.7.1. Synopsis","hash":"synopsis-7","id":39},{"text":"2.7.2. Options","hash":"options-7","id":40},{"text":"2.7.3. Warning","hash":"warning","id":41},{"text":"2.8. pg_basebackup","hash":"pg_basebackup","id":42},{"text":"2.8.1. Synopsis","hash":"synopsis-8","id":43},{"text":"2.8.2. Options","hash":"options-8","id":44},{"text":"2.8.3. Environment","hash":"environment-6","id":45},{"text":"2.8.4. Notes","hash":"notes-2","id":46},{"text":"2.8.5. Examples","hash":"examples-7","id":47},{"text":"2.9. pgbench","hash":"pgbench","id":48},{"text":"2.9.1. Synopsis","hash":"synopsis-9","id":49},{"text":"2.9.2. Caution","hash":"caution","id":50},{"text":"2.9.3. Options","hash":"options-9","id":51},{"text":"2.9.4. Initialization Options","hash":"initialization-options","id":52},{"text":"2.9.5. Benchmarking Options","hash":"benchmarking-options","id":53},{"text":"2.9.6. Common Options","hash":"common-options","id":54},{"text":"2.9.7. Exit Status","hash":"exit-status","id":55},{"text":"2.9.8. Environment","hash":"environment-7","id":56},{"text":"2.10. pg_config","hash":"pg_config","id":57},{"text":"2.10.1. Synopsis","hash":"synopsis-10","id":58},{"text":"2.10.2. Options","hash":"options-10","id":59},{"text":"2.10.3. Example","hash":"example","id":60},{"text":"2.11. pg_dump","hash":"pg_dump","id":61},{"text":"2.11.1. Synopsis","hash":"synopsis-11","id":62},{"text":"2.11.2. Options","hash":"options-11","id":63},{"text":"2.11.3. Environment","hash":"environment-8","id":64},{"text":"2.11.4. Diagnostics","hash":"diagnostics-6","id":65},{"text":"2.11.5. Notes","hash":"notes-3","id":66},{"text":"2.11.6. Examples","hash":"examples-8","id":67},{"text":"2.12. pg_dumpall","hash":"pg_dumpall","id":68},{"text":"2.12.1. Synopsis","hash":"synopsis-12","id":69},{"text":"2.12.2. Options","hash":"options-12","id":70},{"text":"2.12.3. Environment","hash":"environment-9","id":71},{"text":"2.12.4. Notes","hash":"notes-4","id":72},{"text":"2.12.5. Examples","hash":"examples-9","id":73},{"text":"2.13. pg_isready","hash":"pg_isready","id":74},{"text":"2.13.1. Synopsis","hash":"synopsis-13","id":75},{"text":"2.13.2. Options","hash":"options-13","id":76},{"text":"2.13.3. Exit Status","hash":"exit-status-2","id":77},{"text":"2.13.4. Environment","hash":"environment-10","id":78},{"text":"2.13.5. Notes","hash":"notes-5","id":79},{"text":"2.13.6. Examples","hash":"examples-10","id":80},{"text":"2.14. pg_receivewal","hash":"pg_receivewal","id":81},{"text":"2.14.1. Synopsis","hash":"synopsis-14","id":82},{"text":"2.14.2. Options","hash":"options-14","id":83},{"text":"2.14.3. Exit Status","hash":"exit-status-3","id":84},{"text":"2.14.4. Environment","hash":"environment-11","id":85},{"text":"2.14.5. Notes","hash":"notes-6","id":86},{"text":"2.14.6. Examples","hash":"examples-11","id":87},{"text":"2.15. pg_recvlogical","hash":"pg_recvlogical","id":88},{"text":"2.15.1. Synopsis","hash":"synopsis-15","id":89},{"text":"2.15.2. Options","hash":"options-15","id":90},{"text":"2.15.3. Environment","hash":"environment-12","id":91},{"text":"2.15.4. Notes","hash":"notes-7","id":92},{"text":"2.16. pg_restore","hash":"pg_restore","id":93},{"text":"2.16.1. Synopsis","hash":"synopsis-16","id":94},{"text":"2.16.2. Options","hash":"options-16","id":95},{"text":"2.16.3. Environment","hash":"environment-13","id":96},{"text":"2.16.4. Diagnostics","hash":"diagnostics-7","id":97},{"text":"2.16.5. Notes","hash":"notes-8","id":98},{"text":"2.16.6. Examples","hash":"examples-12","id":99},{"text":"2.17. pg_verifybackup","hash":"pg_verifybackup","id":100},{"text":"2.17.1. Synopsis","hash":"synopsis-17","id":101},{"text":"2.17.2. Options","hash":"options-17","id":102},{"text":"2.17.3. Examples","hash":"examples-13","id":103},{"text":"2.18. psql","hash":"psql","id":104},{"text":"2.18.1. Synopsis","hash":"synopsis-18","id":105},{"text":"2.18.2. Options","hash":"options-18","id":106},{"text":"2.18.3. Exit Status","hash":"exit-status-4","id":107},{"text":"2.19. reindexdb","hash":"reindexdb","id":108},{"text":"2.19.1. Synopsis","hash":"synopsis-19","id":109},{"text":"2.19.2. Options","hash":"options-19","id":110},{"text":"2.19.3. Environment","hash":"environment-14","id":111},{"text":"2.19.4. Diagnostics","hash":"diagnostics-8","id":112},{"text":"2.19.5. Notes","hash":"notes-9","id":113},{"text":"2.19.6. Examples","hash":"examples-14","id":114},{"text":"2.20. vacuumdb","hash":"vacuumdb","id":115},{"text":"2.20.1. Synopsis","hash":"synopsis-20","id":116},{"text":"2.20.2. Options","hash":"options-20","id":117},{"text":"2.20.3. Environment","hash":"environment-15","id":118},{"text":"2.20.4. Diagnostics","hash":"diagnostics-9","id":119},{"text":"2.20.5. Notes","hash":"notes-10","id":120},{"text":"2.20.6. Examples","hash":"examples-15","id":121},{"text":"3. Server Applications","hash":"server-applications","id":122},{"text":"3.1. initdb","hash":"initdb","id":123},{"text":"3.1.1. Synopsis","hash":"synopsis-21","id":124},{"text":"3.1.2. Options","hash":"options-21","id":125},{"text":"3.1.3. Environment","hash":"environment-16","id":126},{"text":"3.1.4. Notes","hash":"notes-11","id":127},{"text":"3.2. pg_archivecleanup","hash":"pg_archivecleanup","id":128},{"text":"3.2.1. Synopsis","hash":"synopsis-22","id":129},{"text":"3.2.2. Options","hash":"options-22","id":130},{"text":"3.2.3. Environment","hash":"environment-17","id":131},{"text":"3.2.4. Examples","hash":"examples-16","id":132},{"text":"3.3. pg_checksums","hash":"pg_checksums","id":133},{"text":"3.3.1. Synopsis","hash":"synopsis-23","id":134},{"text":"3.3.2. Options","hash":"options-23","id":135},{"text":"3.3.3. Environment","hash":"environment-18","id":136},{"text":"3.3.4. Notes","hash":"notes-12","id":137},{"text":"3.4. pg_controldata","hash":"pg_controldata","id":138},{"text":"3.4.1. Synopsis","hash":"synopsis-24","id":139},{"text":"3.4.2. Environment","hash":"environment-19","id":140},{"text":"3.5. pg_ctl","hash":"pg_ctl","id":141},{"text":"3.5.1. Synopsis","hash":"synopsis-25","id":142},{"text":"3.5.2. Options","hash":"options-24","id":143},{"text":"3.5.3. Options for Windows","hash":"options-for-windows","id":144},{"text":"3.5.4. Environment","hash":"environment-20","id":145},{"text":"3.5.5. Files","hash":"files","id":146},{"text":"3.5.6. Examples","hash":"examples-17","id":147},{"text":"3.5.6.1. Starting the Server","hash":"starting-the-server","id":148},{"text":"3.5.6.2. Stopping the Server","hash":"stopping-the-server","id":149},{"text":"3.5.6.3. Restarting the Server","hash":"restarting-the-server","id":150},{"text":"3.5.6.4. Showing the Server Status","hash":"showing-the-server-status","id":151},{"text":"3.6. pg_resetwal","hash":"pg_resetwal","id":152},{"text":"3.6.1. Synopsis","hash":"synopsis-26","id":153},{"text":"3.6.2. Options","hash":"options-25","id":154},{"text":"3.6.3. Environment","hash":"environment-21","id":155},{"text":"3.6.4. Notes","hash":"notes-13","id":156},{"text":"3.7. pg_rewind","hash":"pg_rewind","id":157},{"text":"3.7.1. Synopsis","hash":"synopsis-27","id":158},{"text":"3.7.2. Warning","hash":"warning-2","id":159},{"text":"3.7.3. Options","hash":"options-26","id":160},{"text":"3.7.4. Environment","hash":"environment-22","id":161},{"text":"3.7.5. Notes","hash":"notes-14","id":162},{"text":"3.7.6. How It Works","hash":"how-it-works","id":163},{"text":"3.8. pg_test_fsync","hash":"pg_test_fsync","id":164},{"text":"3.8.1. Synopsis","hash":"synopsis-28","id":165},{"text":"3.8.2. Options","hash":"options-27","id":166},{"text":"3.8.3. Environment","hash":"environment-23","id":167},{"text":"3.9. pg_test_timing","hash":"pg_test_timing","id":168},{"text":"3.9.1. Synopsis","hash":"synopsis-29","id":169},{"text":"3.9.2. Options","hash":"options-28","id":170},{"text":"3.9.3. Usage","hash":"usage","id":171},{"text":"3.9.3.1. Interpreting Results","hash":"interpreting-results","id":172},{"text":"3.9.3.2. Measuring Executor Timing Overhead","hash":"measuring-executor-timing-overhead","id":173},{"text":"3.9.3.3. Changing Time Sources","hash":"changing-time-sources","id":174},{"text":"3.9.3.4. Clock Hardware and Timing Accuracy","hash":"clock-hardware-and-timing-accuracy","id":175},{"text":"3.10. pg_upgrade","hash":"pg_upgrade","id":176},{"text":"3.10.1. Synopsis","hash":"synopsis-30","id":177},{"text":"3.10.2. Options","hash":"options-29","id":178},{"text":"3.10.3. Usage","hash":"usage-2","id":179},{"text":"3.10.4. Notes","hash":"notes-15","id":180},{"text":"3.11. pg_waldump","hash":"pg_waldump","id":181},{"text":"3.11.1. Synopsis","hash":"synopsis-31","id":182},{"text":"3.11.2. Options","hash":"options-30","id":183},{"text":"3.11.3. Environment","hash":"environment-24","id":184},{"text":"3.11.4. Notes","hash":"notes-16","id":185},{"text":"3.12. postgres","hash":"postgres","id":186},{"text":"3.12.1. Synopsis","hash":"synopsis-32","id":187},{"text":"3.12.2. Options","hash":"options-31","id":188},{"text":"3.12.3. General Purpose","hash":"general-purpose","id":189},{"text":"3.12.4. Semi-Internal Options","hash":"semi-internal-options","id":190},{"text":"3.12.5. Options for Single-User Mode","hash":"options-for-single-user-mode","id":191},{"text":"3.12.6. Environment","hash":"environment-25","id":192},{"text":"3.12.7. Diagnostics","hash":"diagnostics-10","id":193},{"text":"3.12.8. Notes","hash":"notes-17","id":194},{"text":"3.12.9. Bugs","hash":"bugs","id":195},{"text":"3.12.10. Single-User Mode","hash":"single-user-mode","id":196},{"text":"3.12.11. Examples","hash":"examples-18","id":197}]},"17":{"id":17,"text":"IvorySQL is maintained by a core team of developers with commit rights to the main IvorySQL repository on GitHub. At the same time, we are very eager to receive contributions from anybody in the wider IvorySQL community. This section covers all you need to know if you want to see your code or documentation changes be added to IvorySQL and appear in future releases. IvorySQL is developed on GitHub, and anybody wishing to contribute to it will have to have a GitHub account and be familiar with Git tools and workflow. It is also recommended that you follow the developer’s mailing list since some of the contributions may generate more detailed discussions there. Once you have your GitHub account, fork this repository so that you can have your private copy to start hacking on and to use as a source of pull requests. If the contribution you’re submitting is original work, you can assume that IvorySQL will release it as part of an overall IvorySQL release available to the downstream consumers under the Apache License, Version 2.0. If the contribution you’re submitting is NOT original work you have to indicate the name of the license and also make sure that it is similar in terms to the Apache License 2.0. Apache Software Foundation maintains a list of these licenses under Category A. In addition to that, you may be required to make proper attributions. Finally, keep in mind that it is NEVER a good idea to remove licensing headers from the work that is not your original one. Even if you are using parts of the file that originally had a licensing header at the top you should err on the side of preserving it. As always, if you are not quite sure about the licensing implications of your contributions, feel free to reach out to us on the developer mailing list. Your chances of getting feedback and seeing your code merged into the project greatly depend on how granular your changes are. If you happen to have a bigger change in mind, we highly recommend engaging on the developer’s mailing list first and sharing your proposal with us before you spend a lot of time writing code. Even when your proposal gets validated by the community, we still recommend doing the actual work as a series of small, self-contained commits. This makes the reviewer’s job much easier and increases the timeliness of feedback. When it comes to C and C++ parts of IvorySQL, we try to follow PostgreSQL Coding Conventions. In addition to that: For C and Perl code, please run pgindent if necessary. We recommend using git diff --color when reviewing your changes so that you don’t have any spurious whitespace issues in the code that you submit. All new functionality that is contributed to IvorySQL should be covered by regression tests that are contributed alongside it. If you are uncertain about how to test or document your work, please raise the question on the ivorysql-hackers mailing list and the developer community will do its best to help you. At the very minimum, you should always be running make installcheck-world to make sure that you’re not breaking anything. If the change you’re working on touches functionality that is common between PostgreSQL and IvorySQL, you may be asked to forward-port it to PostgreSQL. This is not only so that we keep reducing the delta between the two projects, but also so that any change that is relevant to PostgreSQL can benefit from a much broader review of the upstream PostgreSQL community. In general, it is a good idea to keep both codebases handy so you can be sure whether your changes may need to be forward-ported. Once you are ready to share your work with the IvorySQL core team and the rest of the IvorySQL community, you should push all the commits to a branch in your own repository forked from the official IvorySQL and send us a pull request. A submitted pull request with passing validation checks is assumed to be available for peer review. Peer review is the process that ensures that contributions to IvorySQL are of high quality and align well with the road map and community expectations. Every member of the IvorySQL community is encouraged to review pull requests and provide feedback. Since you don’t have to be a core team member to be able to do that, we recommend following a stream of pull reviews to anybody who’s interested in becoming a long-term contributor to IvorySQL. One outcome of the peer review could be a consensus that you need to modify your pull request in certain ways. GitHub allows you to push additional commits into a branch from which a pull request was sent. Those additional commits will be then visible to all of the reviewers. A peer review converges when it receives at least one +1 and no -1s votes from the participants. At that point, you should expect one of the core team members to pull your changes into the project. At any time during the patch review, you may experience delays based on the availability of reviewers and core team members. Please be patient. That being said, don’t get discouraged either. If you’re not getting expected feedback for a few days add a comment asking for updates on the pull request itself or send an email to the mailing list. On occasion, you will see core team members committing directly to the repository without going through the pull request workflow. This is reserved for small changes only and the rule of thumb we use is this: if the change touches any functionality that may result in a test failure, then it has to go through a pull request workflow. If, on the other hand, the change is in the non-functional part of the codebase (such as fixing a typo inside of a comment block) core team members can decide to just commit to the repository directly.","title":"FAQ","component":"ivorysql-doc","version":"v4.2","name":"25","url":"/ivorysql-doc/v4.2/v4.2/25.html","titles":[{"text":"1. Contributing","hash":"contributing","id":1},{"text":"2. Getting started","hash":"getting-started","id":2},{"text":"3. Licensing of IvorySQL contributions","hash":"licensing-of-ivorysql-contributions","id":3},{"text":"4. Coding guidelines","hash":"coding-guidelines","id":4},{"text":"5. Changes applicable to upstream PostgreSQL","hash":"changes-applicable-to-upstream-postgresql","id":5},{"text":"6. Patch submission","hash":"patch-submission","id":6},{"text":"7. Patch review","hash":"patch-review","id":7},{"text":"8. Direct commits to the repository","hash":"direct-commits-to-the-repository","id":8}]},"18":{"id":18,"text":"In Oracle, SQL code often contains XML functions. To ensure consistency in data format and structure when migrating from Oracle to IvorySQL, IvorySQL achieves high compatibility with Oracle XML functions, building upon the foundation of PostgreSQL. This compatibility means that users do not need to make extensive modifications to their existing XML processing logic, thereby ensuring the integrity and accuracy of the data. Furthermore, IvorySQL’s cross-platform compatibility reduces the additional user maintenance and upgrade costs caused by format differences, making data processing and management more efficient, reliable, and flexible. XML (eXtended Markup Language) is a text-based format language used to structure any document that can be tagged. It is a lightweight, extensible, standard, and easy-to-understand language for storing data. IvorySQL achieves compatibility with commonly used XML SQL functions. It maintains consistency with PostgreSQL by utilizing the same underlying processing functions, which are provided by the libxml2 library interface. These XML functions are provided as a sub-plugin of the ivorysql_ora plugin, ensuring compatibility and consistency with PostgreSQL databases in terms of XML processing. Due to Oracle’s XML functions requiring certain parameter types to be XMLType, such as the existsnode() function below: Prototype: EXISTSNODE(XMLType_instance, XPath_string [, namespace_string ]) Demo: SELECT existsnode(XMLType('d'), '/a') from dual; Therefore, for compatibility purposes, an XMLType data type has been added. Its function is to convert the string provided by the user into an internal XMLType type, allowing SQL statements to be migrated from Oracle to IvorySQL without modification. Additionally, to avoid confusion with the existing keyword \"extract\" in PostgreSQL, IvorySQL has renamed the original keyword to \"PGEXTRACT\" to ensure clarity and accuracy in function calls. When implementing these Oracle-compatible XML functions, IvorySQL adopted two different approaches. Among them, besides the UPDATEXML function, the other functions are implemented using SQL functions. Since the number of parameters for the UPDATEXML function is uncertain, an expression-based approach was used for its implementation. This required writing specialized syntax parsing and executor code to ensure the correctness and flexibility of its functionality. Num Function Name Function Introduction 1 extract(XML) This function is used to return the corresponding content under the XML node path. The parameter XMLType_instance is used to specify the XMLType instance, while Xpath_string is used to specify the XML node path. 2 extractvalue This function provides retrieval functionality for XML content. The extractvalue function can only return one value from one node. 3 existsnode This function is used to check whether the XML content matches the specified path expression. 4 deletexml This function is used to delete XML nodes at specified paths. 5 appendchildxml This function is used to insert child nodes into an XML object. It takes an XML object and an XML fragment as parameters, and inserts the XML fragment as a child node into the XML object. 6 updatexml This function is used to update the content of a specific XML node path. 7 insertxmlbefore This function is used to insert child nodes before a specified path in XML. 8 insertxmlafter This function is used to insert child nodes after a specified path in XML. 9 insertchildxml This function is used to insert child nodes into a specified XML path. 10 insertchildxmlbefore This function is used to insert child nodes before a specified XML path. 11 insertchildxmlafter This function is used to insert child nodes after a specified XML path. 12 xmlisvalid This functions is used to check the xml content is valid or not ivorysql=# set ivorysql.compatible_mode to oracle; SET ivorysql=# create table inaf(a int, b xmltype); CREATE TABLE ivorysql=# insert into inaf values(1,xmltype('100')); INSERT 0 1 ivorysql=# insert into inaf values(2, ''); INSERT 0 1 ivorysql=# select * from inaf; a | b ---+------------------- 1 | 100 2 | (2 rows) ivorysql=# create table xmltest(id int, data XMLType); CREATE TABLE ivorysql=# insert into xmltest values(1, 'one'); INSERT 0 1 ivorysql=# insert into xmltest values(2, 'two'); INSERT 0 1 ivorysql=# select * from xmltest; id | data ----+-------------------- 1 | one 2 | two (2 rows) ivorysql=# create table xmlnstest(id int, data xmltype); CREATE TABLE ivorysql=# INSERT INTO xmlnstest VALUES(1, xmltype('4142')); INSERT 0 1 ivorysql# SELECT extract(XMLType('1'), '/AA/ID') from dual; extract ------------ 1 (1 row) ivorysql# SELECT extractvalue(XMLType('100'),'/a/b') from dual; extractvalue -------------- 100 (1 row) ivorysql=# SELECT existsnode(XMLType('d'), '/a/b') from dual; existsnode ------------ 1 (1 row) ivorysql=# SELECT deletexml(XMLType('oldnodeoldnode'), '/test/value') from dual; deletexml ----------- (1 row) ivorysql=# SELECT appendchildxml(XMLType(''), '/test/value', XMLTYPE('newnode')) from dual; appendchildxml -------------------------- + + newnode+ + + newnode+ + (1 row) ivorysql=# SELECT updatexml(xmltype('one'), '/value', xmltype('1111')) FROM dual; updatexml --------------------------- 1111 (1 row) ivorysql=# SELECT insertxmlbefore(XMLType('222100200'), '/a/b', XMLTYPE('88')) from dual; insertxmlbefore -------------------------------------------------- 2228810088200 (1 row) ivorysql=# SELECT insertxmlafter(XMLType('100'),'/a/b',XMLType('88')) from dual; insertxmlafter ---------------- + 100 + 88 + (1 row) ivorysql=# SELECT insertchildxml(XMLType('onethree'), '//b', 'name', XMLTYPE('newnode')) from dual; insertchildxml ----------------------------------------------------------------------- onenewnodethreenewnode (1 row) ivorysql=# SELECT insertchildxmlbefore(XMLType('100'), '/a', 'b', XMLType('88')) from dual; insertchildxmlbefore ---------------------- + 88 + 100 + (1 row) ivorysql=# SELECT insertchildxmlafter(XMLType('100'), '/a', 'b', XMLType('88')) from dual; insertchildxmlafter --------------------- + 100 + 88 + (1 row) ivorysql=# SELECT xmlisvalid(XMLTYPE('')); xmlisvalid ------------ f (1 row) ivorysql=# SELECT xmlisvalid(XMLTYPE('')); xmlisvalid ------------ t (1 row)","title":"XML","component":"ivorysql-doc","version":"v4.2","name":"26","url":"/ivorysql-doc/v4.2/v4.2/26.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Implementation Principle","hash":"implementation-principle","id":2},{"text":"3. Compatible Function","hash":"compatible-function","id":3},{"text":"4. XML Function Demo","hash":"xml-function-demo","id":4},{"text":"4.1. Prepare table and data","hash":"prepare-table-and-data","id":5},{"text":"4.2. extract(XML)","hash":"extract(XML)","id":6},{"text":"4.3. extractvalue","hash":"extractvalue","id":7},{"text":"4.4. existsnode","hash":"existsnode","id":8},{"text":"4.5. deletexml","hash":"deletexml","id":9},{"text":"4.6. appendchildxml","hash":"appendchildxml","id":10},{"text":"4.7. updatexml","hash":"updatexml","id":11},{"text":"4.8. insertxmlbefore","hash":"insertxmlbefore","id":12},{"text":"4.9. insertxmlafter","hash":"insertxmlafter","id":13},{"text":"4.10. insertchildxml","hash":"insertchildxml","id":14},{"text":"4.11. insertchildxmlbefore","hash":"insertchildxmlbefore","id":15},{"text":"4.12. insertchildxmlafter","hash":"insertchildxmlafter","id":16},{"text":"4.13. xmlisvalid","hash":"xmlisvalid","id":17}]},"19":{"id":19,"text":"This document is designed for compatibility with Oracle sequence functions, in order to use Oracle’s sequences in IvorySQL. Sequence is a database object, similar to tables and views, that represents an integer sequence that can be used by any table and view in the global database namespace. Sequence values can be accessed using NEXTVAL and CURRVAL. Sequences can be in ascending or descending order. ivorysql=# CREATE sequence seq; CREATE SEQUENCE ivorysql=# SELECT seq.NEXTVAL FROM DUAL; nextval --------- 1 (1 row) ivorysql=# ALTER sequence seq restart start with 10; ALTER SEQUENCE ivorysql=# SELECT seq.NEXTVAL FROM DUAL; nextval --------- 10 (1 row) ivorysql=# DROP SEQUENCE seq; DROP SEQUENCE","title":"Compatible with Oracle sequence","component":"ivorysql-doc","version":"v4.2","name":"27","url":"/ivorysql-doc/v4.2/v4.2/27.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function description","hash":"function-description","id":2},{"text":"3. Test cases","hash":"test-cases","id":3}]},"20":{"id":20,"text":"IvorySQL provides compatibility for Oracle packages. A package is an encapsulated collection of related program objects stored together in the database. Program objects are procedures, functions, variables, constants, cursors, and exceptions. This document aims to provide a comprehensive understanding of the process of implementing custom packages. IvorySQL provides compatibility for Oracle custom packages, including creation, alteration, and deletion of packages and package bodies. We also add support for package-related commands in the PostgreSQL interactive terminal (psql) with the new \\dk command. The CREATE OR REPLACE PACKAGE statement is used to create or replace the specification of a package. A package is a collection of related stored procedures, functions, and other program objects, stored as a single unit in the database. The package specification declares these objects, and the package body defines them. To create or replace the specification of a package in your own schema, you must have the CREATE PROCEDURE system privilege. If you are creating or replacing a package in another user’s schema, you need the CREATE ANY PROCEDURE system privilege. The CREATE OR REPLACE PACKAGE BODY statement is used to create or replace a package body. To create a package body requires the same privileges as creating the specification of a package, and it is required that the package body and package specification be in the same schema, with the package specification already existing. This statement defines the objects declared in the package specification. When the package specification contains cursors or subprograms, a package body must be present to define them. Otherwise, the package body is optional. The ALTER PACKAGE statement is used to modify the properties of a package.The privileges required to execute the ALTER PACKAGE statement are: you must be the owner of the package or have the ALTER ANY PROCEDURE privilege to modify packages owned by other users. The DROP PACKAGE statement deletes a package in the database. This statement will remove both the package body and the package specification.The DROP PACKAGE BODY statement only deletes the package body. It is not possible to delete a single object within the package using this statement. The privileges required:the package must be in the user’s schema, or the user must have the DROP ANY PROCEDURE system privilege. The DISCARD PACKAGE functionality is implemented for compatibility with PostgreSQL’s DISCARD feature. In psql, \\dk[+] is used to view the definition information of packages and package bodies. Command Descriptions \\dk[+] List the package information currently visible. \\dk[+] xxx List the package specification and package body content of the xxx package. ivorysql=# create or replace package pkg is ivorysql-# var1 integer; ivorysql-# var2 integer; ivorysql-# function test_f(id integer) return integer; ivorysql-# procedure test_p(id integer); ivorysql-# end; ivorysql-# / CREATE PACKAGE ivorysql=# create or replace package body pkg is ivorysql-# var3 integer; ivorysql-# function test_f(id integer) return integer is ivorysql-# begin ivorysql-# dbms_output.put_line('pkg test_f'); ivorysql-# return id; ivorysql-# end; ivorysql-# procedure test_p(id integer) is ivorysql-# begin ivorysql-# dbms_output.put_line('pkg proc'); ivorysql-# end; ivorysql-# --privite function ivorysql-# function test_piv1(id integer) return integer is ivorysql-# begin ivorysql-# return id; ivorysql-# end; ivorysql-# --privite procedure ivorysql-# procedure test_piv2(id integer) is ivorysql-# begin ivorysql-# dbms_output.put_line('privite proc'); ivorysql-# end; ivorysql-# begin ivorysql-# var1 := 1; ivorysql-# var2 := 2; ivorysql-# var3 := 4; ivorysql-# end; ivorysql-# / CREATE PACKAGE BODY ivorysql=# alter package pkg noneditionable; ALTER PACKAGE ivorysql=# Drop package pkg; DROP PACKAGE ivorysql=# Drop package body pkg; DROP PACKAGE BODY ivorysql=# discard package; DISCARD PACKAGES ivorysql=# \\dk List of packages Schema | Name | Owner --------+----------+---------- public | pkg | ivorysql public | test_pkg | ivorysql (2 rows) ivorysql=# \\dk pkg List of packages Schema | Name | Owner --------+------+---------- public | pkg | ivorysql (1 row) ivorysql=# \\dk pkg1 Did not find any package named \"pkg1\". ivorysql=# \\dk+ List of packages Schema | Name | Owner | Security | Editionable | Use Collation | Specification | Package Body --------+----------+----------+----------+-------------+---------------+-----------------------------------------------+----------------------------------------------------- --------- public | pkg | ivorysql | definer | Editionable | default | var1 integer; +| | | | | | | var2 integer; +| | | | | | | function test_f(id integer) return integer; +| | | | | | | procedure test_p(id integer); +| | | | | | | end | public | test_pkg | ivorysql | definer | Editionable | default | var1 integer; +| FUNCTION test_f(id integer) RETURN integer IS + | | | | | | FUNCTION test_f(id integer) RETURN integer;+| BEGIN + | | | | | | end | dbms_output.put_line('invoke function test_pkg.t est_f');+ | | | | | | | RETURN 23; + | | | | | | | end; + | | | | | | | BEGIN + | | | | | | | var1 := 23; + | | | | | | | end (2 rows)","title":"Package","component":"ivorysql-doc","version":"v4.2","name":"28","url":"/ivorysql-doc/v4.2/v4.2/28.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function descriptions","hash":"function-descriptions","id":2},{"text":"2.1. Create the specification of a package","hash":"create-the-specification-of-a-package","id":3},{"text":"2.2. Create package body","hash":"create-package-body","id":4},{"text":"2.3. Alter package","hash":"alter-package","id":5},{"text":"2.4. Drop package and package body","hash":"drop-package-and-package-body","id":6},{"text":"2.5. DISCARD PACKAGE","hash":"discard-package","id":7},{"text":"2.6. Use \\dk[+] in psql for package and package body information","hash":"use-dk-in-psql-for-package-and-package-body-information","id":8},{"text":"3. Test cases","hash":"test-cases","id":9},{"text":"3.1. Create the specification of a package","hash":"create-the-specification-of-a-package-2","id":10},{"text":"3.2. Create package body","hash":"create-package-body-2","id":11},{"text":"3.3. Alter package","hash":"alter-package-2","id":12},{"text":"3.4. Drop package and package body","hash":"drop-package-and-package-body-2","id":13},{"text":"3.5. DISCARD PACKAGE","hash":"discard-package-2","id":14},{"text":"3.6. Use \\dk[+] in psql for package and package body information","hash":"use-dk-in-psql-for-package-and-package-body-information-2","id":15}]},"21":{"id":21,"text":"The introduction of this feature is to accommodate Oracle’s invisible column functionality, making database design simpler and enhancing the flexibility of data management. Users will have better control over the visibility of columns. Invisible columns are also useful during application migration. Making new columns invisible means that they will not be visible to any existing application, but they can still be referenced by any new applications, thus simplifying the online migration of applications. Invisible columns allow users to conceal specific columns during operations like SELECT *. You can use invisible column to make changes to a table without disrupting applications that use the table. Any generic access of a table does not show the invisible columns in the table. Invisible columns must be explicitly referenced by column names in order to be accessed in queries and other operations. Support for invisible columns in psql extended describe (\\d+) is added, in oracle mode only. ivorysql=# CREATE TABLE mytable (a INT, b INT INVISIBLE, c INT); CREATE TABLE You can insert a value into an invisible column only if you explicitly specify the invisible column in the column list for the INSERT statement. Omitting the column list in the INSERT statement is not allowed. Errors will be reported. ivorysql=# INSERT INTO mytable (a, b, c) VALUES (1,2,3); INSERT 0 1 ivorysql=# INSERT INTO mytable VALUES (4,5,6); ERROR: INSERT has more expressions than target columns LINE 1: INSERT INTO mytable VALUES (4,5,6); You can use a SELECT statement to display output for an invisible column only if you explicitly specify the invisible column in the column list. ivorysql=# select * from mytable; a | c ---+--- 1 | 3 (1 row) ivorysql=# select a,b,c from mytable; a | b | c ---+---+--- 1 | 2 | 3 (1 row) ivorysql=# \\d+ mytable Table \"public.mytable\" Column | Type | Collation | Nullable | Default | Invisible | Storage | Compression | Stats target | Description --------+-----------------+-----------+----------+---------+-----------+---------+-------------+--------------+------------- a | pg_catalog.int4 | | | | | plain | | | b | pg_catalog.int4 | | | | invisible | plain | | | c | pg_catalog.int4 | | | | | plain | | | Access method: heap Modify column is not supported currently. Will be enhanced in later version; In Oracle, there are special considerations for invisible columns and column ordering. When a table contains one or more invisible columns, the invisible columns are not included in the column order for the table. We have not yet addressed this part.","title":"Invisible Columns","component":"ivorysql-doc","version":"v4.2","name":"29","url":"/ivorysql-doc/v4.2/v4.2/29.html","titles":[{"text":"1. Objective","hash":"objective","id":1},{"text":"2. Function descriptions","hash":"function-descriptions","id":2},{"text":"3. Test cases","hash":"test-cases","id":3},{"text":"3.1. Create a table with invisible columns","hash":"create-a-table-with-invisible-columns","id":4},{"text":"3.2. Insert values into invisible columns","hash":"insert-values-into-invisible-columns","id":5},{"text":"3.3. Display output for invisible columns","hash":"display-output-for-invisible-columns","id":6},{"text":"3.4. Support for invisible columns in psql extended describe (\\d+) in Oracle mode","hash":"support-for-invisible-columns-in-psql-extended-describe-d-in-oracle-mode","id":7},{"text":"4. Limitations","hash":"limitations","id":8}]},"22":{"id":22,"text":"Hardware Parameter Minimum Recommended CPU 4 cores 16 cores RAM 4GB 64GB Storage 800MB,HDD 5GB+,SSD or NvMe Network Gigabit network 10G network Software Currently, IvorySQL supports but is not limited to linux(CentOS 8.X/CentOS Stream 9/Ubuntu). The operating system used for the quick start is CentOS Stream 9. Pre-requirements Before getting started, please create an user and grant it root privileges. All the installation steps will be performed by this user. Here we just name it 'ivorysql'. How to create a sudo user installation Create or edit IvorySQL yum repository configuration /etc/yum.repos.d/ivorysql.repo vim /etc/yum.repos.d/ivorysql.repo [ivorysql4] name=IvorySQL Server 4 $releasever - $basearch baseurl=https://yum.highgo.com/dists/ivorysql-rpms/4/redhat/rhel-$releasever-$basearch enabled=1 gpgcheck=0 After saving and exiting, you can install IvorySQL 4 with the following steps $ sudo dnf install -y ivorysql4 ivorysql4-server ivorysql4-contrib ivorysql4-test Setting environment variables Add below contents in ~/.bash_profile file and source to make it effective: PATH=/usr/local/ivorysql/ivorysql-4/bin:$PATH export PATH LD_LIBRARY_PATH=/usr/local/ivorysql/ivorysql-4/lib export LD_LIBRARY_PATH PGDATA=/usr/local/ivorysql/ivorysql-4/data export PGDATA $ source ~/.bash_profile Initializing database $ initdb -D /usr/local/ivorysql/ivorysql-4/data The -D option specifies the directory where the database cluster should be stored. This is the only information required by initdb, but you can avoid writing it by setting the PGDATA environment variable, which can be convenient since the database server can find the database directory later by the same variable. For more options, refer to initdb --help. Starting IvorySQL service $ pg_ctl -D /usr/local/ivorysql/ivorysql-4/data -l ivory.log start The -D option specifies the file system location of the database configuration files. If this option is omitted, the environment variable PGDATA in > is used. -l option appends the server log output to filename. If the file does not exist, it is created. For more options, refer to pg_ctl --help. Confirm it’s successfully started: $ ps -ef | grep postgres ivorysql 3214 1 0 20:35 ? 00:00:00 /usr/local/ivorysql/ivorysql-4/bin/postgres -D /usr/local/ivorysql/ivorysql-4/data ivorysql 3215 3214 0 20:35 ? 00:00:00 postgres: checkpointer ivorysql 3216 3214 0 20:35 ? 00:00:00 postgres: background writer ivorysql 3218 3214 0 20:35 ? 00:00:00 postgres: walwriter ivorysql 3219 3214 0 20:35 ? 00:00:00 postgres: autovacuum launcher ivorysql 3220 3214 0 20:35 ? 00:00:00 postgres: logical replication launcher ivorysql 3238 1551 0 20:35 pts/0 00:00:00 grep --color=auto postgres Get IvorySQL image from Docker Hub $ docker pull ivorysql/ivorysql:4.2-ubi8 Running IvorySQL $ docker run --name ivorysql -p 5434:5432 -e IVORYSQL_PASSWORD=your_password -d ivorysql/ivorysql:4.2-ubi8 Check if the IvorySQL container is running successfully $ docker ps | grep ivorysql CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6faa2d0ed705 ivorysql:4.2-ubi8 \"docker-entrypoint.s…\" 50 seconds ago Up 49 seconds 5866/tcp, 0.0.0.0:5434->5432/tcp ivorysql Connect to IovrySQL via psql: $ psql -d psql (17.2) Type \"help\" for help. ivorysql=# The -d option specifies the name of the database to connect to. ivorysql is the default database of IvorySQL. However,IvorySQL of lower versions need the users themselves to connect to postgres database at the first connection and then create the ivorysql database.The latest IvorySQL can do all these for users. For more options, refer to psql --help. When running IvorySQL in Docker, additional parameters need to be added, like: psql -d ivorysql -U ivorysql -h 127.0.0.1 -p 5434 Now you can start your journey of IvorySQL! Enjoy! To explore additional installation methods, please refer to the Installation.","title":"Quick Start","component":"ivorysql-doc","version":"v4.2","name":"3","url":"/ivorysql-doc/v4.2/v4.2/3.html","titles":[{"text":"1. Environmental requirements","hash":"environmental-requirements","id":1},{"text":"2. Quick installation","hash":"quick-installation","id":2},{"text":"2.1. yum installation","hash":"yum-installation","id":3},{"text":"2.2. Running IvorySQL in docker","hash":"running-ivorysql-in-docker","id":4},{"text":"3. Connecting to IvorySQL","hash":"connecting-to-ivorysql","id":5}]},"23":{"id":23,"text":"On most Unix platforms, IvorySQL modifies its command title as reported by ps, so that individual server processes can readily be identified. A sample display is $ ps auxww | grep ^postgres postgres 15551 0.0 0.1 57536 7132 pts/0 S 18:02 0:00 postgres -i postgres 15554 0.0 0.0 57536 1184 ? Ss 18:02 0:00 postgres: background writer postgres 15555 0.0 0.0 57536 916 ? Ss 18:02 0:00 postgres: checkpointer postgres 15556 0.0 0.0 57536 916 ? Ss 18:02 0:00 postgres: walwriter postgres 15557 0.0 0.0 58504 2244 ? Ss 18:02 0:00 postgres: autovacuum launcher postgres 15558 0.0 0.0 17512 1068 ? Ss 18:02 0:00 postgres: stats collector postgres 15582 0.0 0.0 58772 3080 ? Ss 18:04 0:00 postgres: joe runbug 127.0.0.1 idle postgres 15606 0.0 0.0 58772 3052 ? Ss 18:07 0:00 postgres: tgl regression [local] SELECT waiting postgres 15610 0.0 0.0 58772 3056 ? Ss 18:07 0:00 postgres: tgl regression [local] idle in transaction (The appropriate invocation of ps varies across different platforms, as do the details of what is shown. This example is from a recent Linux system.) The first process listed here is the primary server process. The command arguments shown for it are the same ones used when it was launched. The next four processes are background worker processes automatically launched by the primary process. (The “autovacuum launcher” process will not be present if you have set the system not to run autovacuum.) Each of the remaining processes is a server process handling one client connection. Each such process sets its command line display in the form postgres: user database host activity The user, database, and (client) host items remain the same for the life of the client connection, but the activity indicator changes. The activity can be idle (i.e., waiting for a client command), idle in transaction (waiting for client inside a BEGIN block), or a command type name such as SELECT. Also, waiting is appended if the server process is presently waiting on a lock held by another session. In the above example we can infer that process 15606 is waiting for process 15610 to complete its transaction and thereby release some lock. (Process 15610 must be the blocker, because there is no other active session. In more complicated cases it would be necessary to look into the pg_locks system view to determine who is blocking whom.) If cluster_name has been configured the cluster name will also be shown in ps output: $ psql -c 'SHOW cluster_name' cluster_name -------------- server1 (1 row) $ ps aux|grep server1 postgres 27093 0.0 0.0 30096 2752 ? Ss 11:34 0:00 postgres: server1: background writer ... If you have turned off update_process_title then the activity indicator is not updated; the process title is set only once when a new process is launched. On some platforms this saves a measurable amount of per-command overhead; on others it’s insignificant. Tip Solaris requires special handling. You must use /usr/ucb/ps, rather than /bin/ps. You also must use two w flags, not just one. In addition, your original invocation of the postgres command must have a shorter ps status display than that provided by each server process. If you fail to do all three things, the ps output for each server process will be the original postgres command line. IvorySQL’s cumulative statistics system supports collection and reporting of information about server activity. Presently, accesses to tables and indexes in both disk-block and individual-row terms are counted. The total number of rows in each table, and information about vacuum and analyze actions for each table are also counted. If enabled, calls to user-defined functions and the total time spent in each one are counted as well. IvorySQL also supports reporting dynamic information about exactly what is going on in the system right now, such as the exact command currently being executed by other server processes, and which other connections exist in the system. This facility is independent of the cumulative statistics system. Since collection of statistics adds some overhead to query execution, the system can be configured to collect or not collect information. This is controlled by configuration parameters that are normally set in postgresql.conf. The parameter track_activities enables monitoring of the current command being executed by any server process. The parameter track_counts controls whether cumulative statistics are collected about table and index accesses. The parameter track_functions enables tracking of usage of user-defined functions. The parameter track_io_timing enables monitoring of block read and write times. The parameter track_wal_io_timing enables monitoring of WAL write times. Normally these parameters are set in postgresql.conf so that they apply to all server processes, but it is possible to turn them on or off in individual sessions using the SET command. (To prevent ordinary users from hiding their activity from the administrator, only superusers are allowed to change these parameters with SET.) Cumulative statistics are collected in shared memory. Every IvorySQL process collects statistics locally, then updates the shared data at appropriate intervals. When a server, including a physical replica, shuts down cleanly, a permanent copy of the statistics data is stored in the pg_stat subdirectory, so that statistics can be retained across server restarts. In contrast, when starting from an unclean shutdown (e.g., after an immediate shutdown, a server crash, starting from a base backup, and point-in-time recovery), all statistics counters are reset. Several predefined views, listed in Table 1 , are available to show the current state of the system. There are also several other views, listed in Table 2 , available to show the accumulated statistics. Alternatively, one can build custom views using the underlying cumulative statistics functions. When using the cumulative statistics views and functions to monitor collected data, it is important to realize that the information does not update instantaneously. Each individual server process flushes out accumulated statistics to shared memory just before going idle, but not more frequently than once per PGSTAT_MIN_INTERVAL milliseconds (1 second unless altered while building the server); so a query or transaction still in progress does not affect the displayed totals and the displayed information lags behind actual activity. However, current-query information collected by track_activities is always up-to-date. Another important point is that when a server process is asked to display any of the accumulated statistics, accessed values are cached until the end of its current transaction in the default configuration. So the statistics will show static information as long as you continue the current transaction. Similarly, information about the current queries of all sessions is collected when any such information is first requested within a transaction, and the same information will be displayed throughout the transaction. This is a feature, not a bug, because it allows you to perform several queries on the statistics and correlate the results without worrying that the numbers are changing underneath you. When analyzing statistics interactively, or with expensive queries, the time delta between accesses to individual statistics can lead to significant skew in the cached statistics. To minimize skew, stats_fetch_consistency can be set to snapshot, at the price of increased memory usage for caching not-needed statistics data. Conversely, if it’s known that statistics are only accessed once, caching accessed statistics is unnecessary and can be avoided by setting stats_fetch_consistency to none. You can invoke pg_stat_clear_snapshot() to discard the current transaction’s statistics snapshot or cached values (if any). The next use of statistical information will (when in snapshot mode) cause a new snapshot to be built or (when in cache mode) accessed statistics to be cached. A transaction can also see its own statistics (not yet flushed out to the shared memory statistics) in the views pg_stat_xact_all_tables, pg_stat_xact_sys_tables, pg_stat_xact_user_tables, and pg_stat_xact_user_functions. These numbers do not act as stated above; instead they update continuously throughout the transaction. Some of the information in the dynamic statistics views shown in Table 1 is security restricted. Ordinary users can only see all the information about their own sessions (sessions belonging to a role that they are a member of). In rows about other sessions, many columns will be null. Note, however, that the existence of a session and its general properties such as its sessions user and database are visible to all users. Superusers and roles with privileges of built-in role pg_read_all_stats can see all the information about all sessions. Dynamic Statics Views View Name Description pg_stat_activity One row per server process, showing information related to the current activity of that process, such as state and current query. pg_stat_replication One row per WAL sender process, showing statistics about replication to that sender’s connected standby server. pg_stat_wal_receiver Only one row, showing statistics about the WAL receiver from that receiver’s connected server. pg_stat_recovery_prefetch Only one row, showing statistics about blocks prefetched during recovery. pg_stat_subscription At least one row per subscription, showing information about the subscription workers. pg_stat_ssl One row per connection (regular and replication), showing information about SSL used on this connection. pg_stat_gssapi One row per connection (regular and replication), showing information about GSSAPI authentication and encryption used on this connection. pg_stat_progress_analyze One row for each backend (including autovacuum worker processes) running ANALYZE, showing current progress. pg_stat_progress_create_index One row for each backend running CREATE INDEX or REINDEX, showing current progress. pg_stat_progress_vacuum One row for each backend (including autovacuum worker processes) running VACUUM, showing current progress. pg_stat_progress_cluster One row for each backend running CLUSTER or VACUUM FULL, showing current progress. pg_stat_progress_basebackup One row for each WAL sender process streaming a base backup, showing current progress. pg_stat_progress_copy One row for each backend running COPY, showing current progress. Collected Statistics Views View Name Description pg_stat_archiver One row only, showing statistics about the WAL archiver process’s activity. See pg_stat_archiver for details. pg_stat_bgwriter One row only, showing statistics about the background writer process’s activity. See pg_stat_bgwriter for details. pg_stat_wal One row only, showing statistics about WAL activity. See pg_stat_wal for details. pg_stat_database One row per database, showing database-wide statistics. See pg_stat_database for details. pg_stat_database_conflicts One row per database, showing database-wide statistics about query cancels due to conflict with recovery on standby servers. See pg_stat_database_conflicts for details. pg_stat_all_tables One row for each table in the current database, showing statistics about accesses to that specific table. See pg_stat_all_tables for details. pg_stat_sys_tables Same as pg_stat_all_tables, except that only system tables are shown. pg_stat_user_tables Same as pg_stat_all_tables, except that only user tables are shown. pg_stat_xact_all_tables Similar to pg_stat_all_tables, but counts actions taken so far within the current transaction (which are not yet included in pg_stat_all_tables and related views). The columns for numbers of live and dead rows and vacuum and analyze actions are not present in this view. pg_stat_xact_sys_tables Same as pg_stat_xact_all_tables, except that only system tables are shown. pg_stat_xact_user_tables Same as pg_stat_xact_all_tables, except that only user tables are shown. pg_stat_all_indexes One row for each index in the current database, showing statistics about accesses to that specific index. See pg_stat_all_indexes for details. pg_stat_sys_indexes Same as pg_stat_all_indexes, except that only indexes on system tables are shown. pg_stat_user_indexes Same as pg_stat_all_indexes, except that only indexes on user tables are shown. pg_statio_all_tables One row for each table in the current database, showing statistics about I/O on that specific table. See pg_statio_all_tables for details. pg_statio_sys_tables Same as pg_statio_all_tables, except that only system tables are shown. pg_statio_user_tables Same as pg_statio_all_tables, except that only user tables are shown. pg_statio_all_indexes One row for each index in the current database, showing statistics about I/O on that specific index. See pg_statio_all_indexes for details. pg_statio_sys_indexes Same as pg_statio_all_indexes, except that only indexes on system tables are shown. pg_statio_user_indexes Same as pg_statio_all_indexes, except that only indexes on user tables are shown. pg_statio_all_sequences One row for each sequence in the current database, showing statistics about I/O on that specific sequence. See pg_statio_all_sequences for details. pg_statio_sys_sequences Same as pg_statio_all_sequences, except that only system sequences are shown. (Presently, no system sequences are defined, so this view is always empty.) pg_statio_user_sequences Same as pg_statio_all_sequences, except that only user sequences are shown. pg_stat_user_functions One row for each tracked function, showing statistics about executions of that function. See pg_stat_user_functions for details. pg_stat_xact_user_functions Similar to pg_stat_user_functions, but counts only calls during the current transaction (which are not yet included in pg_stat_user_functions). pg_stat_slru One row per SLRU, showing statistics of operations. See pg_stat_slru for details. pg_stat_replication_slots One row per replication slot, showing statistics about the replication slot’s usage. See pg_stat_replication_slots for details. pg_stat_subscription_stats One row per subscription, showing statistics about errors. See pg_stat_subscription_stats for details. The per-index statistics are particularly useful to determine which indexes are being used and how effective they are. The pg_statio_ views are primarily useful to determine the effectiveness of the buffer cache. When the number of actual disk reads is much smaller than the number of buffer hits, then the cache is satisfying most read requests without invoking a kernel call. However, these statistics do not give the entire story: due to the way in which IvorySQL handles disk I/O, data that is not in the IvorySQL buffer cache might still reside in the kernel’s I/O cache, and might therefore still be fetched without requiring a physical read. Users interested in obtaining more detailed information on IvorySQL I/O behavior are advised to use the IvorySQL statistics views in combination with operating system utilities that allow insight into the kernel’s handling of I/O. The pg_stat_activity view will have one row per server process, showing information related to the current activity of that process. pg_stat_activity View Column TypeDescription datid `oid`OID of the database this backend is connected to datname `name`Name of the database this backend is connected to pid `integer`Process ID of this backend leader_pid integer`Process ID of the parallel group leader, if this process is a parallel query worker. `NULL if this process is a parallel group leader or does not participate in parallel query. usesysid `oid`OID of the user logged into this backend usename `name`Name of the user logged into this backend application_name `text`Name of the application that is connected to this backend client_addr `inet`IP address of the client connected to this backend. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum. client_hostname text`Host name of the connected client, as reported by a reverse DNS lookup of `client_addr. This field will only be non-null for IP connections, and only when log_hostname is enabled. client_port integer`TCP port number that the client is using for communication with this backend, or `-1 if a Unix socket is used. If this field is null, it indicates that this is an internal server process. backend_start `timestamp with time zone`Time when this process was started. For client backends, this is the time the client connected to the server. xact_start timestamp with time zone`Time when this process' current transaction was started, or null if no transaction is active. If the current query is the first of its transaction, this column is equal to the `query_start column. query_start timestamp with time zone`Time when the currently active query was started, or if `state is not active, when the last query was started state_change timestamp with time zone`Time when the `state was last changed wait_event_type `text`The type of event for which the backend is waiting, if any; otherwise NULL. wait_event `text`Wait event name if backend is currently waiting, otherwise NULL. state text`Current overall state of this backend. Possible values are:`active: The backend is executing a query.idle: The backend is waiting for a new client command.idle in transaction: The backend is in a transaction, but is not currently executing a query.idle in transaction (aborted): This state is similar to idle in transaction, except one of the statements in the transaction caused an error.fastpath function call: The backend is executing a fast-path function.disabled: This state is reported if track_activities is disabled in this backend. backend_xid `xid`Top-level transaction identifier of this backend, if any. backend_xmin xid`The current backend’s `xmin horizon. query_id bigint`Identifier of this backend’s most recent query. If `state is active this field shows the identifier of the currently executing query. In all other states, it shows the identifier of last query that was executed. Query identifiers are not computed by default so this field will be null unless compute_query_id parameter is enabled or a third-party module that computes query identifiers is configured. query text`Text of this backend’s most recent query. If `state is active this field shows the currently executing query. In all other states, it shows the last query that was executed. By default the query text is truncated at 1024 bytes; this value can be changed via the parameter track_activity_query_size. backend_type text`Type of current backend. Possible types are `autovacuum launcher, autovacuum worker, logical replication launcher, logical replication worker, parallel worker, background writer, client backend, checkpointer, archiver, startup, walreceiver, walsender and walwriter. In addition, background workers registered by extensions may have additional types. Note The wait_event and state columns are independent. If a backend is in the active state, it may or may not be waiting on some event. If the state is active and wait_event is non-null, it means that a query is being executed, but is being blocked somewhere in the system. Wait Event Types Wait Event Type Description Activity The server process is idle. This event type indicates a process waiting for activity in its main processing loop. wait_event will identify the specific wait point BufferPin The server process is waiting for exclusive access to a data buffer. Buffer pin waits can be protracted if another process holds an open cursor that last read data from the buffer in question. Client The server process is waiting for activity on a socket connected to a user application. Thus, the server expects something to happen that is independent of its internal processes. wait_event will identify the specific wait point. Extension The server process is waiting for some condition defined by an extension module. IO The server process is waiting for an I/O operation to complete. wait_event will identify the specific wait point. IPC The server process is waiting for some interaction with another server process. wait_event will identify the specific wait point. Lock The server process is waiting for a heavyweight lock. Heavyweight locks, also known as lock manager locks or simply locks, primarily protect SQL-visible objects such as tables. However, they are also used to ensure mutual exclusion for certain internal operations such as relation extension. wait_event will identify the type of lock awaited. LWLock The server process is waiting for a lightweight lock. Most such locks protect a particular data structure in shared memory. wait_event will contain a name identifying the purpose of the lightweight lock. (Some locks have specific names; others are part of a group of locks each with a similar purpose.) . Timeout The server process is waiting for a timeout to expire. wait_event will identify the specific wait point. Wait Events of Type Activity Activity Wait Event Description ArchiverMain Waiting in main loop of archiver process. AutoVacuumMain Waiting in main loop of autovacuum launcher process. BgWriterHibernate Waiting in background writer process, hibernating. BgWriterMain Waiting in main loop of background writer process. CheckpointerMain Waiting in main loop of checkpointer process. LogicalApplyMain Waiting in main loop of logical replication apply process. LogicalLauncherMain Waiting in main loop of logical replication launcher process. RecoveryWalStream Waiting in main loop of startup process for WAL to arrive, during streaming recovery. SysLoggerMain Waiting in main loop of syslogger process. WalReceiverMain Waiting in main loop of WAL receiver process. WalSenderMain Waiting in main loop of WAL sender process. WalWriterMain Waiting in main loop of WAL writer process. Wait Events of Type BufferPin BufferPin Wait Event Description BufferPin Waiting to acquire an exclusive pin on a buffer. Wait Events of Type Client Client Wait Event Description ClientRead Waiting to read data from the client. ClientWrite Waiting to write data to the client. GSSOpenServer Waiting to read data from the client while establishing a GSSAPI session. LibPQWalReceiverConnect Waiting in WAL receiver to establish connection to remote server. LibPQWalReceiverReceive Waiting in WAL receiver to receive data from remote server. SSLOpenServer Waiting for SSL while attempting connection. WalSenderWaitForWAL Waiting for WAL to be flushed in WAL sender process. WalSenderWriteData Waiting for any activity when processing replies from WAL receiver in WAL sender process. Wait Events of Type Extension Extension Wait Event Description Extension Waiting in an extension. Wait Events of Type IO IO Wait Event Description BaseBackupRead Waiting for base backup to read from a file. BufFileRead Waiting for a read from a buffered file. BufFileWrite Waiting for a write to a buffered file. BufFileTruncate Waiting for a buffered file to be truncated. ControlFileRead Waiting for a read from the pg_control file. ControlFileSync Waiting for the pg_control file to reach durable storage. ControlFileSyncUpdate Waiting for an update to the pg_control file to reach durable storage. ControlFileWrite Waiting for a write to the pg_control file. ControlFileWriteUpdate Waiting for a write to update the pg_control file. CopyFileRead Waiting for a read during a file copy operation. CopyFileWrite Waiting for a write during a file copy operation. DSMFillZeroWrite Waiting to fill a dynamic shared memory backing file with zeroes. DataFileExtend Waiting for a relation data file to be extended. DataFileFlush Waiting for a relation data file to reach durable storage. DataFileImmediateSync Waiting for an immediate synchronization of a relation data file to durable storage. DataFilePrefetch Waiting for an asynchronous prefetch from a relation data file. DataFileRead Waiting for a read from a relation data file. DataFileSync Waiting for changes to a relation data file to reach durable storage. DataFileTruncate Waiting for a relation data file to be truncated. DataFileWrite Waiting for a write to a relation data file. LockFileAddToDataDirRead Waiting for a read while adding a line to the data directory lock file. LockFileAddToDataDirSync Waiting for data to reach durable storage while adding a line to the data directory lock file. LockFileAddToDataDirWrite Waiting for a write while adding a line to the data directory lock file. LockFileCreateRead Waiting to read while creating the data directory lock file. LockFileCreateSync Waiting for data to reach durable storage while creating the data directory lock file. LockFileCreateWrite Waiting for a write while creating the data directory lock file. LockFileReCheckDataDirRead Waiting for a read during recheck of the data directory lock file. LogicalRewriteCheckpointSync Waiting for logical rewrite mappings to reach durable storage during a checkpoint. LogicalRewriteMappingSync Waiting for mapping data to reach durable storage during a logical rewrite. LogicalRewriteMappingWrite Waiting for a write of mapping data during a logical rewrite. LogicalRewriteSync Waiting for logical rewrite mappings to reach durable storage. LogicalRewriteTruncate Waiting for truncate of mapping data during a logical rewrite. LogicalRewriteWrite Waiting for a write of logical rewrite mappings. RelationMapRead Waiting for a read of the relation map file. RelationMapSync Waiting for the relation map file to reach durable storage. RelationMapWrite Waiting for a write to the relation map file. ReorderBufferRead Waiting for a read during reorder buffer management. ReorderBufferWrite Waiting for a write during reorder buffer management. ReorderLogicalMappingRead Waiting for a read of a logical mapping during reorder buffer management. ReplicationSlotRead Waiting for a read from a replication slot control file. ReplicationSlotRestoreSync Waiting for a replication slot control file to reach durable storage while restoring it to memory. ReplicationSlotSync Waiting for a replication slot control file to reach durable storage. ReplicationSlotWrite Waiting for a write to a replication slot control file. SLRUFlushSync Waiting for SLRU data to reach durable storage during a checkpoint or database shutdown. SLRURead Waiting for a read of an SLRU page. SLRUSync Waiting for SLRU data to reach durable storage following a page write. SLRUWrite Waiting for a write of an SLRU page. SnapbuildRead Waiting for a read of a serialized historical catalog snapshot. SnapbuildSync Waiting for a serialized historical catalog snapshot to reach durable storage. SnapbuildWrite Waiting for a write of a serialized historical catalog snapshot. TimelineHistoryFileSync Waiting for a timeline history file received via streaming replication to reach durable storage. TimelineHistoryFileWrite Waiting for a write of a timeline history file received via streaming replication. TimelineHistoryRead Waiting for a read of a timeline history file. TimelineHistorySync Waiting for a newly created timeline history file to reach durable storage. TimelineHistoryWrite Waiting for a write of a newly created timeline history file. TwophaseFileRead Waiting for a read of a two phase state file. TwophaseFileSync Waiting for a two phase state file to reach durable storage. TwophaseFileWrite Waiting for a write of a two phase state file. VersionFileWrite Waiting for the version file to be written while creating a database. WALBootstrapSync Waiting for WAL to reach durable storage during bootstrapping. WALBootstrapWrite Waiting for a write of a WAL page during bootstrapping. WALCopyRead Waiting for a read when creating a new WAL segment by copying an existing one. WALCopySync Waiting for a new WAL segment created by copying an existing one to reach durable storage. WALCopyWrite Waiting for a write when creating a new WAL segment by copying an existing one. WALInitSync Waiting for a newly initialized WAL file to reach durable storage. WALInitWrite Waiting for a write while initializing a new WAL file. WALRead Waiting for a read from a WAL file. WALSenderTimelineHistoryRead Waiting for a read from a timeline history file during a walsender timeline command. WALSync Waiting for a WAL file to reach durable storage. WALSyncMethodAssign Waiting for data to reach durable storage while assigning a new WAL sync method. WALWrite Waiting for a write to a WAL file. Wait Events of Type IPC IPC Wait Event Description AppendReady Waiting for subplan nodes of an Append plan node to be ready. ArchiveCleanupCommand Waiting for archive_cleanup_command to complete. ArchiveCommand Waiting for archive_command to complete. BackendTermination Waiting for the termination of another backend. BackupWaitWalArchive Waiting for WAL files required for a backup to be successfully archived. BgWorkerShutdown Waiting for background worker to shut down. BgWorkerStartup Waiting for background worker to start up. BtreePage Waiting for the page number needed to continue a parallel B-tree scan to become available. BufferIO Waiting for buffer I/O to complete. CheckpointDone Waiting for a checkpoint to complete. CheckpointStart Waiting for a checkpoint to start. ExecuteGather Waiting for activity from a child process while executing a Gather plan node. HashBatchAllocate Waiting for an elected Parallel Hash participant to allocate a hash table. HashBatchElect Waiting to elect a Parallel Hash participant to allocate a hash table. HashBatchLoad Waiting for other Parallel Hash participants to finish loading a hash table. HashBuildAllocate Waiting for an elected Parallel Hash participant to allocate the initial hash table. HashBuildElect Waiting to elect a Parallel Hash participant to allocate the initial hash table. HashBuildHashInner Waiting for other Parallel Hash participants to finish hashing the inner relation. HashBuildHashOuter Waiting for other Parallel Hash participants to finish partitioning the outer relation. HashGrowBatchesAllocate Waiting for an elected Parallel Hash participant to allocate more batches. HashGrowBatchesDecide Waiting to elect a Parallel Hash participant to decide on future batch growth. HashGrowBatchesElect Waiting to elect a Parallel Hash participant to allocate more batches. HashGrowBatchesFinish Waiting for an elected Parallel Hash participant to decide on future batch growth. HashGrowBatchesRepartition Waiting for other Parallel Hash participants to finish repartitioning. HashGrowBucketsAllocate Waiting for an elected Parallel Hash participant to finish allocating more buckets. HashGrowBucketsElect Waiting to elect a Parallel Hash participant to allocate more buckets. HashGrowBucketsReinsert Waiting for other Parallel Hash participants to finish inserting tuples into new buckets. LogicalSyncData Waiting for a logical replication remote server to send data for initial table synchronization. LogicalSyncStateChange Waiting for a logical replication remote server to change state. MessageQueueInternal Waiting for another process to be attached to a shared message queue. MessageQueuePutMessage Waiting to write a protocol message to a shared message queue. MessageQueueReceive Waiting to receive bytes from a shared message queue. MessageQueueSend Waiting to send bytes to a shared message queue. ParallelBitmapScan Waiting for parallel bitmap scan to become initialized. ParallelCreateIndexScan Waiting for parallel CREATE INDEX workers to finish heap scan. ParallelFinish Waiting for parallel workers to finish computing. ProcArrayGroupUpdate Waiting for the group leader to clear the transaction ID at end of a parallel operation. ProcSignalBarrier Waiting for a barrier event to be processed by all backends. Promote Waiting for standby promotion. RecoveryConflictSnapshot Waiting for recovery conflict resolution for a vacuum cleanup. RecoveryConflictTablespace Waiting for recovery conflict resolution for dropping a tablespace. RecoveryEndCommand Waiting for recovery_end_command to complete. RecoveryPause Waiting for recovery to be resumed. ReplicationOriginDrop Waiting for a replication origin to become inactive so it can be dropped. ReplicationSlotDrop Waiting for a replication slot to become inactive so it can be dropped. RestoreCommand Waiting for restore_command to complete. SafeSnapshot Waiting to obtain a valid snapshot for a READ ONLY DEFERRABLE transaction. SyncRep Waiting for confirmation from a remote server during synchronous replication. WalReceiverExit Waiting for the WAL receiver to exit. WalReceiverWaitStart Waiting for startup process to send initial data for streaming replication. XactGroupUpdate Waiting for the group leader to update transaction status at end of a parallel operation. Wait Events of Type Lock Lock Wait Event Description advisory Waiting to acquire an advisory user lock. extend Waiting to extend a relation. frozenid Waiting to update pg_database.datfrozenxid and pg_database.datminmxid. object Waiting to acquire a lock on a non-relation database object. page Waiting to acquire a lock on a page of a relation. relation Waiting to acquire a lock on a relation. spectoken Waiting to acquire a speculative insertion lock. transactionid Waiting for a transaction to finish. tuple Waiting to acquire a lock on a tuple. userlock Waiting to acquire a user lock. virtualxid Waiting to acquire a virtual transaction ID lock. Wait Events of Type LWLock LWLock Wait Event Description AddinShmemInit Waiting to manage an extension’s space allocation in shared memory. AutoFile Waiting to update the postgresql.auto.conf file. Autovacuum Waiting to read or update the current state of autovacuum workers. AutovacuumSchedule Waiting to ensure that a table selected for autovacuum still needs vacuuming. BackgroundWorker Waiting to read or update background worker state. BtreeVacuum Waiting to read or update vacuum-related information for a B-tree index. BufferContent Waiting to access a data page in memory. BufferMapping Waiting to associate a data block with a buffer in the buffer pool. CheckpointerComm Waiting to manage fsync requests. CommitTs Waiting to read or update the last value set for a transaction commit timestamp. CommitTsBuffer Waiting for I/O on a commit timestamp SLRU buffer. CommitTsSLRU Waiting to access the commit timestamp SLRU cache. ControlFile Waiting to read or update the pg_control file or create a new WAL file. DynamicSharedMemoryControl Waiting to read or update dynamic shared memory allocation information. LockFastPath Waiting to read or update a process' fast-path lock information. LockManager Waiting to read or update information about “heavyweight” locks. LogicalRepWorker Waiting to read or update the state of logical replication workers. MultiXactGen Waiting to read or update shared multixact state. MultiXactMemberBuffer Waiting for I/O on a multixact member SLRU buffer. MultiXactMemberSLRU Waiting to access the multixact member SLRU cache. MultiXactOffsetBuffer Waiting for I/O on a multixact offset SLRU buffer. MultiXactOffsetSLRU Waiting to access the multixact offset SLRU cache. MultiXactTruncation Waiting to read or truncate multixact information. NotifyBuffer Waiting for I/O on a NOTIFY message SLRU buffer. NotifyQueue Waiting to read or update NOTIFY messages. NotifyQueueTail Waiting to update limit on NOTIFY message storage. NotifySLRU Waiting to access the NOTIFY message SLRU cache. OidGen Waiting to allocate a new OID. OldSnapshotTimeMap Waiting to read or update old snapshot control information. ParallelAppend Waiting to choose the next subplan during Parallel Append plan execution. ParallelHashJoin Waiting to synchronize workers during Parallel Hash Join plan execution. ParallelQueryDSA Waiting for parallel query dynamic shared memory allocation. PerSessionDSA Waiting for parallel query dynamic shared memory allocation. PerSessionRecordType Waiting to access a parallel query’s information about composite types. PerSessionRecordTypmod Waiting to access a parallel query’s information about type modifiers that identify anonymous record types. PerXactPredicateList Waiting to access the list of predicate locks held by the current serializable transaction during a parallel query. PredicateLockManager Waiting to access predicate lock information used by serializable transactions. ProcArray Waiting to access the shared per-process data structures (typically, to get a snapshot or report a session’s transaction ID). RelationMapping Waiting to read or update a pg_filenode.map file (used to track the filenode assignments of certain system catalogs). RelCacheInit Waiting to read or update a pg_internal.init relation cache initialization file. ReplicationOrigin Waiting to create, drop or use a replication origin. ReplicationOriginState Waiting to read or update the progress of one replication origin. ReplicationSlotAllocation Waiting to allocate or free a replication slot. ReplicationSlotControl Waiting to read or update replication slot state. ReplicationSlotIO Waiting for I/O on a replication slot. SerialBuffer Waiting for I/O on a serializable transaction conflict SLRU buffer. SerializableFinishedList Waiting to access the list of finished serializable transactions. SerializablePredicateList Waiting to access the list of predicate locks held by serializable transactions. PgStatsDSA Waiting for stats dynamic shared memory allocator access PgStatsHash Waiting for stats shared memory hash table access PgStatsData Waiting for shared memory stats data access SerializableXactHash Waiting to read or update information about serializable transactions. SerialSLRU Waiting to access the serializable transaction conflict SLRU cache. SharedTidBitmap Waiting to access a shared TID bitmap during a parallel bitmap index scan. SharedTupleStore Waiting to access a shared tuple store during parallel query. ShmemIndex Waiting to find or allocate space in shared memory. SInvalRead Waiting to retrieve messages from the shared catalog invalidation queue. SInvalWrite Waiting to add a message to the shared catalog invalidation queue. SubtransBuffer Waiting for I/O on a sub-transaction SLRU buffer. SubtransSLRU Waiting to access the sub-transaction SLRU cache. SyncRep Waiting to read or update information about the state of synchronous replication. SyncScan Waiting to select the starting location of a synchronized table scan. TablespaceCreate Waiting to create or drop a tablespace. TwoPhaseState Waiting to read or update the state of prepared transactions. WALBufMapping Waiting to replace a page in WAL buffers. WALInsert Waiting to insert WAL data into a memory buffer. WALWrite Waiting for WAL buffers to be written to disk. WrapLimitsVacuum Waiting to update limits on transaction id and multixact consumption. XactBuffer Waiting for I/O on a transaction status SLRU buffer. XactSLRU Waiting to access the transaction status SLRU cache. XactTruncation Waiting to execute pg_xact_status or update the oldest transaction ID available to it. XidGen Waiting to allocate a new transaction ID. Note Extensions can add LWLock types to the list shown in Table 12. In some cases, the name assigned by an extension will not be available in all server processes; so an LWLock wait event might be reported as just “extension” rather than the extension-assigned name. Wait Events of Type Timeout Timeout Wait Event Description BaseBackupThrottle Waiting during base backup when throttling activity. CheckpointWriteDelay Waiting between writes while performing a checkpoint. PgSleep Waiting due to a call to pg_sleep or a sibling function. RecoveryApplyDelay Waiting to apply WAL during recovery because of a delay setting. RecoveryRetrieveRetryInterval Waiting during recovery when WAL data is not available from any source (pg_wal, archive or stream). RegisterSyncRequest Waiting while sending synchronization requests to the checkpointer, because the request queue is full. VacuumDelay Waiting in a cost-based vacuum delay point. VacuumTruncate Waiting to acquire an exclusive lock to truncate off any empty pages at the end of a table vacuumed. Here is an example of how wait events can be viewed: SELECT pid, wait_event_type, wait_event FROM pg_stat_activity WHERE wait_event is NOT NULL; pid | wait_event_type | wait_event ------+-----------------+------------ 2540 | Lock | relation 6644 | LWLock | ProcArray (2 rows) The pg_stat_replication view will contain one row per WAL sender process, showing statistics about replication to that sender’s connected standby server. Only directly connected standbys are listed; no information is available about downstream standby servers. pg_stat_replication View Column TypeDescription pid `integer`Process ID of a WAL sender process usesysid `oid`OID of the user logged into this WAL sender process usename `name`Name of the user logged into this WAL sender process application_name `text`Name of the application that is connected to this WAL sender client_addr `inet`IP address of the client connected to this WAL sender. If this field is null, it indicates that the client is connected via a Unix socket on the server machine. client_hostname text`Host name of the connected client, as reported by a reverse DNS lookup of `client_addr. This field will only be non-null for IP connections, and only when log_hostname is enabled. client_port integer`TCP port number that the client is using for communication with this WAL sender, or `-1 if a Unix socket is used backend_start `timestamp with time zone`Time when this process was started, i.e., when the client connected to this WAL sender backend_xmin xid`This standby’s `xmin horizon reported by hot_standby_feedback. state text`Current WAL sender state. Possible values are:`startup: This WAL sender is starting up.catchup: This WAL sender’s connected standby is catching up with the primary.streaming: This WAL sender is streaming changes after its connected standby server has caught up with the primary.backup: This WAL sender is sending a backup.stopping: This WAL sender is stopping. sent_lsn `pg_lsn`Last write-ahead log location sent on this connection write_lsn `pg_lsn`Last write-ahead log location written to disk by this standby server flush_lsn `pg_lsn`Last write-ahead log location flushed to disk by this standby server replay_lsn `pg_lsn`Last write-ahead log location replayed into the database on this standby server write_lag interval`Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it (but not yet flushed it or applied it). This can be used to gauge the delay that `synchronous_commit level remote_write incurred while committing if this server was configured as a synchronous standby. flush_lag interval`Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it (but not yet applied it). This can be used to gauge the delay that `synchronous_commit level on incurred while committing if this server was configured as a synchronous standby. replay_lag interval`Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it. This can be used to gauge the delay that `synchronous_commit level remote_apply incurred while committing if this server was configured as a synchronous standby. sync_priority `integer`Priority of this standby server for being chosen as the synchronous standby in a priority-based synchronous replication. This has no effect in a quorum-based synchronous replication. sync_state text`Synchronous state of this standby server. Possible values are:`async: This standby server is asynchronous.potential: This standby server is now asynchronous, but can potentially become synchronous if one of current synchronous ones fails.sync: This standby server is synchronous.quorum: This standby server is considered as a candidate for quorum standbys. reply_time `timestamp with time zone`Send time of last reply message received from standby server The lag times reported in the pg_stat_replication view are measurements of the time taken for recent WAL to be written, flushed and replayed and for the sender to know about it. These times represent the commit delay that was (or would have been) introduced by each synchronous commit level, if the remote server was configured as a synchronous standby. For an asynchronous standby, the replay_lag column approximates the delay before recent transactions became visible to queries. If the standby server has entirely caught up with the sending server and there is no more WAL activity, the most recently measured lag times will continue to be displayed for a short time and then show NULL. Lag times work automatically for physical replication. Logical decoding plugins may optionally emit tracking messages; if they do not, the tracking mechanism will simply display NULL lag. Note The reported lag times are not predictions of how long it will take for the standby to catch up with the sending server assuming the current rate of replay. Such a system would show similar times while new WAL is being generated, but would differ when the sender becomes idle. In particular, when the standby has caught up completely, pg_stat_replication shows the time taken to write, flush and replay the most recent reported WAL location rather than zero as some users might expect. This is consistent with the goal of measuring synchronous commit and transaction visibility delays for recent write transactions. To reduce confusion for users expecting a different model of lag, the lag columns revert to NULL after a short time on a fully replayed idle system. Monitoring systems should choose whether to represent this as missing data, zero or continue to display the last known value. The pg_stat_replication_slots view will contain one row per logical replication slot, showing statistics about its usage. pg_stat_replication_slots View Column TypeDescription slot_name `text`A unique, cluster-wide identifier for the replication slot spill_txns bigint`Number of transactions spilled to disk once the memory used by logical decoding to decode changes from WAL has exceeded `logical_decoding_work_mem. The counter gets incremented for both top-level transactions and subtransactions. spill_count `bigint`Number of times transactions were spilled to disk while decoding changes from WAL for this slot. This counter is incremented each time a transaction is spilled, and the same transaction may be spilled multiple times. spill_bytes bigint`Amount of decoded transaction data spilled to disk while performing decoding of changes from WAL for this slot. This and other spill counters can be used to gauge the I/O which occurred during logical decoding and allow tuning `logical_decoding_work_mem. stream_txns bigint`Number of in-progress transactions streamed to the decoding output plugin after the memory used by logical decoding to decode changes from WAL for this slot has exceeded `logical_decoding_work_mem. Streaming only works with top-level transactions (subtransactions can’t be streamed independently), so the counter is not incremented for subtransactions. `stream_count``bigint`Number of times in-progress transactions were streamed to the decoding output plugin while decoding changes from WAL for this slot. This counter is incremented each time a transaction is streamed, and the same transaction may be streamed multiple times. stream_bytes``bigint`Amount of transaction data decoded for streaming in-progress transactions to the decoding output plugin while decoding changes from WAL for this slot. This and other streaming counters for this slot can be used to tune `logical_decoding_work_mem. total_txns `bigint`Number of decoded transactions sent to the decoding output plugin for this slot. This counts top-level transactions only, and is not incremented for subtransactions. Note that this includes the transactions that are streamed and/or spilled. `total_bytes``bigint`Amount of transaction data decoded for sending transactions to the decoding output plugin while decoding changes from WAL for this slot. Note that this includes data that is streamed and/or spilled. stats_reset `timestamp with time zone`Time at which these statistics were last reset The pg_stat_wal_receiver view will contain only one row, showing statistics about the WAL receiver from that receiver’s connected server. pg_stat_wal_receiver View Column TypeDescription pid `integer`Process ID of the WAL receiver process status `text`Activity status of the WAL receiver process receive_start_lsn `pg_lsn`First write-ahead log location used when WAL receiver is started receive_start_tli `integer`First timeline number used when WAL receiver is started written_lsn `pg_lsn`Last write-ahead log location already received and written to disk, but not flushed. This should not be used for data integrity checks. flushed_lsn `pg_lsn`Last write-ahead log location already received and flushed to disk, the initial value of this field being the first log location used when WAL receiver is started received_tli `integer`Timeline number of last write-ahead log location received and flushed to disk, the initial value of this field being the timeline number of the first log location used when WAL receiver is started last_msg_send_time `timestamp with time zone`Send time of last message received from origin WAL sender last_msg_receipt_time `timestamp with time zone`Receipt time of last message received from origin WAL sender latest_end_lsn `pg_lsn`Last write-ahead log location reported to origin WAL sender latest_end_time `timestamp with time zone`Time of last write-ahead log location reported to origin WAL sender slot_name `text`Replication slot name used by this WAL receiver sender_host text`Host of the IvorySQL instance this WAL receiver is connected to. This can be a host name, an IP address, or a directory path if the connection is via Unix socket. (The path case can be distinguished because it will always be an absolute path, beginning with `/.) sender_port `integer`Port number of the IvorySQL instance this WAL receiver is connected to. conninfo `text`Connection string used by this WAL receiver, with security-sensitive fields obfuscated. The pg_stat_recovery_prefetch view will contain only one row. The columns wal_distance, block_distance and io_depth show current values, and the other columns show cumulative counters that can be reset with the pg_stat_reset_shared function. pg_stat_recovery_prefetch View Column TypeDescription stats_reset `timestamp with time zone`Time at which these statistics were last reset prefetch `bigint`Number of blocks prefetched because they were not in the buffer pool hit `bigint`Number of blocks not prefetched because they were already in the buffer pool skip_init `bigint`Number of blocks not prefetched because they would be zero-initialized skip_new `bigint`Number of blocks not prefetched because they didn’t exist yet skip_fpw `bigint`Number of blocks not prefetched because a full page image was included in the WAL skip_rep `bigint`Number of blocks not prefetched because they were already recently prefetched wal_distance `int`How many bytes ahead the prefetcher is looking block_distance `int`How many blocks ahead the prefetcher is looking io_depth `int`How many prefetches have been initiated but are not yet known to have completed pg_stat_subscription View Column TypeDescription subid `oid`OID of the subscription subname `name`Name of the subscription pid `integer`Process ID of the subscription worker process relid `oid`OID of the relation that the worker is synchronizing; null for the main apply worker received_lsn `pg_lsn`Last write-ahead log location received, the initial value of this field being 0 last_msg_send_time `timestamp with time zone`Send time of last message received from origin WAL sender last_msg_receipt_time `timestamp with time zone`Receipt time of last message received from origin WAL sender latest_end_lsn `pg_lsn`Last write-ahead log location reported to origin WAL sender latest_end_time `timestamp with time zone`Time of last write-ahead log location reported to origin WAL sender The pg_stat_subscription_stats view will contain one row per subscription. pg_stat_subscription_stats View Column TypeDescription subid `oid`OID of the subscription subname `name`Name of the subscription apply_error_count `bigint`Number of times an error occurred while applying changes sync_error_count `bigint`Number of times an error occurred during the initial table synchronization stats_reset `timestamp with time zone`Time at which these statistics were last reset The pg_stat_ssl view will contain one row per backend or WAL sender process, showing statistics about SSL usage on this connection. It can be joined to pg_stat_activity or pg_stat_replication on the pid column to get more details about the connection. pg_stat_ssl View Column TypeDescription pid `integer`Process ID of a backend or WAL sender process ssl `boolean`True if SSL is used on this connection version `text`Version of SSL in use, or NULL if SSL is not in use on this connection cipher `text`Name of SSL cipher in use, or NULL if SSL is not in use on this connection bits `integer`Number of bits in the encryption algorithm used, or NULL if SSL is not used on this connection client_dn text`Distinguished Name (DN) field from the client certificate used, or NULL if no client certificate was supplied or if SSL is not in use on this connection. This field is truncated if the DN field is longer than `NAMEDATALEN (64 characters in a standard build). client_serial `numeric`Serial number of the client certificate, or NULL if no client certificate was supplied or if SSL is not in use on this connection. The combination of certificate serial number and certificate issuer uniquely identifies a certificate (unless the issuer erroneously reuses serial numbers). issuer_dn text`DN of the issuer of the client certificate, or NULL if no client certificate was supplied or if SSL is not in use on this connection. This field is truncated like `client_dn. The pg_stat_gssapi view will contain one row per backend, showing information about GSSAPI usage on this connection. It can be joined to pg_stat_activity or pg_stat_replication on the pid column to get more details about the connection. pg_stat_gssapi View Column TypeDescription pid `integer`Process ID of a backend gss_authenticated `boolean`True if GSSAPI authentication was used for this connection principal text`Principal used to authenticate this connection, or NULL if GSSAPI was not used to authenticate this connection. This field is truncated if the principal is longer than `NAMEDATALEN (64 characters in a standard build). encrypted `boolean`True if GSSAPI encryption is in use on this connection The pg_stat_archiver view will always have a single row, containing data about the archiver process of the cluster. pg_stat_archiver View archived_count `bigint`Number of WAL files that have been successfully archived last_archived_wal `text`Name of the WAL file most recently successfully archived last_archived_time `timestamp with time zone`Time of the most recent successful archive operation failed_count `bigint`Number of failed attempts for archiving WAL files last_failed_wal `text`Name of the WAL file of the most recent failed archival operation last_failed_time `timestamp with time zone`Time of the most recent failed archival operation stats_reset `timestamp with time zone`Time at which these statistics were last reset Normally, WAL files are archived in order, oldest to newest, but that is not guaranteed, and does not hold under special circumstances like when promoting a standby or after crash recovery. Therefore it is not safe to assume that all files older than last_archived_wal have also been successfully archived. The pg_stat_bgwriter view will always have a single row, containing global data for the cluster. pg_stat_bgwriter View Column TypeDescription checkpoints_timed `bigint`Number of scheduled checkpoints that have been performed checkpoints_req `bigint`Number of requested checkpoints that have been performed checkpoint_write_time `double precision`Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in milliseconds checkpoint_sync_time `double precision`Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in milliseconds buffers_checkpoint `bigint`Number of buffers written during checkpoints buffers_clean `bigint`Number of buffers written by the background writer maxwritten_clean `bigint`Number of times the background writer stopped a cleaning scan because it had written too many buffers buffers_backend `bigint`Number of buffers written directly by a backend buffers_backend_fsync bigint`Number of times a backend had to execute its own `fsync call (normally the background writer handles those even when the backend does its own write) buffers_alloc `bigint`Number of buffers allocated stats_reset `timestamp with time zone`Time at which these statistics were last reset The pg_stat_wal view will always have a single row, containing data about WAL activity of the cluster. pg_stat_wal View Column TypeDescription wal_records `bigint`Total number of WAL records generated wal_fpi `bigint`Total number of WAL full page images generated wal_bytes `numeric`Total amount of WAL generated in bytes wal_buffers_full `bigint`Number of times WAL data was written to disk because WAL buffers became full wal_write bigint`Number of times WAL buffers were written out to disk via `XLogWrite request. wal_sync bigint`Number of times WAL files were synced to disk via `issue_xlog_fsync request (if fsync is on and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero). wal_write_time double precision`Total amount of time spent writing WAL buffers to disk via `XLogWrite request, in milliseconds (if track_wal_io_timing is enabled, otherwise zero). This includes the sync time when wal_sync_method is either open_datasync or open_sync. wal_sync_time double precision`Total amount of time spent syncing WAL files to disk via `issue_xlog_fsync request, in milliseconds (if track_wal_io_timing is enabled, fsync is on, and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero). stats_reset `timestamp with time zone`Time at which these statistics were last reset The pg_stat_database view will contain one row for each database in the cluster, plus one for shared objects, showing database-wide statistics. pg_stat_database View Column TypeDescription datid `oid`OID of this database, or 0 for objects belonging to a shared relation datname name`Name of this database, or `NULL for shared objects. numbackends integer`Number of backends currently connected to this database, or `NULL for shared objects. This is the only column in this view that returns a value reflecting current state; all other columns return the accumulated values since the last reset. xact_commit `bigint`Number of transactions in this database that have been committed xact_rollback `bigint`Number of transactions in this database that have been rolled back blks_read `bigint`Number of disk blocks read in this database blks_hit `bigint`Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the IvorySQL buffer cache, not the operating system’s file system cache) tup_returned `bigint`Number of live rows fetched by sequential scans and index entries returned by index scans in this database tup_fetched `bigint`Number of live rows fetched by index scans in this database tup_inserted `bigint`Number of rows inserted by queries in this database tup_updated `bigint`Number of rows updated by queries in this database tup_deleted `bigint`Number of rows deleted by queries in this database conflicts bigint`Number of queries canceled due to conflicts with recovery in this database. (Conflicts occur only on standby servers; see `pg_stat_database_conflicts for details.) temp_files `bigint`Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting. temp_bytes `bigint`Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting. deadlocks `bigint`Number of deadlocks detected in this database checksum_failures `bigint`Number of data page checksum failures detected in this database (or on a shared object), or NULL if data checksums are not enabled. checksum_last_failure `timestamp with time zone`Time at which the last data page checksum failure was detected in this database (or on a shared object), or NULL if data checksums are not enabled. blk_read_time `double precision`Time spent reading data file blocks by backends in this database, in milliseconds (if track_io_timing is enabled, otherwise zero) blk_write_time `double precision`Time spent writing data file blocks by backends in this database, in milliseconds (if track_io_timing is enabled, otherwise zero) session_time `double precision`Time spent by database sessions in this database, in milliseconds (note that statistics are only updated when the state of a session changes, so if sessions have been idle for a long time, this idle time won’t be included) active_time double precision`Time spent executing SQL statements in this database, in milliseconds (this corresponds to the states `active and fastpath function call in pg_stat_activity) idle_in_transaction_time double precision`Time spent idling while in a transaction in this database, in milliseconds (this corresponds to the states `idle in transaction and idle in transaction (aborted) in pg_stat_activity) sessions `bigint`Total number of sessions established to this database sessions_abandoned `bigint`Number of database sessions to this database that were terminated because connection to the client was lost sessions_fatal `bigint`Number of database sessions to this database that were terminated by fatal errors sessions_killed `bigint`Number of database sessions to this database that were terminated by operator intervention stats_reset `timestamp with time zone`Time at which these statistics were last reset The pg_stat_database_conflicts view will contain one row per database, showing database-wide statistics about query cancels occurring due to conflicts with recovery on standby servers. This view will only contain information on standby servers, since conflicts do not occur on primary servers. pg_stat_database_conflicts View Column TypeDescription datid `oid`OID of a database datname `name`Name of this database confl_tablespace `bigint`Number of queries in this database that have been canceled due to dropped tablespaces confl_lock `bigint`Number of queries in this database that have been canceled due to lock timeouts confl_snapshot `bigint`Number of queries in this database that have been canceled due to old snapshots confl_bufferpin `bigint`Number of queries in this database that have been canceled due to pinned buffers confl_deadlock `bigint`Number of queries in this database that have been canceled due to deadlocks The pg_stat_all_tables view will contain one row for each table in the current database (including TOAST tables), showing statistics about accesses to that specific table. The pg_stat_user_tables and pg_stat_sys_tables views contain the same information, but filtered to only show user and system tables respectively. pg_stat_all_tables View Column TypeDescription relid `oid`OID of a table schemaname `name`Name of the schema that this table is in relname `name`Name of this table seq_scan `bigint`Number of sequential scans initiated on this table seq_tup_read `bigint`Number of live rows fetched by sequential scans idx_scan `bigint`Number of index scans initiated on this table idx_tup_fetch `bigint`Number of live rows fetched by index scans n_tup_ins `bigint`Number of rows inserted n_tup_upd `bigint`Number of rows updated (includes HOT updated rows) n_tup_del `bigint`Number of rows deleted n_tup_hot_upd `bigint`Number of rows HOT updated (i.e., with no separate index update required) n_live_tup `bigint`Estimated number of live rows n_dead_tup `bigint`Estimated number of dead rows n_mod_since_analyze `bigint`Estimated number of rows modified since this table was last analyzed n_ins_since_vacuum `bigint`Estimated number of rows inserted since this table was last vacuumed last_vacuum timestamp with time zone`Last time at which this table was manually vacuumed (not counting `VACUUM FULL) last_autovacuum `timestamp with time zone`Last time at which this table was vacuumed by the autovacuum daemon last_analyze `timestamp with time zone`Last time at which this table was manually analyzed last_autoanalyze `timestamp with time zone`Last time at which this table was analyzed by the autovacuum daemon vacuum_count bigint`Number of times this table has been manually vacuumed (not counting `VACUUM FULL) autovacuum_count `bigint`Number of times this table has been vacuumed by the autovacuum daemon analyze_count `bigint`Number of times this table has been manually analyzed autoanalyze_count `bigint`Number of times this table has been analyzed by the autovacuum daemon The pg_stat_all_indexes view will contain one row for each index in the current database, showing statistics about accesses to that specific index. The pg_stat_user_indexes and pg_stat_sys_indexes views contain the same information, but filtered to only show user and system indexes respectively. pg_stat_all_indexes View Column TypeDescription relid `oid`OID of the table for this index indexrelid `oid`OID of this index schemaname `name`Name of the schema this index is in relname `name`Name of the table for this index indexrelname `name`Name of this index idx_scan `bigint`Number of index scans initiated on this index idx_tup_read `bigint`Number of index entries returned by scans on this index idx_tup_fetch `bigint`Number of live table rows fetched by simple index scans using this index Indexes can be used by simple index scans, “bitmap” index scans, and the optimizer. In a bitmap scan the output of several indexes can be combined via AND or OR rules, so it is difficult to associate individual heap row fetches with specific indexes when a bitmap scan is used. Therefore, a bitmap scan increments the pg_stat_all_indexes.idx_tup_read count(s) for the index(es) it uses, and it increments the pg_stat_all_tables.idx_tup_fetch count for the table, but it does not affect pg_stat_all_indexes.idx_tup_fetch. The optimizer also accesses indexes to check for supplied constants whose values are outside the recorded range of the optimizer statistics because the optimizer statistics might be stale. Note The idx_tup_read and idx_tup_fetch counts can be different even without any use of bitmap scans, because idx_tup_read counts index entries retrieved from the index while idx_tup_fetch counts live rows fetched from the table. The latter will be less if any dead or not-yet-committed rows are fetched using the index, or if any heap fetches are avoided by means of an index-only scan. The pg_statio_all_tables view will contain one row for each table in the current database (including TOAST tables), showing statistics about I/O on that specific table. The pg_statio_user_tables and pg_statio_sys_tables views contain the same information, but filtered to only show user and system tables respectively. pg_statio_all_tables View Column TypeDescription relid `oid`OID of a table schemaname `name`Name of the schema that this table is in relname `name`Name of this table heap_blks_read `bigint`Number of disk blocks read from this table heap_blks_hit `bigint`Number of buffer hits in this table idx_blks_read `bigint`Number of disk blocks read from all indexes on this table idx_blks_hit `bigint`Number of buffer hits in all indexes on this table toast_blks_read `bigint`Number of disk blocks read from this table’s TOAST table (if any) toast_blks_hit `bigint`Number of buffer hits in this table’s TOAST table (if any) tidx_blks_read `bigint`Number of disk blocks read from this table’s TOAST table indexes (if any) tidx_blks_hit `bigint`Number of buffer hits in this table’s TOAST table indexes (if any) The pg_statio_all_indexes view will contain one row for each index in the current database, showing statistics about I/O on that specific index. The pg_statio_user_indexes and pg_statio_sys_indexes views contain the same information, but filtered to only show user and system indexes respectively. pg_statio_all_indexes View Column TypeDescription relid `oid`OID of the table for this index indexrelid `oid`OID of this index schemaname `name`Name of the schema this index is in relname `name`Name of the table for this index indexrelname `name`Name of this index idx_blks_read `bigint`Number of disk blocks read from this index idx_blks_hit `bigint`Number of buffer hits in this index The pg_statio_all_sequences view will contain one row for each sequence in the current database, showing statistics about I/O on that specific sequence. pg_statio_all_sequences View Column TypeDescription relid `oid`OID of a sequence schemaname `name`Name of the schema this sequence is in relname `name`Name of this sequence blks_read `bigint`Number of disk blocks read from this sequence blks_hit `bigint`Number of buffer hits in this sequence The pg_stat_user_functions view will contain one row for each tracked function, showing statistics about executions of that function. The track_functions parameter controls exactly which functions are tracked. pg_stat_user_functions View Column TypeDescription funcid `oid`OID of a function schemaname `name`Name of the schema this function is in funcname `name`Name of this function calls `bigint`Number of times this function has been called total_time `double precision`Total time spent in this function and all other functions called by it, in milliseconds self_time `double precision`Total time spent in this function itself, not including other functions called by it, in milliseconds IvorySQL accesses certain on-disk information via SLRU (simple least-recently-used) caches. The pg_stat_slru view will contain one row for each tracked SLRU cache, showing statistics about access to cached pages. pg_stat_slru View Column TypeDescription name `text`Name of the SLRU blks_zeroed `bigint`Number of blocks zeroed during initializations blks_hit `bigint`Number of times disk blocks were found already in the SLRU, so that a read was not necessary (this only includes hits in the SLRU, not the operating system’s file system cache) blks_read `bigint`Number of disk blocks read for this SLRU blks_written `bigint`Number of disk blocks written for this SLRU blks_exists `bigint`Number of blocks checked for existence for this SLRU flushes `bigint`Number of flushes of dirty data for this SLRU truncates `bigint`Number of truncates for this SLRU stats_reset `timestamp with time zone`Time at which these statistics were last reset Other ways of looking at the statistics can be set up by writing queries that use the same underlying statistics access functions used by the standard views shown above. For details such as the functions' names, consult the definitions of the standard views. (For example, in psql you could issue \\d+ pg_stat_activity.) The access functions for per-database statistics take a database OID as an argument to identify which database to report on. The per-table and per-index functions take a table or index OID. The functions for per-function statistics take a function OID. Note that only tables, indexes, and functions in the current database can be seen with these functions. Additional Statistics Functions FunctionDescription pg_backend_pid () → `integer`Returns the process ID of the server process attached to the current session. pg_stat_get_activity ( integer ) → setof record`Returns a record of information about the backend with the specified process ID, or one record for each active backend in the system if `NULL is specified. The fields returned are a subset of those in the pg_stat_activity view. pg_stat_get_snapshot_timestamp () → timestamp with time zone`Returns the timestamp of the current statistics snapshot, or NULL if no statistics snapshot has been taken. A snapshot is taken the first time cumulative statistics are accessed in a transaction if `stats_fetch_consistency is set to snapshot pg_stat_clear_snapshot () → `void`Discards the current statistics snapshot or cached information. pg_stat_reset () → `void`Resets all statistics counters for the current database to zero.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_shared ( text ) → void`Resets some cluster-wide statistics counters to zero, depending on the argument. The argument can be `bgwriter to reset all the counters shown in the pg_stat_bgwriter view, archiver to reset all the counters shown in the pg_stat_archiver view, wal to reset all the counters shown in the pg_stat_wal view or recovery_prefetch to reset all the counters shown in the pg_stat_recovery_prefetch view.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_single_table_counters ( oid ) → `void`Resets statistics for a single table or index in the current database or shared across all databases in the cluster to zero.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_single_function_counters ( oid ) → `void`Resets statistics for a single function in the current database to zero.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_slru ( text ) → void`Resets statistics to zero for a single SLRU cache, or for all SLRUs in the cluster. If the argument is NULL, all counters shown in the `pg_stat_slru view for all SLRU caches are reset. The argument can be one of CommitTs, MultiXactMember, MultiXactOffset, Notify, Serial, Subtrans, or Xact to reset the counters for only that entry. If the argument is other (or indeed, any unrecognized name), then the counters for all other SLRU caches, such as extension-defined caches, are reset.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_replication_slot ( text ) → void`Resets statistics of the replication slot defined by the argument. If the argument is `NULL, resets statistics for all the replication slots.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. pg_stat_reset_subscription_stats ( oid ) → void`Resets statistics for a single subscription shown in the `pg_stat_subscription_stats view to zero. If the argument is NULL, reset statistics for all subscriptions.This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function. Warning Using pg_stat_reset() also resets counters that autovacuum uses to determine when to trigger a vacuum or an analyze. Resetting these counters can cause autovacuum to not perform necessary work, which can cause problems such as table bloat or out-dated table statistics. A database-wide ANALYZE is recommended after the statistics have been reset. pg_stat_get_activity, the underlying function of the pg_stat_activity view, returns a set of records containing all the available information about each backend process. Sometimes it may be more convenient to obtain just a subset of this information. In such cases, an older set of per-backend statistics access functions can be used; These access functions use a backend ID number, which ranges from one to the number of currently active backends. The function pg_stat_get_backend_idset provides a convenient way to generate one row for each active backend for invoking these functions. For example, to show the PIDs and current queries of all backends: SELECT pg_stat_get_backend_pid(s.backendid) AS pid, pg_stat_get_backend_activity(s.backendid) AS query FROM (SELECT pg_stat_get_backend_idset() AS backendid) AS s; Per-Backend Statistics Functions FunctionDescription pg_stat_get_backend_idset () → `setof integer`Returns the set of currently active backend ID numbers (from 1 to the number of active backends). pg_stat_get_backend_activity ( integer ) → `text`Returns the text of this backend’s most recent query. pg_stat_get_backend_activity_start ( integer ) → `timestamp with time zone`Returns the time when the backend’s most recent query was started. pg_stat_get_backend_client_addr ( integer ) → `inet`Returns the IP address of the client connected to this backend. pg_stat_get_backend_client_port ( integer ) → `integer`Returns the TCP port number that the client is using for communication. pg_stat_get_backend_dbid ( integer ) → `oid`Returns the OID of the database this backend is connected to. pg_stat_get_backend_pid ( integer ) → `integer`Returns the process ID of this backend. pg_stat_get_backend_start ( integer ) → `timestamp with time zone`Returns the time when this process was started. pg_stat_get_backend_userid ( integer ) → `oid`Returns the OID of the user logged into this backend. pg_stat_get_backend_wait_event_type ( integer ) → `text`Returns the wait event type name if this backend is currently waiting, otherwise NULL. pg_stat_get_backend_wait_event ( integer ) → `text`Returns the wait event name if this backend is currently waiting, otherwise NULL. pg_stat_get_backend_xact_start ( integer ) → `timestamp with time zone`Returns the time when the backend’s current transaction was started. Another useful tool for monitoring database activity is the pg_locks system table. It allows the database administrator to view information about the outstanding locks in the lock manager. For example, this capability can be used to: View all the locks currently outstanding, all the locks on relations in a particular database, all the locks on a particular relation, or all the locks held by a particular IvorySQL session. Determine the relation in the current database with the most ungranted locks (which might be a source of contention among database clients). Determine the effect of lock contention on overall database performance, as well as the extent to which contention varies with overall database traffic. IvorySQL has the ability to report the progress of certain commands during command execution. Currently, the only commands which support progress reporting are ANALYZE, CLUSTER, CREATE INDEX, VACUUM, COPY, and BASE_BACKUP (i.e., replication command that pg_basebackup issues to take a base backup). This may be expanded in the future. Whenever ANALYZE is running, the pg_stat_progress_analyze view will contain a row for each backend that is currently running that command. The tables below describe the information that will be reported and provide information about how to interpret it. pg_stat_progress_analyze View Column TypeDescription pid `integer`Process ID of backend. datid `oid`OID of the database to which this backend is connected. datname `name`Name of the database to which this backend is connected. relid `oid`OID of the table being analyzed. phase `text`Current processing phase. See Table 1.37. sample_blks_total `bigint`Total number of heap blocks that will be sampled. sample_blks_scanned `bigint`Number of heap blocks scanned. ext_stats_total `bigint`Number of extended statistics. ext_stats_computed bigint`Number of extended statistics computed. This counter only advances when the phase is `computing extended statistics. child_tables_total `bigint`Number of child tables. child_tables_done bigint`Number of child tables scanned. This counter only advances when the phase is `acquiring inherited sample rows. current_child_table_relid oid`OID of the child table currently being scanned. This field is only valid when the phase is `acquiring inherited sample rows. ANALYZE Phases Phase Description initializing The command is preparing to begin scanning the heap. This phase is expected to be very brief. acquiring sample rows The command is currently scanning the table given by relid to obtain sample rows. acquiring inherited sample rows The command is currently scanning child tables to obtain sample rows. Columns child_tables_total, child_tables_done, and current_child_table_relid contain the progress information for this phase. computing statistics The command is computing statistics from the sample rows obtained during the table scan. computing extended statistics The command is computing extended statistics from the sample rows obtained during the table scan. finalizing analyze The command is updating pg_class. When this phase is completed, ANALYZE will end. Note Note that when ANALYZE is run on a partitioned table, all of its partitions are also recursively analyzed. In that case, ANALYZE progress is reported first for the parent table, whereby its inheritance statistics are collected, followed by that for each partition. Whenever CREATE INDEX or REINDEX is running, the pg_stat_progress_create_index view will contain one row for each backend that is currently creating indexes. The tables below describe the information that will be reported and provide information about how to interpret it. pg_stat_progress_create_index View Column TypeDescription pid `integer`Process ID of backend. datid `oid`OID of the database to which this backend is connected. datname `name`Name of the database to which this backend is connected. relid `oid`OID of the table on which the index is being created. index_relid oid`OID of the index being created or reindexed. During a non-concurrent `CREATE INDEX, this is 0. command text`The command that is running: `CREATE INDEX, CREATE INDEX CONCURRENTLY, REINDEX, or REINDEX CONCURRENTLY. phase `text`Current processing phase of index creation. See Table 1.39. lockers_total `bigint`Total number of lockers to wait for, when applicable. lockers_done `bigint`Number of lockers already waited for. current_locker_pid `bigint`Process ID of the locker currently being waited for. blocks_total `bigint`Total number of blocks to be processed in the current phase. blocks_done `bigint`Number of blocks already processed in the current phase. tuples_total `bigint`Total number of tuples to be processed in the current phase. tuples_done `bigint`Number of tuples already processed in the current phase. partitions_total bigint`When creating an index on a partitioned table, this column is set to the total number of partitions on which the index is to be created. This field is `0 during a REINDEX. partitions_done bigint`When creating an index on a partitioned table, this column is set to the number of partitions on which the index has been created. This field is `0 during a REINDEX. CREATE INDEX Phases Phase Description initializing CREATE INDEX or REINDEX is preparing to create the index. This phase is expected to be very brief. waiting for writers before build CREATE INDEX CONCURRENTLY or REINDEX CONCURRENTLY is waiting for transactions with write locks that can potentially see the table to finish. This phase is skipped when not in concurrent mode. Columns lockers_total, lockers_done and current_locker_pid contain the progress information for this phase. building index The index is being built by the access method-specific code. In this phase, access methods that support progress reporting fill in their own progress data, and the subphase is indicated in this column. Typically, blocks_total and blocks_done will contain progress data, as well as potentially tuples_total and tuples_done. waiting for writers before validation CREATE INDEX CONCURRENTLY or REINDEX CONCURRENTLY is waiting for transactions with write locks that can potentially write into the table to finish. This phase is skipped when not in concurrent mode. Columns lockers_total, lockers_done and current_locker_pid contain the progress information for this phase. index validation: scanning index CREATE INDEX CONCURRENTLY is scanning the index searching for tuples that need to be validated. This phase is skipped when not in concurrent mode. Columns blocks_total (set to the total size of the index) and blocks_done contain the progress information for this phase. index validation: sorting tuples CREATE INDEX CONCURRENTLY is sorting the output of the index scanning phase. index validation: scanning table CREATE INDEX CONCURRENTLY is scanning the table to validate the index tuples collected in the previous two phases. This phase is skipped when not in concurrent mode. Columns blocks_total (set to the total size of the table) and blocks_done contain the progress information for this phase. waiting for old snapshots CREATE INDEX CONCURRENTLY or REINDEX CONCURRENTLY is waiting for transactions that can potentially see the table to release their snapshots. This phase is skipped when not in concurrent mode. Columns lockers_total, lockers_done and current_locker_pid contain the progress information for this phase. waiting for readers before marking dead REINDEX CONCURRENTLY is waiting for transactions with read locks on the table to finish, before marking the old index dead. This phase is skipped when not in concurrent mode. Columns lockers_total, lockers_done and current_locker_pid contain the progress information for this phase. waiting for readers before dropping REINDEX CONCURRENTLY is waiting for transactions with read locks on the table to finish, before dropping the old index. This phase is skipped when not in concurrent mode. Columns lockers_total, lockers_done and current_locker_pid contain the progress information for this phase. Whenever VACUUM is running, the pg_stat_progress_vacuum view will contain one row for each backend (including autovacuum worker processes) that is currently vacuuming. The tables below describe the information that will be reported and provide information about how to interpret it. Progress for VACUUM FULL commands is reported via pg_stat_progress_cluster because both VACUUM FULL and CLUSTER rewrite the table, while regular VACUUM only modifies it in place. pg_stat_progress_vacuum View Column TypeDescription pid `integer`Process ID of backend. datid `oid`OID of the database to which this backend is connected. datname `name`Name of the database to which this backend is connected. relid `oid`OID of the table being vacuumed. phase `text`Current processing phase of vacuum. heap_blks_total bigint`Total number of heap blocks in the table. This number is reported as of the beginning of the scan; blocks added later will not be (and need not be) visited by this `VACUUM. heap_blks_scanned bigint`Number of heap blocks scanned. Because the visibility map is used to optimize scans, some blocks will be skipped without inspection; skipped blocks are included in this total, so that this number will eventually become equal to `heap_blks_total when the vacuum is complete. This counter only advances when the phase is scanning heap. heap_blks_vacuumed bigint`Number of heap blocks vacuumed. Unless the table has no indexes, this counter only advances when the phase is `vacuuming heap. Blocks that contain no dead tuples are skipped, so the counter may sometimes skip forward in large increments. index_vacuum_count `bigint`Number of completed index vacuum cycles. max_dead_tuples `bigint`Number of dead tuples that we can store before needing to perform an index vacuum cycle, based on maintenance_work_mem. num_dead_tuples `bigint`Number of dead tuples collected since the last index vacuum cycle. VACUUM Phases Phase Description initializing VACUUM is preparing to begin scanning the heap. This phase is expected to be very brief. scanning heap VACUUM is currently scanning the heap. It will prune and defragment each page if required, and possibly perform freezing activity. The heap_blks_scanned column can be used to monitor the progress of the scan. vacuuming indexes VACUUM is currently vacuuming the indexes. If a table has any indexes, this will happen at least once per vacuum, after the heap has been completely scanned. It may happen multiple times per vacuum if maintenance_work_mem (or, in the case of autovacuum, autovacuum_work_mem if set) is insufficient to store the number of dead tuples found. vacuuming heap VACUUM is currently vacuuming the heap. Vacuuming the heap is distinct from scanning the heap, and occurs after each instance of vacuuming indexes. If heap_blks_scanned is less than heap_blks_total, the system will return to scanning the heap after this phase is completed; otherwise, it will begin cleaning up indexes after this phase is completed. cleaning up indexes VACUUM is currently cleaning up indexes. This occurs after the heap has been completely scanned and all vacuuming of the indexes and the heap has been completed. truncating heap VACUUM is currently truncating the heap so as to return empty pages at the end of the relation to the operating system. This occurs after cleaning up indexes. performing final cleanup VACUUM is performing final cleanup. During this phase, VACUUM will vacuum the free space map, update statistics in pg_class, and report statistics to the cumulative statistics system. When this phase is completed, VACUUM will end. Whenever CLUSTER or VACUUM FULL is running, the pg_stat_progress_cluster view will contain a row for each backend that is currently running either command. The tables below describe the information that will be reported and provide information about how to interpret it. pg_stat_progress_cluster View Column TypeDescriptio pid `integer`Process ID of backend. datid `oid`OID of the database to which this backend is connected. datname `name`Name of the database to which this backend is connected. relid `oid`OID of the table being clustered. command text`The command that is running. Either `CLUSTER or VACUUM FULL. phase `text`Current processing phase. See Table 1.43. cluster_index_relid `oid`If the table is being scanned using an index, this is the OID of the index being used; otherwise, it is zero. heap_tuples_scanned bigint`Number of heap tuples scanned. This counter only advances when the phase is `seq scanning heap, index scanning heap or writing new heap. heap_tuples_written bigint`Number of heap tuples written. This counter only advances when the phase is `seq scanning heap, index scanning heap or writing new heap. heap_blks_total bigint`Total number of heap blocks in the table. This number is reported as of the beginning of `seq scanning heap. heap_blks_scanned bigint`Number of heap blocks scanned. This counter only advances when the phase is `seq scanning heap. index_rebuild_count bigint`Number of indexes rebuilt. This counter only advances when the phase is `rebuilding index. CLUSTER and VACUUM FULL Phases Phase Description initializing The command is preparing to begin scanning the heap. This phase is expected to be very brief. seq scanning heap The command is currently scanning the table using a sequential scan. index scanning heap CLUSTER is currently scanning the table using an index scan. sorting tuples CLUSTER is currently sorting tuples. writing new heap CLUSTER is currently writing the new heap. swapping relation files The command is currently swapping newly-built files into place. rebuilding index The command is currently rebuilding an index. performing final cleanup The command is performing final cleanup. When this phase is completed, CLUSTER or VACUUM FULL will end. Whenever an application like pg_basebackup is taking a base backup, the pg_stat_progress_basebackup view will contain a row for each WAL sender process that is currently running the BASE_BACKUP replication command and streaming the backup. The tables below describe the information that will be reported and provide information about how to interpret it. pg_stat_progress_basebackup View Column TypeDescription pid `integer`Process ID of a WAL sender process. phase `text`Current processing phase. backup_total bigint`Total amount of data that will be streamed. This is estimated and reported as of the beginning of `streaming database files phase. Note that this is only an approximation since the database may change during streaming database files phase and WAL log may be included in the backup later. This is always the same value as backup_streamed once the amount of data streamed exceeds the estimated total size. If the estimation is disabled in pg_basebackup (i.e., --no-estimate-size option is specified), this is NULL. backup_streamed bigint`Amount of data streamed. This counter only advances when the phase is `streaming database files or transferring wal files. tablespaces_total `bigint`Total number of tablespaces that will be streamed. tablespaces_streamed bigint`Number of tablespaces streamed. This counter only advances when the phase is `streaming database files. Base Backup Phases Phase Description initializing The WAL sender process is preparing to begin the backup. This phase is expected to be very brief. waiting for checkpoint to finish The WAL sender process is currently performing pg_backup_start to prepare to take a base backup, and waiting for the start-of-backup checkpoint to finish. estimating backup size The WAL sender process is currently estimating the total amount of database files that will be streamed as a base backup. streaming database files The WAL sender process is currently streaming database files as a base backup. waiting for wal archiving to finish The WAL sender process is currently performing pg_backup_stop to finish the backup, and waiting for all the WAL files required for the base backup to be successfully archived. If either --wal-method=none or --wal-method=stream is specified in pg_basebackup, the backup will end when this phase is completed. transferring wal files The WAL sender process is currently transferring all WAL logs generated during the backup. This phase occurs after waiting for wal archiving to finish phase if --wal-method=fetch is specified in pg_basebackup. The backup will end when this phase is completed. Whenever COPY is running, the pg_stat_progress_copy view will contain one row for each backend that is currently running a COPY command. The table below describes the information that will be reported and provides information about how to interpret it. pg_stat_progress_copy View Column TypeDescription pid `integer`Process ID of backend. datid `oid`OID of the database to which this backend is connected. datname `name`Name of the database to which this backend is connected. relid oid`OID of the table on which the `COPY command is executed. It is set to 0 if copying from a SELECT query. command text`The command that is running: `COPY FROM, or COPY TO. type text`The io type that the data is read from or written to: `FILE, PROGRAM, PIPE (for COPY FROM STDIN and COPY TO STDOUT), or CALLBACK (used for example during the initial table synchronization in logical replication). bytes_processed bigint`Number of bytes already processed by `COPY command. bytes_total bigint`Size of source file for `COPY FROM command in bytes. It is set to 0 if not available. tuples_processed bigint`Number of tuples already processed by `COPY command. tuples_excluded bigint`Number of tuples not processed because they were excluded by the `WHERE clause of the COPY command. IvorySQL provides facilities to support dynamic tracing of the database server. This allows an external utility to be called at specific points in the code and thereby trace execution. A number of probes or trace points are already inserted into the source code. These probes are intended to be used by database developers and administrators. By default the probes are not compiled into IvorySQL; the user needs to explicitly tell the configure script to make the probes available. Currently, the DTrace utility is supported, which, at the time of this writing, is available on Solaris, macOS, FreeBSD, NetBSD, and Oracle Linux. The SystemTap project for Linux provides a DTrace equivalent and can also be used. Supporting other dynamic tracing utilities is theoretically possible by changing the definitions for the macros in src/include/utils/probes.h. By default, probes are not available, so you will need to explicitly tell the configure script to make the probes available in IvorySQL. To include DTrace support specify --enable-dtrace to configure. A number of standard probes are provided in the source code, More probes can certainly be added to enhance IvorySQL’s observability. Built-in DTrace Probes Name Parameters Description transaction-start (LocalTransactionId) Probe that fires at the start of a new transaction. arg0 is the transaction ID. transaction-commit (LocalTransactionId) Probe that fires when a transaction completes successfully. arg0 is the transaction ID. transaction-abort (LocalTransactionId) Probe that fires when a transaction completes unsuccessfully. arg0 is the transaction ID. query-start (const char *) Probe that fires when the processing of a query is started. arg0 is the query string. query-done (const char *) Probe that fires when the processing of a query is complete. arg0 is the query string. query-parse-start (const char *) Probe that fires when the parsing of a query is started. arg0 is the query string. query-parse-done (const char *) Probe that fires when the parsing of a query is complete. arg0 is the query string. query-rewrite-start (const char *) Probe that fires when the rewriting of a query is started. arg0 is the query string. query-rewrite-done (const char *) Probe that fires when the rewriting of a query is complete. arg0 is the query string. query-plan-start () Probe that fires when the planning of a query is started. query-plan-done () Probe that fires when the planning of a query is complete. query-execute-start () Probe that fires when the execution of a query is started. query-execute-done () Probe that fires when the execution of a query is complete. statement-status (const char *) Probe that fires anytime the server process updates its pg_stat_activity.status. arg0 is the new status string. checkpoint-start (int) Probe that fires when a checkpoint is started. arg0 holds the bitwise flags used to distinguish different checkpoint types, such as shutdown, immediate or force. checkpoint-done (int, int, int, int, int) Probe that fires when a checkpoint is complete. (The probes listed next fire in sequence during checkpoint processing.) arg0 is the number of buffers written. arg1 is the total number of buffers. arg2, arg3 and arg4 contain the number of WAL files added, removed and recycled respectively. clog-checkpoint-start (bool) Probe that fires when the CLOG portion of a checkpoint is started. arg0 is true for normal checkpoint, false for shutdown checkpoint. clog-checkpoint-done (bool) Probe that fires when the CLOG portion of a checkpoint is complete. arg0 has the same meaning as for clog-checkpoint-start. subtrans-checkpoint-start (bool) Probe that fires when the SUBTRANS portion of a checkpoint is started. arg0 is true for normal checkpoint, false for shutdown checkpoint. subtrans-checkpoint-done (bool) Probe that fires when the SUBTRANS portion of a checkpoint is complete. arg0 has the same meaning as for subtrans-checkpoint-start. multixact-checkpoint-start (bool) Probe that fires when the MultiXact portion of a checkpoint is started. arg0 is true for normal checkpoint, false for shutdown checkpoint. multixact-checkpoint-done (bool) Probe that fires when the MultiXact portion of a checkpoint is complete. arg0 has the same meaning as for multixact-checkpoint-start. buffer-checkpoint-start (int) Probe that fires when the buffer-writing portion of a checkpoint is started. arg0 holds the bitwise flags used to distinguish different checkpoint types, such as shutdown, immediate or force. buffer-sync-start (int, int) Probe that fires when we begin to write dirty buffers during checkpoint (after identifying which buffers must be written). arg0 is the total number of buffers. arg1 is the number that are currently dirty and need to be written. buffer-sync-written (int) Probe that fires after each buffer is written during checkpoint. arg0 is the ID number of the buffer. buffer-sync-done (int, int, int) Probe that fires when all dirty buffers have been written. arg0 is the total number of buffers. arg1 is the number of buffers actually written by the checkpoint process. arg2 is the number that were expected to be written (arg1 of buffer-sync-start); any difference reflects other processes flushing buffers during the checkpoint. buffer-checkpoint-sync-start () Probe that fires after dirty buffers have been written to the kernel, and before starting to issue fsync requests. buffer-checkpoint-done () Probe that fires when syncing of buffers to disk is complete. twophase-checkpoint-start () Probe that fires when the two-phase portion of a checkpoint is started. twophase-checkpoint-done () Probe that fires when the two-phase portion of a checkpoint is complete. buffer-read-start (ForkNumber, BlockNumber, Oid, Oid, Oid, int, bool) Probe that fires when a buffer read is started. arg0 and arg1 contain the fork and block numbers of the page (but arg1 will be -1 if this is a relation extension request). arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. arg6 is true for a relation extension request, false for normal read. buffer-read-done (ForkNumber, BlockNumber, Oid, Oid, Oid, int, bool, bool) Probe that fires when a buffer read is complete. arg0 and arg1 contain the fork and block numbers of the page (if this is a relation extension request, arg1 now contains the block number of the newly added block). arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. arg6 is true for a relation extension request, false for normal read. arg7 is true if the buffer was found in the pool, false if not. buffer-flush-start (ForkNumber, BlockNumber, Oid, Oid, Oid) Probe that fires before issuing any write request for a shared buffer. arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. buffer-flush-done (ForkNumber, BlockNumber, Oid, Oid, Oid) Probe that fires when a write request is complete. (Note that this just reflects the time to pass the data to the kernel; it’s typically not actually been written to disk yet.) The arguments are the same as for buffer-flush-start. buffer-write-dirty-start (ForkNumber, BlockNumber, Oid, Oid, Oid) Probe that fires when a server process begins to write a dirty buffer. (If this happens often, it implies that shared_buffers is too small or the background writer control parameters need adjustment.) arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. buffer-write-dirty-done (ForkNumber, BlockNumber, Oid, Oid, Oid) Probe that fires when a dirty-buffer write is complete. The arguments are the same as for buffer-write-dirty-start. wal-buffer-write-dirty-start () Probe that fires when a server process begins to write a dirty WAL buffer because no more WAL buffer space is available. (If this happens often, it implies that wal_buffers is too small.) wal-buffer-write-dirty-done () Probe that fires when a dirty WAL buffer write is complete. wal-insert (unsigned char, unsigned char) Probe that fires when a WAL record is inserted. arg0 is the resource manager (rmid) for the record. arg1 contains the info flags. wal-switch () Probe that fires when a WAL segment switch is requested. smgr-md-read-start (ForkNumber, BlockNumber, Oid, Oid, Oid, int) Probe that fires when beginning to read a block from a relation. arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. smgr-md-read-done (ForkNumber, BlockNumber, Oid, Oid, Oid, int, int, int) Probe that fires when a block read is complete. arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. arg6 is the number of bytes actually read, while arg7 is the number requested (if these are different it indicates trouble). smgr-md-write-start (ForkNumber, BlockNumber, Oid, Oid, Oid, int) Probe that fires when beginning to write a block to a relation. arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. smgr-md-write-done (ForkNumber, BlockNumber, Oid, Oid, Oid, int, int, int) Probe that fires when a block write is complete. arg0 and arg1 contain the fork and block numbers of the page. arg2, arg3, and arg4 contain the tablespace, database, and relation OIDs identifying the relation. arg5 is the ID of the backend which created the temporary relation for a local buffer, or InvalidBackendId (-1) for a shared buffer. arg6 is the number of bytes actually written, while arg7 is the number requested (if these are different it indicates trouble). sort-start (int, bool, int, int, bool, int) Probe that fires when a sort operation is started. arg0 indicates heap, index or datum sort. arg1 is true for unique-value enforcement. arg2 is the number of key columns. arg3 is the number of kilobytes of work memory allowed. arg4 is true if random access to the sort result is required. arg5 indicates serial when 0, parallel worker when 1, or parallel leader when 2. sort-done (bool, long) Probe that fires when a sort is complete. arg0 is true for external sort, false for internal sort. arg1 is the number of disk blocks used for an external sort, or kilobytes of memory used for an internal sort. lwlock-acquire (char *, LWLockMode) Probe that fires when an LWLock has been acquired. arg0 is the LWLock’s tranche. arg1 is the requested lock mode, either exclusive or shared. lwlock-release (char *) Probe that fires when an LWLock has been released (but note that any released waiters have not yet been awakened). arg0 is the LWLock’s tranche. lwlock-wait-start (char *, LWLockMode) Probe that fires when an LWLock was not immediately available and a server process has begun to wait for the lock to become available. arg0 is the LWLock’s tranche. arg1 is the requested lock mode, either exclusive or shared. lwlock-wait-done (char *, LWLockMode) Probe that fires when a server process has been released from its wait for an LWLock (it does not actually have the lock yet). arg0 is the LWLock’s tranche. arg1 is the requested lock mode, either exclusive or shared. lwlock-condacquire (char *, LWLockMode) Probe that fires when an LWLock was successfully acquired when the caller specified no waiting. arg0 is the LWLock’s tranche. arg1 is the requested lock mode, either exclusive or shared. lwlock-condacquire-fail (char *, LWLockMode) Probe that fires when an LWLock was not successfully acquired when the caller specified no waiting. arg0 is the LWLock’s tranche. arg1 is the requested lock mode, either exclusive or shared. lock-wait-start (unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, LOCKMODE) Probe that fires when a request for a heavyweight lock (lmgr lock) has begun to wait because the lock is not available. arg0 through arg3 are the tag fields identifying the object being locked. arg4 indicates the type of object being locked. arg5 indicates the lock type being requested. lock-wait-done (unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, LOCKMODE) Probe that fires when a request for a heavyweight lock (lmgr lock) has finished waiting (i.e., has acquired the lock). The arguments are the same as for lock-wait-start. deadlock-found () Probe that fires when a deadlock is found by the deadlock detector. Defined Types Used in Probe Parameters Type Definition LocalTransactionId unsigned int LWLockMode int LOCKMODE int BlockNumber unsigned int Oid unsigned int ForkNumber int bool unsigned char The example below shows a DTrace script for analyzing transaction counts in the system, as an alternative to snapshotting pg_stat_database before and after a performance test: #!/usr/sbin/dtrace -qs postgresql$1:::transaction-start { @start[\"Start\"] = count(); self->ts = timestamp; } postgresql$1:::transaction-abort { @abort[\"Abort\"] = count(); } postgresql$1:::transaction-commit /self->ts/ { @commit[\"Commit\"] = count(); @time[\"Total time (ns)\"] = sum(timestamp - self->ts); self->ts=0; } When executed, the example D script gives output such as: # ./txn_count.d `pgrep -n postgres` or ./txn_count.d ^C Start 71 Commit 70 Total time (ns) 2312105013 Note SystemTap uses a different notation for trace scripts than DTrace does, even though the underlying trace points are compatible. One point worth noting is that at this writing, SystemTap scripts must reference probe names using double underscores in place of hyphens. This is expected to be fixed in future SystemTap releases. New probes can be defined within the code wherever the developer desires, though this will require a recompilation. Below are the steps for inserting new probes: Decide on probe names and data to be made available through the probes Add the probe definitions to src/backend/utils/probes.d Include pg_trace.h if it is not already present in the module(s) containing the probe points, and insert TRACE_POSTGRESQL probe macros at the desired locations in the source code Recompile and verify that the new probes are available Example: Here is an example of how you would add a probe to trace all new transactions by transaction ID. Decide that the probe will be named transaction-start and requires a parameter of type LocalTransactionId Add the probe definition to src/backend/utils/probes.d: ``` probe transaction__start(LocalTransactionId); ``` Note the use of the double underline in the probe name. In a DTrace script using the probe, the double underline needs to be replaced with a hyphen, so `transaction-start` is the name to document for users. At compile time, transaction__start is converted to a macro called TRACE_POSTGRESQL_TRANSACTION_START (notice the underscores are single here), which is available by including pg_trace.h. Add the macro call to the appropriate location in the source code. In this case, it looks like the following: ``` TRACE_POSTGRESQL_TRANSACTION_START(vxid.localTransactionId); ``` After recompiling and running the new binary, check that your newly added probe is available by executing the following DTrace command. You should see similar output: ``` # dtrace -ln transaction-start ID PROVIDER MODULE FUNCTION NAME 18705 postgresql49878 postgres StartTransactionCommand transaction-start 18755 postgresql49877 postgres StartTransactionCommand transaction-start 18805 postgresql49876 postgres StartTransactionCommand transaction-start 18855 postgresql49875 postgres StartTransactionCommand transaction-start 18986 postgresql49873 postgres StartTransactionCommand transaction-start ``` There are a few things to be careful about when adding trace macros to the C code: You should take care that the data types specified for a probe’s parameters match the data types of the variables used in the macro. Otherwise, you will get compilation errors. On most platforms, if IvorySQL is built with --enable-dtrace, the arguments to a trace macro will be evaluated whenever control passes through the macro, even if no tracing is being done. This is usually not worth worrying about if you are just reporting the values of a few local variables. But beware of putting expensive function calls into the arguments. If you need to do that, consider protecting the macro with a check to see if the trace is actually enabled: ``` if (TRACE_POSTGRESQL_TRANSACTION_START_ENABLED()) TRACE_POSTGRESQL_TRANSACTION_START(some_function(...)); ``` Each trace macro has a corresponding ENABLED macro. Each table has a primary heap disk file where most of the data is stored. If the table has any columns with potentially-wide values, there also might be a TOAST file associated with the table, which is used to store values too wide to fit comfortably in the main table . There will be one valid index on the TOAST table, if present. There also might be indexes associated with the base table. Each table and index is stored in a separate disk file — possibly more than one file, if the file would exceed one gigabyte. You can monitor disk space in three ways: using the SQL functions, using the oid2name module, or using manual inspection of the system catalogs. The SQL functions are the easiest to use and are generally recommended. The remainder of this section shows how to do it by inspection of the system catalogs. Using psql on a recently vacuumed or analyzed database, you can issue queries to see the disk usage of any table: SELECT pg_relation_filepath(oid), relpages FROM pg_class WHERE relname = 'customer'; pg_relation_filepath | relpages ----------------------+---------- base/16384/16806 | 60 (1 row) Each page is typically 8 kilobytes. (Remember, relpages is only updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.) The file path name is of interest if you want to examine the table’s disk file directly. To show the space used by TOAST tables, use a query like the following: SELECT relname, relpages FROM pg_class, (SELECT reltoastrelid FROM pg_class WHERE relname = 'customer') AS ss WHERE oid = ss.reltoastrelid OR oid = (SELECT indexrelid FROM pg_index WHERE indrelid = ss.reltoastrelid) ORDER BY relname; relname | relpages ----------------------+---------- pg_toast_16806 | 0 pg_toast_16806_index | 1 You can easily display index sizes, too: SELECT c2.relname, c2.relpages FROM pg_class c, pg_class c2, pg_index i WHERE c.relname = 'customer' AND c.oid = i.indrelid AND c2.oid = i.indexrelid ORDER BY c2.relname; relname | relpages -------------------+---------- customer_id_index | 26 It is easy to find your largest tables and indexes using this information: SELECT relname, relpages FROM pg_class ORDER BY relpages DESC; relname | relpages ----------------------+---------- bigtable | 3290 customer | 3144 The most important disk monitoring task of a database administrator is to make sure the disk doesn’t become full. A filled data disk will not result in data corruption, but it might prevent useful activity from occurring. If the disk holding the WAL files grows full, database server panic and consequent shutdown might occur. If you cannot free up additional space on the disk by deleting other things, you can move some of the database files to other file systems by making use of tablespaces. Tip Some file systems perform badly when they are almost full, so do not wait until the disk is completely full to take action. If your system supports per-user disk quotas, then the database will naturally be subject to whatever quota is placed on the user the server runs as. Exceeding the quota will have the same bad effects as running out of disk space entirely.","title":"Monitoring","component":"ivorysql-doc","version":"v4.2","name":"4","url":"/ivorysql-doc/v4.2/v4.2/4.html","titles":[{"text":"1. Monitoring Database Activity","hash":"monitoring-database-activity","id":1},{"text":"1.1. Standard Unix Tools","hash":"standard-unix-tools","id":2},{"text":"1.2. The Cumulative Statistics System","hash":"the-cumulative-statistics-system","id":3},{"text":"1.2.1. Statistics Collection Configuration","hash":"statistics-collection-configuration","id":4},{"text":"1.2.2. Viewing Statistics","hash":"viewing-statistics","id":5},{"text":"1.2.3. pg_stat_activity","hash":"pg_stat_activity","id":6},{"text":"1.2.4. pg_stat_replication","hash":"pg_stat_replication","id":7},{"text":"1.2.5. pg_stat_replication_slots","hash":"pg_stat_replication_slots","id":8},{"text":"1.2.6. pg_stat_wal_receiver","hash":"pg_stat_wal_receiver","id":9},{"text":"1.2.7. pg_stat_recovery_prefetch","hash":"pg_stat_recovery_prefetch","id":10},{"text":"1.2.8. pg_stat_subscription","hash":"pg_stat_subscription","id":11},{"text":"1.2.9. pg_stat_subscription_stats","hash":"pg_stat_subscription_stats","id":12},{"text":"1.2.10. pg_stat_ssl","hash":"pg_stat_ssl","id":13},{"text":"1.2.11. pg_stat_gssapi","hash":"pg_stat_gssapi","id":14},{"text":"1.2.12. pg_stat_archiver","hash":"pg_stat_archiver","id":15},{"text":"1.2.13. pg_stat_bgwriter","hash":"pg_stat_bgwriter","id":16},{"text":"1.2.14. pg_stat_wal","hash":"pg_stat_wal","id":17},{"text":"1.2.15. pg_stat_database","hash":"pg_stat_database","id":18},{"text":"1.2.16. pg_stat_database_conflicts","hash":"pg_stat_database_conflicts","id":19},{"text":"1.2.17. pg_stat_all_tables","hash":"pg_stat_all_tables","id":20},{"text":"1.2.18. pg_stat_all_indexes","hash":"pg_stat_all_indexes","id":21},{"text":"1.2.19. pg_statio_all_tables","hash":"pg_statio_all_tables","id":22},{"text":"1.2.20. pg_statio_all_indexes","hash":"pg_statio_all_indexes","id":23},{"text":"1.2.21. pg_statio_all_sequences","hash":"pg_statio_all_sequences","id":24},{"text":"1.2.22. pg_stat_user_functions","hash":"pg_stat_user_functions","id":25},{"text":"1.2.23. pg_stat_slru","hash":"pg_stat_slru","id":26},{"text":"1.2.24. Statistics Functions","hash":"statistics-functions","id":27},{"text":"1.3. View Locks","hash":"view-locks","id":28},{"text":"1.4. Progress Reporting","hash":"progress-reporting","id":29},{"text":"1.4.1. ANALYZE Progress Reporting","hash":"analyze-progress-reporting","id":30},{"text":"1.4.2. CREATE INDEX Progress Reporting","hash":"create-index-progress-reporting","id":31},{"text":"1.4.3. VACUUM Progress Reporting","hash":"vacuum-progress-reporting","id":32},{"text":"1.4.4. CLUSTER Progress Reporting","hash":"cluster-progress-reporting","id":33},{"text":"1.4.5. Base Backup Progress Reporting","hash":"base-backup-progress-reporting","id":34},{"text":"1.4.6. COPY Progress Reporting","hash":"copy-progress-reporting","id":35},{"text":"1.5. Dynamic Tracing","hash":"dynamic-tracing","id":36},{"text":"1.5.1. Compiling for Dynamic Tracing","hash":"compiling-for-dynamic-tracing","id":37},{"text":"1.5.2. Built-in Probes","hash":"built-in-probes","id":38},{"text":"1.5.3. Using Probes","hash":"using-probes","id":39},{"text":"1.5.4. Defining New Probes","hash":"defining-new-probes","id":40},{"text":"2. Monitoring Disk Usage","hash":"monitoring-disk-usage","id":41},{"text":"2.1. Determining Disk Usage","hash":"determining-disk-usage","id":42},{"text":"2.2. Disk Full Failure","hash":"disk-full-failure","id":43}]},"24":{"id":24,"text":"IvorySQL databases require periodic maintenance known as vacuuming. For many installations, it is sufficient to let vacuuming be performed by the autovacuum daemon. You might need to adjust the autovacuuming parameters described there to obtain best results for your situation. Some database administrators will want to supplement or replace the daemon’s activities with manually-managed VACUUM commands, which typically are executed according to a schedule by cron or Task Scheduler scripts. To set up manually-managed vacuuming properly, it is essential to understand the issues discussed in the next few subsections. Administrators who rely on autovacuuming may still wish to skim this material to help them understand and adjust autovacuuming. IvorySQL’s command has to process each table on a regular basis for several reasons: To recover or reuse disk space occupied by updated or deleted rows. To update data statistics used by the PostgreSQL query planner. To update the visibility map, which speeds up index-only scans. To protect against loss of very old data due to transaction ID wraparound or multixact ID wraparound. Each of these reasons dictates performing VACUUM operations of varying frequency and scope, as explained in the following subsections. There are two variants of VACUUM: standard VACUUM and VACUUM FULL. VACUUM FULL can reclaim more disk space but runs much more slowly. Also, the standard form of VACUUM can run in parallel with production database operations. (Commands such as SELECT, INSERT, UPDATE, and DELETE will continue to function normally, though you will not be able to modify the definition of a table with commands such as ALTER TABLE while it is being vacuumed.) VACUUM FULL requires an ACCESS EXCLUSIVE lock on the table it is working on, and therefore cannot be done in parallel with other use of the table. Generally, therefore, administrators should strive to use standard VACUUM and avoid VACUUM FULL. VACUUM creates a substantial amount of I/O traffic, which can cause poor performance for other active sessions. There are configuration parameters that can be adjusted to reduce the performance impact of background vacuuming. In IvorySQL，an UPDATE or DELETE of a row does not immediately remove the old version of the row. This approach is necessary to gain the benefits of multiversion concurrency control : the row version must not be deleted while it is still potentially visible to other transactions. But eventually, an outdated or deleted row version is no longer of interest to any transaction. The space it occupies must then be reclaimed for reuse by new rows, to avoid unbounded growth of disk space requirements. This is done by running VACUUM. The standard form of VACUUM removes dead row versions in tables and indexes and marks the space available for future reuse. However, it will not return the space to the operating system, except in the special case where one or more pages at the end of a table become entirely free and an exclusive table lock can be easily obtained. In contrast, VACUUM FULL actively compacts tables by writing a complete new version of the table file with no dead space. This minimizes the size of the table, but can take a long time. It also requires extra disk space for the new copy of the table, until the operation completes. The usual goal of routine vacuuming is to do standard VACUUM`s often enough to avoid needing `VACUUM FULL. The autovacuum daemon attempts to work this way, and in fact will never issue VACUUM FULL. In this approach, the idea is not to keep tables at their minimum size, but to maintain steady-state usage of disk space: each table occupies space equivalent to its minimum size plus however much space gets used up between vacuum runs. Although VACUUM FULL can be used to shrink a table back to its minimum size and return the disk space to the operating system, there is not much point in this if the table will just grow again in the future. Thus, moderately-frequent standard VACUUM runs are a better approach than infrequent VACUUM FULL runs for maintaining heavily-updated tables. Some administrators prefer to schedule vacuuming themselves, for example doing all the work at night when load is low. The difficulty with doing vacuuming according to a fixed schedule is that if a table has an unexpected spike in update activity, it may get bloated to the point that VACUUM FULL is really necessary to reclaim space. Using the autovacuum daemon alleviates this problem, since the daemon schedules vacuuming dynamically in response to update activity. It is unwise to disable the daemon completely unless you have an extremely predictable workload. One possible compromise is to set the daemon’s parameters so that it will only react to unusually heavy update activity, thus keeping things from getting out of hand, while scheduled `VACUUM`s are expected to do the bulk of the work when the load is typical. For those not using autovacuum, a typical approach is to schedule a database-wide VACUUM once a day during a low-usage period, supplemented by more frequent vacuuming of heavily-updated tables as necessary. (Some installations with extremely high update rates vacuum their busiest tables as often as once every few minutes.) If you have multiple databases in a cluster, don’t forget to VACUUM each one; the program vacuumdb might be helpful. Tip Plain VACUUM may not be satisfactory when a table contains large numbers of dead row versions as a result of massive update or delete activity. If you have such a table and you need to reclaim the excess disk space it occupies, you will need to use VACUUM FULL, or alternatively CLUSTER or one of the table-rewriting variants of ALTER TABLE. These commands rewrite an entire new copy of the table and build new indexes for it. All these options require an ACCESS EXCLUSIVE lock. Note that they also temporarily use extra disk space approximately equal to the size of the table, since the old copies of the table and indexes can’t be released until the new ones are complete. Tip If you have a table whose entire contents are deleted on a periodic basis, consider doing it with TRUNCATE rather than using DELETE followed by VACUUM. TRUNCATE removes the entire content of the table immediately, without requiring a subsequent VACUUM or VACUUM FULL to reclaim the now-unused disk space. The disadvantage is that strict MVCC semantics are violated. The IvorySQL query planner relies on statistical information about the contents of tables in order to generate good plans for queries. These statistics are gathered by the ANALYZE command, which can be invoked by itself or as an optional step in VACUUM. It is important to have reasonably accurate statistics, otherwise poor choices of plans might degrade database performance. The autovacuum daemon, if enabled, will automatically issue ANALYZE commands whenever the content of a table has changed sufficiently. However, administrators might prefer to rely on manually-scheduled ANALYZE operations, particularly if it is known that update activity on a table will not affect the statistics of “interesting” columns. The daemon schedules ANALYZE strictly as a function of the number of rows inserted or updated; it has no knowledge of whether that will lead to meaningful statistical changes. Tuples changed in partitions and inheritance children do not trigger analyze on the parent table. If the parent table is empty or rarely changed, it may never be processed by autovacuum, and the statistics for the inheritance tree as a whole won’t be collected. It is necessary to run ANALYZE on the parent table manually in order to keep the statistics up to date. As with vacuuming for space recovery, frequent updates of statistics are more useful for heavily-updated tables than for seldom-updated ones. But even for a heavily-updated table, there might be no need for statistics updates if the statistical distribution of the data is not changing much. A simple rule of thumb is to think about how much the minimum and maximum values of the columns in the table change. For example, a timestamp column that contains the time of row update will have a constantly-increasing maximum value as rows are added and updated; such a column will probably need more frequent statistics updates than, say, a column containing URLs for pages accessed on a website. The URL column might receive changes just as often, but the statistical distribution of its values probably changes relatively slowly. It is possible to run ANALYZE on specific tables and even just specific columns of a table, so the flexibility exists to update some statistics more frequently than others if your application requires it. In practice, however, it is usually best to just analyze the entire database, because it is a fast operation. ANALYZE uses a statistically random sampling of the rows of a table rather than reading every single row. Tip Although per-column tweaking of ANALYZE frequency might not be very productive, you might find it worthwhile to do per-column adjustment of the level of detail of the statistics collected by ANALYZE. Columns that are heavily used in WHERE clauses and have highly irregular data distributions might require a finer-grain data histogram than other columns. See ALTER TABLE SET STATISTICS, or change the database-wide default using the default_statistics_target configuration parameter. Tip The autovacuum daemon does not issue ANALYZE commands for foreign tables, since it has no means of determining how often that might be useful. If your queries require statistics on foreign tables for proper planning, it’s a good idea to run manually-managed ANALYZE commands on those tables on a suitable schedule. Tip The autovacuum daemon does not issue ANALYZE commands for partitioned tables. Inheritance parents will only be analyzed if the parent itself is changed - changes to child tables do not trigger autoanalyze on the parent table. If your queries require statistics on parent tables for proper planning, it is necessary to periodically run a manual ANALYZE on those tables to keep the statistics up to date. Vacuum maintains a visibility map for each table to keep track of which pages contain only tuples that are known to be visible to all active transactions (and all future transactions, until the page is again modified). This has two purposes. First, vacuum itself can skip such pages on the next run, since there is nothing to clean up. Second, it allows IvorySQL to answer some queries using only the index, without reference to the underlying table. Since PostgreSQL indexes don’t contain tuple visibility information, a normal index scan fetches the heap tuple for each matching index entry, to check whether it should be seen by the current transaction. An index-only scan, on the other hand, checks the visibility map first. If it’s known that all tuples on the page are visible, the heap fetch can be skipped. This is most useful on large data sets where the visibility map can prevent disk accesses. The visibility map is vastly smaller than the heap, so it can easily be cached even when the heap is very large. IvorySQL’s MVCC transaction semantics depend on being able to compare transaction ID (XID) numbers: a row version with an insertion XID greater than the current transaction’s XID is “in the future” and should not be visible to the current transaction. But since transaction IDs have limited size (32 bits) a cluster that runs for a long time (more than 4 billion transactions) would suffer transaction ID wraparound: the XID counter wraps around to zero, and all of a sudden transactions that were in the past appear to be in the future — which means their output become invisible. In short, catastrophic data loss. (Actually the data is still there, but that’s cold comfort if you cannot get at it.) To avoid this, it is necessary to vacuum every table in every database at least once every two billion transactions. The reason that periodic vacuuming solves the problem is that VACUUM will mark rows as frozen, indicating that they were inserted by a transaction that committed sufficiently far in the past that the effects of the inserting transaction are certain to be visible to all current and future transactions. Normal XIDs are compared using modulo-232 arithmetic. This means that for every normal XID, there are two billion XIDs that are “older” and two billion that are “newer”; another way to say it is that the normal XID space is circular with no endpoint. Therefore, once a row version has been created with a particular normal XID, the row version will appear to be “in the past” for the next two billion transactions, no matter which normal XID we are talking about. If the row version still exists after more than two billion transactions, it will suddenly appear to be in the future. To prevent this, IvorySQL reserves a special XID, FrozenTransactionId, which does not follow the normal XID comparison rules and is always considered older than every normal XID. Frozen row versions are treated as if the inserting XID were FrozenTransactionId, so that they will appear to be “in the past” to all normal transactions regardless of wraparound issues, and so such row versions will be valid until deleted, no matter how long that is. vacuum_freeze_min_age controls how old an XID value has to be before rows bearing that XID will be frozen. Increasing this setting may avoid unnecessary work if the rows that would otherwise be frozen will soon be modified again, but decreasing this setting increases the number of transactions that can elapse before the table must be vacuumed again. VACUUM uses the visibility map to determine which pages of a table must be scanned. Normally, it will skip pages that don’t have any dead row versions even if those pages might still have row versions with old XID values. Therefore, normal VACUUM`s won’t always freeze every old row version in the table. When that happens, `VACUUM will eventually need to perform an aggressive vacuum, which will freeze all eligible unfrozen XID and MXID values, including those from all-visible but not all-frozen pages. In practice most tables require periodic aggressive vacuuming. vacuum_freeze_table_age controls when VACUUM does that: all-visible but not all-frozen pages are scanned if the number of transactions that have passed since the last such scan is greater than vacuum_freeze_table_age minus vacuum_freeze_min_age. Setting vacuum_freeze_table_age to 0 forces VACUUM to always use its aggressive strategy. The maximum time that a table can go unvacuumed is two billion transactions minus the vacuum_freeze_min_age value at the time of the last aggressive vacuum. If it were to go unvacuumed for longer than that, data loss could result. To ensure that this does not happen, autovacuum is invoked on any table that might contain unfrozen rows with XIDs older than the age specified by the configuration parameter autovacuum_freeze_max_age. (This will happen even if autovacuum is disabled.) This implies that if a table is not otherwise vacuumed, autovacuum will be invoked on it approximately once every autovacuum_freeze_max_age minus vacuum_freeze_min_age transactions. For tables that are regularly vacuumed for space reclamation purposes, this is of little importance. However, for static tables (including tables that receive inserts, but no updates or deletes), there is no need to vacuum for space reclamation, so it can be useful to try to maximize the interval between forced autovacuums on very large static tables. Obviously one can do this either by increasing autovacuum_freeze_max_age or decreasing vacuum_freeze_min_age. The effective maximum for vacuum_freeze_table_age is 0.95 * autovacuum_freeze_max_age; a setting higher than that will be capped to the maximum. A value higher than autovacuum_freeze_max_age wouldn’t make sense because an anti-wraparound autovacuum would be triggered at that point anyway, and the 0.95 multiplier leaves some breathing room to run a manual VACUUM before that happens. As a rule of thumb, vacuum_freeze_table_age should be set to a value somewhat below autovacuum_freeze_max_age, leaving enough gap so that a regularly scheduled VACUUM or an autovacuum triggered by normal delete and update activity is run in that window. Setting it too close could lead to anti-wraparound autovacuums, even though the table was recently vacuumed to reclaim space, whereas lower values lead to more frequent aggressive vacuuming. The sole disadvantage of increasing autovacuum_freeze_max_age (and vacuum_freeze_table_age along with it) is that the pg_xact and pg_commit_ts subdirectories of the database cluster will take more space, because it must store the commit status and (if track_commit_timestamp is enabled) timestamp of all transactions back to the autovacuum_freeze_max_age horizon. The commit status uses two bits per transaction, so if autovacuum_freeze_max_age is set to its maximum allowed value of two billion, pg_xact can be expected to grow to about half a gigabyte and pg_commit_ts to about 20GB. If this is trivial compared to your total database size, setting autovacuum_freeze_max_age to its maximum allowed value is recommended. Otherwise, set it depending on what you are willing to allow for pg_xact and pg_commit_ts storage. (The default, 200 million transactions, translates to about 50MB of pg_xact storage and about 2GB of pg_commit_ts storage.) One disadvantage of decreasing vacuum_freeze_min_age is that it might cause VACUUM to do useless work: freezing a row version is a waste of time if the row is modified soon thereafter (causing it to acquire a new XID). So the setting should be large enough that rows are not frozen until they are unlikely to change any more. To track the age of the oldest unfrozen XIDs in a database, VACUUM stores XID statistics in the system tables pg_class and pg_database. In particular, the relfrozenxid column of a table’s pg_class row contains the oldest remaining unfrozen XID at the end of the most recent VACUUM that successfully advanced relfrozenxid (typically the most recent aggressive VACUUM). Similarly, the datfrozenxid column of a database’s pg_database row is a lower bound on the unfrozen XIDs appearing in that database — it is just the minimum of the per-table relfrozenxid values within the database. A convenient way to examine this information is to execute queries such as: SELECT c.oid::regclass as table_name, greatest(age(c.relfrozenxid),age(t.relfrozenxid)) as age FROM pg_class c LEFT JOIN pg_class t ON c.reltoastrelid = t.oid WHERE c.relkind IN ('r', 'm'); SELECT datname, age(datfrozenxid) FROM pg_database; The age column measures the number of transactions from the cutoff XID to the current transaction’s XID. VACUUM normally only scans pages that have been modified since the last vacuum, but relfrozenxid can only be advanced when every page of the table that might contain unfrozen XIDs is scanned. This happens when relfrozenxid is more than vacuum_freeze_table_age transactions old, when VACUUM’s `FREEZE option is used, or when all pages that are not already all-frozen happen to require vacuuming to remove dead row versions. When VACUUM scans every page in the table that is not already all-frozen, it should set age(relfrozenxid) to a value just a little more than the vacuum_freeze_min_age setting that was used (more by the number of transactions started since the VACUUM started). VACUUM will set relfrozenxid to the oldest XID that remains in the table, so it’s possible that the final value will be much more recent than strictly required. If no relfrozenxid-advancing VACUUM is issued on the table until autovacuum_freeze_max_age is reached, an autovacuum will soon be forced for the table. If for some reason autovacuum fails to clear old XIDs from a table, the system will begin to emit warning messages like this when the database’s oldest XIDs reach forty million transactions from the wraparound point: WARNING: database \"mydb\" must be vacuumed within 39985967 transactions HINT: To avoid a database shutdown, execute a database-wide VACUUM in that database. (A manual VACUUM should fix the problem, as suggested by the hint; but note that the VACUUM must be performed by a superuser, else it will fail to process system catalogs and thus not be able to advance the database’s datfrozenxid.) If these warnings are ignored, the system will shut down and refuse to start any new transactions once there are fewer than three million transactions left until wraparound: ERROR: database is not accepting commands to avoid wraparound data loss in database \"mydb\" HINT: Stop the postmaster and vacuum that database in single-user mode. The three-million-transaction safety margin exists to let the administrator recover without data loss, by manually executing the required VACUUM commands. However, since the system will not execute commands once it has gone into the safety shutdown mode, the only way to do this is to stop the server and start the server in single-user mode to execute VACUUM. The shutdown mode is not enforced in single-user mode. See the postgres reference page for details about using single-user mode. Multixact IDs are used to support row locking by multiple transactions. Since there is only limited space in a tuple header to store lock information, that information is encoded as a “multiple transaction ID”, or multixact ID for short, whenever there is more than one transaction concurrently locking a row. Information about which transaction IDs are included in any particular multixact ID is stored separately in the pg_multixact subdirectory, and only the multixact ID appears in the xmax field in the tuple header. Like transaction IDs, multixact IDs are implemented as a 32-bit counter and corresponding storage, all of which requires careful aging management, storage cleanup, and wraparound handling. There is a separate storage area which holds the list of members in each multixact, which also uses a 32-bit counter and which must also be managed. Whenever VACUUM scans any part of a table, it will replace any multixact ID it encounters which is older than vacuum_multixact_freeze_min_age by a different value, which can be the zero value, a single transaction ID, or a newer multixact ID. For each table, pg_class.relminmxid stores the oldest possible multixact ID still appearing in any tuple of that table. If this value is older than vacuum_multixact_freeze_table_age, an aggressive vacuum is forced. As discussed in the previous section, an aggressive vacuum means that only those pages which are known to be all-frozen will be skipped. mxid_age() can be used on pg_class.relminmxid to find its age. Aggressive VACUUM`s, regardless of what causes them, are guaranteed to be able to advance the table’s `relminmxid. Eventually, as all tables in all databases are scanned and their oldest multixact values are advanced, on-disk storage for older multixacts can be removed. As a safety device, an aggressive vacuum scan will occur for any table whose multixact-age is greater than autovacuum_multixact_freeze_max_age. Also, if the storage occupied by multixacts members exceeds 2GB, aggressive vacuum scans will occur more often for all tables, starting with those that have the oldest multixact-age. Both of these kinds of aggressive scans will occur even if autovacuum is nominally disabled. IvorySQL has an optional but highly recommended feature called autovacuum, whose purpose is to automate the execution of VACUUM and ANALYZE commands. When enabled, autovacuum checks for tables that have had a large number of inserted, updated or deleted tuples. These checks use the statistics collection facility; therefore, autovacuum cannot be used unless track_counts is set to true. In the default configuration, autovacuuming is enabled and the related configuration parameters are appropriately set. The “autovacuum daemon” actually consists of multiple processes. There is a persistent daemon process, called the autovacuum launcher, which is in charge of starting autovacuum worker processes for all databases. The launcher will distribute the work across time, attempting to start one worker within each database every autovacuum_naptime seconds. (Therefore, if the installation has N databases, a new worker will be launched every autovacuum_naptime/N seconds.) A maximum of autovacuum_max_workers worker processes are allowed to run at the same time. If there are more than autovacuum_max_workers databases to be processed, the next database will be processed as soon as the first worker finishes. Each worker process will check each table within its database and execute VACUUM and/or ANALYZE as needed. log_autovacuum_min_duration can be set to monitor autovacuum workers' activity. If several large tables all become eligible for vacuuming in a short amount of time, all autovacuum workers might become occupied with vacuuming those tables for a long period. This would result in other tables and databases not being vacuumed until a worker becomes available. There is no limit on how many workers might be in a single database, but workers do try to avoid repeating work that has already been done by other workers. Note that the number of running workers does not count towards max_connections or superuser_reserved_connections limits. Tables whose relfrozenxid value is more than autovacuum_freeze_max_age transactions old are always vacuumed (this also applies to those tables whose freeze max age has been modified via storage parameters; see below). Otherwise, if the number of tuples obsoleted since the last VACUUM exceeds the “vacuum threshold”, the table is vacuumed. The vacuum threshold is defined as: vacuum threshold = vacuum base threshold + vacuum scale factor * number of tuples where the vacuum base threshold is autovacuum_vacuum_threshold, the vacuum scale factor is autovacuum_vacuum_scale_factor, and the number of tuples is pg_class.reltuples. The table is also vacuumed if the number of tuples inserted since the last vacuum has exceeded the defined insert threshold, which is defined as: vacuum insert threshold = vacuum base insert threshold + vacuum insert scale factor * number of tuples where the vacuum insert base threshold is autovacuum_vacuum_insert_threshold, and vacuum insert scale factor is autovacuum_vacuum_insert_scale_factor. Such vacuums may allow portions of the table to be marked as all visible and also allow tuples to be frozen, which can reduce the work required in subsequent vacuums. For tables which receive INSERT operations but no or almost no UPDATE/DELETE operations, it may be beneficial to lower the table’s autovacuum_freeze_min_age as this may allow tuples to be frozen by earlier vacuums. The number of obsolete tuples and the number of inserted tuples are obtained from the cumulative statistics system; it is a semi-accurate count updated by each UPDATE, DELETE and INSERT operation. (It is only semi-accurate because some information might be lost under heavy load.) If the relfrozenxid value of the table is more than vacuum_freeze_table_age transactions old, an aggressive vacuum is performed to freeze old tuples and advance relfrozenxid; otherwise, only pages that have been modified since the last vacuum are scanned. For analyze, a similar condition is used: the threshold, defined as: analyze threshold = analyze base threshold + analyze scale factor * number of tuples is compared to the total number of tuples inserted, updated, or deleted since the last ANALYZE. Partitioned tables are not processed by autovacuum. Statistics should be collected by running a manual ANALYZE when it is first populated, and again whenever the distribution of data in its partitions changes significantly. Temporary tables cannot be accessed by autovacuum. Therefore, appropriate vacuum and analyze operations should be performed via session SQL commands. The default thresholds and scale factors are taken from postgresql.conf, but it is possible to override them (and many other autovacuum control parameters) on a per-table basis; see Storage Parameters for more information. If a setting has been changed via a table’s storage parameters, that value is used when processing that table; otherwise the global settings are used. See Section 20.10 for more details on the global settings. When multiple workers are running, the autovacuum cost delay parameters (see Section 20.4.4) are “balanced” among all the running workers, so that the total I/O impact on the system is the same regardless of the number of workers actually running. However, any workers processing tables whose per-table autovacuum_vacuum_cost_delay or autovacuum_vacuum_cost_limit storage parameters have been set are not considered in the balancing algorithm. Autovacuum workers generally don’t block other commands. If a process attempts to acquire a lock that conflicts with the SHARE UPDATE EXCLUSIVE lock held by autovacuum, lock acquisition will interrupt the autovacuum. For conflicting lock modes, see Table 13.3. However, if the autovacuum is running to prevent transaction ID wraparound (i.e., the autovacuum query name in the pg_stat_activity view ends with (to prevent wraparound)), the autovacuum is not automatically interrupted. Warning Regularly running commands that acquire locks conflicting with a SHARE UPDATE EXCLUSIVE lock (e.g., ANALYZE) can effectively prevent autovacuums from ever completing. In some situations it is worthwhile to rebuild indexes periodically with the REINDEX command or a series of individual rebuilding steps. B-tree index pages that have become completely empty are reclaimed for re-use. However, there is still a possibility of inefficient use of space: if all but a few index keys on a page have been deleted, the page remains allocated. Therefore, a usage pattern in which most, but not all, keys in each range are eventually deleted will see poor use of space. For such usage patterns, periodic reindexing is recommended. The potential for bloat in non-B-tree indexes has not been well researched. It is a good idea to periodically monitor the index’s physical size when using any non-B-tree index type. Also, for B-tree indexes, a freshly-constructed index is slightly faster to access than one that has been updated many times because logically adjacent pages are usually also physically adjacent in a newly built index. (This consideration does not apply to non-B-tree indexes.) It might be worthwhile to reindex periodically just to improve access speed. REINDEX can be used safely and easily in all cases. This command requires an ACCESS EXCLUSIVE lock by default, hence it is often preferable to execute it with its CONCURRENTLY option, which requires only a SHARE UPDATE EXCLUSIVE lock. It is a good idea to save the database server’s log output somewhere, rather than just discarding it via /dev/null. The log output is invaluable when diagnosing problems.Log output tends to be voluminous (especially at higher debug levels) so you won’t want to save it indefinitely. You need to rotate the log files so that new log files are started and old ones removed after a reasonable period of time. If you simply direct the stderr of postgres into a file, you will have log output, but the only way to truncate the log file is to stop and restart the server. This might be acceptable if you are using PostgreSQL in a development environment, but few production servers would find this behavior acceptable. A better approach is to send the server’s stderr output to some type of log rotation program. There is a built-in log rotation facility, which you can use by setting the configuration parameter logging_collector to true in postgresql.conf. You can also use this approach to capture the log data in machine readable CSV (comma-separated values) format. Alternatively, you might prefer to use an external log rotation program if you have one that you are already using with other server software. For example, the rotatelogs tool included in the Apache distribution can be used with PostgreSQL. One way to do this is to pipe the server’s stderr output to the desired program. If you start the server with pg_ctl, then stderr is already redirected to stdout, so you just need a pipe command, for example: pg_ctl start | rotatelogs /var/log/pgsql_log 86400 You can combine these approaches by setting up logrotate to collect log files produced by PostgreSQL built-in logging collector. In this case, the logging collector defines the names and location of the log files, while logrotate periodically archives these files. When initiating log rotation, logrotate must ensure that the application sends further output to the new file. This is commonly done with a postrotate script that sends a SIGHUP signal to the application, which then reopens the log file. In PostgreSQL, you can run pg_ctl with the logrotate option instead. When the server receives this command, the server either switches to a new log file or reopens the existing file, depending on the logging configuration. Note When using static log file names, the server might fail to reopen the log file if the max open file limit is reached or a file table overflow occurs. In this case, log messages are sent to the old log file until a successful log rotation. If logrotate is configured to compress the log file and delete it, the server may lose the messages logged in this time frame. To avoid this issue, you can configure the logging collector to dynamically assign log file names and use a prerotate script to ignore open log files. Another production-grade approach to managing log output is to send it to syslog and let syslog deal with file rotation. To do this, set the configuration parameter log_destination to syslog (to log to syslog only) in postgresql.conf. Then you can send a SIGHUP signal to the syslog daemon whenever you want to force it to start writing a new log file. If you want to automate log rotation, the logrotate program can be configured to work with log files from syslog. On many systems, however, syslog is not very reliable, particularly with large log messages; it might truncate or drop messages just when you need them the most. Also, on Linux, syslog will flush each message to disk, yielding poor performance. (You can use a “-” at the start of the file name in the syslog configuration file to disable syncing.) Note that all the solutions described above take care of starting new log files at configurable intervals, but they do not handle deletion of old, no-longer-useful log files. You will probably want to set up a batch job to periodically delete old log files. Another possibility is to configure the rotation program so that old log files are overwritten cyclically. pgBadger is an external project that does sophisticated log file analysis. check_postgres provides Nagios alerts when important messages appear in the log files, as well as detection of many other extraordinary conditions. Shared disk failover avoids synchronization overhead by having only one copy of the database. It uses a single disk array that is shared by multiple servers. If the main database server fails, the standby server is able to mount and start the database as though it were recovering from a database crash. This allows rapid failover with no data loss. Shared hardware functionality is common in network storage devices. Using a network file system is also possible, though care must be taken that the file system has full POSIX behavior . One significant limitation of this method is that if the shared disk array fails or becomes corrupt, the primary and standby servers are both nonfunctional. Another issue is that the standby server should never access the shared storage while the primary server is running. A modified version of shared hardware functionality is file system replication, where all changes to a file system are mirrored to a file system residing on another computer. The only restriction is that the mirroring must be done in a way that ensures the standby server has a consistent copy of the file system — specifically, writes to the standby must be done in the same order as those on the primary. DRBD is a popular file system replication solution for Linux. Warm and hot standby servers can be kept current by reading a stream of write-ahead log (WAL) records. If the main server fails, the standby contains almost all of the data of the main server, and can be quickly made the new primary database server. This can be synchronous or asynchronous and can only be done for the entire database server. A standby server can be implemented using file-based log shipping or streaming replication, or a combination of both. For information on hot standby Logical replication allows a database server to send a stream of data modifications to another server. IvorySQL logical replication constructs a stream of logical data modifications from the WAL. Logical replication allows replication of data changes on a per-table basis. In addition, a server that is publishing its own changes can also subscribe to changes from another server, allowing data to flow in multiple directions. For more information on logical replication. Through the logical decoding interface , third-party extensions can also provide similar functionality. A trigger-based replication setup typically funnels data modification queries to a designated primary server. Operating on a per-table basis, the primary server sends data changes (typically) asynchronously to the standby servers. Standby servers can answer queries while the primary is running, and may allow some local data changes or write activity. This form of replication is often used for offloading large analytical or data warehouse queries. Slony-I is an example of this type of replication, with per-table granularity, and support for multiple standby servers. Because it updates the standby server asynchronously (in batches), there is possible data loss during fail over. With SQL-based replication middleware, a program intercepts every SQL query and sends it to one or all servers. Each server operates independently. Read-write queries must be sent to all servers, so that every server receives any changes. But read-only queries can be sent to just one server, allowing the read workload to be distributed among them. If queries are simply broadcast unmodified, functions like random(), CURRENT_TIMESTAMP, and sequences can have different values on different servers. This is because each server operates independently, and because SQL queries are broadcast rather than actual data changes. If this is unacceptable, either the middleware or the application must determine such values from a single source and then use those values in write queries. Care must also be taken that all transactions either commit or abort on all servers, perhaps using two-phase commit (PREPARE TRANSACTION and COMMIT PREPARED). Pgpool-II and Continuent Tungsten are examples of this type of replication. For servers that are not regularly connected or have slow communication links, like laptops or remote servers, keeping data consistent among servers is a challenge. Using asynchronous multimaster replication, each server works independently, and periodically communicates with the other servers to identify conflicting transactions. The conflicts can be resolved by users or conflict resolution rules. Bucardo is an example of this type of replication. In synchronous multimaster replication, each server can accept write requests, and modified data is transmitted from the original server to every other server before each transaction commits. Heavy write activity can cause excessive locking and commit delays, leading to poor performance. Read requests can be sent to any server. Some implementations use shared disk to reduce the communication overhead. Synchronous multimaster replication is best for mostly read workloads, though its big advantage is that any server can accept write requests — there is no need to partition workloads between primary and standby servers, and because the data changes are sent from one server to another, there is no problem with non-deterministic functions like random(). IvorySQL does not offer this type of replication, though PostgreSQL two-phase commit (PREPARE TRANSACTION and COMMIT PREPARED) can be used to implement this in application code or middleware. The following table summarizes the capabilities of each of these scenarios. Feature Shared Disk File System Repl. Write-Ahead Log Shipping Logical Repl. Trigger-Based Repl. SQL Repl. Middle-ware Async. MM Repl. Sync. MM Repl. Popular examples NAS DRBD built-in streaming repl. built-in logical repl., pglogical Londiste, Slony pgpool-II Bucardo Comm. method shared disk disk blocks WAL logical decoding table rows SQL table rows table rows and row locks No special hardware required • • • • • • • Allows multiple primary servers • • • • No overhead on primary • • • • No waiting for multiple servers • with sync off with sync off • • Primary failure will never lose data • • with sync on with sync on • • Replicas accept read-only queries with hot standby • • • • • Per-table granularity • • • • No conflict resolution necessary • • • • • • There are a few solutions that do not fit into the above categories: Data Partitioning Data partitioning splits tables into data sets. Each set can be modified by only one server. For example, data can be partitioned by offices, e.g., London and Paris, with a server in each office. If queries combining London and Paris data are necessary, an application can query both servers, or primary/standby replication can be used to keep a read-only copy of the other office's data on each server. Multiple-Server Parallel Query Execution Many of the above solutions allow multiple servers to handle multiple queries, but none allow a single query to use multiple servers to complete faster. This solution allows multiple servers to work concurrently on a single query. It is usually accomplished by splitting the data among servers and having each server execute its part of the query and return results to a central server where they are combined and returned to the user. This can be implemented using the PL/Proxy tool set. It is usually wise to create the primary and standby servers so that they are as similar as possible, at least from the perspective of the database server. In particular, the path names associated with tablespaces will be passed across unmodified, so both primary and standby servers must have the same mount paths for tablespaces if that feature is used. Keep in mind that if CREATE TABLESPACE is executed on the primary, any new mount point needed for it must be created on the primary and all standby servers before the command is executed. Hardware need not be exactly the same, but experience shows that maintaining two identical systems is easier than maintaining two dissimilar ones over the lifetime of the application and system. In any case the hardware architecture must be the same — shipping from, say, a 32-bit to a 64-bit system will not work. In general, log shipping between servers running different major IvorySQL release levels is not possible. It is the policy of the IvorySQL Global Development Group not to make changes to disk formats during minor release upgrades, so it is likely that running different minor release levels on primary and standby servers will work successfully. However, no formal support for that is offered and you are advised to keep primary and standby servers at the same release level as much as possible. When updating to a new minor release, the safest policy is to update the standby servers first — a new minor release is more likely to be able to read WAL files from a previous minor release than vice versa. A server enters standby mode if a standby.signal file exists in the data directory when the server is started. In standby mode, the server continuously applies WAL received from the primary server. The standby server can read WAL from a WAL archive (see restore_command) or directly from the primary over a TCP connection (streaming replication). The standby server will also attempt to restore any WAL found in the standby cluster’s pg_wal directory. That typically happens after a server restart, when the standby replays again WAL that was streamed from the primary before the restart, but you can also manually copy files to pg_wal at any time to have them replayed. At startup, the standby begins by restoring all WAL available in the archive location, calling restore_command. Once it reaches the end of WAL available there and restore_command fails, it tries to restore any WAL available in the pg_wal directory. If that fails, and streaming replication has been configured, the standby tries to connect to the primary server and start streaming WAL from the last valid record found in archive or pg_wal. If that fails or streaming replication is not configured, or if the connection is later disconnected, the standby goes back to step 1 and tries to restore the file from the archive again. This loop of retries from the archive, pg_wal, and via streaming replication goes on until the server is stopped or failover is triggered by a trigger file. Standby mode is exited and the server switches to normal operation when pg_ctl promote is run, pg_promote() is called, or a trigger file is found (promote_trigger_file). Before failover, any WAL immediately available in the archive or in pg_wal will be restored, but no attempt is made to connect to the primary. Set up continuous archiving on the primary to an archive directory accessible from the standby.The archive location should be accessible from the standby even when the primary is down, i.e., it should reside on the standby server itself or another trusted server, not on the primary server. If you want to use streaming replication, set up authentication on the primary server to allow replication connections from the standby server(s); that is, create a role and provide a suitable entry or entries in pg_hba.conf with the database field set to replication. Also ensure max_wal_senders is set to a sufficiently large value in the configuration file of the primary server. If replication slots will be used, ensure that max_replication_slots is set sufficiently high as well. To set up the standby server, restore the base backup taken from primary server . Create a file standby.signal in the standby’s cluster data directory. Set restore_command to a simple command to copy files from the WAL archive. If you plan to have multiple standby servers for high availability purposes, make sure that recovery_target_timeline is set to latest (the default), to make the standby server follow the timeline change that occurs at failover to another standby. Note restore_command should return immediately if the file does not exist; the server will retry the command again if necessary. If you want to use streaming replication, fill in primary_conninfo with a libpq connection string, including the host name (or IP address) and any additional details needed to connect to the primary server. If the primary needs a password for authentication, the password needs to be specified in primary_conninfo as well. If you’re setting up the standby server for high availability purposes, set up WAL archiving, connections and authentication like the primary server, because the standby server will work as a primary server after failover. If you’re using a WAL archive, its size can be minimized using the archive_cleanup_command parameter to remove files that are no longer required by the standby server. The pg_archivecleanup utility is designed specifically to be used with archive_cleanup_command in typical single-standby configurations, see pg_archivecleanup. Note however, that if you’re using the archive for backup purposes, you need to retain files needed to recover from at least the latest base backup, even if they’re no longer needed by the standby. A simple example of configuration is: primary_conninfo = 'host=192.168.1.50 port=5432 user=foo password=foopass options=''-c wal_sender_timeout=5000''' restore_command = 'cp /path/to/archive/%f %p' archive_cleanup_command = 'pg_archivecleanup /path/to/archive %r' You can have any number of standby servers, but if you use streaming replication, make sure you set max_wal_senders high enough in the primary to allow them to be connected simultaneously. Streaming replication allows a standby server to stay more up-to-date than is possible with file-based log shipping. The standby connects to the primary, which streams WAL records to the standby as they’re generated, without waiting for the WAL file to be filled. Streaming replication is asynchronous by default , in which case there is a small delay between committing a transaction in the primary and the changes becoming visible in the standby. This delay is however much smaller than with file-based log shipping, typically under one second assuming the standby is powerful enough to keep up with the load. With streaming replication, archive_timeout is not required to reduce the data loss window. If you use streaming replication without file-based continuous archiving, the server might recycle old WAL segments before the standby has received them. If this occurs, the standby will need to be reinitialized from a new base backup. You can avoid this by setting wal_keep_size to a value large enough to ensure that WAL segments are not recycled too early, or by configuring a replication slot for the standby. If you set up a WAL archive that’s accessible from the standby, these solutions are not required, since the standby can always use the archive to catch up provided it retains enough segments. To use streaming replication, set up a file-based log-shipping standby server. The step that turns a file-based log-shipping standby into streaming replication standby is setting the primary_conninfo setting to point to the primary server. Set listen_addresses and authentication options (see pg_hba.conf) on the primary so that the standby server can connect to the replication pseudo-database on the primary server. On systems that support the keepalive socket option, setting tcp_keepalives_idle, tcp_keepalives_interval and tcp_keepalives_count helps the primary promptly notice a broken connection. Set the maximum number of concurrent connections from the standby servers (see max_wal_senders for details). When the standby is started and primary_conninfo is set correctly, the standby will connect to the primary after replaying all WAL files available in the archive. If the connection is established successfully, you will see a walreceiver in the standby, and a corresponding walsender process in the primary. It is very important that the access privileges for replication be set up so that only trusted users can read the WAL stream, because it is easy to extract privileged information from it. Standby servers must authenticate to the primary as an account that has the REPLICATION privilege or a superuser. It is recommended to create a dedicated user account with REPLICATION and LOGIN privileges for replication. While REPLICATION privilege gives very high permissions, it does not allow the user to modify any data on the primary system, which the SUPERUSER privilege does. Client authentication for replication is controlled by a pg_hba.conf record specifying replication in the database field. For example, if the standby is running on host IP 192.168.1.100 and the account name for replication is foo, the administrator can add the following line to the pg_hba.conf file on the primary: # Allow the user \"foo\" from host 192.168.1.100 to connect to the primary # as a replication standby if the user's password is correctly supplied. # # TYPE DATABASE USER ADDRESS METHOD host replication foo 192.168.1.100/32 md5 The host name and port number of the primary, connection user name, and password are specified in the primary_conninfo. The password can also be set in the ~/.pgpass file on the standby (specify replication in the database field). For example, if the primary is running on host IP 192.168.1.50, port 5432, the account name for replication is foo, and the password is foopass, the administrator can add the following line to the postgresql.conf file on the standby: # The standby connects to the primary that is running on host 192.168.1.50 # and port 5432 as the user \"foo\" whose password is \"foopass\". primary_conninfo = 'host=192.168.1.50 port=5432 user=foo password=foopass' An important health indicator of streaming replication is the amount of WAL records generated in the primary, but not yet applied in the standby. You can calculate this lag by comparing the current WAL write location on the primary with the last WAL location received by the standby. These locations can be retrieved using pg_current_wal_lsn on the primary and pg_last_wal_receive_lsn on the standby, respectively . The last WAL receive location in the standby is also displayed in the process status of the WAL receiver process, displayed using the ps command . You can retrieve a list of WAL sender processes via the pg_stat_replication view. Large differences between pg_current_wal_lsn and the view’s sent_lsn field might indicate that the primary server is under heavy load, while differences between sent_lsn and pg_last_wal_receive_lsn on the standby might indicate network delay, or that the standby is under heavy load. On a hot standby, the status of the WAL receiver process can be retrieved via the pg_stat_wal_receiver view. A large difference between pg_last_wal_replay_lsn and the view’s flushed_lsn indicates that WAL is being received faster than it can be replayed. Replication slots provide an automated way to ensure that the primary does not remove WAL segments until they have been received by all standbys, and that the primary does not remove rows which could cause a recovery conflict even when the standby is disconnected. In lieu of using replication slots, it is possible to prevent the removal of old WAL segments using wal_keep_size, or by storing the segments in an archive using archive_command or archive_library. However, these methods often result in retaining more WAL segments than required, whereas replication slots retain only the number of segments known to be needed. On the other hand, replication slots can retain so many WAL segments that they fill up the space allocated for pg_wal; max_slot_wal_keep_size limits the size of WAL files retained by replication slots. Similarly, hot_standby_feedback and vacuum_defer_cleanup_age provide protection against relevant rows being removed by vacuum, but the former provides no protection during any time period when the standby is not connected, and the latter often needs to be set to a high value to provide adequate protection. Replication slots overcome these disadvantages. Each replication slot has a name, which can contain lower-case letters, numbers, and the underscore character. Existing replication slots and their state can be seen in the pg_replication_slots view. Slots can be created and dropped either via the streaming replication protocol or via SQL functions . You can create a replication slot like this: postgres=# SELECT * FROM pg_create_physical_replication_slot('node_a_slot'); slot_name | lsn -------------+----- node_a_slot | postgres=# SELECT slot_name, slot_type, active FROM pg_replication_slots; slot_name | slot_type | active -------------+-----------+-------- node_a_slot | physical | f (1 row) To configure the standby to use this slot, primary_slot_name should be configured on the standby. Here is a simple example: primary_conninfo = 'host=192.168.1.50 port=5432 user=foo password=foopass' primary_slot_name = 'node_a_slot' The cascading replication feature allows a standby server to accept replication connections and stream WAL records to other standbys, acting as a relay. This can be used to reduce the number of direct connections to the primary and also to minimize inter-site bandwidth overheads. A standby acting as both a receiver and a sender is known as a cascading standby. Standbys that are more directly connected to the primary are known as upstream servers, while those standby servers further away are downstream servers. Cascading replication does not place limits on the number or arrangement of downstream servers, though each standby connects to only one upstream server which eventually links to a single primary server. A cascading standby sends not only WAL records received from the primary but also those restored from the archive. So even if the replication connection in some upstream connection is terminated, streaming replication continues downstream for as long as new WAL records are available. Cascading replication is currently asynchronous. Synchronous replication settings have no effect on cascading replication at present. Hot standby feedback propagates upstream, whatever the cascaded arrangement. If an upstream standby server is promoted to become the new primary, downstream servers will continue to stream from the new primary if recovery_target_timeline is set to 'latest' (the default). To use cascading replication, set up the cascading standby so that it can accept replication connections (that is, set max_wal_senders and hot_standby, and configure host-based authentication). You will also need to set primary_conninfo in the downstream standby to point to the cascading standby. IvorySQL streaming replication is asynchronous by default. If the primary server crashes then some transactions that were committed may not have been replicated to the standby server, causing data loss. The amount of data loss is proportional to the replication delay at the time of failover. Synchronous replication offers the ability to confirm that all changes made by a transaction have been transferred to one or more synchronous standby servers. This extends that standard level of durability offered by a transaction commit. This level of protection is referred to as 2-safe replication in computer science theory, and group-1-safe (group-safe and 1-safe) when synchronous_commit is set to remote_write. When requesting synchronous replication, each commit of a write transaction will wait until confirmation is received that the commit has been written to the write-ahead log on disk of both the primary and standby server. The only possibility that data can be lost is if both the primary and the standby suffer crashes at the same time. This can provide a much higher level of durability, though only if the sysadmin is cautious about the placement and management of the two servers. Waiting for confirmation increases the user’s confidence that the changes will not be lost in the event of server crashes but it also necessarily increases the response time for the requesting transaction. The minimum wait time is the round-trip time between primary and standby. Read-only transactions and transaction rollbacks need not wait for replies from standby servers. Subtransaction commits do not wait for responses from standby servers, only top-level commits. Long running actions such as data loading or index building do not wait until the very final commit message. All two-phase commit actions require commit waits, including both prepare and commit. A synchronous standby can be a physical replication standby or a logical replication subscriber. It can also be any other physical or logical WAL replication stream consumer that knows how to send the appropriate feedback messages. Besides the built-in physical and logical replication systems, this includes special programs such as pg_receivewal and pg_recvlogical as well as some third-party replication systems and custom programs. Check the respective documentation for details on synchronous replication support. Once streaming replication has been configured, configuring synchronous replication requires only one additional configuration step: synchronous_standby_names must be set to a non-empty value. synchronous_commit must also be set to on, but since this is the default value, typically no change is required.This configuration will cause each commit to wait for confirmation that the standby has written the commit record to durable storage. synchronous_commit can be set by individual users, so it can be configured in the configuration file, for particular users or databases, or dynamically by applications, in order to control the durability guarantee on a per-transaction basis. After a commit record has been written to disk on the primary, the WAL record is then sent to the standby. The standby sends reply messages each time a new batch of WAL data is written to disk, unless wal_receiver_status_interval is set to zero on the standby. In the case that synchronous_commit is set to remote_apply, the standby sends reply messages when the commit record is replayed, making the transaction visible. If the standby is chosen as a synchronous standby, according to the setting of synchronous_standby_names on the primary, the reply messages from that standby will be considered along with those from other synchronous standbys to decide when to release transactions waiting for confirmation that the commit record has been received. These parameters allow the administrator to specify which standby servers should be synchronous standbys. Note that the configuration of synchronous replication is mainly on the primary. Named standbys must be directly connected to the primary; the primary knows nothing about downstream standby servers using cascaded replication. Setting synchronous_commit to remote_write will cause each commit to wait for confirmation that the standby has received the commit record and written it out to its own operating system, but not for the data to be flushed to disk on the standby. This setting provides a weaker guarantee of durability than on does: the standby could lose the data in the event of an operating system crash, though not a PostgreSQL crash. However, it’s a useful setting in practice because it can decrease the response time for the transaction. Data loss could only occur if both the primary and the standby crash and the database of the primary gets corrupted at the same time. Setting synchronous_commit to remote_apply will cause each commit to wait until the current synchronous standbys report that they have replayed the transaction, making it visible to user queries. In simple cases, this allows for load balancing with causal consistency. Users will stop waiting if a fast shutdown is requested. However, as when using asynchronous replication, the server will not fully shutdown until all outstanding WAL records are transferred to the currently connected standby servers. Synchronous replication supports one or more synchronous standby servers; transactions will wait until all the standby servers which are considered as synchronous confirm receipt of their data. The number of synchronous standbys that transactions must wait for replies from is specified in synchronous_standby_names. This parameter also specifies a list of standby names and the method (FIRST and ANY) to choose synchronous standbys from the listed ones. The method FIRST specifies a priority-based synchronous replication and makes transaction commits wait until their WAL records are replicated to the requested number of synchronous standbys chosen based on their priorities. The standbys whose names appear earlier in the list are given higher priority and will be considered as synchronous. Other standby servers appearing later in this list represent potential synchronous standbys. If any of the current synchronous standbys disconnects for whatever reason, it will be replaced immediately with the next-highest-priority standby. An example of synchronous_standby_names for a priority-based multiple synchronous standbys is: synchronous_standby_names = 'FIRST 2 (s1, s2, s3)' In this example, if four standby servers s1, s2, s3 and s4 are running, the two standbys s1 and s2 will be chosen as synchronous standbys because their names appear early in the list of standby names. s3 is a potential synchronous standby and will take over the role of synchronous standby when either of s1 or s2 fails. s4 is an asynchronous standby since its name is not in the list. The method ANY specifies a quorum-based synchronous replication and makes transaction commits wait until their WAL records are replicated to at least the requested number of synchronous standbys in the list. An example of synchronous_standby_names for a quorum-based multiple synchronous standbys is: synchronous_standby_names = 'ANY 2 (s1, s2, s3)' In this example, if four standby servers s1, s2, s3 and s4 are running, transaction commits will wait for replies from at least any two standbys of s1, s2 and s3. s4 is an asynchronous standby since its name is not in the list. The synchronous states of standby servers can be viewed using the pg_stat_replication view. Synchronous replication usually requires carefully planned and placed standby servers to ensure applications perform acceptably. Waiting doesn’t utilize system resources, but transaction locks continue to be held until the transfer is confirmed. As a result, incautious use of synchronous replication will reduce performance for database applications because of increased response times and higher contention. PostgreSQL allows the application developer to specify the durability level required via replication. This can be specified for the system overall, though it can also be specified for specific users or connections, or even individual transactions. For example, an application workload might consist of: 10% of changes are important customer details, while 90% of changes are less important data that the business can more easily survive if it is lost, such as chat messages between users. With synchronous replication options specified at the application level (on the primary) we can offer synchronous replication for the most important changes, without slowing down the bulk of the total workload. Application level options are an important and practical tool for allowing the benefits of synchronous replication for high performance applications. You should consider that the network bandwidth must be higher than the rate of generation of WAL data. synchronous_standby_names specifies the number and names of synchronous standbys that transaction commits made when synchronous_commit is set to on, remote_apply or remote_write will wait for responses from. Such transaction commits may never be completed if any one of synchronous standbys should crash. The best solution for high availability is to ensure you keep as many synchronous standbys as requested. This can be achieved by naming multiple potential synchronous standbys using synchronous_standby_names. In a priority-based synchronous replication, the standbys whose names appear earlier in the list will be used as synchronous standbys. Standbys listed after these will take over the role of synchronous standby if one of current ones should fail. In a quorum-based synchronous replication, all the standbys appearing in the list will be used as candidates for synchronous standbys. Even if one of them should fail, the other standbys will keep performing the role of candidates of synchronous standby. When a standby first attaches to the primary, it will not yet be properly synchronized. This is described as catchup mode. Once the lag between standby and primary reaches zero for the first time we move to real-time streaming state. The catch-up duration may be long immediately after the standby has been created. If the standby is shut down, then the catch-up period will increase according to the length of time the standby has been down. The standby is only able to become a synchronous standby once it has reached streaming state. This state can be viewed using the pg_stat_replication view. If primary restarts while commits are waiting for acknowledgment, those waiting transactions will be marked fully committed once the primary database recovers. There is no way to be certain that all standbys have received all outstanding WAL data at time of the crash of the primary. Some transactions may not show as committed on the standby, even though they show as committed on the primary. The guarantee we offer is that the application will not receive explicit acknowledgment of the successful commit of a transaction until the WAL data is known to be safely received by all the synchronous standbys. If you really cannot keep as many synchronous standbys as requested then you should decrease the number of synchronous standbys that transaction commits must wait for responses from in synchronous_standby_names (or disable it) and reload the configuration file on the primary server. If the primary is isolated from remaining standby servers you should fail over to the best candidate of those other remaining standby servers. If you need to re-create a standby server while transactions are waiting, make sure that the commands pg_backup_start() and pg_backup_stop() are run in a session with synchronous_commit = off, otherwise those requests will wait forever for the standby to appear. When continuous WAL archiving is used in a standby, there are two different scenarios: the WAL archive can be shared between the primary and the standby, or the standby can have its own WAL archive. When the standby has its own WAL archive, set archive_mode to always, and the standby will call the archive command for every WAL segment it receives, whether it’s by restoring from the archive or by streaming replication. The shared archive can be handled similarly, but the archive_command or archive_library must test if the file being archived exists already, and if the existing file has identical contents. This requires more care in the archive_command or archive_library, as it must be careful to not overwrite an existing file with different contents, but return success if the exactly same file is archived twice. And all that must be done free of race conditions, if two servers attempt to archive the same file at the same time. If archive_mode is set to on, the archiver is not enabled during recovery or standby mode. If the standby server is promoted, it will start archiving after the promotion, but will not archive any WAL or timeline history files that it did not generate itself. To get a complete series of WAL files in the archive, you must ensure that all WAL is archived, before it reaches the standby. This is inherently true with file-based log shipping, as the standby can only restore files that are found in the archive, but not if streaming replication is enabled. When a server is not in recovery mode, there is no difference between on and always modes. If the primary server fails then the standby server should begin failover procedures. If the standby server fails then no failover need take place. If the standby server can be restarted, even some time later, then the recovery process can also be restarted immediately, taking advantage of restartable recovery. If the standby server cannot be restarted, then a full new standby server instance should be created. If the primary server fails and the standby server becomes the new primary, and then the old primary restarts, you must have a mechanism for informing the old primary that it is no longer the primary. This is sometimes known as STONITH (Shoot The Other Node In The Head), which is necessary to avoid situations where both systems think they are the primary, which will lead to confusion and ultimately data loss. Many failover systems use just two systems, the primary and the standby, connected by some kind of heartbeat mechanism to continually verify the connectivity between the two and the viability of the primary. It is also possible to use a third system (called a witness server) to prevent some cases of inappropriate failover, but the additional complexity might not be worthwhile unless it is set up with sufficient care and rigorous testing. PostgreSQL does not provide the system software required to identify a failure on the primary and notify the standby database server. Many such tools exist and are well integrated with the operating system facilities required for successful failover, such as IP address migration. Once failover to the standby occurs, there is only a single server in operation. This is known as a degenerate state. The former standby is now the primary, but the former primary is down and might stay down. To return to normal operation, a standby server must be recreated, either on the former primary system when it comes up, or on a third, possibly new, system. The pg_rewind utility can be used to speed up this process on large clusters. Once complete, the primary and standby can be considered to have switched roles. Some people choose to use a third server to provide backup for the new primary until the new standby server is recreated, though clearly this complicates the system configuration and operational processes. So, switching from primary to standby server can be fast but requires some time to re-prepare the failover cluster. Regular switching from primary to standby is useful, since it allows regular downtime on each system for maintenance. This also serves as a test of the failover mechanism to ensure that it will really work when you need it. Written administration procedures are advised. To trigger failover of a log-shipping standby server, run pg_ctl promote, call pg_promote(), or create a trigger file with the file name and path specified by the promote_trigger_file. If you’re planning to use pg_ctl promote or to call pg_promote() to fail over, promote_trigger_file is not required. If you’re setting up the reporting servers that are only used to offload read-only queries from the primary, not for high availability purposes, you don’t need to promote it. Hot standby is the term used to describe the ability to connect to the server and run read-only queries while the server is in archive recovery or standby mode. This is useful both for replication purposes and for restoring a backup to a desired state with great precision. The term hot standby also refers to the ability of the server to move from recovery through to normal operation while users continue running queries and/or keep their connections open. Running queries in hot standby mode is similar to normal query operation, though there are several usage and administrative differences explained below. When the hot_standby parameter is set to true on a standby server, it will begin accepting connections once the recovery has brought the system to a consistent state. All such connections are strictly read-only; not even temporary tables may be written. The data on the standby takes some time to arrive from the primary server so there will be a measurable delay between primary and standby. Running the same query nearly simultaneously on both primary and standby might therefore return differing results. We say that data on the standby is eventually consistent with the primary. Once the commit record for a transaction is replayed on the standby, the changes made by that transaction will be visible to any new snapshots taken on the standby. Snapshots may be taken at the start of each query or at the start of each transaction, depending on the current transaction isolation level. Transactions started during hot standby may issue the following commands: Query access: SELECT, COPY TO Cursor commands: DECLARE, FETCH, CLOSE Settings: SHOW, SET, RESET Transaction management commands: BEGIN, END, ABORT, START TRANSACTION SAVEPOINT, RELEASE, ROLLBACK TO SAVEPOINT EXCEPTION blocks and other internal subtransactions LOCK TABLE, though only when explicitly in one of these modes: ACCESS SHARE, ROW SHARE or ROW EXCLUSIVE. Plans and resources: PREPARE, EXECUTE, DEALLOCATE, DISCARD Plugins and extensions: LOAD UNLISTEN Transactions started during hot standby will never be assigned a transaction ID and cannot write to the system write-ahead log. Therefore, the following actions will produce error messages: Data Manipulation Language (DML): INSERT, UPDATE, DELETE, COPY FROM, TRUNCATE. Note that there are no allowed actions that result in a trigger being executed during recovery. This restriction applies even to temporary tables, because table rows cannot be read or written without assigning a transaction ID, which is currently not possible in a hot standby environment. Data Definition Language (DDL): CREATE, DROP, ALTER, COMMENT. This restriction applies even to temporary tables, because carrying out these operations would require updating the system catalog tables. SELECT …​ FOR SHARE | UPDATE, because row locks cannot be taken without updating the underlying data files. Rules on SELECT statements that generate DML commands. LOCK that explicitly requests a mode higher than ROW EXCLUSIVE MODE. LOCK in short default form, since it requests ACCESS EXCLUSIVE MODE. Transaction management commands that explicitly set non-read-only state: BEGIN READ WRITE, START TRANSACTION READ WRITE SET TRANSACTION READ WRITE, SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE SET transaction_read_only = off Two-phase commit commands: PREPARE TRANSACTION, COMMIT PREPARED, ROLLBACK PREPARED because even read-only transactions need to write WAL in the prepare phase (the first phase of two phase commit). Sequence updates: nextval(), setval() LISTEN, NOTIFY In normal operation, “read-only” transactions are allowed to use LISTEN and NOTIFY, so hot standby sessions operate under slightly tighter restrictions than ordinary read-only sessions. It is possible that some of these restrictions might be loosened in a future release. During hot standby, the parameter transaction_read_only is always true and may not be changed. But as long as no attempt is made to modify the database, connections during hot standby will act much like any other database connection. If failover or switchover occurs, the database will switch to normal processing mode. Sessions will remain connected while the server changes mode. Once hot standby finishes, it will be possible to initiate read-write transactions (even from a session begun during hot standby). Users can determine whether hot standby is currently active for their session by issuing SHOW in_hot_standby. (In server versions before 14, the in_hot_standby parameter did not exist; a workable substitute method for older servers is SHOW transaction_read_only.) In addition, a set of functions allow users to access information about the standby server. These allow you to write programs that are aware of the current state of the database. These can be used to monitor the progress of recovery, or to allow you to write complex programs that restore the database to particular states. The primary and standby servers are in many ways loosely connected. Actions on the primary will have an effect on the standby. As a result, there is potential for negative interactions or conflicts between them. The easiest conflict to understand is performance: if a huge data load is taking place on the primary then this will generate a similar stream of WAL records on the standby, so standby queries may contend for system resources, such as I/O. There are also additional types of conflict that can occur with hot standby. These conflicts are hard conflicts in the sense that queries might need to be canceled and, in some cases, sessions disconnected to resolve them. The user is provided with several ways to handle these conflicts. Conflict cases include: Access Exclusive locks taken on the primary server, including both explicit LOCK commands and various DDL actions, conflict with table accesses in standby queries. Dropping a tablespace on the primary conflicts with standby queries using that tablespace for temporary work files. Dropping a database on the primary conflicts with sessions connected to that database on the standby. Application of a vacuum cleanup record from WAL conflicts with standby transactions whose snapshots can still “see” any of the rows to be removed. Application of a vacuum cleanup record from WAL conflicts with queries accessing the target page on the standby, whether or not the data to be removed is visible. On the primary server, these cases simply result in waiting; and the user might choose to cancel either of the conflicting actions. However, on the standby there is no choice: the WAL-logged action already occurred on the primary so the standby must not fail to apply it. Furthermore, allowing WAL application to wait indefinitely may be very undesirable, because the standby’s state will become increasingly far behind the primary’s. Therefore, a mechanism is provided to forcibly cancel standby queries that conflict with to-be-applied WAL records. An example of the problem situation is an administrator on the primary server running DROP TABLE on a table that is currently being queried on the standby server. Clearly the standby query cannot continue if the DROP TABLE is applied on the standby. If this situation occurred on the primary, the DROP TABLE would wait until the other query had finished. But when DROP TABLE is run on the primary, the primary doesn’t have information about what queries are running on the standby, so it will not wait for any such standby queries. The WAL change records come through to the standby while the standby query is still running, causing a conflict. The standby server must either delay application of the WAL records (and everything after them, too) or else cancel the conflicting query so that the DROP TABLE can be applied. When a conflicting query is short, it’s typically desirable to allow it to complete by delaying WAL application for a little bit; but a long delay in WAL application is usually not desirable. So the cancel mechanism has parameters, max_standby_archive_delay and max_standby_streaming_delay, that define the maximum allowed delay in WAL application. Conflicting queries will be canceled once it has taken longer than the relevant delay setting to apply any newly-received WAL data. There are two parameters so that different delay values can be specified for the case of reading WAL data from an archive (i.e., initial recovery from a base backup or “catching up” a standby server that has fallen far behind) versus reading WAL data via streaming replication. In a standby server that exists primarily for high availability, it’s best to set the delay parameters relatively short, so that the server cannot fall far behind the primary due to delays caused by standby queries. However, if the standby server is meant for executing long-running queries, then a high or even infinite delay value may be preferable. Keep in mind however that a long-running query could cause other sessions on the standby server to not see recent changes on the primary, if it delays application of WAL records. Once the delay specified by max_standby_archive_delay or max_standby_streaming_delay has been exceeded, conflicting queries will be canceled. This usually results just in a cancellation error, although in the case of replaying a DROP DATABASE the entire conflicting session will be terminated. Also, if the conflict is over a lock held by an idle transaction, the conflicting session is terminated (this behavior might change in the future). Canceled queries may be retried immediately (after beginning a new transaction, of course). Since query cancellation depends on the nature of the WAL records being replayed, a query that was canceled may well succeed if it is executed again. Keep in mind that the delay parameters are compared to the elapsed time since the WAL data was received by the standby server. Thus, the grace period allowed to any one query on the standby is never more than the delay parameter, and could be considerably less if the standby has already fallen behind as a result of waiting for previous queries to complete, or as a result of being unable to keep up with a heavy update load. The most common reason for conflict between standby queries and WAL replay is “early cleanup”. Normally, PostgreSQL allows cleanup of old row versions when there are no transactions that need to see them to ensure correct visibility of data according to MVCC rules. However, this rule can only be applied for transactions executing on the primary. So it is possible that cleanup on the primary will remove row versions that are still visible to a transaction on the standby. Experienced users should note that both row version cleanup and row version freezing will potentially conflict with standby queries. Running a manual VACUUM FREEZE is likely to cause conflicts even on tables with no updated or deleted rows. Users should be clear that tables that are regularly and heavily updated on the primary server will quickly cause cancellation of longer running queries on the standby. In such cases the setting of a finite value for max_standby_archive_delay or max_standby_streaming_delay can be considered similar to setting statement_timeout. Remedial possibilities exist if the number of standby-query cancellations is found to be unacceptable. The first option is to set the parameter hot_standby_feedback, which prevents VACUUM from removing recently-dead rows and so cleanup conflicts do not occur. If you do this, you should note that this will delay cleanup of dead rows on the primary, which may result in undesirable table bloat. However, the cleanup situation will be no worse than if the standby queries were running directly on the primary server, and you are still getting the benefit of off-loading execution onto the standby. If standby servers connect and disconnect frequently, you might want to make adjustments to handle the period when hot_standby_feedback feedback is not being provided. For example, consider increasing max_standby_archive_delay so that queries are not rapidly canceled by conflicts in WAL archive files during disconnected periods. You should also consider increasing max_standby_streaming_delay to avoid rapid cancellations by newly-arrived streaming WAL entries after reconnection. Another option is to increase vacuum_defer_cleanup_age on the primary server, so that dead rows will not be cleaned up as quickly as they normally would be. This will allow more time for queries to execute before they are canceled on the standby, without having to set a high max_standby_streaming_delay. However it is difficult to guarantee any specific execution-time window with this approach, since vacuum_defer_cleanup_age is measured in transactions executed on the primary server. The number of query cancels and the reason for them can be viewed using the pg_stat_database_conflicts system view on the standby server. The pg_stat_database system view also contains summary information. Users can control whether a log message is produced when WAL replay is waiting longer than deadlock_timeout for conflicts. This is controlled by the log_recovery_conflict_waits parameter. If hot_standby is on in postgresql.conf (the default value) and there is a standby.signal file present, the server will run in hot standby mode. However, it may take some time for hot standby connections to be allowed, because the server will not accept connections until it has completed sufficient recovery to provide a consistent state against which queries can run. During this period, clients that attempt to connect will be refused with an error message. To confirm the server has come up, either loop trying to connect from the application, or look for these messages in the server logs: LOG: entering standby mode ... then some time later ... LOG: consistent recovery state reached LOG: database system is ready to accept read-only connections Consistency information is recorded once per checkpoint on the primary. It is not possible to enable hot standby when reading WAL written during a period when wal_level was not set to replica or logical on the primary. Reaching a consistent state can also be delayed in the presence of both of these conditions: A write transaction has more than 64 subtransactions Very long-lived write transactions If you are running file-based log shipping (\"warm standby\"), you might need to wait until the next WAL file arrives, which could be as long as the archive_timeout setting on the primary. The settings of some parameters determine the size of shared memory for tracking transaction IDs, locks, and prepared transactions. These shared memory structures must be no smaller on a standby than on the primary in order to ensure that the standby does not run out of shared memory during recovery. For example, if the primary had used a prepared transaction but the standby had not allocated any shared memory for tracking prepared transactions, then recovery could not continue until the standby’s configuration is changed. The parameters affected are: max_connections max_prepared_transactions max_locks_per_transaction max_wal_senders max_worker_processes The easiest way to ensure this does not become a problem is to have these parameters set on the standbys to values equal to or greater than on the primary. Therefore, if you want to increase these values, you should do so on all standby servers first, before applying the changes to the primary server. Conversely, if you want to decrease these values, you should do so on the primary server first, before applying the changes to all standby servers. Keep in mind that when a standby is promoted, it becomes the new reference for the required parameter settings for the standbys that follow it. Therefore, to avoid this becoming a problem during a switchover or failover, it is recommended to keep these settings the same on all standby servers. The WAL tracks changes to these parameters on the primary. If a hot standby processes WAL that indicates that the current value on the primary is higher than its own value, it will log a warning and pause recovery, for example: WARNING: hot standby is not possible because of insufficient parameter settings DETAIL: max_connections = 80 is a lower setting than on the primary server, where its value was 100. LOG: recovery has paused DETAIL: If recovery is unpaused, the server will shut down. HINT: You can then restart the server after making the necessary configuration changes. At that point, the settings on the standby need to be updated and the instance restarted before recovery can continue. If the standby is not a hot standby, then when it encounters the incompatible parameter change, it will shut down immediately without pausing, since there is then no value in keeping it up. It is important that the administrator select appropriate settings for max_standby_archive_delay and max_standby_streaming_delay. The best choices vary depending on business priorities. For example if the server is primarily tasked as a High Availability server, then you will want low delay settings, perhaps even zero, though that is a very aggressive setting. If the standby server is tasked as an additional server for decision support queries then it might be acceptable to set the maximum delay values to many hours, or even -1 which means wait forever for queries to complete. Transaction status \"hint bits\" written on the primary are not WAL-logged, so data on the standby will likely re-write the hints again on the standby. Thus, the standby server will still perform disk writes even though all users are read-only; no changes occur to the data values themselves. Users will still write large sort temporary files and re-generate relcache info files, so no part of the database is truly read-only during hot standby mode. Note also that writes to remote databases using dblink module, and other operations outside the database using PL functions will still be possible, even though the transaction is read-only locally. The following types of administration commands are not accepted during recovery mode: Data Definition Language (DDL): e.g., CREATE INDEX Privilege and Ownership: GRANT, REVOKE, REASSIGN Maintenance commands: ANALYZE, VACUUM, CLUSTER, REINDEX Again, note that some of these commands are actually allowed during \"read only\" mode transactions on the primary. As a result, you cannot create additional indexes that exist solely on the standby, nor statistics that exist solely on the standby. If these administration commands are needed, they should be executed on the primary, and eventually those changes will propagate to the standby. pg_cancel_backend() and pg_terminate_backend() will work on user backends, but not the startup process, which performs recovery. pg_stat_activity does not show recovering transactions as active. As a result, pg_prepared_xacts is always empty during recovery. If you wish to resolve in-doubt prepared transactions, view pg_prepared_xacts on the primary and issue commands to resolve transactions there or resolve them after the end of recovery. pg_locks will show locks held by backends, as normal. pg_locks also shows a virtual transaction managed by the startup process that owns all AccessExclusiveLocks held by transactions being replayed by recovery. Note that the startup process does not acquire locks to make database changes, and thus locks other than AccessExclusiveLocks do not show in pg_locks for the Startup process; they are just presumed to exist. The Nagios plugin check_pgsql will work, because the simple information it checks for exists. The check_postgres monitoring script will also work, though some reported values could give different or confusing results. For example, last vacuum time will not be maintained, since no vacuum occurs on the standby. Vacuums running on the primary do still send their changes to the standby. WAL file control commands will not work during recovery, e.g., pg_backup_start, pg_switch_wal etc. Dynamically loadable modules work, including pg_stat_statements. Advisory locks work normally in recovery, including deadlock detection. Note that advisory locks are never WAL logged, so it is impossible for an advisory lock on either the primary or the standby to conflict with WAL replay. Nor is it possible to acquire an advisory lock on the primary and have it initiate a similar advisory lock on the standby. Advisory locks relate only to the server on which they are acquired. Trigger-based replication systems such as Slony, Londiste and Bucardo won’t run on the standby at all, though they will run happily on the primary server as long as the changes are not sent to standby servers to be applied. WAL replay is not trigger-based so you cannot relay from the standby to any system that requires additional database writes or relies on the use of triggers. New OIDs cannot be assigned, though some UUID generators may still work as long as they do not rely on writing new status to the database. Currently, temporary table creation is not allowed during read-only transactions, so in some cases existing scripts will not run correctly. This restriction might be relaxed in a later release. This is both an SQL standard compliance issue and a technical issue. DROP TABLESPACE can only succeed if the tablespace is empty. Some standby users may be actively using the tablespace via their temp_tablespaces parameter. If there are temporary files in the tablespace, all active queries are canceled to ensure that temporary files are removed, so the tablespace can be removed and WAL replay can continue. Running DROP DATABASE or ALTER DATABASE …​ SET TABLESPACE on the primary will generate a WAL entry that will cause all users connected to that database on the standby to be forcibly disconnected. This action occurs immediately, whatever the setting of max_standby_streaming_delay. Note that ALTER DATABASE …​ RENAME does not disconnect users, which in most cases will go unnoticed, though might in some cases cause a program confusion if it depends in some way upon database name. In normal (non-recovery) mode, if you issue DROP USER or DROP ROLE for a role with login capability while that user is still connected then nothing happens to the connected user — they remain connected. The user cannot reconnect however. This behavior applies in recovery also, so a DROP USER on the primary does not disconnect that user on the standby. The cumulative statistics system is active during recovery. All scans, reads, blocks, index usage, etc., will be recorded normally on the standby. However, WAL replay will not increment relation and database specific counters. I.e. replay will not increment pg_stat_all_tables columns (like n_tup_ins), nor will reads or writes performed by the startup process be tracked in the pg_statio views, nor will associated pg_stat_database columns be incremented. Autovacuum is not active during recovery. It will start normally at the end of recovery. The checkpointer process and the background writer process are active during recovery. The checkpointer process will perform restartpoints (similar to checkpoints on the primary) and the background writer process will perform normal block cleaning activities. This can include updates of the hint bit information stored on the standby server. The CHECKPOINT command is accepted during recovery, though it performs a restartpoint rather than a new checkpoint. On the primary, parameters wal_level and vacuum_defer_cleanup_age can be used. max_standby_archive_delay and max_standby_streaming_delay have no effect if set on the primary. On the standby, parameters hot_standby, max_standby_archive_delay and max_standby_streaming_delay can be used. vacuum_defer_cleanup_age has no effect as long as the server remains in standby mode, though it will become relevant if the standby becomes primary. There are several limitations of hot standby. These can and probably will be fixed in future releases: Full knowledge of running transactions is required before snapshots can be taken. Transactions that use large numbers of subtransactions (currently greater than 64) will delay the start of read-only connections until the completion of the longest running write transaction. If this situation occurs, explanatory messages will be sent to the server log. Valid starting points for standby queries are generated at each checkpoint on the primary. If the standby is shut down while the primary is in a shutdown state, it might not be possible to re-enter hot standby until the primary is started up, so that it generates further starting points in the WAL logs. This situation isn’t a problem in the most common situations where it might happen. Generally, if the primary is shut down and not available anymore, that’s likely due to a serious failure that requires the standby being converted to operate as the new primary anyway. And in situations where the primary is being intentionally taken down, coordinating to make sure the standby becomes the new primary smoothly is also standard procedure. At the end of recovery, AccessExclusiveLocks held by prepared transactions will require twice the normal number of lock table entries. If you plan on running either a large number of concurrent prepared transactions that normally take AccessExclusiveLocks, or you plan on having one large transaction that takes many AccessExclusiveLocks, you are advised to select a larger value of max_locks_per_transaction, perhaps as much as twice the value of the parameter on the primary server. You need not consider this at all if your setting of max_prepared_transactions is 0. The Serializable transaction isolation level is not yet available in hot standby. An attempt to set a transaction to the serializable isolation level in hot standby mode will generate an error.","title":"Maintenance","component":"ivorysql-doc","version":"v4.2","name":"5","url":"/ivorysql-doc/v4.2/v4.2/5.html","titles":[{"text":"1. Routine Vacuuming","hash":"routine-vacuuming","id":1},{"text":"1.1. Vacuuming Basics","hash":"vacuuming-basics","id":2},{"text":"1.2. Recovering Disk Space","hash":"recovering-disk-space","id":3},{"text":"1.3. Updating Planner Statistics","hash":"updating-planner-statistics","id":4},{"text":"1.4. Updating the Visibility Map","hash":"updating-the-visibility-map","id":5},{"text":"1.5. Preventing Transaction ID Wraparound Failures","hash":"preventing-transaction-id-wraparound-failures","id":6},{"text":"1.6. The Autovacuum Daemon","hash":"the-autovacuum-daemon","id":7},{"text":"2. Routine Reindexing","hash":"routine-reindexing","id":8},{"text":"3. Log File Maintenance","hash":"log-file-maintenance","id":9},{"text":"4. High Availability, Load Balancing, and Replication","hash":"high-availability-load-balancing-and-replication","id":10},{"text":"4.1. Comparison of Different Solutions","hash":"comparison-of-different-solutions","id":11},{"text":"4.1.1. Shared Disk Failover","hash":"shared-disk-failover","id":12},{"text":"4.1.2. File System (Block Device) Replication","hash":"file-system-block-device-replication","id":13},{"text":"4.1.3. Write-Ahead Log Shipping","hash":"write-ahead-log-shipping","id":14},{"text":"4.1.4. Logical Replication","hash":"logical-replication","id":15},{"text":"4.1.5. Trigger-Based Primary-Standby Replication","hash":"trigger-based-primary-standby-replication","id":16},{"text":"4.1.6. SQL-Based Replication Middleware","hash":"sql-based-replication-middleware","id":17},{"text":"4.1.7. Asynchronous Multimaster Replication","hash":"asynchronous-multimaster-replication","id":18},{"text":"4.1.8. Synchronous Multimaster Replication","hash":"synchronous-multimaster-replication","id":19},{"text":"4.2. Log-Shipping Standby Servers","hash":"log-shipping-standby-servers","id":20},{"text":"4.2.1. Planning","hash":"planning","id":21},{"text":"4.2.2. Standby Server Operation","hash":"standby-server-operation","id":22},{"text":"4.2.3. Preparing the Primary for Standby Servers","hash":"preparing-the-primary-for-standby-servers","id":23},{"text":"4.2.4. Setting Up a Standby Server","hash":"setting-up-a-standby-server","id":24},{"text":"4.2.5. Streaming Replication","hash":"streaming-replication","id":25},{"text":"4.2.5.1. Authentication","hash":"authentication","id":26},{"text":"4.2.5.2. Monitoring","hash":"monitoring","id":27},{"text":"4.2.6. Replication Slots","hash":"replication-slots","id":28},{"text":"4.2.6.1. Querying And Manipulating Replication Slots","hash":"querying-and-manipulating-replication-slots","id":29},{"text":"4.2.6.2. Configuration Example","hash":"configuration-example","id":30},{"text":"4.2.7. Cascading Replication","hash":"cascading-replication","id":31},{"text":"4.2.8. Synchronous Replication","hash":"synchronous-replication","id":32},{"text":"4.2.8.1. Basic Configuration","hash":"basic-configuration","id":33},{"text":"4.2.8.2. Multiple Synchronous Standbys","hash":"multiple-synchronous-standbys","id":34},{"text":"4.2.8.3. Planning For Performance","hash":"planning-for-performance","id":35},{"text":"4.2.8.4. Planning For High Availability","hash":"planning-for-high-availability","id":36},{"text":"4.2.9. Continuous Archiving in Standby","hash":"continuous-archiving-in-standby","id":37},{"text":"4.3. Failover","hash":"failover","id":38},{"text":"4.4. Hot Standby","hash":"hot-standby","id":39},{"text":"4.4.1. User’s Overview","hash":"users-overview","id":40},{"text":"4.4.2. Handling Query Conflicts","hash":"handling-query-conflicts","id":41},{"text":"4.4.3. Administrator’s Overview","hash":"administrators-overview","id":42},{"text":"4.4.4. Hot Standby Parameter Reference","hash":"hot-standby-parameter-reference","id":43},{"text":"4.4.5. Caveats","hash":"caveats","id":44}]},"25":{"id":25,"text":"The installation methods for IvorySQL include the following five: Yum installation Docker installation rpm installation Source code installation deb installation This chapter will provide detailed instructions on the installation, execution, and uninstallation processes for each method. For a quicker access to IvorySQL, please refer to Quick installation. Before getting started, please create an user and grant it root privileges. All the installation steps will be performed by this user. Here we just name it 'ivorysql'. Create or edit IvorySQL yum repository configuration /etc/yum.repos.d/ivorysql.repo vim /etc/yum.repos.d/ivorysql.repo [ivorysql4] name=IvorySQL Server 4 $releasever - $basearch baseurl=https://yum.highgo.com/dists/ivorysql-rpms/4/redhat/rhel-$releasever-$basearch enabled=1 gpgcheck=0 After saving and exiting, you can install IvorySQL 4 with the following steps $ sudo dnf install -y ivorysql4 ivorysql4-server ivorysql4-contrib ivorysql4-test Checking installation results dnf search ivorysql Details: id Package name Description 1 ivorysql4.x86_64 IvorySQL client programs and lib files 2 ivorysql4-contrib.x86_64 Contributed source code and binary files released with IvorySQL 3 Ivorysql4-devel.x86_64 IvorySQL development header files and libraries 4 Ivorysql4-docs.x86_64 Additional docs for IvorySQL 5 ivorysql4-libs.x86_64 Shared libraries required by all IvorySQL clients 6 Ivorysql4-llvmjit.x86_64 Instant compilation support for IvorySQL 7 Ivorysql4-plperl.x86_64 Perl, a procedural language for IvorySQL 8 Ivorysql4-plpython3.x86_64 Python3, a procedural language for IvorySQL 9 Ivorysql4-pltcl.x86_64 Tcl, a procedural language for IvorySQL 10 ivorysql4-server.x86_64 The programs required to create and run an IvorySQL server 11 Ivorysql4-test.x86_64 Test suite released with IvorySQL 12 ivorysql-release.noarch Yum Source Configuration RPM Package of HighGo Get IvorySQL image from Docker Hub $ docker pull ivorysql/ivorysql:4.2-ubi8 Run IvorySQL $ docker run --name ivorysql -p 5434:5432 -e IVORYSQL_PASSWORD=your_password -d ivorysql/ivorysql:4.2-ubi8 -e Parameter Explanation Parameter Name Required Description IVORYSQL_USER No Database user, default is ivorysql IVORYSQL_PASSWORD yes Database password IVORYSQL_DB no Database name,default is ivorysql POSTGRES_HOST_AUTH_METHOD no Modify host authentication method,reference value:md5 POSTGRES_INITDB_ARGS no Add additional parameters to initdb,reference value:\"--data-checksums\" PGDATA no Define the data directory to be located in another path or folder (e.g., subdirectory), defaulting to /var/lib/ivorysql/data POSTGRES_INITDB_WALDIR no Define the IvorySQL transaction folder path, which defaults to a subdirectory within the data directory (PGDATA) It is not recommended to set the POSTGRES_HOST_AUTH_METHOD parameter to trust, as this will make the IVORYSQL_PASSWORD setting ineffective. If the POSTGRES_HOST_AUTH_METHOD parameter is set to scram-sha-256, it is also necessary to set POSTGRES_INITDB_ARGS to --auth-host=scram-sha-256 to ensure proper initialization of the database. Installing dependencies $ sudo dnf install -y lz4 libicu libxslt python3 Getting rpms $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-contrib-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-devel-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-docs-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-libs-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-llvmjit-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-plperl-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-plpython3-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-pltcl-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-server-4.2-1.rhel8.x86_64.rpm $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql4-test-4.2-1.rhel8.x86_64.rpm Installing rpms Use the following command to install all the rpms: $ sudo yum --disablerepo=* localinstall *.rpm IvorySQL then will be installed in the /usr/local/ivorysql directory. Installing dependencies $ sudo dnf install -y bison readline-devel zlib-devel openssl-devel $ sudo dnf groupinstall -y 'Development Tools' Getting source code $ git clone https://github.com/IvorySQL/IvorySQL.git $ cd IvorySQL $ git checkout -b IVORY_REL_4_STABLE origin/IVORY_REL_4_STABLE Configuring In the IvorySQL directory run the following command with --prefix to specify the directory where you want the database to be installed: $ ./configure --prefix=/usr/local/ivorysql/ivorysql-4 Compiling Run the following command to compile the source code: $ make When the compilation is completed, you can test the result with 'make check' or 'make all-check-world' before your installation. Installing Run the following command to install the database system, IvorySQL then will be installed in the directory specified by --prefix: $ sudo make install Installing dependencies $ sudo apt -y install pkg-config libreadline-dev libicu-dev libldap2-dev uuid-dev tcl-dev libperl-dev python3-dev bison flex openssl libssl-dev libpam-dev libxml2-dev libxslt-dev libossp-uuid-dev libselinux-dev gettext Getting deb $ sudo wget https://github.com/IvorySQL/IvorySQL/releases/download/IvorySQL_4.2/ivorysql-4.2.x86_64.deb Installing deb $ sudo dpkg -i ivorysql-4.2.x86_64.deb IvorySQL will then be installed in the /usr/local/ivorysql directory. Users following the instructions in Yum installation, rpm installation, Source code installation and deb installation need to manually start the database. Granting permissions Execute the following command to grant permissions to the installation user. The example user is ivorysql, and the installation directory is /usr/local/ivorysql.: $ sudo chown -R ivorysql:ivorysql /usr/local/ivorysql Setting environment variables Add below contents in ~/.bash_profile file and source to make it effective: PATH=/usr/local/ivorysql/ivorysql-4/bin:$PATH export PATH LD_LIBRARY_PATH=/usr/local/ivorysql/ivorysql-4/lib export LD_LIBRARY_PATH PGDATA=/usr/local/ivorysql/ivorysql-4/data export PGDATA $ source ~/.bash_profile Initializing database $ mkdir /usr/local/ivorysql/ivorysql-4/data $ initdb -D /usr/local/ivorysql/ivorysql-4/data The -D option specifies the directory where the database cluster should be stored. This is the only information required by initdb, but you can avoid writing it by setting the PGDATA environment variable, which can be convenient since the database server can find the database directory later by the same variable. For more options, refer to initdb --help. Starting IvorySQL service $ pg_ctl -D /usr/local/ivorysql/ivorysql-4/data -l ivory.log start The -D option specifies the file system location of the database configuration files. If this option is omitted, the environment variable PGDATA in [setting-environment-variables] is used. -l option appends the server log output to filename. If the file does not exist, it is created. For more options, refer to pg_ctl --help. Confirm it’s successfully started: $ ps -ef | grep postgres ivorysql 130427 1 0 02:45 ? 00:00:00 /usr/local/ivorysql/ivorysql-4/bin/postgres -D /usr/local/ivorysql/ivorysql-4/data ivorysql 130428 130427 0 02:45 ? 00:00:00 postgres: checkpointer ivorysql 130429 130427 0 02:45 ? 00:00:00 postgres: background writer ivorysql 130431 130427 0 02:45 ? 00:00:00 postgres: walwriter ivorysql 130432 130427 0 02:45 ? 00:00:00 postgres: autovacuum launcher ivorysql 130433 130427 0 02:45 ? 00:00:00 postgres: logical replication launcher ivorysql 130445 130274 0 02:45 pts/1 00:00:00 grep --color=auto postgres Connect to IovrySQL via psql: $ psql -d psql (17.2) Type \"help\" for help. ivorysql=# The -d option specifies the name of the database to connect to. ivorysql is the default database of IvorySQL. However,IvorySQL of lower versions need the users themselves to connect to postgres database at the first connection and then create the ivorysql database.The latest IvorySQL can do all these for users. For more options, refer to psql --help. When running IvorySQL in Docker, additional parameters need to be added, like: psql -d ivorysql -U ivorysql -h 127.0.0.1 -p 5434 No matter which method is used for the uninstallation, make sure the service has been stopped cleanly and your data has been backed up safely. Run the following commands in turn and clean the residual folders: $ sudo dnf remove -y ivorysql4 ivorysql4-server ivorysql4-contrib ivorysql4-test $ sudo rpm -e ivorysql-release-4.2-1.noarch $ sudo rm -rf /usr/local/ivorysql Stop IvorySQL container and remove IvorySQL image: $ docker stop ivorysql $ docker rm ivorysql $ docker rmi ivorysql/ivorysql:4.2-ubi8 Uninstall the rpms and clear the residual folders: $ sudo yum remove --disablerepo=* ivorysql4\\* $ sudo rm -rf /usr/local/ivorysql Uninstall the database system, then clear the residual folders: $ sudo make uninstall $ make clean $ sudo rm -rf /usr/local/ivorysql Uninstall the database system, then clear the residual folders: $ sudo dpkg -P ivorysql4.2 $ sudo rm -rf /usr/local/ivorysql","title":"Installation","component":"ivorysql-doc","version":"v4.2","name":"6","url":"/ivorysql-doc/v4.2/v4.2/6.html","titles":[{"text":"1. Introduction","hash":"introduction","id":1},{"text":"2. Yum installation","hash":"Yum-installation","id":2},{"text":"3. Docker installation","hash":"Docker-installation","id":3},{"text":"4. rpm installation","hash":"Rpm-installation","id":4},{"text":"5. Source code installation","hash":"Source-code-installation","id":5},{"text":"6. deb installation","hash":"deb-installation","id":6},{"text":"7. Start Database","hash":"start-database","id":7},{"text":"8. Connecting to IvorySQL","hash":"connecting-to-ivorysql","id":8},{"text":"9. Uninstallation","hash":"uninstallation","id":9},{"text":"9.1. Uninstallation for yum installation","hash":"uninstallation-for-yum-installation","id":10},{"text":"9.2. Uninstallation for docker installation","hash":"uninstallation-for-docker-installation","id":11},{"text":"9.3. Uninstallation for rpm installation","hash":"uninstallation-for-rpm-installation","id":12},{"text":"9.4. Uninstallation for source code installation","hash":"uninstallation-for-source-code-installation","id":13},{"text":"9.5. Uninstallation for deb installation","hash":"uninstallation-for-deb-installation","id":14}]},"26":{"id":26,"text":"For quick database installation by yum, please refer to Quick installation。 For more installation options, please refer to Installation。 The master node database needs to be installed and started. Stop firewall for all the nodes in the cluster to ensure the communication: $ sudo systemctl stop firewalld To create the streaming replication, we need configure the postgresql.conf and pg_hba.conf files on the primary node. postgresql.conf Append the following contents to the end of postgresql.conf: listen_addresses = '*' max_connections = 100 wal_level = replica max_wal_senders = 5 hot_standby = on pg_hba.conf Append the following contents to the end of pg_hba.conf: host all all 0.0.0.0/0 trust host replication all 0.0.0.0/0 trust The configuration of pg_hba in the example is only for demo purposes and testing. This configuration will result in invalidation of the database password. Please configure according to the actual environment. $ pg_ctl restart For quick database installation by yum, please refer to Quick installation。 For more installation options, please refer to Installation。 The standby node database only needs to be installed and not started. Stop firewall for all the nodes in the cluster to ensure the communication: $ sudo systemctl stop firewalld Run below command on the standby node to take base backups of the primary, that is, to build a streaming replication: $ sudo pg_basebackup -F p -P -X fetch -R -h -p -U ivorysql -D /usr/local/ivorysql/ivorysql-4/data Specifies the host name of the machine on which the server is running; Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults is 5432; User name to connect as; Directory to write the output to. pg_basebackup will create the directory and any parent directories if necessary. The directory may already exist, but it is an error if the directory already exists and is not empty. For more options, refer to pg_basebackup --help. Add below contents in ~/.bash_profile file: PATH=/usr/local/ivorysql/ivorysql-4/bin:$PATH export PATH LD_LIBRARY_PATH=/usr/local/ivorysql/ivorysql-4/lib export LD_LIBRARY_PATH PGDATA=/usr/local/ivorysql/ivorysql-4/data export PGDATA Source to make it effective: $ source ~/.bash_profile $ sudo pg_ctl -D /usr/local/ivorysql/ivorysql-4/data start Run below command on the primary node, you will see walsender: $ ps -ef |grep postgres ... ivorysql 11176 8067 0 21:54 ? 00:00:00 postgres: walsender ivorysql 192.168.31.102(53416) streaming 0/7000060... while it is walreceiver on standby: $ ps -ef | grep postgres ... ivorysql 6567 6139 0 21:54 ? 00:00:00 postgres: walreceiver streaming 0/7000060 ... On the primary node, connect to IvorySQL and show the status: $ psql -d ivorysql psql (17.2) Type \"help\" for help. ivorysql=# select * from pg_stat_replication; pid | usesysid | usename | application_name | client_addr | client_hostname | client_port | backend_start | backend_ xmin | state | sent_lsn | write_lsn | flush_lsn | replay_lsn | write_lag | flush_lag | replay_lag | sync_priority | sync_state | reply_time -------+----------+----------+------------------+----------------+-----------------+-------------+-------------------------------+--------- -----+-----------+-----------+-----------+-----------+------------+-----------+-----------+------------+---------------+------------+------ ------------------------- 11176 | 10 | ivorysql | walreceiver | 192.168.31.102 | | 53416 | 2024-12-18 21:54:52.041847-05 | | streaming | 0/7000148 | 0/7000148 | 0/7000148 | 0/7000148 | | | | 0 | async | 2024- 12-18 22:52:07.325111-05 (1 row) Here 192.168.31.102 is the ip address of the standby node, and async means the data synchronization method is asynchronous. All writing operations are performed on the primary node, while reading can be on both primary and standby. The data on primary is synchronized to standby through streaming replication. The writing result can be queried on all the nodes in the cluster. Below is an example. Create a new database test on primary and query: $ psql -d ivorysql psql (17.2) Type \"help\" for help. ivorysql=# create database test; CREATE DATABASE ivorysql=# \\l List of databases Name | Owner | Encoding | Locale Provider | Collate | Ctype | ICU Locale | ICU Rules | Access privileges -----------+----------+----------+-----------------+-------------+-------------+------------+-----------+----------------------- ivorysql | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | template0 | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | =c/ivorysql + | | | | | | | | ivorysql=CTc/ivorysql template1 | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | =c/ivorysql + | | | | | | | | ivorysql=CTc/ivorysql test | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | (4 rows) Query on the standby node: $ psql -d ivorysql psql (17.2) Type \"help\" for help. ivorysql=# \\l List of databases Name | Owner | Encoding | Locale Provider | Collate | Ctype | ICU Locale | ICU Rules | Access privileges -----------+----------+----------+-----------------+-------------+-------------+------------+-----------+----------------------- ivorysql | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | template0 | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | =c/ivorysql + | | | | | | | | ivorysql=CTc/ivorysql template1 | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | =c/ivorysql + | | | | | | | | ivorysql=CTc/ivorysql test | ivorysql | UTF8 | libc | en_US.UTF-8 | en_US.UTF-8 | | | (4 rows)","title":"Building an IvorySQL cluster","component":"ivorysql-doc","version":"v4.2","name":"7","url":"/ivorysql-doc/v4.2/v4.2/7.html","titles":[{"text":"1. Primary node","hash":"primary-node","id":1},{"text":"1.1. Installing and start database","hash":"installing-and-start-database","id":2},{"text":"1.2. Stopping firewall","hash":"stopping-firewall","id":3},{"text":"1.3. Setting environment variables","hash":"setting-environment-variables","id":4},{"text":"1.4. Restarting IvorySQL sevice","hash":"restarting-ivorysql-sevice","id":5},{"text":"2. Standby node","hash":"standby-node","id":6},{"text":"2.1. Installing database","hash":"installing-database","id":7},{"text":"2.2. Stopping firewall","hash":"stopping-firewall-2","id":8},{"text":"2.3. Building streaming replication","hash":"building-streaming-replication","id":9},{"text":"2.4. Setting environment variables","hash":"setting-environment-variables-2","id":10},{"text":"2.5. Starting IvorySQL sevice","hash":"starting-ivorysql-sevice","id":11},{"text":"3. Experience the IvorySQL cluster","hash":"experience-the-ivorysql-cluster","id":12},{"text":"3.1. Checking cluster status","hash":"checking-cluster-status","id":13},{"text":"3.2. Using the cluster","hash":"using-the-cluster","id":14}]},"27":{"id":27,"text":"lvorySQL provides unique additional functionality on top of the open source PostgreSQL database. IvorySQL is committed to delivering value to its end-users through innovation and building on top of open source based database solutions. Our goal is to deliver a solution with high performance，scalability，reliability，and ease of use for small medium and large-scale enterprises. The extended functionality provided by IvorySQL will enable users to build highly performant and scalable PostgreSQL database clusters with better database compatibility and administration.This simplifies the process of migration to PostgreSQLfrom other DBMS with enhanced database administration experiences. The IvorySQL follows the same general architecture of PostgreSQL with some additions,but it does not deviate from its core philosophy.Thediagram below depicts essentially how IvorySQL operates. The yellow color in the diagram shows the new modules added by IvorySQL on top of existing PostgreSQL while IvorySQL has also made changes to existing modules and logical structures as well. The most noteworthy of those modules that received updates for supporting oracle compatibility are backend parser and system catalogs. The following diagram depicts the changes made to PostgreSQL’s existing directories and the additions that have been made. The first test to see whether you can access the database server is to try to create a database. A running IvorySQL server can manage many databases. Typically, a separate database is used for each project or for each user. Possibly, your site administrator has already created a database for your use. In that case you can omit this step and skip ahead to the next section. To create a new database, in this example named mydb, you use the following command: $ createdb mydb If this produces no response then this step was successful and you can skip over the remainder of this section. If you see a message similar to: createdb: command not found then IvorySQL was not installed properly. Either it was not installed at all or your shell’s search path was not set to include it. Try calling the command with an absolute path instead: $ /usr/local/pgsql/bin/createdb mydb The path at your site might be different. Contact your site administrator or check the installation instructions to correct the situation. Another response could be this: createdb: error: connection to server on socket \"/tmp/.s.PGSQL.5432\" failed: No such file or directory Is the server running locally and accepting connections on that socket? This means that the server was not started, or it is not listening where createdb expects to contact it. Again, check the installation instructions or consult the administrator. Another response could be this: createdb: error: connection to server on socket \"/tmp/.s.PGSQL.5432\" failed: FATAL: role \"joe\" does not exist where your own login name is mentioned. This will happen if the administrator has not created a IvorySQL user account for you. (IvorySQL user accounts are distinct from operating system user accounts.) If you are the administrator, You will need to become the operating system user under which IvorySQL was installed (usually postgres) to create the first user account. It could also be that you were assigned a IvorySQL user name that is different from your operating system user name; in that case you need to use the -U switch or set the PGUSER environment variable to specify your IvorySQL user name. If you have a user account but it does not have the privileges required to create a database, you will see the following: createdb: error: database creation failed: ERROR: permission denied to create database Not every user has authorization to create new databases. If IvorySQL refuses to create databases for you then the site administrator needs to grant you permission to create databases. Consult your site administrator if this occurs. If you installed IvorySQL yourself then you should log in for the purposes of this tutorial under the user account that you started the server as. [1] You can also create databases with other names. IvorySQL allows you to create any number of databases at a given site. Database names must have an alphabetic first character and are limited to 63 bytes in length. A convenient choice is to create a database with the same name as your current user name. Many tools assume that database name as the default, so it can save you some typing. To create that database, simply type: $ createdb If you do not want to use your database anymore you can remove it. For example, if you are the owner (creator) of the database mydb, you can destroy it using the following command: $ dropdb mydb (For this command, the database name does not default to the user account name. You always need to specify it.) This action physically removes all files associated with the database and cannot be undone, so this should only be done with a great deal of forethought. More about createdb and dropdb can be found in createdb and dropdb respectively. You can create a new table by specifying the table name, along with all column names and their types: CREATE TABLE weather ( city varchar(80), temp_lo int, -- low temperature temp_hi int, -- high temperature prcp real, -- precipitation date date ); You can enter this into psql with the line breaks. psql will recognize that the command is not terminated until the semicolon. White space (i.e., spaces, tabs, and newlines) can be used freely in SQL commands. That means you can type the command aligned differently than above, or even all on one line. Two dashes (“--”) introduce comments. Whatever follows them is ignored up to the end of the line. SQL is case insensitive about key words and identifiers, except when identifiers are double-quoted to preserve the case (not done above). varchar(80) specifies a data type that can store arbitrary character strings up to 80 characters in length. int is the normal integer type. real is a type for storing single precision floating-point numbers. date should be self-explanatory. (Yes, the column of type date is also named date. This might be convenient or confusing — you choose.) IvorySQL supports the standard SQL types int, smallint, real, double precision, char(`N), `varchar(`N), `date, time, timestamp, and interval, as well as other types of general utility and a rich set of geometric types. IvorySQL can be customized with an arbitrary number of user-defined data types. Consequently, type names are not key words in the syntax, except where required to support special cases in the SQL standard. The second example will store cities and their associated geographical location: CREATE TABLE cities ( name varchar(80), location point ); The point type is an example of a IvorySQL-specific data type. Finally, it should be mentioned that if you don’t need a table any longer or want to recreate it differently you can remove it using the following command: DROP TABLE tablename; When a table is created, it contains no data. The first thing to do before a database can be of much use is to insert data. Data is inserted one row at a time. You can also insert more than one row in a single command, but it is not possible to insert something that is not a complete row. Even if you know only some column values, a complete row must be created. To create a new row, use the INSERT command. The command requires the table name and column values. CREATE TABLE products ( product_no integer, name text, price numeric ); An example command to insert a row would be: INSERT INTO products VALUES (1, 'Cheese', 9.99); The data values are listed in the order in which the columns appear in the table, separated by commas. Usually, the data values will be literals (constants), but scalar expressions are also allowed. The above syntax has the drawback that you need to know the order of the columns in the table. To avoid this you can also list the columns explicitly. For example, both of the following commands have the same effect as the one above: INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', 9.99); INSERT INTO products (name, price, product_no) VALUES ('Cheese', 9.99, 1); Many users consider it good practice to always list the column names. If you don’t have values for all the columns, you can omit some of them. In that case, the columns will be filled with their default values. For example: INSERT INTO products (product_no, name) VALUES (1, 'Cheese'); INSERT INTO products VALUES (1, 'Cheese'); The second form is a IvorySQL extension. It fills the columns from the left with as many values as are given, and the rest will be defaulted. For clarity, you can also request default values explicitly, for individual columns or for the entire row: INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', DEFAULT); INSERT INTO products DEFAULT VALUES; You can insert multiple rows in a single command: INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', 9.99), (2, 'Bread', 1.99), (3, 'Milk', 2.99); It is also possible to insert the result of a query (which might be no rows, one row, or many rows): INSERT INTO products (product_no, name, price) SELECT product_no, name, price FROM new_products WHERE release_date = 'today'; This provides the full power of the SQL query mechanism for computing the rows to be inserted. Tip When inserting a lot of data at the same time, consider using the COPY command. It is not as flexible as the INSERT command, but is more efficient. The results of two queries can be combined using the set operations union, intersection, and difference. The syntax is query1 UNION [ALL] query2 query1 INTERSECT [ALL] query2 query1 EXCEPT [ALL] query2 where query1 and query2 are queries that can use any of the features discussed up to this point. UNION effectively appends the result of query2 to the result of query1 (although there is no guarantee that this is the order in which the rows are actually returned). Furthermore, it eliminates duplicate rows from its result, in the same way as DISTINCT, unless UNION ALL is used. INTERSECT returns all rows that are both in the result of query1 and in the result of query2. Duplicate rows are eliminated unless INTERSECT ALL is used. EXCEPT returns all rows that are in the result of query1 but not in the result of query2. (This is sometimes called the difference between two queries.) Again, duplicates are eliminated unless EXCEPT ALL is used. In order to calculate the union, intersection, or difference of two queries, the two queries must be “union compatible”, which means that they return the same number of columns and the corresponding columns have compatible data types. Set operations can be combined, for example query1 UNION query2 EXCEPT query3 which is equivalent to (query1 UNION query2) EXCEPT query3 As shown here, you can use parentheses to control the order of evaluation. Without parentheses, UNION and EXCEPT associate left-to-right, but INTERSECT binds more tightly than those two operators. Thus query1 UNION query2 INTERSECT query3 means query1 UNION (query2 INTERSECT query3) You can also surround an individual query with parentheses. This is important if the query needs to use any of the clauses discussed in following sections, such as LIMIT. Without parentheses, you’ll get a syntax error, or else the clause will be understood as applying to the output of the set operation rather than one of its inputs. For example, SELECT a FROM b UNION SELECT x FROM y LIMIT 10 is accepted, but it means (SELECT a FROM b UNION SELECT x FROM y) LIMIT 10 not SELECT a FROM b UNION (SELECT x FROM y LIMIT 10) When the optimizer determines that parallel query is the fastest execution strategy for a particular query, it will create a query plan that includes a Gather or Gather Merge node. Here is a simple example: EXPLAIN SELECT * FROM pgbench_accounts WHERE filler LIKE '%x%'; QUERY PLAN ------------------------------------------------------------------------------------- Gather (cost=1000.00..217018.43 rows=1 width=97) Workers Planned: 2 -> Parallel Seq Scan on pgbench_accounts (cost=0.00..216018.33 rows=1 width=97) Filter: (filler ~~ '%x%'::text) (4 rows) In all cases, the Gather or Gather Merge node will have exactly one child plan, which is the portion of the plan that will be executed in parallel. If the Gather or Gather Merge node is at the very top of the plan tree, then the entire query will execute in parallel. If it is somewhere else in the plan tree, then only the portion of the plan below it will run in parallel. In the example above, the query accesses only one table, so there is only one plan node other than the Gather node itself; since that plan node is a child of the Gather node, it will run in parallel. Using EXPLAIN, you can see the number of workers chosen by the planner. When the Gather node is reached during query execution, the process that is implementing the user’s session will request a number of background worker processes equal to the number of workers chosen by the planner. The number of background workers that the planner will consider using is limited to at most max_parallel_workers_per_gather. The total number of background workers that can exist at any one time is limited by both max_worker_processes and max_parallel_workers. Therefore, it is possible for a parallel query to run with fewer workers than planned, or even with no workers at all. The optimal plan may depend on the number of workers that are available, so this can result in poor query performance. If this occurrence is frequent, consider increasing max_worker_processes and max_parallel_workers so that more workers can be run simultaneously or alternatively reducing max_parallel_workers_per_gather so that the planner requests fewer workers. Every background worker process that is successfully started for a given parallel query will execute the parallel portion of the plan. The leader will also execute that portion of the plan, but it has an additional responsibility: it must also read all of the tuples generated by the workers. When the parallel portion of the plan generates only a small number of tuples, the leader will often behave very much like an additional worker, speeding up query execution. Conversely, when the parallel portion of the plan generates a large number of tuples, the leader may be almost entirely occupied with reading the tuples generated by the workers and performing any further processing steps that are required by plan nodes above the level of the Gather node or Gather Merge node. In such cases, the leader will do very little of the work of executing the parallel portion of the plan. When the node at the top of the parallel portion of the plan is Gather Merge rather than Gather, it indicates that each process executing the parallel portion of the plan is producing tuples in sorted order, and that the leader is performing an order-preserving merge. In contrast, Gather reads tuples from the workers in whatever order is convenient, destroying any sort order that may have existed. There are several settings that can cause the query planner not to generate a parallel query plan under any circumstances. In order for any parallel query plans whatsoever to be generated, the following settings must be configured as indicated. max_parallel_workers_per_gather must be set to a value that is greater than zero. This is a special case of the more general principle that no more workers should be used than the number configured via max_parallel_workers_per_gather. In addition, the system must not be running in single-user mode. Since the entire database system is running as a single process in this situation, no background workers will be available. Even when it is in general possible for parallel query plans to be generated, the planner will not generate them for a given query if any of the following are true: The query writes any data or locks any database rows. If a query contains a data-modifying operation either at the top level or within a CTE, no parallel plans for that query will be generated. As an exception, the following commands, which create a new table and populate it, can use a parallel plan for the underlying SELECT part of the query: CREATE TABLE …​ AS SELECT INTO CREATE MATERIALIZED VIEW REFRESH MATERIALIZED VIEW The query might be suspended during execution. In any situation in which the system thinks that partial or incremental execution might occur, no parallel plan is generated. For example, a cursor created using DECLARE CURSOR will never use a parallel plan. Similarly, a PL/pgSQL loop of the form FOR x IN query LOOP .. END LOOP will never use a parallel plan, because the parallel query system is unable to verify that the code in the loop is safe to execute while parallel query is active. The query uses any function marked PARALLEL UNSAFE. Most system-defined functions are PARALLEL SAFE, but user-defined functions are marked PARALLEL UNSAFE by default. The query is running inside of another query that is already parallel. For example, if a function called by a parallel query issues an SQL query itself, that query will never use a parallel plan. This is a limitation of the current implementation, but it may not be desirable to remove this limitation, since it could result in a single query using a very large number of processes. Even when parallel query plan is generated for a particular query, there are several circumstances under which it will be impossible to execute that plan in parallel at execution time. If this occurs, the leader will execute the portion of the plan below the Gather node entirely by itself, almost as if the Gather node were not present. This will happen if any of the following conditions are met: No background workers can be obtained because of the limitation that the total number of background workers cannot exceed max_worker_processes. No background workers can be obtained because of the limitation that the total number of background workers launched for purposes of parallel query cannot exceed max_parallel_workers. The client sends an Execute message with a non-zero fetch count. See the discussion of the extended query protocol. Since libpq currently provides no way to send such a message, this can only occur when using a client that does not rely on libpq. If this is a frequent occurrence, it may be a good idea to set max_parallel_workers_per_gather to zero in sessions where it is likely, so as to avoid generating query plans that may be suboptimal when run serially. Because each worker executes the parallel portion of the plan to completion, it is not possible to simply take an ordinary query plan and run it using multiple workers. Each worker would produce a full copy of the output result set, so the query would not run any faster than normal but would produce incorrect results. Instead, the parallel portion of the plan must be what is known internally to the query optimizer as a partial plan; that is, it must be constructed so that each process that executes the plan will generate only a subset of the output rows in such a way that each required output row is guaranteed to be generated by exactly one of the cooperating processes. Generally, this means that the scan on the driving table of the query must be a parallel-aware scan. The following types of parallel-aware table scans are currently supported. In a parallel sequential scan, the table’s blocks will be divided into ranges and shared among the cooperating processes. Each worker process will complete the scanning of its given range of blocks before requesting an additional range of blocks. In a parallel bitmap heap scan, one process is chosen as the leader. That process performs a scan of one or more indexes and builds a bitmap indicating which table blocks need to be visited. These blocks are then divided among the cooperating processes as in a parallel sequential scan. In other words, the heap scan is performed in parallel, but the underlying index scan is not. In a parallel index scan or parallel index-only scan, the cooperating processes take turns reading data from the index. Currently, parallel index scans are supported only for btree indexes. Each process will claim a single index block and will scan and return all tuples referenced by that block; other processes can at the same time be returning tuples from a different index block. The results of a parallel btree scan are returned in sorted order within each worker process. Other scan types, such as scans of non-btree indexes, may support parallel scans in the future. Just as in a non-parallel plan, the driving table may be joined to one or more other tables using a nested loop, hash join, or merge join. The inner side of the join may be any kind of non-parallel plan that is otherwise supported by the planner provided that it is safe to run within a parallel worker. Depending on the join type, the inner side may also be a parallel plan. In a nested loop join, the inner side is always non-parallel. Although it is executed in full, this is efficient if the inner side is an index scan, because the outer tuples and thus the loops that look up values in the index are divided over the cooperating processes. In a merge join, the inner side is always a non-parallel plan and therefore executed in full. This may be inefficient, especially if a sort must be performed, because the work and resulting data are duplicated in every cooperating process. In a hash join (without the \"parallel\" prefix), the inner side is executed in full by every cooperating process to build identical copies of the hash table. This may be inefficient if the hash table is large or the plan is expensive. In a parallel hash join, the inner side is a parallel hash that divides the work of building a shared hash table over the cooperating processes. IvorySQL supports parallel aggregation by aggregating in two stages. First, each process participating in the parallel portion of the query performs an aggregation step, producing a partial result for each group of which that process is aware. This is reflected in the plan as a Partial Aggregate node. Second, the partial results are transferred to the leader via Gather or Gather Merge. Finally, the leader re-aggregates the results across all workers in order to produce the final result. This is reflected in the plan as a Finalize Aggregate node. Because the Finalize Aggregate node runs on the leader process, queries that produce a relatively large number of groups in comparison to the number of input rows will appear less favorable to the query planner. For example, in the worst-case scenario the number of groups seen by the Finalize Aggregate node could be as many as the number of input rows that were seen by all worker processes in the Partial Aggregate stage. For such cases, there is clearly going to be no performance benefit to using parallel aggregation. The query planner takes this into account during the planning process and is unlikely to choose parallel aggregate in this scenario. Parallel aggregation is not supported in all situations. Each aggregate must be safe for parallelism and must have a combine function. If the aggregate has a transition state of type internal, it must have serialization and deserialization functions. See CREATE AGGREGATE for more details. Parallel aggregation is not supported if any aggregate function call contains DISTINCT or ORDER BY clause and is also not supported for ordered set aggregates or when the query involves GROUPING SETS. It can only be used when all joins involved in the query are also part of the parallel portion of the plan. Whenever IvorySQL needs to combine rows from multiple sources into a single result set, it uses an Append or MergeAppend plan node. This commonly happens when implementing UNION ALL or when scanning a partitioned table. Such nodes can be used in parallel plans just as they can in any other plan. However, in a parallel plan, the planner may instead use a Parallel Append node. When an Append node is used in a parallel plan, each process will execute the child plans in the order in which they appear, so that all participating processes cooperate to execute the first child plan until it is complete and then move to the second plan at around the same time. When a Parallel Append is used instead, the executor will instead spread out the participating processes as evenly as possible across its child plans, so that multiple child plans are executed simultaneously. This avoids contention, and also avoids paying the startup cost of a child plan in those processes that never execute it. Also, unlike a regular Append node, which can only have partial children when used within a parallel plan, a Parallel Append node can have both partial and non-partial child plans. Non-partial children will be scanned by only a single process, since scanning them more than once would produce duplicate results. Plans that involve appending multiple results sets can therefore achieve coarse-grained parallelism even when efficient partial plans are not available. For example, consider a query against a partitioned table that can only be implemented efficiently by using an index that does not support parallel scans. The planner might choose a Parallel Append of regular Index Scan plans; each individual index scan would have to be executed to completion by a single process, but different scans could be performed at the same time by different processes. enable_parallel_append can be used to disable this feature. If a query that is expected to do so does not produce a parallel plan, you can try reducing parallel_setup_cost or parallel_tuple_cost. Of course, this plan may turn out to be slower than the serial plan that the planner preferred, but this will not always be the case. If you don’t get a parallel plan even with very small values of these settings (e.g., after setting them both to zero), there may be some reason why the query planner is unable to generate a parallel plan for your query. When executing a parallel plan, you can use EXPLAIN (ANALYZE, VERBOSE) to display per-worker statistics for each plan node. This may be useful in determining whether the work is being evenly distributed between all plan nodes and more generally in understanding the performance characteristics of the plan. ABORT [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ] ABORT rolls back the current transaction and causes all the updates made by the transaction to be discarded. This command is identical in behavior to the standard SQL command ROLLBACK, and is present only for historical reasons. WORK TRANSACTION Optional key words. They have no effect. AND CHAIN If AND CHAIN is specified, a new transaction is immediately started with the same transaction characteristics (see SET TRANSACTION) as the just finished one. Otherwise, no new transaction is started. Use COMMIT to successfully terminate a transaction. Issuing ABORT outside of a transaction block emits a warning and otherwise has no effect. To abort all changes: ABORT; This command is a IvorySQL extension present for historical reasons. ROLLBACK is the equivalent standard SQL command. BEGIN [ WORK | TRANSACTION ] [ transaction_mode [, ...] ] where transaction_mode is one of: ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED } READ WRITE | READ ONLY [ NOT ] DEFERRABLE BEGIN initiates a transaction block, that is, all statements after a BEGIN command will be executed in a single transaction until an explicit COMMIT or ROLLBACK is given. By default (without BEGIN), IvorySQL executes transactions in “autocommit” mode, that is, each statement is executed in its own transaction and a commit is implicitly performed at the end of the statement (if execution was successful, otherwise a rollback is done). Statements are executed more quickly in a transaction block, because transaction start/commit requires significant CPU and disk activity. Execution of multiple statements inside a transaction is also useful to ensure consistency when making several related changes: other sessions will be unable to see the intermediate states wherein not all the related updates have been done. If the isolation level, read/write mode, or deferrable mode is specified, the new transaction has those characteristics, as if SET TRANSACTION was executed. WORK TRANSACTION Optional key words. They have no effect. Refer to SET TRANSACTION for information on the meaning of the other parameters to this statement. START TRANSACTION has the same functionality as BEGIN. Use COMMIT or ROLLBACK to terminate a transaction block. Issuing BEGIN when already inside a transaction block will provoke a warning message. The state of the transaction is not affected. To nest transactions within a transaction block, use savepoints (see SAVEPOINT). For reasons of backwards compatibility, the commas between successive transaction_modes can be omitted. To begin a transaction block: BEGIN; BEGIN is a IvorySQL language extension. It is equivalent to the SQL-standard command START TRANSACTION, whose reference page contains additional compatibility information. The DEFERRABLE transaction_mode is a IvorySQL language extension. Incidentally, the BEGIN key word is used for a different purpose in embedded SQL. You are advised to be careful about the transaction semantics when porting database applications. COMMIT [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ] COMMIT commits the current transaction. All changes made by the transaction become visible to others and are guaranteed to be durable if a crash occurs. WORK TRANSACTION Optional key words. They have no effect. AND CHAIN If AND CHAIN is specified, a new transaction is immediately started with the same transaction characteristics (see SET TRANSACTION) as the just finished one. Otherwise, no new transaction is started. Use ROLLBACK to abort a transaction. Issuing COMMIT when not inside a transaction does no harm, but it will provoke a warning message. COMMIT AND CHAIN when not inside a transaction is an error. To commit the current transaction and make all changes permanent: COMMIT; The command COMMIT conforms to the SQL standard. The form COMMIT TRANSACTION is a IvorySQL extension. COMMIT PREPARED transaction_id COMMIT PREPARED commits a transaction that is in prepared state. transaction_id The transaction identifier of the transaction that is to be committed. To commit a prepared transaction, you must be either the same user that executed the transaction originally, or a superuser. But you do not have to be in the same session that executed the transaction. This command cannot be executed inside a transaction block. The prepared transaction is committed immediately. All currently available prepared transactions are listed in the pg_prepared_xacts system view. Commit the transaction identified by the transaction identifier foobar: COMMIT PREPARED 'foobar'; COMMIT PREPARED is a IvorySQL extension. It is intended for use by external transaction management systems, some of which are covered by standards (such as X/Open XA), but the SQL side of those systems is not standardized. END [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ] END commits the current transaction. All changes made by the transaction become visible to others and are guaranteed to be durable if a crash occurs. This command is a IvorySQL extension that is equivalent to COMMIT. WORK TRANSACTION Optional key words. They have no effect. AND CHAIN If AND CHAIN is specified, a new transaction is immediately started with the same transaction characteristics (see SET TRANSACTION) as the just finished one. Otherwise, no new transaction is started. Use ROLLBACK to abort a transaction. Issuing END when not inside a transaction does no harm, but it will provoke a warning message. To commit the current transaction and make all changes permanent: END; END is a IvorySQL extension that provides functionality equivalent to COMMIT, which is specified in the SQL standard. PREPARE TRANSACTION transaction_id PREPARE TRANSACTION prepares the current transaction for two-phase commit. After this command, the transaction is no longer associated with the current session; instead, its state is fully stored on disk, and there is a very high probability that it can be committed successfully, even if a database crash occurs before the commit is requested. Once prepared, a transaction can later be committed or rolled back with COMMIT PREPARED or ROLLBACK PREPARED, respectively. Those commands can be issued from any session, not only the one that executed the original transaction. From the point of view of the issuing session, PREPARE TRANSACTION is not unlike a ROLLBACK command: after executing it, there is no active current transaction, and the effects of the prepared transaction are no longer visible. (The effects will become visible again if the transaction is committed.) If the PREPARE TRANSACTION command fails for any reason, it becomes a ROLLBACK: the current transaction is canceled. transaction_id An arbitrary identifier that later identifies this transaction for COMMIT PREPARED or ROLLBACK PREPARED. The identifier must be written as a string literal, and must be less than 200 bytes long. It must not be the same as the identifier used for any currently prepared transaction. PREPARE TRANSACTION is not intended for use in applications or interactive sessions. Its purpose is to allow an external transaction manager to perform atomic global transactions across multiple databases or other transactional resources. Unless you’re writing a transaction manager, you probably shouldn’t be using PREPARE TRANSACTION. This command must be used inside a transaction block. Use BEGIN to start one. It is not currently allowed to PREPARE a transaction that has executed any operations involving temporary tables or the session’s temporary namespace, created any cursors WITH HOLD, or executed LISTEN, UNLISTEN, or NOTIFY. Those features are too tightly tied to the current session to be useful in a transaction to be prepared. If the transaction modified any run-time parameters with SET (without the LOCAL option), those effects persist after PREPARE TRANSACTION, and will not be affected by any later COMMIT PREPARED or ROLLBACK PREPARED. Thus, in this one respect PREPARE TRANSACTION acts more like COMMIT than ROLLBACK. All currently available prepared transactions are listed in the pg_prepared_xacts system view. It is unwise to leave transactions in the prepared state for a long time. This will interfere with the ability of VACUUM to reclaim storage, and in extreme cases could cause the database to shut down to prevent transaction ID wraparound (see Section 25.1.5). Keep in mind also that the transaction continues to hold whatever locks it held. The intended usage of the feature is that a prepared transaction will normally be committed or rolled back as soon as an external transaction manager has verified that other databases are also prepared to commit. If you have not set up an external transaction manager to track prepared transactions and ensure they get closed out promptly, it is best to keep the prepared-transaction feature disabled by setting max_prepared_transactions to zero. This will prevent accidental creation of prepared transactions that might then be forgotten and eventually cause problems. Prepare the current transaction for two-phase commit, using foobar as the transaction identifier: PREPARE TRANSACTION 'foobar'; PREPARE TRANSACTION is a IvorySQL extension. It is intended for use by external transaction management systems, some of which are covered by standards (such as X/Open XA), but the SQL side of those systems is not standardized. ROLLBACK [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ] ROLLBACK rolls back the current transaction and causes all the updates made by the transaction to be discarded. WORK TRANSACTION Optional key words. They have no effect. AND CHAIN If AND CHAIN is specified, a new transaction is immediately started with the same transaction characteristics (see SET TRANSACTION) as the just finished one. Otherwise, no new transaction is started. Use COMMIT to successfully terminate a transaction. Issuing ROLLBACK outside of a transaction block emits a warning and otherwise has no effect. ROLLBACK AND CHAIN outside of a transaction block is an error. To abort all changes: ROLLBACK; The command ROLLBACK conforms to the SQL standard. The form ROLLBACK TRANSACTION is a IvorySQL extension. ROLLBACK PREPARED transaction_id ROLLBACK PREPARED rolls back a transaction that is in prepared state. transaction_id The transaction identifier of the transaction that is to be rolled back. To roll back a prepared transaction, you must be either the same user that executed the transaction originally, or a superuser. But you do not have to be in the same session that executed the transaction. This command cannot be executed inside a transaction block. The prepared transaction is rolled back immediately. All currently available prepared transactions are listed in the pg_prepared_xacts system view. Roll back the transaction identified by the transaction identifier foobar: ROLLBACK PREPARED 'foobar'; ROLLBACK PREPARED is a IvorySQL extension. It is intended for use by external transaction management systems, some of which are covered by standards (such as X/Open XA), but the SQL side of those systems is not standardized. SAVEPOINT savepoint_name SAVEPOINT establishes a new savepoint within the current transaction. A savepoint is a special mark inside a transaction that allows all commands that are executed after it was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint. savepoint_name The name to give to the new savepoint. If savepoints with the same name already exist, they will be inaccessible until newer identically-named savepoints are released. Use ROLLBACK TO to rollback to a savepoint. Use RELEASE SAVEPOINT to destroy a savepoint, keeping the effects of commands executed after it was established. Savepoints can only be established when inside a transaction block. There can be multiple savepoints defined within a transaction. To establish a savepoint and later undo the effects of all commands executed after it was established: BEGIN; INSERT INTO table1 VALUES (1); SAVEPOINT my_savepoint; INSERT INTO table1 VALUES (2); ROLLBACK TO SAVEPOINT my_savepoint; INSERT INTO table1 VALUES (3); COMMIT; The above transaction will insert the values 1 and 3, but not 2. To establish and later destroy a savepoint: BEGIN; INSERT INTO table1 VALUES (3); SAVEPOINT my_savepoint; INSERT INTO table1 VALUES (4); RELEASE SAVEPOINT my_savepoint; COMMIT; The above transaction will insert both 3 and 4. To use a single savepoint name: BEGIN; INSERT INTO table1 VALUES (1); SAVEPOINT my_savepoint; INSERT INTO table1 VALUES (2); SAVEPOINT my_savepoint; INSERT INTO table1 VALUES (3); -- rollback to the second savepoint ROLLBACK TO SAVEPOINT my_savepoint; SELECT * FROM table1; -- shows rows 1 and 2 -- release the second savepoint RELEASE SAVEPOINT my_savepoint; -- rollback to the first savepoint ROLLBACK TO SAVEPOINT my_savepoint; SELECT * FROM table1; -- shows only row 1 COMMIT; The above transaction shows row 3 being rolled back first, then row 2. SQL requires a savepoint to be destroyed automatically when another savepoint with the same name is established. In IvorySQL, the old savepoint is kept, though only the more recent one will be used when rolling back or releasing. (Releasing the newer savepoint with RELEASE SAVEPOINT will cause the older one to again become accessible to ROLLBACK TO SAVEPOINT and RELEASE SAVEPOINT.) Otherwise, SAVEPOINT is fully SQL conforming. SET CONSTRAINTS { ALL | name [, ...] } { DEFERRED | IMMEDIATE } SET CONSTRAINTS sets the behavior of constraint checking within the current transaction. IMMEDIATE constraints are checked at the end of each statement. DEFERRED constraints are not checked until transaction commit. Each constraint has its own IMMEDIATE or DEFERRED mode. Upon creation, a constraint is given one of three characteristics: DEFERRABLE INITIALLY DEFERRED, DEFERRABLE INITIALLY IMMEDIATE, or NOT DEFERRABLE. The third class is always IMMEDIATE and is not affected by the SET CONSTRAINTS command. The first two classes start every transaction in the indicated mode, but their behavior can be changed within a transaction by SET CONSTRAINTS. SET CONSTRAINTS with a list of constraint names changes the mode of just those constraints (which must all be deferrable). Each constraint name can be schema-qualified. The current schema search path is used to find the first matching name if no schema name is specified. SET CONSTRAINTS ALL changes the mode of all deferrable constraints. When SET CONSTRAINTS changes the mode of a constraint from DEFERRED to IMMEDIATE, the new mode takes effect retroactively: any outstanding data modifications that would have been checked at the end of the transaction are instead checked during the execution of the SET CONSTRAINTS command. If any such constraint is violated, the SET CONSTRAINTS fails (and does not change the constraint mode). Thus, SET CONSTRAINTS can be used to force checking of constraints to occur at a specific point in a transaction. Currently, only UNIQUE, PRIMARY KEY, REFERENCES (foreign key), and EXCLUDE constraints are affected by this setting. NOT NULL and CHECK constraints are always checked immediately when a row is inserted or modified (not at the end of the statement). Uniqueness and exclusion constraints that have not been declared DEFERRABLE are also checked immediately. The firing of triggers that are declared as “constraint triggers” is also controlled by this setting — they fire at the same time that the associated constraint should be checked. Because IvorySQL does not require constraint names to be unique within a schema (but only per-table), it is possible that there is more than one match for a specified constraint name. In this case SET CONSTRAINTS will act on all matches. For a non-schema-qualified name, once a match or matches have been found in some schema in the search path, schemas appearing later in the path are not searched. This command only alters the behavior of constraints within the current transaction. Issuing this outside of a transaction block emits a warning and otherwise has no effect. This command complies with the behavior defined in the SQL standard, except for the limitation that, in IvorySQL, it does not apply to NOT NULL and CHECK constraints. Also, IvorySQL checks non-deferrable uniqueness constraints immediately, not at end of statement as the standard would suggest. SET TRANSACTION transaction_mode [, ...] SET TRANSACTION SNAPSHOT snapshot_id SET SESSION CHARACTERISTICS AS TRANSACTION transaction_mode [, ...] where transaction_mode is one of: ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED } READ WRITE | READ ONLY [ NOT ] DEFERRABLE The SET TRANSACTION command sets the characteristics of the current transaction. It has no effect on any subsequent transactions. SET SESSION CHARACTERISTICS sets the default transaction characteristics for subsequent transactions of a session. These defaults can be overridden by SET TRANSACTION for an individual transaction. The available transaction characteristics are the transaction isolation level, the transaction access mode (read/write or read-only), and the deferrable mode. In addition, a snapshot can be selected, though only for the current transaction, not as a session default. The isolation level of a transaction determines what data the transaction can see when other transactions are running concurrently: READ COMMITTED A statement can only see rows committed before it began. This is the default. REPEATABLE READ All statements of the current transaction can only see rows committed before the first query or data-modification statement was executed in this transaction. SERIALIZABLE All statements of the current transaction can only see rows committed before the first query or data-modification statement was executed in this transaction. If a pattern of reads and writes among concurrent serializable transactions would create a situation which could not have occurred for any serial (one-at-a-time) execution of those transactions, one of them will be rolled back with a serialization_failure error. The SQL standard defines one additional level, READ UNCOMMITTED. In IvorySQL READ UNCOMMITTED is treated as READ COMMITTED. The transaction isolation level cannot be changed after the first query or data-modification statement (SELECT, INSERT, DELETE, UPDATE, FETCH, or COPY) of a transaction has been executed. See Chapter 13 for more information about transaction isolation and concurrency control. The transaction access mode determines whether the transaction is read/write or read-only. Read/write is the default. When a transaction is read-only, the following SQL commands are disallowed: INSERT, UPDATE, DELETE, and COPY FROM if the table they would write to is not a temporary table; all CREATE, ALTER, and DROP commands; COMMENT, GRANT, REVOKE, TRUNCATE; and EXPLAIN ANALYZE and EXECUTE if the command they would execute is among those listed. This is a high-level notion of read-only that does not prevent all writes to disk. The DEFERRABLE transaction property has no effect unless the transaction is also SERIALIZABLE and READ ONLY. When all three of these properties are selected for a transaction, the transaction may block when first acquiring its snapshot, after which it is able to run without the normal overhead of a SERIALIZABLE transaction and without any risk of contributing to or being canceled by a serialization failure. This mode is well suited for long-running reports or backups. The SET TRANSACTION SNAPSHOT command allows a new transaction to run with the same snapshot as an existing transaction. The pre-existing transaction must have exported its snapshot with the pg_export_snapshot function. That function returns a snapshot identifier, which must be given to SET TRANSACTION SNAPSHOT to specify which snapshot is to be imported. The identifier must be written as a string literal in this command, for example '00000003-0000001B-1'. SET TRANSACTION SNAPSHOT can only be executed at the start of a transaction, before the first query or data-modification statement (SELECT, INSERT, DELETE, UPDATE, FETCH, or COPY) of the transaction. Furthermore, the transaction must already be set to SERIALIZABLE or REPEATABLE READ isolation level (otherwise, the snapshot would be discarded immediately, since READ COMMITTED mode takes a new snapshot for each command). If the importing transaction uses SERIALIZABLE isolation level, then the transaction that exported the snapshot must also use that isolation level. Also, a non-read-only serializable transaction cannot import a snapshot from a read-only transaction. If SET TRANSACTION is executed without a prior START TRANSACTION or BEGIN, it emits a warning and otherwise has no effect. It is possible to dispense with SET TRANSACTION by instead specifying the desired transaction_modes in BEGIN or START TRANSACTION. But that option is not available for SET TRANSACTION SNAPSHOT. The session default transaction modes can also be set or examined via the configuration parameters default_transaction_isolation, default_transaction_read_only, and default_transaction_deferrable. (In fact SET SESSION CHARACTERISTICS is just a verbose equivalent for setting these variables with SET.) This means the defaults can be set in the configuration file, via ALTER DATABASE, etc. Consult Chapter 20 for more information. The current transaction’s modes can similarly be set or examined via the configuration parameters transaction_isolation, transaction_read_only, and transaction_deferrable. Setting one of these parameters acts the same as the corresponding SET TRANSACTION option, with the same restrictions on when it can be done. However, these parameters cannot be set in the configuration file, or from any source other than live SQL. To begin a new transaction with the same snapshot as an already existing transaction, first export the snapshot from the existing transaction. That will return the snapshot identifier, for example: BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ; SELECT pg_export_snapshot(); pg_export_snapshot --------------------- 00000003-0000001B-1 (1 row) Then give the snapshot identifier in a SET TRANSACTION SNAPSHOT command at the beginning of the newly opened transaction: BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ; SET TRANSACTION SNAPSHOT '00000003-0000001B-1'; These commands are defined in the SQL standard, except for the DEFERRABLE transaction mode and the SET TRANSACTION SNAPSHOT form, which are IvorySQL extensions. SERIALIZABLE is the default transaction isolation level in the standard. In IvorySQL the default is ordinarily READ COMMITTED, but you can change it as mentioned above. In the SQL standard, there is one other transaction characteristic that can be set with these commands: the size of the diagnostics area. This concept is specific to embedded SQL, and therefore is not implemented in the IvorySQL server. The SQL standard requires commas between successive transaction_modes, but for historical reasons IvorySQL allows the commas to be omitted. START TRANSACTION [ transaction_mode [, ...] ] where transaction_mode is one of: ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED } READ WRITE | READ ONLY [ NOT ] DEFERRABLE This command begins a new transaction block. If the isolation level, read/write mode, or deferrable mode is specified, the new transaction has those characteristics, as if SET TRANSACTION was executed. This is the same as the BEGIN command. Refer to SET TRANSACTION for information on the meaning of the parameters to this statement. In the standard, it is not necessary to issue START TRANSACTION to start a transaction block: any SQL command implicitly begins a block. IvorySQL’s behavior can be seen as implicitly issuing a COMMIT after each command that does not follow START TRANSACTION (or BEGIN), and it is therefore often called “autocommit”. Other relational database systems might offer an autocommit feature as a convenience. The DEFERRABLE transaction_mode is a IvorySQL language extension. The SQL standard requires commas between successive transaction_modes, but for historical reasons IvorySQL allows the commas to be omitted. See also the compatibility section of SET TRANSACTION. SQL input consists of a sequence of commands. A command is composed of a sequence of tokens, terminated by a semicolon (“;”). The end of the input stream also terminates a command. Which tokens are valid depends on the syntax of the particular command. A token can be a key word, an identifier, a quoted identifier, a literal (or constant), or a special character symbol. Tokens are normally separated by whitespace (space, tab, newline), but need not be if there is no ambiguity (which is generally only the case if a special character is adjacent to some other token type). For example, the following is (syntactically) valid SQL input: SELECT * FROM MY_TABLE; UPDATE MY_TABLE SET A = 5; INSERT INTO MY_TABLE VALUES (3, 'hi there'); This is a sequence of three commands, one per line (although this is not required; more than one command can be on a line, and commands can usefully be split across lines). Additionally, comments can occur in SQL input. They are not tokens, they are effectively equivalent to whitespace. The SQL syntax is not very consistent regarding what tokens identify commands and which are operands or parameters. The first few tokens are generally the command name, so in the above example we would usually speak of a “SELECT”, an “UPDATE”, and an “INSERT” command. But for instance the UPDATE command always requires a SET token to appear in a certain position, and this particular variation of INSERT also requires a VALUES in order to be complete. Tokens such as SELECT, UPDATE, or VALUES in the example above are examples of key words, that is, words that have a fixed meaning in the SQL language. The tokens MY_TABLE and A are examples of identifiers. They identify names of tables, columns, or other database objects, depending on the command they are used in. Therefore they are sometimes simply called “names”. Key words and identifiers have the same lexical structure, meaning that one cannot know whether a token is an identifier or a key word without knowing the language. A complete list of key words can be found in Appendix C. SQL identifiers and key words must begin with a letter (a-z, but also letters with diacritical marks and non-Latin letters) or an underscore (_). Subsequent characters in an identifier or key word can be letters, underscores, digits (0-9), or dollar signs ($). Note that dollar signs are not allowed in identifiers according to the letter of the SQL standard, so their use might render applications less portable. The SQL standard will not define a key word that contains digits or starts or ends with an underscore, so identifiers of this form are safe against possible conflict with future extensions of the standard. The system uses no more than NAMEDATALEN-1 bytes of an identifier; longer names can be written in commands, but they will be truncated. By default, NAMEDATALEN is 64 so the maximum identifier length is 63 bytes. If this limit is problematic, it can be raised by changing the NAMEDATALEN constant in src/include/pg_config_manual.h. Key words and unquoted identifiers are case insensitive. Therefore: UPDATE MY_TABLE SET A = 5; can equivalently be written as: uPDaTE my_TabLE SeT a = 5; A convention often used is to write key words in upper case and names in lower case, e.g.: UPDATE my_table SET a = 5; There is a second kind of identifier: the delimited identifier or quoted identifier. It is formed by enclosing an arbitrary sequence of characters in double-quotes (\"). A delimited identifier is always an identifier, never a key word. So \"select\" could be used to refer to a column or table named “select”, whereas an unquoted select would be taken as a key word and would therefore provoke a parse error when used where a table or column name is expected. The example can be written with quoted identifiers like this: UPDATE \"my_table\" SET \"a\" = 5; Quoted identifiers can contain any character, except the character with code zero. (To include a double quote, write two double quotes.) This allows constructing table or column names that would otherwise not be possible, such as ones containing spaces or ampersands. The length limitation still applies. Quoting an identifier also makes it case-sensitive, whereas unquoted names are always folded to lower case. For example, the identifiers FOO, foo, and \"foo\" are considered the same by IvorySQL, but \"Foo\" and \"FOO\" are different from these three and each other. (The folding of unquoted names to lower case in IvorySQL is incompatible with the SQL standard, which says that unquoted names should be folded to upper case. Thus, foo should be equivalent to \"FOO\" not \"foo\" according to the standard. If you want to write portable applications you are advised to always quote a particular name or never quote it.) A variant of quoted identifiers allows including escaped Unicode characters identified by their code points. This variant starts with U& (upper or lower case U followed by ampersand) immediately before the opening double quote, without any spaces in between, for example U&\"foo\". (Note that this creates an ambiguity with the operator &. Use spaces around the operator to avoid this problem.) Inside the quotes, Unicode characters can be specified in escaped form by writing a backslash followed by the four-digit hexadecimal code point number or alternatively a backslash followed by a plus sign followed by a six-digit hexadecimal code point number. For example, the identifier \"data\" could be written as U&\"d\\0061t\\+000061\" The following less trivial example writes the Russian word “slon” (elephant) in Cyrillic letters: U&\"\\0441\\043B\\043E\\043D\" If a different escape character than backslash is desired, it can be specified using the UESCAPE clause after the string, for example: U&\"d!0061t!+000061\" UESCAPE '!' The escape character can be any single character other than a hexadecimal digit, the plus sign, a single quote, a double quote, or a whitespace character. Note that the escape character is written in single quotes, not double quotes, after UESCAPE. To include the escape character in the identifier literally, write it twice. Either the 4-digit or the 6-digit escape form can be used to specify UTF-16 surrogate pairs to compose characters with code points larger than U+FFFF, although the availability of the 6-digit form technically makes this unnecessary. (Surrogate pairs are not stored directly, but are combined into a single code point.) If the server encoding is not UTF-8, the Unicode code point identified by one of these escape sequences is converted to the actual server encoding; an error is reported if that’s not possible. There are three kinds of implicitly-typed constants in IvorySQL: strings, bit strings, and numbers. Constants can also be specified with explicit types, which can enable more accurate representation and more efficient handling by the system. These alternatives are discussed in the following subsections. A string constant in SQL is an arbitrary sequence of characters bounded by single quotes ('), for example 'This is a string'. To include a single-quote character within a string constant, write two adjacent single quotes, e.g., 'Dianne''s horse'. Note that this is not the same as a double-quote character (\"). Two string constants that are only separated by whitespace with at least one newline are concatenated and effectively treated as if the string had been written as one constant. For example: SELECT 'foo' 'bar'; is equivalent to: SELECT 'foobar'; but: SELECT 'foo' 'bar'; is not valid syntax. (This slightly bizarre behavior is specified by SQL; IvorySQL is following the standard.) IvorySQL also accepts “escape” string constants, which are an extension to the SQL standard. An escape string constant is specified by writing the letter E (upper or lower case) just before the opening single quote, e.g., E’foo'. (When continuing an escape string constant across lines, write E only before the first opening quote.) Within an escape string, a backslash character (\\) begins a C-like backslash escape sequence, in which the combination of backslash and following character(s) represent a special byte value. Table 5.1. Backslash Escape Sequences Backslash Escape Sequence Interpretation \\b backspace \\f form feed \\n newline \\r carriage return \\t tab *`o*, `*`oo*, `*`ooo*` (o = 0–7) octal byte value \\x*`h, `\\x`hh` (h* = 0–9, A–F) hexadecimal byte value \\u*`xxxx, `\\U`xxxxxxxx` (x* = 0–9, A–F) 16 or 32-bit hexadecimal Unicode character value Any other character following a backslash is taken literally. Thus, to include a backslash character, write two backslashes (\\\\). Also, a single quote can be included in an escape string by writing \\', in addition to the normal way of ''. It is your responsibility that the byte sequences you create, especially when using the octal or hexadecimal escapes, compose valid characters in the server character set encoding. A useful alternative is to use Unicode escapes or the alternative Unicode escape syntax, ; then the server will check that the character conversion is possible. Caution If the configuration parameter standard_conforming_strings is off, then IvorySQL recognizes backslash escapes in both regular and escape string constants. However, as of IvorySQL, the default is on, meaning that backslash escapes are recognized only in escape string constants. This behavior is more standards-compliant, but might break applications which rely on the historical behavior, where backslash escapes were always recognized. As a workaround, you can set this parameter to off, but it is better to migrate away from using backslash escapes. If you need to use a backslash escape to represent a special character, write the string constant with an E.In addition to standard_conforming_strings, the configuration parameters escape_string_warning and backslash_quote govern treatment of backslashes in string constants.The character with the code zero cannot be in a string constant. IvorySQL also supports another type of escape syntax for strings that allows specifying arbitrary Unicode characters by code point. A Unicode escape string constant starts with U& (upper or lower case letter U followed by ampersand) immediately before the opening quote, without any spaces in between, for example U&'foo'. (Note that this creates an ambiguity with the operator &. Use spaces around the operator to avoid this problem.) Inside the quotes, Unicode characters can be specified in escaped form by writing a backslash followed by the four-digit hexadecimal code point number or alternatively a backslash followed by a plus sign followed by a six-digit hexadecimal code point number. For example, the string 'data' could be written as U&'d\\0061t\\+000061' The following less trivial example writes the Russian word “slon” (elephant) in Cyrillic letters: U&'\\0441\\043B\\043E\\043D' If a different escape character than backslash is desired, it can be specified using the UESCAPE clause after the string, for example: U&'d!0061t!+000061' UESCAPE '!' The escape character can be any single character other than a hexadecimal digit, the plus sign, a single quote, a double quote, or a whitespace character. To include the escape character in the string literally, write it twice. Either the 4-digit or the 6-digit escape form can be used to specify UTF-16 surrogate pairs to compose characters with code points larger than U+FFFF, although the availability of the 6-digit form technically makes this unnecessary. (Surrogate pairs are not stored directly, but are combined into a single code point.) If the server encoding is not UTF-8, the Unicode code point identified by one of these escape sequences is converted to the actual server encoding; an error is reported if that’s not possible. Also, the Unicode escape syntax for string constants only works when the configuration parameter standard_conforming_strings is turned on. This is because otherwise this syntax could confuse clients that parse the SQL statements to the point that it could lead to SQL injections and similar security issues. If the parameter is set to off, this syntax will be rejected with an error message. While the standard syntax for specifying string constants is usually convenient, it can be difficult to understand when the desired string contains many single quotes or backslashes, since each of those must be doubled. To allow more readable queries in such situations, IvorySQL provides another way, called “dollar quoting”, to write string constants. A dollar-quoted string constant consists of a dollar sign ($), an optional “tag” of zero or more characters, another dollar sign, an arbitrary sequence of characters that makes up the string content, a dollar sign, the same tag that began this dollar quote, and a dollar sign. For example, here are two different ways to specify the string “Dianne’s horse” using dollar quoting: $$Dianne's horse$$ $SomeTag$Dianne's horse$SomeTag$ Notice that inside the dollar-quoted string, single quotes can be used without needing to be escaped. Indeed, no characters inside a dollar-quoted string are ever escaped: the string content is always written literally. Backslashes are not special, and neither are dollar signs, unless they are part of a sequence matching the opening tag. It is possible to nest dollar-quoted string constants by choosing different tags at each nesting level. This is most commonly used in writing function definitions. For example: $function$ BEGIN RETURN ($1 ~ $q$[\\t\\r\\n\\v\\\\]$q$); END; $function$ Here, the sequence $q$[\\t\\r\\n\\v\\\\]$q$ represents a dollar-quoted literal string [\\t\\r\\n\\v\\\\], which will be recognized when the function body is executed by IvorySQL. But since the sequence does not match the outer dollar quoting delimiter $function$, it is just some more characters within the constant so far as the outer string is concerned. The tag, if any, of a dollar-quoted string follows the same rules as an unquoted identifier, except that it cannot contain a dollar sign. Tags are case sensitive, so $tag$String content$tag$ is correct, but $TAG$String content$tag$ is not. A dollar-quoted string that follows a keyword or identifier must be separated from it by whitespace; otherwise the dollar quoting delimiter would be taken as part of the preceding identifier. Dollar quoting is not part of the SQL standard, but it is often a more convenient way to write complicated string literals than the standard-compliant single quote syntax. It is particularly useful when representing string constants inside other constants, as is often needed in procedural function definitions. With single-quote syntax, each backslash in the above example would have to be written as four backslashes, which would be reduced to two backslashes in parsing the original string constant, and then to one when the inner string constant is re-parsed during function execution. Bit-string constants look like regular string constants with a B (upper or lower case) immediately before the opening quote (no intervening whitespace), e.g., B'1001'. The only characters allowed within bit-string constants are 0 and 1. Alternatively, bit-string constants can be specified in hexadecimal notation, using a leading X (upper or lower case), e.g., X'1FF'. This notation is equivalent to a bit-string constant with four binary digits for each hexadecimal digit. Both forms of bit-string constant can be continued across lines in the same way as regular string constants. Dollar quoting cannot be used in a bit-string constant. Numeric constants are accepted in these general forms: digits digits.[digits][e[+-]digits] [digits].digits[e[+-]digits] digitse[+-]digits where digits is one or more decimal digits (0 through 9). At least one digit must be before or after the decimal point, if one is used. At least one digit must follow the exponent marker (e), if one is present. There cannot be any spaces or other characters embedded in the constant. Note that any leading plus or minus sign is not actually considered part of the constant; it is an operator applied to the constant. These are some examples of valid numeric constants: 42 3.5 4. .001 5e2 1.925e-3 A numeric constant that contains neither a decimal point nor an exponent is initially presumed to be type integer if its value fits in type integer (32 bits); otherwise it is presumed to be type bigint if its value fits in type bigint (64 bits); otherwise it is taken to be type numeric. Constants that contain decimal points and/or exponents are always initially presumed to be type numeric. The initially assigned data type of a numeric constant is just a starting point for the type resolution algorithms. In most cases the constant will be automatically coerced to the most appropriate type depending on context. When necessary, you can force a numeric value to be interpreted as a specific data type by casting it. For example, you can force a numeric value to be treated as type real (float4) by writing: REAL '1.23' -- string style 1.23::REAL -- IvorySQL (historical) style These are actually just special cases of the general casting notations discussed next. A constant of an arbitrary type can be entered using any one of the following notations: type 'string' 'string'::type CAST ( 'string' AS type ) The string constant’s text is passed to the input conversion routine for the type called type. The result is a constant of the indicated type. The explicit type cast can be omitted if there is no ambiguity as to the type the constant must be (for example, when it is assigned directly to a table column), in which case it is automatically coerced. The string constant can be written using either regular SQL notation or dollar-quoting. It is also possible to specify a type coercion using a function-like syntax: typename ( 'string' ) but not all type names can be used in this way. The ::, CAST(), and function-call syntaxes can also be used to specify run-time type conversions of arbitrary expressions. To avoid syntactic ambiguity, the `type 'string'` syntax can only be used to specify the type of a simple literal constant. Another restriction on the `type 'string'` syntax is that it does not work for array types; use :: or CAST() to specify the type of an array constant. The CAST() syntax conforms to SQL. The `type 'string'` syntax is a generalization of the standard: SQL specifies this syntax only for a few data types, but IvorySQL allows it for all types. The syntax with :: is historical IvorySQL usage, as is the function-call syntax. An operator name is a sequence of up to NAMEDATALEN-1 (63 by default) characters from the following list: \\+ - * / = ~ ! @ # % ^ & | ` ? There are a few restrictions on operator names, however: -- and /* cannot appear anywhere in an operator name, since they will be taken as the start of a comment. A multiple-character operator name cannot end in + or -, unless the name also contains at least one of these characters: ~ ! @ # % ^ & | ` ? For example, @- is an allowed operator name, but *- is not. This restriction allows IvorySQL to parse SQL-compliant queries without requiring spaces between tokens. When working with non-SQL-standard operator names, you will usually need to separate adjacent operators with spaces to avoid ambiguity. For example, if you have defined a prefix operator named @, you cannot write X*@Y; you must write X* @Y to ensure that IvorySQL reads it as two operator names not one. Some characters that are not alphanumeric have a special meaning that is different from being an operator. Details on the usage can be found at the location where the respective syntax element is described. This section only exists to advise the existence and summarize the purposes of these characters. A dollar sign ($) followed by digits is used to represent a positional parameter in the body of a function definition or a prepared statement. In other contexts the dollar sign can be part of an identifier or a dollar-quoted string constant. Parentheses (()) have their usual meaning to group expressions and enforce precedence. In some cases parentheses are required as part of the fixed syntax of a particular SQL command. Brackets ([]) are used to select the elements of an array. Commas (,) are used in some syntactical constructs to separate the elements of a list. The semicolon (;) terminates an SQL command. It cannot appear anywhere within a command, except within a string constant or quoted identifier. The colon (:) is used to select “slices” from arrays. In certain SQL dialects (such as Embedded SQL), the colon is used to prefix variable names. The asterisk (*) is used in some contexts to denote all the fields of a table row or composite value. It also has a special meaning when used as the argument of an aggregate function, namely that the aggregate does not require any explicit parameter. The period (.) is used in numeric constants, and to separate schema, table, and column names. A comment is a sequence of characters beginning with double dashes and extending to the end of the line, e.g.: -- This is a standard SQL comment Alternatively, C-style block comments can be used: /* multiline comment * with nesting: /* nested block comment */ */ where the comment begins with / and extends to the matching occurrence of /. These block comments nest, as specified in the SQL standard but unlike C, so that one can comment out larger blocks of code that might contain existing block comments. A comment is removed from the input stream before further syntax analysis and is effectively replaced by whitespace. Table 5.2 shows the precedence and associativity of the operators in IvorySQL. Most operators have the same precedence and are left-associative. The precedence and associativity of the operators is hard-wired into the parser. Add parentheses if you want an expression with multiple operators to be parsed in some other way than what the precedence rules imply. Table 5.2. Operator Precedence (highest to lowest) Operator/Element Associativity Description . left table/column name separator :: left IvorySQL-style typecast [ ] left array element selection + - right unary plus, unary minus ^ left exponentiation * / % left multiplication, division, modulo + - left addition, subtraction (any other operator) left all other native and user-defined operators BETWEEN IN LIKE ILIKE SIMILAR range containment, set membership, string matching = ⇐ >= <> comparison operators IS ISNULL NOTNULL IS TRUE, IS FALSE, IS NULL, IS DISTINCT FROM, etc. NOT right logical negation AND left logical conjunction OR left logical disjunction Note that the operator precedence rules also apply to user-defined operators that have the same names as the built-in operators mentioned above. For example, if you define a “” operator for some custom data type it will have the same precedence as the built-in “” operator, no matter what yours does. When a schema-qualified operator name is used in the OPERATOR syntax, as for example in: SELECT 3 OPERATOR(pg_catalog.+) 4; the OPERATOR construct is taken to have the default precedence shown in Table 5.2 for “any other operator”. This is true no matter which specific operator appears inside OPERATOR(). Note In particular, ⇐ >= and <> used to be treated as generic operators; IS tests used to have higher priority; and NOT BETWEEN and related constructs acted inconsistently, being taken in some cases as having the precedence of NOT rather than BETWEEN. These rules were changed for better compliance with the SQL standard and to reduce confusion from inconsistent treatment of logically equivalent constructs. In most cases, these changes will result in no behavioral change, or perhaps in “no such operator” failures which can be resolved by adding parentheses. However there are corner cases in which a query might change behavior without any parsing error being reported. Value expressions are used in a variety of contexts, such as in the target list of the SELECT command, as new column values in INSERT or UPDATE, or in search conditions in a number of commands. The result of a value expression is sometimes called a scalar, to distinguish it from the result of a table expression (which is a table). Value expressions are therefore also called scalar expressions (or even simply expressions). The expression syntax allows the calculation of values from primitive parts using arithmetic, logical, set, and other operations. A value expression is one of the following: A constant or literal value A column reference A positional parameter reference, in the body of a function definition or prepared statement A subscripted expression A field selection expression An operator invocation A function call An aggregate expression A window function call A type cast A collation expression A scalar subquery An array constructor A row constructor Another value expression in parentheses (used to group subexpressions and override precedence) In addition to this list, there are a number of constructs that can be classified as an expression but do not follow any general syntax rules. These generally have the semantics of a function or operator . An example is the IS NULL clause. A column can be referenced in the form: correlation.columnname correlation is the name of a table (possibly qualified with a schema name), or an alias for a table defined by means of a FROM clause. The correlation name and separating dot can be omitted if the column name is unique across all the tables being used in the current query. A positional parameter reference is used to indicate a value that is supplied externally to an SQL statement. Parameters are used in SQL function definitions and in prepared queries. Some client libraries also support specifying data values separately from the SQL command string, in which case parameters are used to refer to the out-of-line data values. The form of a parameter reference is: $number For example, consider the definition of a function, dept, as: CREATE FUNCTION dept(text) RETURNS dept AS $$ SELECT * FROM dept WHERE name = $1 $$ LANGUAGE SQL; Here the $1 references the value of the first function argument whenever the function is invoked. If an expression yields a value of an array type, then a specific element of the array value can be extracted by writing expression[subscript] or multiple adjacent elements (an “array slice”) can be extracted by writing expression[lower_subscript:upper_subscript] (Here, the brackets [ ] are meant to appear literally.) Each subscript is itself an expression, which will be rounded to the nearest integer value. In general the array expression must be parenthesized, but the parentheses can be omitted when the expression to be subscripted is just a column reference or positional parameter. Also, multiple subscripts can be concatenated when the original array is multidimensional. For example: mytable.arraycolumn[4] mytable.two_d_column[17][34] $1[10:42] (arrayfunction(a,b))[42] The parentheses in the last example are required. If an expression yields a value of a composite type (row type), then a specific field of the row can be extracted by writing expression.fieldname In general the row expression must be parenthesized, but the parentheses can be omitted when the expression to be selected from is just a table reference or positional parameter. For example: mytable.mycolumn $1.somecolumn (rowfunction(a,b)).col3 (Thus, a qualified column reference is actually just a special case of the field selection syntax.) An important special case is extracting a field from a table column that is of a composite type: (compositecol).somefield (mytable.compositecol).somefield The parentheses are required here to show that compositecol is a column name not a table name, or that mytable is a table name not a schema name in the second case. You can ask for all fields of a composite value by writing .*: (compositecol).* This notation behaves differently depending on context. There are two possible syntaxes for an operator invocation: expression operator expression (binary infix operator) operator expression (unary prefix operator) where the operator token follows the syntax rules , or is one of the key words AND, OR, and NOT, or is a qualified operator name in the form: OPERATOR(schema.operatorname) Which particular operators exist and whether they are unary or binary depends on what operators have been defined by the system or the user. The syntax for a function call is the name of a function (possibly qualified with a schema name), followed by its argument list enclosed in parentheses: function_name ([expression [, expression ... ]] ) For example, the following computes the square root of 2: sqrt(2) Other functions can be added by the user. When issuing queries in a database where some users mistrust other users, The arguments can optionally have names attached. Note A function that takes a single argument of composite type can optionally be called using field-selection syntax, and conversely field selection can be written in functional style. That is, the notations col(table) and table.col are interchangeable. This behavior is not SQL-standard but is provided in IvorySQL because it allows use of functions to emulate “computed fields”. An aggregate expression represents the application of an aggregate function across the rows selected by a query. An aggregate function reduces multiple inputs to a single output value, such as the sum or average of the inputs. The syntax of an aggregate expression is one of the following: aggregate_name (expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ] aggregate_name (ALL expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ] aggregate_name (DISTINCT expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ] aggregate_name ( * ) [ FILTER ( WHERE filter_clause ) ] aggregate_name ( [ expression [ , ... ] ] ) WITHIN GROUP ( order_by_clause ) [ FILTER ( WHERE filter_clause ) ] where aggregate_name is a previously defined aggregate (possibly qualified with a schema name) and expression is any value expression that does not itself contain an aggregate expression or a window function call. The optional order_by_clause and filter_clause are described below. The first form of aggregate expression invokes the aggregate once for each input row. The second form is the same as the first, since ALL is the default. The third form invokes the aggregate once for each distinct value of the expression (or distinct set of values, for multiple expressions) found in the input rows. The fourth form invokes the aggregate once for each input row; since no particular input value is specified, it is generally only useful for the count() aggregate function. The last form is used with *ordered-set aggregate functions, which are described below. Most aggregate functions ignore null inputs, so that rows in which one or more of the expression(s) yield null are discarded. This can be assumed to be true, unless otherwise specified, for all built-in aggregates. For example, count(*) yields the total number of input rows; count(f1) yields the number of input rows in which f1 is non-null, since count ignores nulls; and count(distinct f1) yields the number of distinct non-null values of f1. Ordinarily, the input rows are fed to the aggregate function in an unspecified order. In many cases this does not matter; for example, min produces the same result no matter what order it receives the inputs in. However, some aggregate functions (such as array_agg and string_agg) produce results that depend on the ordering of the input rows. When using such an aggregate, the optional order_by_clause can be used to specify the desired ordering. The order_by_clause has the same syntax as for a query-level ORDER BY clause, except that its expressions are always just expressions and cannot be output-column names or numbers. For example: SELECT array_agg(a ORDER BY b DESC) FROM table; When dealing with multiple-argument aggregate functions, note that the ORDER BY clause goes after all the aggregate arguments. For example, write this: SELECT string_agg(a, ',' ORDER BY a) FROM table; not this: SELECT string_agg(a ORDER BY a, ',') FROM table; -- incorrect The latter is syntactically valid, but it represents a call of a single-argument aggregate function with two ORDER BY keys (the second one being rather useless since it’s a constant). If DISTINCT is specified in addition to an order_by_clause, then all the ORDER BY expressions must match regular arguments of the aggregate; that is, you cannot sort on an expression that is not included in the DISTINCT list. Note The ability to specify both DISTINCT and ORDER BY in an aggregate function is a IvorySQL extension. Placing ORDER BY within the aggregate’s regular argument list, as described so far, is used when ordering the input rows for general-purpose and statistical aggregates, for which ordering is optional. There is a subclass of aggregate functions called ordered-set aggregates for which an order_by_clause is required, usually because the aggregate’s computation is only sensible in terms of a specific ordering of its input rows. Typical examples of ordered-set aggregates include rank and percentile calculations. For an ordered-set aggregate, the order_by_clause is written inside WITHIN GROUP (…​), as shown in the final syntax alternative above. The expressions in the order_by_clause are evaluated once per input row just like regular aggregate arguments, sorted as per the order_by_clause's requirements, and fed to the aggregate function as input arguments. (This is unlike the case for a non-WITHIN GROUP order_by_clause, which is not treated as argument(s) to the aggregate function.) The argument expressions preceding WITHIN GROUP, if any, are called direct arguments to distinguish them from the aggregated arguments listed in the order_by_clause. Unlike regular aggregate arguments, direct arguments are evaluated only once per aggregate call, not once per input row. This means that they can contain variables only if those variables are grouped by GROUP BY; this restriction is the same as if the direct arguments were not inside an aggregate expression at all. Direct arguments are typically used for things like percentile fractions, which only make sense as a single value per aggregation calculation. The direct argument list can be empty; in this case, write just () not (*). (IvorySQL will actually accept either spelling, but only the first way conforms to the SQL standard.) An example of an ordered-set aggregate call is: SELECT percentile_cont(0.5) WITHIN GROUP (ORDER BY income) FROM households; percentile_cont ----------------- 50489 which obtains the 50th percentile, or median, value of the income column from table households. Here, 0.5 is a direct argument; it would make no sense for the percentile fraction to be a value varying across rows. If FILTER is specified, then only the input rows for which the filter_clause evaluates to true are fed to the aggregate function; other rows are discarded. For example: SELECT count(*) AS unfiltered, count(*) FILTER (WHERE i 'foo' COLLATE \"C\"; Note that in the latter case the COLLATE clause is attached to an input argument of the operator we wish to affect. It doesn’t matter which argument of the operator or function call the COLLATE clause is attached to, because the collation that is applied by the operator or function is derived by considering all arguments, and an explicit COLLATE clause will override the collations of all other arguments. (Attaching non-matching COLLATE clauses to more than one argument, however, is an error.) Thus, this gives the same result as the previous example: SELECT * FROM tbl WHERE a COLLATE \"C\" > 'foo'; But this is an error: SELECT * FROM tbl WHERE (a > 'foo') COLLATE \"C\"; because it attempts to apply a collation to the result of the > operator, which is of the non-collatable data type boolean. A scalar subquery is an ordinary SELECT query in parentheses that returns exactly one row with one column. The SELECT query is executed and the single returned value is used in the surrounding value expression. It is an error to use a query that returns more than one row or more than one column as a scalar subquery. (But if, during a particular execution, the subquery returns no rows, there is no error; the scalar result is taken to be null.) The subquery can refer to variables from the surrounding query, which will act as constants during any one evaluation of the subquery. For example, the following finds the largest city population in each state: SELECT name, (SELECT max(pop) FROM cities WHERE cities.state = states.name) FROM states; An array constructor is an expression that builds an array value using values for its member elements. A simple array constructor consists of the key word ARRAY, a left square bracket [, a list of expressions (separated by commas) for the array element values, and finally a right square bracket ]. For example: SELECT ARRAY[1,2,3+4]; array --------- {1,2,7} (1 row) By default, the array element type is the common type of the member expressions, determined using the same rules as for UNION or CASE constructs. You can override this by explicitly casting the array constructor to the desired type, for example: SELECT ARRAY[1,2,22.7]::integer[]; array ---------- {1,2,23} (1 row) This has the same effect as casting each expression to the array element type individually. Multidimensional array values can be built by nesting array constructors. In the inner constructors, the key word ARRAY can be omitted. For example, these produce the same result: SELECT ARRAY[ARRAY[1,2], ARRAY[3,4]]; array --------------- {{1,2},{3,4}} (1 row) SELECT ARRAY[[1,2],[3,4]]; array --------------- {{1,2},{3,4}} (1 row) Since multidimensional arrays must be rectangular, inner constructors at the same level must produce sub-arrays of identical dimensions. Any cast applied to the outer ARRAY constructor propagates automatically to all the inner constructors. Multidimensional array constructor elements can be anything yielding an array of the proper kind, not only a sub-ARRAY construct. For example: CREATE TABLE arr(f1 int[], f2 int[]); INSERT INTO arr VALUES (ARRAY[[1,2],[3,4]], ARRAY[[5,6],[7,8]]); SELECT ARRAY[f1, f2, '{{9,10},{11,12}}'::int[]] FROM arr; array ------------------------------------------------ {{{1,2},{3,4}},{{5,6},{7,8}},{{9,10},{11,12}}} (1 row) You can construct an empty array, but since it’s impossible to have an array with no type, you must explicitly cast your empty array to the desired type. For example: SELECT ARRAY[]::integer[]; array ------- {} (1 row) It is also possible to construct an array from the results of a subquery. In this form, the array constructor is written with the key word ARRAY followed by a parenthesized (not bracketed) subquery. For example: SELECT ARRAY(SELECT oid FROM pg_proc WHERE proname LIKE 'bytea%'); array ------------------------------------------------------------------ {2011,1954,1948,1952,1951,1244,1950,2005,1949,1953,2006,31,2412} (1 row) SELECT ARRAY(SELECT ARRAY[i, i*2] FROM generate_series(1,5) AS a(i)); array ---------------------------------- {{1,2},{2,4},{3,6},{4,8},{5,10}} (1 row) The subquery must return a single column. If the subquery’s output column is of a non-array type, the resulting one-dimensional array will have an element for each row in the subquery result, with an element type matching that of the subquery’s output column. If the subquery’s output column is of an array type, the result will be an array of the same type but one higher dimension; in this case all the subquery rows must yield arrays of identical dimensionality, else the result would not be rectangular. The subscripts of an array value built with ARRAY always begin with one. A row constructor is an expression that builds a row value (also called a composite value) using values for its member fields. A row constructor consists of the key word ROW, a left parenthesis, zero or more expressions (separated by commas) for the row field values, and finally a right parenthesis. For example: SELECT ROW(1,2.5,'this is a test'); The key word ROW is optional when there is more than one expression in the list. A row constructor can include the syntax rowvalue., which will be expanded to a list of the elements of the row value, just as occurs when the . syntax is used at the top level of a SELECT list .For example, if table t has columns f1 and f2, these are the same: SELECT ROW(t.*, 42) FROM t; SELECT ROW(t.f1, t.f2, 42) FROM t; Note Before PostgreSQL 8.2, the . syntax was not expanded in row constructors, so that writing ROW(t., 42) created a two-field row whose first field was another row value. The new behavior is usually more useful. If you need the old behavior of nested row values, write the inner row value without .*, for instance ROW(t, 42). By default, the value created by a ROW expression is of an anonymous record type. If necessary, it can be cast to a named composite type — either the row type of a table, or a composite type created with CREATE TYPE AS. An explicit cast might be needed to avoid ambiguity. For example: CREATE TABLE mytable(f1 int, f2 float, f3 text); CREATE FUNCTION getf1(mytable) RETURNS int AS 'SELECT $1.f1' LANGUAGE SQL; -- No cast needed since only one getf1() exists SELECT getf1(ROW(1,2.5,'this is a test')); getf1 ------- 1 (1 row) CREATE TYPE myrowtype AS (f1 int, f2 text, f3 numeric); CREATE FUNCTION getf1(myrowtype) RETURNS int AS 'SELECT $1.f1' LANGUAGE SQL; -- Now we need a cast to indicate which function to call: SELECT getf1(ROW(1,2.5,'this is a test')); ERROR: function getf1(record) is not unique SELECT getf1(ROW(1,2.5,'this is a test')::mytable); getf1 ------- 1 (1 row) SELECT getf1(CAST(ROW(11,'this is a test',2.5) AS myrowtype)); getf1 ------- 11 (1 row) Row constructors can be used to build composite values to be stored in a composite-type table column, or to be passed to a function that accepts a composite parameter. Also, it is possible to compare two row values or test a row with IS NULL or IS NOT NULL, for example: SELECT ROW(1,2.5,'this is a test') = ROW(1, 3, 'not the same'); SELECT ROW(table.*) IS NULL FROM table; -- detect all-null rows The order of evaluation of subexpressions is not defined. In particular, the inputs of an operator or function are not necessarily evaluated left-to-right or in any other fixed order. Furthermore, if the result of an expression can be determined by evaluating only some parts of it, then other subexpressions might not be evaluated at all. For instance, if one wrote: SELECT true OR somefunc(); then somefunc() would (probably) not be called at all. The same would be the case if one wrote: SELECT somefunc() OR true; Note that this is not the same as the left-to-right “short-circuiting” of Boolean operators that is found in some programming languages. As a consequence, it is unwise to use functions with side effects as part of complex expressions. It is particularly dangerous to rely on side effects or evaluation order in WHERE and HAVING clauses, since those clauses are extensively reprocessed as part of developing an execution plan. Boolean expressions (AND/OR/NOT combinations) in those clauses can be reorganized in any manner allowed by the laws of Boolean algebra. When it is essential to force evaluation order, a CASE construct can be used. For example, this is an untrustworthy way of trying to avoid division by zero in a WHERE clause: SELECT ... WHERE x > 0 AND y/x > 1.5; But this is safe: SELECT ... WHERE CASE WHEN x > 0 THEN y/x > 1.5 ELSE false END; A CASE construct used in this fashion will defeat optimization attempts, so it should only be done when necessary. (In this particular example, it would be better to sidestep the problem by writing y > 1.5*x instead.) CASE is not a cure-all for such issues, however. One limitation of the technique illustrated above is that it does not prevent early evaluation of constant subexpressions. As described in Section 38.7, functions and operators marked IMMUTABLE can be evaluated when the query is planned rather than when it is executed. Thus for example SELECT CASE WHEN x > 0 THEN x ELSE 1/0 END FROM tab; is likely to result in a division-by-zero failure due to the planner trying to simplify the constant subexpression, even if every row in the table has x > 0 so that the ELSE arm would never be entered at run time. While that particular example might seem silly, related cases that don’t obviously involve constants can occur in queries executed within functions, since the values of function arguments and local variables can be inserted into queries as constants for planning purposes. Within PL/pgSQL functions, for example, using an IF-THEN-ELSE statement to protect a risky computation is much safer than just nesting it in a CASE expression. Another limitation of the same kind is that a CASE cannot prevent evaluation of an aggregate expression contained within it, because aggregate expressions are computed before other expressions in a SELECT list or HAVING clause are considered. For example, the following query can cause a division-by-zero error despite seemingly having protected against it: SELECT CASE WHEN min(employees) > 0 THEN avg(expenses / employees) END FROM departments; The min() and avg() aggregates are computed concurrently over all the input rows, so if any row has employees equal to zero, the division-by-zero error will occur before there is any opportunity to test the result of min(). Instead, use a WHERE or FILTER clause to prevent problematic input rows from reaching an aggregate function in the first place. IvorySQL allows functions that have named parameters to be called using either positional or named notation. Named notation is especially useful for functions that have a large number of parameters, since it makes the associations between parameters and actual arguments more explicit and reliable. In positional notation, a function call is written with its argument values in the same order as they are defined in the function declaration. In named notation, the arguments are matched to the function parameters by name and can be written in any order. In either notation, parameters that have default values given in the function declaration need not be written in the call at all. But this is particularly useful in named notation, since any combination of parameters can be omitted; while in positional notation parameters can only be omitted from right to left. IvorySQL also supports mixed notation, which combines positional and named notation. In this case, positional parameters are written first and named parameters appear after them. The following examples will illustrate the usage of all three notations, using the following function definition: CREATE FUNCTION concat_lower_or_upper(a text, b text, uppercase boolean DEFAULT false) RETURNS text AS $$ SELECT CASE WHEN $3 THEN UPPER($1 || ' ' || $2) ELSE LOWER($1 || ' ' || $2) END; $$ LANGUAGE SQL IMMUTABLE STRICT; Function concat_lower_or_upper has two mandatory parameters, a and b. Additionally there is one optional parameter uppercase which defaults to false. The a and b inputs will be concatenated, and forced to either upper or lower case depending on the uppercase parameter. The remaining details of this function definition are not important here . Positional notation is the traditional mechanism for passing arguments to functions in IvorySQL. An example is: SELECT concat_lower_or_upper('Hello', 'World', true); concat_lower_or_upper ----------------------- HELLO WORLD (1 row) All arguments are specified in order. The result is upper case since uppercase is specified as true. Another example is: SELECT concat_lower_or_upper('Hello', 'World'); concat_lower_or_upper ----------------------- hello world (1 row) Here, the uppercase parameter is omitted, so it receives its default value of false, resulting in lower case output. In positional notation, arguments can be omitted from right to left so long as they have defaults. In named notation, each argument’s name is specified using ⇒ to separate it from the argument expression. For example: SELECT concat_lower_or_upper(a => 'Hello', b => 'World'); concat_lower_or_upper ----------------------- hello world (1 row) Again, the argument uppercase was omitted so it is set to false implicitly. One advantage of using named notation is that the arguments may be specified in any order, for example: SELECT concat_lower_or_upper(a => 'Hello', b => 'World', uppercase => true); concat_lower_or_upper ----------------------- HELLO WORLD (1 row) SELECT concat_lower_or_upper(a => 'Hello', uppercase => true, b => 'World'); concat_lower_or_upper ----------------------- HELLO WORLD (1 row) An older syntax based on \":=\" is supported for backward compatibility: SELECT concat_lower_or_upper(a := 'Hello', uppercase := true, b := 'World'); concat_lower_or_upper ----------------------- HELLO WORLD (1 row) The mixed notation combines positional and named notation. However, as already mentioned, named arguments cannot precede positional arguments. For example: SELECT concat_lower_or_upper('Hello', 'World', uppercase => true); concat_lower_or_upper ----------------------- HELLO WORLD (1 row) In the above query, the arguments a and b are specified positionally, while uppercase is specified by name. In this example, that adds little except documentation. With a more complex function having numerous parameters that have default values, named or mixed notation can save a great deal of writing and reduce chances for error. Note Named and mixed call notations currently cannot be used when calling an aggregate function (but they do work when an aggregate function is used as a window function). Parameters are set in the same way as in native IvorySQL. All parameter names are case-insensitive. Each parameter takes a value of one of the following five types: boolean, string, integer, floating point, or enum. This parameter controls the behavior of the database server. If it is set to pg, which means it is a native installation and the server will be installed as a native PG. If it is set to oracle, then the query output and overall system behavior will change, as it will be more Oracle-like. When set to oracle, this parameter will implicitly add a Schema with the same name to search_path. so that Oracle-compatible objects can be located. ALTER TABLE [ IF EXISTS ] [ ONLY ] name [ * ] action; action: ADD ( add_coldef [, ... ] ) | MODIFY ( modify_coldef [, ... ] ) | DROP [ COLUMN ] ( column_name [, ... ] ) add_coldef: cloumn_name data_type modify_coldef: cloumn_name data_type alter_using alter_using: USING expression name Table name. cloumn_name Column name. data_type Column type. expression The value expression. ADD keyword Adds a column to the table, either one or more columns. MODIFY keyword Modify a column of the table, you can modify one or more columns. DROP keyword Deletes a column of a table, you can delete one or more columns. USING keyword Modifies the value of a column. ADD: create table tb_test1(id int, flg char(10)); alter table tb_test1 add (name varchar); alter table tb_test1 add (adress varchar, num int, flg1 char); \\d tb_test1 Table \"public.tb_test1\" Column | Type | Collation | Nullable | Default --------+-------------------+-----------+----------+--------- id | integer | | | flg | character(10) | | | name | character varying | | | adress | character varying | | | num | integer | | | flg1 | character(1) | | | MODIFY: create table tb_test2(id int, flg char(10), num varchar); insert into tb_test2 values('1', 2, '3'); alter table tb_test2 modify(id char); \\d tb_test2 Table \"public.tb_test2\" Column | Type | Collation | Nullable | Default --------+-------------------+-----------+----------+--------- id | character(1) | | | flg | character(10) | | | num | character varying | | | DROP: create table tb_test3(id int, flg1 char(10), flg2 char(11), flg3 char(12), flg4 char(13), flg5 char(14), flg6 char(15)); alter table tb_test3 drop column(id); \\d tb_test3 Table \"public.tb_test3\" Column | Type | Collation | Nullable | Default --------+---------------+-----------+----------+--------- flg1 | character(10) | | | flg2 | character(11) | | | flg3 | character(12) | | | flg4 | character(13) | | | flg5 | character(14) | | | flg6 | character(15) | | | [ WITH [ RECURSIVE ] with_query [, ...] ] DELETE [ FROM ] [ ONLY ] table_name [ * ] [ [ AS ] alias ] [ USING using_list ] [ WHERE condition | WHERE CURRENT OF cursor_name ] [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ] table_name The name of the table. alias The table alias. using_list A list of table expressions that allow columns from other tables to appear in the WHERE condition. condition An expression that returns a boolean type value. cursor_name The name of the cursor to be used in the WHERE CURRENT OF case. output_expression An expression that is calculated by DELETE and returned after each row is deleted. output_name The name of the returned column. create table tb_test4(id int, flg char(10)); insert into tb_test4 values(1, '2'), (3, '4'), (5, '6'); delete from tb_test4 where id = 1; delete tb_test4 where id = 3; table tb_test4; id | flg ----+------------ 5 | 6 (1 row) [ WITH [ RECURSIVE ] with_query [, ...] ] UPDATE [ ONLY ] table_name [ * ] [ [ AS ] alias ] SET { [ table_name | alias ] column_name = { expression | DEFAULT } | ( [ table_name | alias ] column_name [, ...] ) = [ ROW ] ( { expression | DEFAULT } [, ...] ) | ( [ table_name | alias ] column_name [, ...] ) = ( sub-SELECT ) } [, ...] [ FROM from_list ] [ WHERE condition | WHERE CURRENT OF cursor_name ] [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ] table_name Table name. alias Table alias. column_name Column name. expression Value expression. sub-SELECT select clause. from_list Table expression. condition An expression that returns a value of type boolean. cursor_name The name of the cursor to be used in the WHERE CURRENT OF case. output_expression An expression that is computed by DELETE and returned after each row is deleted. output_name The name of the column being returned. create table tb_test5(id int, flg char(10)); insert into tb_test5 values(1, '2'), (3, '4'), (5, '6'); update tb_test5 a set a.id = 33 where a.id = 3; table tb_test5; Id | flg ----+------------ 1 | 2 5 | 6 33 | 4 (3 rows) set ivorysql.compatible_mode to oracle; create table students(student_id varchar(20) primary key , student_name varchar(40), student_pid int); select student_id,student_name from students group by student_id; ERROR: column \"students.student_name\" must appear in the GROUP BY clause or be used in an aggregate function select null union select null union select 1.2; ?column? ---------- 1.2 (2 rows) select_statement MINUS [ ALL | DISTINCT ] select_statement; select_statement Any SELECT statement without the ORDER BY, LIMIT, FOR NO KEY UPDATE, FOR UPDATE, FOR SHARE, and FOR KEY SHARE clauses. ALL keyword contains duplicate row results. DISTINCT keyword shows the elimination of duplicate rows. select * from generate_series(1, 3) g(i) MINUS select * from generate_series(1, 3) g(i) where i = 1; i --- 2 3 (2 rows) Use q\\' to escape special characters. q\\' escaped characters are usually used after ! [] {} () \\<> and other escaping characters, you can also use \\, letters, numbers, \\=, +, -, *, \\&, \\$, \\%, #, etc., no spaces are allowed. select q''' is goog ''; ?column? ------------ ' is goog (1 row) SELECT [ database {schema} | schema ] sequence {nextval | currval}; `sequence`Sequence Name. create sequence sq; select sq.nextval; nextval ----------- 1 (1 row) select sq.currval; nextval ----------- 1 (1 row) Convert the given timestamp without time zone to the specified timestamp with time zone, or return NULL if the specified time zone or timestamp is NULL. Parameters Description day Timestamp without time zone tz Specified time zone select from_tz('2021-11-08 09:12:39','Asia/Shanghai') from dual; from_tz ----------------------------------- 2021-11-08 09:12:39 Asia/Shanghai (1 row) select from_tz('2021-11-08 09:12:39','SAST') from dual; from_tz -------------------------- 2021-11-08 09:12:39 SAST select from_tz(NULL,'SAST') from dual; from_tz --------- (1 row) select from_tz('2021-11-08 09:12:31',NULL) from dual; from_tz --------- (1 row) Get the timestamp of the current database system. select oracle.systimestamp(); systimestamp ------------------------------- 2021-12-02 14:38:59.879642+08 (1 row) select systimestamp; statement_timestamp ------------------------------- 2021-12-02 14:39:33.262828+08 Converts the given timestamp with time zone to UTC time without time zone. Parameters Description day Need to convert time stamp with time zone select sys_extract_utc('2018-03-28 11:30:00.00 +09:00'::timestamptz) from dual; sys_extract_utc --------------------- 2018-03-28 02:30:00 (1 row) select oracle.sys_extract_utc(NULL) from dual; sys_extract_utc ----------------- (1 row) Gets the time zone of the current session. select sessiontimezone() from dual; sessiontimezone ----------------- PRC (1 row) set timezone to UTC; select oracle.sessiontimezone(); sessiontimezone ----------------- UTC (1 row) next_day returns the date of the first weekday with the same format name, which is later than the current date. The return type is always DATE, regardless of the date's data type. The return value has the same hour, minute, and second parts as the Parameters date. Parameters Description value Start Timestamp weekday The day of the week, can be \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" or 0,1,2,3,4,5,6,0 for Sunday select next_day(to_timestamp('2020-02-29 14:40:50', 'YYYY-MM-DD HH24:MI:SS'), 'Tuesday') from dual; next_day --------------------- 2020-03-03 14:40:50 (1 row) select next_day('2020-07-01 19:43:51 +8'::timestamptz, 1) from dual; next_day --------------------- 2020-07-05 19:43:51 (1 row) select next_day(oracle.date '2020-09-15 12:13:29', 6) from dual; next_day --------------------- 2020-09-18 12:13:29 (1 row) last_day returns the last day of the month in which the slot date falls. Parameters Description value Specified timestamp select last_day(timestamp '2020-05-17 13:27:19') from dual; last_day --------------------- 2020-05-31 13:27:19 (1 row) select last_day('2020-11-29 19:20:40 +08'::timestamptz) from dual; last_day --------------------- 2020-11-30 19:20:40 (1 row) select last_day('-0004-2-1 13:27:19'::oracle.date) from dual; last_day ---------------------- -0004-02-29 13:27:19 (1 row) add_months returns the date plus an integer month. date Parameters can be date-time values or any value that can be implicitly converted to DATE. integer Parameters can be an integer or any value that can be implicitly converted to an integer. Parameters Description day oracle.date type, the timestamp that needs to be changed value A shaping data, the number of months to be added select add_months(date '2020-02-15',7) from dual; add_months --------------------- 2020-09-15 00:00:00 (1 row) select add_months(timestamp '2018-12-15 19:12:09',12) from dual; add_months --------------------- 2019-12-15 19:12:09 (1 row) sysdate returns the operating system time of the database server. select sysdate; statement_sysdate --------------------- 2021-12-09 16:20:34 (1 row) select sysdate(); sysdate --------------------- 2021-12-09 16:21:39 (1 row) Convert the time of the first time zone to the time of the second time zone. The time zones include \"ast\", \"adt\", \"bst\", \"bdt\", \"cst\", \"cdt\", \"est\", \"edt\", \"gmt\", \"hst\", \"hdt\", \"mst\", \"mdt\", \"nst\", \"pst\", \"pdt\", \"yst\", \"ydt\". Parameters Description day Timestamp to be converted tz1 Timestamped time zones tz2 Target time zone select new_time(timestamp '2020-12-12 17:45:18', 'AST', 'ADT') from dual; new_time --------------------- 2020-12-12 18:45:18 (1 row) select new_time(timestamp '2020-12-12 17:45:18', 'BST', 'BDT') from dual; new_time --------------------- 2020-12-12 18:45:18 (1 row) select new_time(timestamp '2020-12-12 17:45:18', 'CST', 'CDT') from dual; new_time --------------------- 2020-12-12 18:45:18 (1 row) The trunc function returns a date, truncated in the specified format. fmt includes \"Y\", \"YY\", \"YYYY\", \"YYYY\", \"YEAR\", \"SYYYY\", \"SYEAR\", \"I\", \"IY\", \"IYY\", \"IYYY\", \"Q\", \"WW\", \"Iw\", \"W\", \"DAY\", \"DY\", \"D\", \" MONTH\", \"MONn\", \"MM\", \"RM\", \"CC\", \"SCC\", \"DDD\", \"DD\", \"J\", \"HH\", \"HH12\", \"HH24\", \"MI\". Parameters Description value The specified date (oracle.date, timestamp, timestamptz) fmt The specified format, if omitted, defaults to \"DDD\" select trunc(timestamp '2020-07-28 19:16:12', 'Q'); trunc --------------------- 2020-07-01 00:00:00 (1 row) select trunc(timestamptz '2020-09-27 18:30:21 + 08', 'MONTH'); trunc ------------------------ 2020-09-01 00:00:00+08 (1 row) The round function returns a date, rounded to the specified format. fmt includes \"Y\", \"YY\", \"YYYY\", \"YYYY\", \"YEAR\", \"SYYYY\", \"SYEAR\", \"I\", \"IY\", \"IYY\", \"IYYY\", \"Q\", \"WW\", \"Iw\", \"W\", \"DAY\", \"DY\", \"D \", \"MONTH\", \"MONn\", \"MM\", \"RM\", \"CC\", \"SCC\", \"DDD\", \"DD\", \"J\", \"HH\", \"HH12\", \"HH24\", \"MI\". Parameters Description value The date being converted (oracle.date, timestamp, timestamptz) fmt The specified format, if omitted, defaults to \"DDD\" select round(timestamp '2050-06-12 16:40:55', 'IYYY'); round --------------------- 2050-01-03 00:00:00 (1 row) TO_CHAR (str,[fmt]) Converts the input Parameters to a TEXT data type value according to the given format. If fmt is omitted, the data will be converted to a TEXT value in the system default format. If str is null, the function returns null. str Input Parameters (any type). fmt Input format Parameters, see format fmt for details. select to_char('3 2:20:05' ); to_char ----------------- 3 days 02:20:05 (1 row) select to_char('4.00'::numeric); to_char --------- 4 (1 row) select to_char(NULL); to_char --------- (1 row) select to_char(123,'xx'); to_char --------- 7b (1 row) TO_NUMBER(str,[fmt1]) Converts the input Parameters str to a value of the NUMREIC data type according to the given format. If fmt1 is omitted, the data will be converted to a NUMERIC value in the system default format. If str is NUMERIC, the function returns str. If str calculates to null, the function returns null. If it cannot be converted to the NUMERIC data type, the function returns an error. str input Parameters include the following data types (double precision, numeric, text, integer, etc., but must be implicitly converted to numeric). fmt1 Input format Parameters, see format fmt1 for details. select to_number(1210.73::numeric, 9999.99::numeric); to_number ----------- 1210.73 (1 row) select to_number(NULL); to_number ----------- (1 row) select to_number('123'::text); to_number ----------- 123 (1 row) TO_DATE(str,[fmt]) Converts the input Parameters str to a date data type value according to the given format. If fmt is omitted, the data will be converted to a date value in the system default format. If str is null, the function returns null. If fmt is J, for Julian, then char must be an integer. The function returns an error if it cannot be converted to DATE. str input Parameters (integer, text, can be implicitly converted to the above type, string that matches the date format). fmt input format Parameters, see format fmt for details. select to_date('50-11-28 ','RR-MM-dd '); to_date --------------------- 1950-11-28 00:00:00 (1 row) select to_date(2454336, 'J'); to_date --------------------- 2007-08-23 00:00:00 (1 row) select to_date('2019/11/22', 'yyyy-mm-dd'); to_date --------------------- 2019-11-22 00:00:00 (1 row) select to_date('20-11-28 10:14:22','YY-MM-dd hh24:mi:ss'); to_date --------------------- 2020-11-28 10:14:22 (1 row) select to_date('2019/11/22'); to_date --------------------- 2019-11-22 00:00:00 (1 row) select to_date('2019/11/27 10:14:22'); to_date --------------------- 2019-11-27 10:14:22 (1 row) select to_date('2020','RR'); to_date --------------------- 2020-01-01 00:00:00 (1 row) select to_date(NULL); to_date --------- (1 row) select to_date('-4712-07-23 14:31:23', 'syyyy-mm-dd hh24:mi:ss'); to_date ---------------------- -4712-07-23 14:31:23 (1 row) TO_TIMESTAMP(str,[fmt]) Converts the input Parameters str to a timestamp without a time zone according to the given format. If fmt is omitted, the data is converted to a timestamp with no time zone value in the system default format. If str is null, the function returns null. If it cannot be converted to a timestamp without a time zone, the function returns an error. str input Parameters (double precision,text, which can be implicitly converted to the above type). fmt Input format Parameters, see format fmt for details. select to_timestamp(1212121212.55::numeric); to_timestamp --------------------------- 2008-05-30 12:20:12.55 (1 row) select to_timestamp('2020/03/03 10:13:18 +5:00', 'YYYY/MM/DD HH:MI:SS TZH:TZM'); to_timestamp ------------------------ 2020-03-03 13:13:18 (1 row) select to_timestamp(NULL,NULL); to_timestamp -------------- (1 row) TO_YMINTERVAL(str) Converts the input Parameters str time interval to a time interval in the year-to-month range. Only the year and month are processed, other parts are omitted. If the input Parameters is NULL, the function returns NULL, and if the input Parameters is in the wrong format, the function returns an error. str Input Parameters (text, can be implicitly converted to text type, must be in time interval format. (SQL interval format compatible with SQL standard, ISO duration format compatible with ISO 8601:2004 standard). select to_yminterval('P1Y-2M2D'); to_yminterval --------------- 10 mons (1 row) select to_yminterval('P1Y2M2D'); to_yminterval --------------- 1 year 2 mons (1 row) select to_yminterval('-P1Y2M2D'); to_yminterval ------------------ -1 years -2 mons (1 row) select to_yminterval('-P1Y2M2D'); to_yminterval ------------------ -1 years -2 mons (1 row) select to_yminterval('-01-02'); to_yminterval ------------------ -1 years -2 mons (1 row) TO_DSINTERVAL(str) converts the time interval of the input Parameters str to a time interval in the range of days to seconds. Input Parameters include: day, hour, minute, second and microsecond. If the input Parameters is NULL, the function returns NULL, and if the input Parameters contains the year and month or is in the wrong format, the function returns an error. str Input Parameters (text, can be implicitly converted to text type, must be in time interval format. (SQL interval format compatible with SQL standard, ISO duration format compatible with ISO 8601:2004 standard). select to_dsinterval('100 00 :02 :00'); to_dsinterval ------------------- 100 days 00:02:00 (1 row) select to_dsinterval('-100 00:02:00'); to_dsinterval --------------------- -100 days -00:02:00 (1 row) select to_dsinterval(NULL); to_dsinterval --------------- (1 row) select to_dsinterval('-P100D'); to_dsinterval --------------- -100 days (1 row) select to_dsinterval('-P100DT20H'); to_dsinterval --------------------- -100 days -20:00:00 (1 row) select to_dsinterval('-P100DT20S'); to_dsinterval --------------------- -100 days -00:00:20 (1 row) TO_TIMESTAMP_TZ(str,[fmt]) Converts the input Parameters str to a timestamp with a time zone according to the given format. If fmt is omitted, the data will be converted to a timestamp with a time zone value in the system default format. If str is null, the function returns null. If it cannot be converted to a timestamp with a time zone, the function returns an error. str input Parameters (text, which can be implicitly converted to a text type). fmt Enter format Parameters, see format fmt for details. select to_timestamp_tz('2019','yyyy'); to_timestamp_tz ------------------------ 2019-01-01 00:00:00+08 (1 row) select to_timestamp_tz('2019-11','yyyy-mm'); to_timestamp_tz ------------------------ 2019-11-01 00:00:00+08 (1 row) select to_timestamp_tz('2003/12/13 10:13:18 +7:00'); to_timestamp_tz ------------------------ 2003-12-13 11:13:18+08 (1 row) select to_timestamp_tz('2019/12/13 10:13:18 +5:00', 'YYYY/MM/DD HH:MI:SS TZH:TZM'); to_timestamp_tz ------------------------ 2019-12-13 13:13:18+08 (1 row) select to_timestamp_tz(NULL); to_timestamp_tz ----------------- (1 row) GREATEST(expr1,expr2,…​) Gets the maximum value in the input list of one or more expressions. If the result of any expr calculation is NULL, the function returns NULL. expr1` Enter Parameters (of any type). `expr2` Enter Parameters (of any type). `... select greatest('a','b','A','B'); greatest ---------- b (1 row) select greatest(',','.','/',';','!','@','?'); greatest ---------- @ (1 row) select greatest('瀚','高','数','据','库'); greatest ---------- 高 (1 row) SELECT greatest('HARRY', 'HARRIOT', 'HARRA'); greatest ---------- HARRY (1 row) SELECT greatest('HARRY', 'HARRIOT', NULL); greatest ---------- (1 row) SELECT greatest(1.1, 2.22, 3.33); greatest ---------- 3.33 (1 row) SELECT greatest('A', 6, 7, 5000, 'E', 'F','G') A; a --- G (1 row) LEAST(expr1,expr2,…​) Gets the smallest value in the input list of one or more expressions. If the result of any expr calculation is NULL, the function returns NULL. expr1` Enter Parameters (of any type). `expr2` Enter Parameters (of any type). `... SELECT least(1,' 2', '3' ); least ------- 1 (1 row) SELECT least(NULL, NULL, NULL); least ------- (1 row) SELECT least('A', 6, 7, 5000, 'E', 'F','G') A; a ------ 5000 (1 row) select least(1,3,5,10); least ------- 1 (1 row) select least('a','A','b','B'); least ------- A (1 row) select least(',','.','/',';','!','@'); least ------- ! (1 row) select least('瀚','高','据','库'); least ------- 库 (1 row) SELECT least('HARRY', 'HARRIOT', NULL); least ------- (1 row) NLS_LENGTH_SEMANTICS enables you to create CHAR and VARCHAR2 columns using byte or character length semantics. Existing columns are not affected. In this case, the default semantics is BYTE. SET NLS_LENGTH_SEMANTICS TO [NONE | BYTE | CHAR]; BYTE: The data is stored in byte length. CHAR:Data is stored in character length. NONE:Data is stored using native IvorySQL storage. create table test(a varchar2(5)); CREATE TABLE SET NLS_LENGTH_SEMANTICS TO CHAR; SET SHOW NLS_LENGTH_SEMANTICS; nls_length_semantics ---------------------- char (1 row) insert into test values ('Hello,Mr.li'); INSERT 0 1 SET NLS_LENGTH_SEMANTICS TO BYTE; SET SHOW NLS_LENGTH_SEMANTICS; nls_length_semantics ---------------------- byte (1 row) insert into test values ('Hello,Mr.li'); 2021-12-14 15:28:11.906 HKT [6774] ERROR: value too long for type varchar2(5 byte) 2021-12-14 15:28:11.906 HKT [6774] STATEMENT: insert into test values ('Hello,Mr.li'); ERROR: value too long for type varchar2(5 byte) Variable length strings with maximum length bytes or characters. You must specify the size for VARCHAR2. The minimum size is 1 byte or 1 character. VARCHAR2(size) create table test(a varchar2(5)); CREATE TABLE SET NLS_LENGTH_SEMANTICS TO CHAR; SET SHOW NLS_LENGTH_SEMANTICS; nls_length_semantics ---------------------- char (1 row) insert into test values ('Hello,Mr.li'); INSERT 0 1 PL/iSQL is IvorySQL’s procedural language for writing custom functions, procedures and packages for IvorySQL. PL/iSQL is derived from IvorySQL’s PL/pgsql with some added features, but syntactically PL/iSQL is closer to Oracle’s PL/SQL. This document Describes the basic structure and construction of PL/iSQL programs. iSQL is a procedural block structure language that supports four different program types, PACKAGES, PROCEDURES, FUNCTIONS, and TRIGGERS. iSQL supports four different program types, PACKAGES, PROCEDURES, FUNCTIONS, and TRIGGERS. iSQL uses the same block structure for each type of supported program. A block consists of up to three parts: a declaration part, an executable, and an exception part. The declaration and exception sections are optional. [DECLARE declarations] BEGIN statements [ EXCEPTION WHEN THEN statements] END; A block can consist of at least one executable section Contains one or more iSQL statements in the BEGIN and END keywords. CREATE OR REPLACE FUNCTION null_func() RETURN VOID AS BEGIN NULL; END; / All keywords are case-insensitive. Identifiers are implicitly converted to lowercase unless double-quoted, just as they are in normal SQL commands. The declaration section can be used to declare variables and cursors, and depending on the context in which the block is used, the declaration section can begin with the keyword DECLARE. CREATE OR REPLACE FUNCTION null_func() RETURN VOID AS DECLARE quantity integer := 30; c_row pg_class%ROWTYPE; r_cursor refcursor; CURSOR c1 RETURN pg_proc%ROWTYPE; BEGIN NULL; end; / An optional exception section can also be included in a BEGIN - END block. The exception section begins with the keyword EXCEPTION and continues until the end of the block in which it appears. If a statement within the block throws an exception, program control goes to the exception section, which may or may not handle the thrown exception, depending on the contents of the exception and exception sections. CREATE OR REPLACE FUNCTION reraise_test() RETURN void AS BEGIN BEGIN RAISE syntax_error; EXCEPTION WHEN syntax_error THEN BEGIN raise notice 'exception % thrown in inner block, reraising', sqlerrm; RAISE; EXCEPTION WHEN OTHERS THEN raise notice 'RIGHT - exception % caught in inner block', sqlerrm; END; END; EXCEPTION WHEN OTHERS THEN raise notice 'WRONG - exception % caught in outer block', sqlerrm; END; / Note Like PL/pgSQL, PL/iSQL uses BEGIN/END to group statements, and do not confuse them with the SQL commands of the same name used for transaction control. PL/iSQL’s BEGIN/END are used only for grouping; they do not start or end transactions To create a PL/iSQL program from a psql client, you can use a syntax similar to PL/pgSQL’s $$ CREATE FUNCTION func() RETURNS void as $$ .. end$$ language plisql; Alternatively, you can use the Oracle-compliant syntax of references and language specifications without $$ and end the program definition with / (forward slash). The */ (forward slash) must be on the newline character CREATE FUNCTION func() RETURN void AS … END; / CREATE [OR REPLACE] PROCEDURE procedure_name [(parameter_list)] is [DECLARE] -- variable declaration BEGIN -- stored procedure body END; / CREATE [OR REPLACE] FUNCTION function_name ([parameter_list]) RETURN return_type AS [DECLARE] -- variable declaration BEGIN -- function body return statement END; / CREATE [ OR REPLACE ] PACKAGE [schema.] *package_name* [invoker_rights_clause] [IS | AS] item_list[, item_list ...] END [*package_name*]; invoker_rights_clause: AUTHID [CURRENT_USER | DEFINER] item_list: [ function_declaration | procedure_declaration | type_definition | cursor_declaration | item_declaration ] function_declaration: FUNCTION function_name [(parameter_declaration[, ...])] RETURN datatype; procedure_declaration: PROCEDURE procedure_name [(parameter_declaration[, ...])] type_definition: record_type_definition | ref_cursor_type_definition cursor_declaration: CURSOR name [(cur_param_decl[, ...])] RETURN rowtype; item_declaration: cursor_declaration | cursor_variable_declaration | record_variable_declaration | variable_declaration | record_type_definition: TYPE record_type IS RECORD ( variable_declaration [, variable_declaration]... ) ; ref_cursor_type_definition: TYPE type IS REF CURSOR [ RETURN type%ROWTYPE ]; cursor_variable_declaration: curvar curtype; record_variable_declaration: recvar { record_type | rowtype_attribute | record_type%TYPE }; variable_declaration: varname datatype [ [ NOT NULL ] := expr ] parameter_declaration: parameter_name [IN] datatype [[:= | DEFAULT] expr] CREATE [ OR REPLACE ] PACKAGE BODY [schema.] package_name [IS | AS] [item_list[, item_list ...]] | item_list_2 [, item_list_2 ...] [initialize_section] END [package_name]; initialize_section: BEGIN statement[, ...] item_list: [ function_declaration | procedure_declaration | type_definition | cursor_declaration | item_declaration ] item_list_2: [ function_declaration function_definition procedure_declaration procedure_definition cursor_definition ] function_definition: FUNCTION function_name [(parameter_declaration[, ...])] RETURN datatype [IS | AS] [declare_section] body; procedure_definition: PROCEDURE procedure_name [(parameter_declaration[, ...])] [IS | AS] [declare_section] body; cursor_definition: CURSOR name [(cur_param_decl[, ...])] RETURN rowtype IS select_statement; body: BEGIN statement[, ...] END [name]; statement: [>] pl_statments[, ...]; { CONNECT BY [ NOCYCLE ] [PRIOR] condition [AND [PRIOR] condition]... [ START WITH condition ] | START WITH condition CONNECT BY [ NOCYCLE ] [PRIOR] condition [AND [PRIOR] condition]... } The CONNECT BY query syntax begins with the CONNECT BY keywords, which define hierarchical interdependencies between parent and child rows. The result must be further qualified by specifying the PRIOR keyword in the conditional part of the CONNECT BY clause. The PRIOR PRIOR keyword is a unary operator that relates the previous row to the current row. This keyword can be used to the left or right of the equality condition. START WITH This clause specifies the line from which the hierarchy begins. NOCYCLE No operation statement. Currently only supported by the syntax. This clause indicates that data is returned even if a loop exists. LEVEL Returns the level of the current row in the hierarchy, starting at 1 at the root node and incrementing by 1 at each level thereafter. CONNECT_BY_ROOT expr Returns the parent column of the current row in the hierarchy. SYS_CONNECT_BY_PATH(col, chr) It is a function that returns the value of the column from the root to the current node, separated by the character \"chr\". This function currently has the following limitations. Additional columns can be used for most expressions, such as function calls, CASE statements and general expressions, but there are some unsupported columns, such as ROW, TYPECAST, COLLATE, GROUPING clauses, etc. In case two or more columns are the same, you may need to output the column name, Example such as SELECT CONNECT_BY_ROOT col AS \"col1\", CONNECT_BY_ROOT col AS \"col2\" …​. Indirect operators or \"*\" are not supported Loop detection is not supported CREATE UNIQUE INDEX [IF NOT EXISTS] name ON table_name [USING method] (columns) GLOBAL CREATE UNIQUE INDEX myglobalindex on mytable(bid) GLOBAL; During the creation of a globally unique index, the system performs an index scan on all existing partitions and raises an error if it finds duplicate entries from other partitions than the current one. Example. Command create table gidxpart (a int, b int, c text) partition by range (a); create table gidxpart1 partition of gidxpart for values from (0) to (100000); create table gidxpart2 partition of gidxpart for values from (100000) to (199999); insert into gidxpart (a, b, c) values (42, 572814, 'inserted first on gidxpart1'); insert into gidxpart (a, b, c) values (150000, 572814, 'inserted second on gidxpart2'); create unique index on gidxpart (b) global; Output ERROR: could not create unique index \"gidxpart1_b_idx\" DETAIL: Key (b)=(572814) is duplicated. During global unique index creation, the system performs an index scan on all existing partitions and raises an error if duplicate items are found in other partitions than the current one. Command create table gidx_part (a int, b int, c text) partition by range (a); create table gidxpart (a int, b int, c text) partition by range (a); create table gidxpart1 partition of gidxpart for values from (0) to (10); create table gidxpart2 partition of gidxpart for values from (10) to (100); create unique index gidx_u on gidxpart using btree(b) global; insert into gidxpart values (1, 1, 'first'); insert into gidxpart values (11, 11, 'eleventh'); insert into gidxpart values (2, 11, 'duplicated (b)=(11) on other partition'); Output ERROR: duplicate key value violates unique constraint \"gidxpart2_b_idx\" DETAIL: Key (b)=(11) already exists. When appending a new table to a partitioned table with a globally unique index, the system performs a duplicate check on all existing partitions. If a duplicate item is found in an existing partition that matches a tuple in the appended table, an error is raised and the append fails. Appending requires a sharedlock on all existing partitions. If one of the partitions is doing a concurrent INSERT, the append will wait for it to complete first. This can be improved in a future release Command create table gidxpart (a int, b int, c text) partition by range (a); create table gidxpart1 partition of gidxpart for values from (0) to (100000); insert into gidxpart (a, b, c) values (42, 572814, 'inserted first on gidxpart1'); create unique index on gidxpart (b) global; create table gidxpart2 (a int, b int, c text); insert into gidxpart2 (a, b, c) values (150000, 572814, 'dup inserted on gidxpart2'); alter table gidxpart attach partition gidxpart2 for values from (100000) to (199999); Output ERROR: could not create unique index \"gidxpart1_b_idx\" DETAIL: Key (b)=(572814) is duplicated.","title":"Developer Guide","component":"ivorysql-doc","version":"v4.2","name":"8","url":"/ivorysql-doc/v4.2/v4.2/8.html","titles":[{"text":"1. Overview","hash":"overview","id":1},{"text":"1.1. Architecture Overview","hash":"architecture-overview","id":2},{"text":"1.2. Catalog changes","hash":"catalog-changes","id":3},{"text":"2. Database Modeling","hash":"database-modeling","id":4},{"text":"2.1. Creating a Database","hash":"creating-a-database","id":5},{"text":"2.2. Creating a New Table","hash":"creating-a-new-table","id":6},{"text":"3. Write to data","hash":"write-to-data","id":7},{"text":"4. Query Data","hash":"query-data","id":8},{"text":"4.1. Combining Queries (UNION, INTERSECT, EXCEPT)","hash":"combining-queries-union-intersect-except","id":9},{"text":"4.2. Parallel Query","hash":"parallel-query","id":10},{"text":"4.2.1. How Parallel Query Works","hash":"how-parallel-query-works","id":11},{"text":"4.2.2. When Can Parallel Query Be Used?","hash":"when-can-parallel-query-be-used","id":12},{"text":"4.2.3. Parallel Plans","hash":"parallel-plans","id":13},{"text":"4.2.3.1. Parallel Scans","hash":"parallel-scans","id":14},{"text":"4.2.3.2. Parallel Joins","hash":"parallel-joins","id":15},{"text":"4.2.3.3. Parallel Aggregation","hash":"parallel-aggregation","id":16},{"text":"4.2.3.4. Parallel Append","hash":"parallel-append","id":17},{"text":"4.2.3.5. Parallel Plan Tips","hash":"parallel-plan-tips","id":18},{"text":"5. Transaction","hash":"transaction","id":19},{"text":"5.1. ABORT — abort the current transaction","hash":"abort-abort-the-current-transaction","id":20},{"text":"5.1.1. Synopsis","hash":"synopsis","id":21},{"text":"5.1.2. Description","hash":"description","id":22},{"text":"5.1.3. Parameters","hash":"parameters","id":23},{"text":"5.1.4. Notes","hash":"notes","id":24},{"text":"5.1.5. Examples","hash":"examples","id":25},{"text":"5.1.6. Compatibility","hash":"compatibility","id":26},{"text":"5.2. BEGIN — start a transaction block","hash":"begin-start-a-transaction-block","id":27},{"text":"5.2.1. Synopsis","hash":"synopsis-2","id":28},{"text":"5.2.2. Description","hash":"description-2","id":29},{"text":"5.2.3. Parameters","hash":"parameters-2","id":30},{"text":"5.2.4. Notes","hash":"notes-2","id":31},{"text":"5.2.5. Examples","hash":"examples-2","id":32},{"text":"5.2.6. Compatibility","hash":"compatibility-2","id":33},{"text":"5.3. COMMIT — commit the current transaction","hash":"commit-commit-the-current-transaction","id":34},{"text":"5.3.1. Synopsis","hash":"synopsis-3","id":35},{"text":"5.3.2. Description","hash":"description-3","id":36},{"text":"5.3.3. Parameters","hash":"parameters-3","id":37},{"text":"5.3.4. Notes","hash":"notes-3","id":38},{"text":"5.3.5. Examples","hash":"examples-3","id":39},{"text":"5.3.6. Compatibility","hash":"compatibility-3","id":40},{"text":"5.4. COMMIT PREPARED — commit a transaction that was earlier prepared for two-phase commit","hash":"commit-prepared-commit-a-transaction-that-was-earlier-prepared-for-two-phase-commit","id":41},{"text":"5.4.1. Synopsis","hash":"synopsis-4","id":42},{"text":"5.4.2. Description","hash":"description-4","id":43},{"text":"5.4.3. Parameters","hash":"parameters-4","id":44},{"text":"5.4.4. Notes","hash":"notes-4","id":45},{"text":"5.4.5. Examples","hash":"examples-4","id":46},{"text":"5.4.6. Compatibility","hash":"compatibility-4","id":47},{"text":"5.5. END — commit the current transaction","hash":"end-commit-the-current-transaction","id":48},{"text":"5.5.1. Synopsis","hash":"synopsis-5","id":49},{"text":"5.5.2. Description","hash":"description-5","id":50},{"text":"5.5.3. Parameters","hash":"parameters-5","id":51},{"text":"5.5.4. Notes","hash":"notes-5","id":52},{"text":"5.5.5. Examples","hash":"examples-5","id":53},{"text":"5.5.6. Compatibility","hash":"compatibility-5","id":54},{"text":"5.6. PREPARE TRANSACTION — prepare the current transaction for two-phase commit","hash":"prepare-transaction-prepare-the-current-transaction-for-two-phase-commit","id":55},{"text":"5.6.1. Synopsis","hash":"synopsis-6","id":56},{"text":"5.6.2. Description","hash":"description-6","id":57},{"text":"5.6.3. Parameters","hash":"parameters-6","id":58},{"text":"5.6.4. Notes","hash":"notes-6","id":59},{"text":"5.6.5. Caution","hash":"caution","id":60},{"text":"5.6.6. Examples","hash":"examples-6","id":61},{"text":"5.6.7. Compatibility","hash":"compatibility-6","id":62},{"text":"5.7. ROLLBACK — abort the current transaction","hash":"rollback-abort-the-current-transaction","id":63},{"text":"5.7.1. Synopsis","hash":"synopsis-7","id":64},{"text":"5.7.2. Description","hash":"description-7","id":65},{"text":"5.7.3. Parameters","hash":"parameters-7","id":66},{"text":"5.7.4. Notes","hash":"notes-7","id":67},{"text":"5.7.5. Examples","hash":"examples-7","id":68},{"text":"5.7.6. Compatibility","hash":"compatibility-7","id":69},{"text":"5.8. ROLLBACK PREPARED — cancel a transaction that was earlier prepared for two-phase commit","hash":"rollback-prepared-cancel-a-transaction-that-was-earlier-prepared-for-two-phase-commit","id":70},{"text":"5.8.1. Synopsis","hash":"synopsis-8","id":71},{"text":"5.8.2. Description","hash":"description-8","id":72},{"text":"5.8.3. Parameters","hash":"parameters-8","id":73},{"text":"5.8.4. Notes","hash":"notes-8","id":74},{"text":"5.8.5. Examples","hash":"examples-8","id":75},{"text":"5.8.6. Compatibility","hash":"compatibility-8","id":76},{"text":"5.9. SAVEPOINT — define a new savepoint within the current transaction","hash":"savepoint-define-a-new-savepoint-within-the-current-transaction","id":77},{"text":"5.9.1. Synopsis","hash":"synopsis-9","id":78},{"text":"5.9.2. Description","hash":"description-9","id":79},{"text":"5.9.3. Parameters","hash":"parameters-9","id":80},{"text":"5.9.4. Notes","hash":"notes-9","id":81},{"text":"5.9.5. Examples","hash":"examples-9","id":82},{"text":"5.9.6. Compatibility","hash":"compatibility-9","id":83},{"text":"5.10. SET CONSTRAINTS — set constraint check timing for the current transaction","hash":"set-constraints-set-constraint-check-timing-for-the-current-transaction","id":84},{"text":"5.10.1. Synopsis","hash":"synopsis-10","id":85},{"text":"5.10.2. Description","hash":"description-10","id":86},{"text":"5.10.3. Notes","hash":"notes-10","id":87},{"text":"5.10.4. Compatibility","hash":"compatibility-10","id":88},{"text":"5.11. SET TRANSACTION — set the characteristics of the current transaction","hash":"set-transaction-set-the-characteristics-of-the-current-transaction","id":89},{"text":"5.11.1. Synopsis","hash":"synopsis-11","id":90},{"text":"5.11.2. Description","hash":"description-11","id":91},{"text":"5.11.3. Notes","hash":"notes-11","id":92},{"text":"5.11.4. Examples","hash":"examples-10","id":93},{"text":"5.11.5. Compatibility","hash":"compatibility-11","id":94},{"text":"5.12. START TRANSACTION — start a transaction block","hash":"start-transaction-start-a-transaction-block","id":95},{"text":"5.12.1. Synopsis","hash":"synopsis-12","id":96},{"text":"5.12.2. Description","hash":"description-12","id":97},{"text":"5.12.3. Parameters","hash":"parameters-10","id":98},{"text":"5.12.4. Compatibility","hash":"compatibility-12","id":99},{"text":"6. Sql Reference","hash":"sql-reference","id":100},{"text":"6.1. Lexical Structure","hash":"lexical-structure","id":101},{"text":"6.1.1. Identifiers and Key Words","hash":"identifiers-and-key-words","id":102},{"text":"6.1.2. Constants","hash":"constants","id":103},{"text":"6.1.2.1. String Constants","hash":"string-constants","id":104},{"text":"6.1.2.2. String Constants With C-Style Escapes","hash":"string-constants-with-c-style-escapes","id":105},{"text":"6.1.2.3. String Constants With Unicode Escapes","hash":"string-constants-with-unicode-escapes","id":106},{"text":"6.1.2.4. Dollar-Quoted String Constants","hash":"dollar-quoted-string-constants","id":107},{"text":"6.1.2.5. Bit-String Constants","hash":"bit-string-constants","id":108},{"text":"6.1.2.6. Numeric Constants","hash":"numeric-constants","id":109},{"text":"6.1.2.7. Constants Of Other Types","hash":"constants-of-other-types","id":110},{"text":"6.1.3. Operators","hash":"operators","id":111},{"text":"6.1.4. Special Characters","hash":"special-characters","id":112},{"text":"6.1.5. Comments","hash":"comments","id":113},{"text":"6.1.6. Operator Precedence","hash":"operator-precedence","id":114},{"text":"6.2. Value Expressions","hash":"value-expressions","id":115},{"text":"6.2.1. Column References","hash":"column-references","id":116},{"text":"6.2.2. Positional Parameters","hash":"positional-parameters","id":117},{"text":"6.2.3. Subscripts","hash":"subscripts","id":118},{"text":"6.2.4. Field Selection","hash":"field-selection","id":119},{"text":"6.2.5. Operator Invocations","hash":"operator-invocations","id":120},{"text":"6.2.6. Function Calls","hash":"function-calls","id":121},{"text":"6.2.7. Aggregate Expressions","hash":"aggregate-expressions","id":122},{"text":"6.2.8. Window Function Calls","hash":"window-function-calls","id":123},{"text":"6.2.9. Type Casts","hash":"type-casts","id":124},{"text":"6.2.10. Collation Expressions","hash":"collation-expressions","id":125},{"text":"6.2.11. Scalar Subqueries","hash":"scalar-subqueries","id":126},{"text":"6.2.12. Array Constructors","hash":"array-constructors","id":127},{"text":"6.2.13. Row Constructors","hash":"row-constructors","id":128},{"text":"6.2.14. Expression Evaluation Rules","hash":"expression-evaluation-rules","id":129},{"text":"6.3. Calling Functions","hash":"calling-functions","id":130},{"text":"6.3.1. Using Positional Notation","hash":"using-positional-notation","id":131},{"text":"6.3.2. Using Named Notation","hash":"using-named-notation","id":132},{"text":"6.3.3. Using Mixed Notation","hash":"using-mixed-notation","id":133},{"text":"7. Oracle Compatible Features","hash":"oracle-compatible-features","id":134},{"text":"7.1. Configuration parameters","hash":"configuration-parameters","id":135},{"text":"7.1.1. ivorysql.compatible_mode (enum)","hash":"ivorysql-compatible_mode-enum","id":136},{"text":"7.2. Changing tables","hash":"changing-tables","id":137},{"text":"7.2.1. syntax","hash":"syntax","id":138},{"text":"7.2.2. parameters","hash":"parameters-11","id":139},{"text":"7.2.3. Example","hash":"example","id":140},{"text":"7.3. Delete table","hash":"delete-table","id":141},{"text":"7.3.1. Syntax","hash":"syntax-2","id":142},{"text":"7.3.2. Parameters","hash":"parameters-12","id":143},{"text":"7.3.3. uses","hash":"uses","id":144},{"text":"7.4. Update table","hash":"update-table","id":145},{"text":"7.4.1. Syntax","hash":"syntax-3","id":146},{"text":"7.4.2. parameters","hash":"parameters-13","id":147},{"text":"7.4.3. Example","hash":"example-2","id":148},{"text":"7.5. GROUP BY","hash":"group-by","id":149},{"text":"7.5.1. Example","hash":"example-3","id":150},{"text":"7.6. UNION","hash":"union","id":151},{"text":"7.6.1. Example","hash":"example-4","id":152},{"text":"7.7. Minus Operator","hash":"minus-operator","id":153},{"text":"7.7.1. Syntax","hash":"syntax-4","id":154},{"text":"7.7.2. Parameters","hash":"parameters-14","id":155},{"text":"7.7.3. Example","hash":"example-5","id":156},{"text":"7.8. Escape characters","hash":"escape-characters","id":157},{"text":"7.8.1. Overview","hash":"overview-2","id":158},{"text":"7.8.2. Example of","hash":"example-of","id":159},{"text":"7.9. Sequence","hash":"sequence","id":160},{"text":"7.9.1. Syntax","hash":"syntax-5","id":161},{"text":"7.9.2. Parameters","hash":"parameters-15","id":162},{"text":"7.9.3. Example","hash":"example-6","id":163},{"text":"7.10. Compatible with time and date functions","hash":"compatible-with-time-and-date-functions","id":164},{"text":"7.10.1. from_tz","hash":"from_tz","id":165},{"text":"7.10.1.1. Purpose","hash":"purpose","id":166},{"text":"7.10.1.2. Parameters","hash":"parameters-16","id":167},{"text":"7.10.1.3. Example","hash":"example-7","id":168},{"text":"7.10.2. systimestamp","hash":"systimestamp","id":169},{"text":"7.10.2.1. Purpose","hash":"purpose-2","id":170},{"text":"7.10.2.2. Example","hash":"example-8","id":171},{"text":"7.10.3. sys_extract_utc","hash":"sys_extract_utc","id":172},{"text":"7.10.3.1. Purpose","hash":"purpose-3","id":173},{"text":"7.10.3.2. Parameters Description","hash":"parameters-description","id":174},{"text":"7.10.3.3. Example","hash":"example-9","id":175},{"text":"7.10.4. sessiontimezone","hash":"sessiontimezone","id":176},{"text":"7.10.4.1. Purpose","hash":"purpose-4","id":177},{"text":"7.10.4.2. Example","hash":"example-10","id":178},{"text":"7.10.5. next_day","hash":"next_day","id":179},{"text":"7.10.5.1. Purpose","hash":"purpose-5","id":180},{"text":"7.10.5.2. ParametersDescription","hash":"parametersdescription","id":181},{"text":"7.10.5.3. Example","hash":"example-11","id":182},{"text":"7.10.6. last_day","hash":"last_day","id":183},{"text":"7.10.6.1. Purpose","hash":"purpose-6","id":184},{"text":"7.10.6.2. ParametersDescription","hash":"parametersdescription-2","id":185},{"text":"7.10.6.3. Example","hash":"example-12","id":186},{"text":"7.10.7. add_months","hash":"add_months","id":187},{"text":"7.10.7.1. Purpose","hash":"purpose-7","id":188},{"text":"7.10.7.2. ParametersDescription","hash":"parametersdescription-3","id":189},{"text":"7.10.7.3. Example","hash":"example-13","id":190},{"text":"7.10.8. sysdate","hash":"sysdate","id":191},{"text":"7.10.8.1. Purpose","hash":"purpose-8","id":192},{"text":"7.10.8.2. Example","hash":"example-14","id":193},{"text":"7.10.9. new_time","hash":"new_time","id":194},{"text":"7.10.9.1. Purpose","hash":"purpose-9","id":195},{"text":"7.10.9.2. ParametersDescription","hash":"parametersdescription-4","id":196},{"text":"7.10.9.3. Example","hash":"example-15","id":197},{"text":"7.10.10. trunc","hash":"trunc","id":198},{"text":"7.10.10.1. Purpose","hash":"purpose-10","id":199},{"text":"7.10.10.2. ParametersDescription","hash":"parametersdescription-5","id":200},{"text":"7.10.10.3. Example","hash":"example-16","id":201},{"text":"7.10.11. round","hash":"round","id":202},{"text":"7.10.11.1. Purpose","hash":"purpose-11","id":203},{"text":"7.10.11.2. ParametersDescription","hash":"parametersdescription-6","id":204},{"text":"7.10.11.3. Example","hash":"example-17","id":205},{"text":"7.11. Compatible conversion and comparison and NULL-related functions","hash":"compatible-conversion-and-comparison-and-null-related-functions","id":206},{"text":"7.11.1. TO_CHAR","hash":"to_char","id":207},{"text":"7.11.1.1. Purpose","hash":"purpose-12","id":208},{"text":"7.11.1.2. Parameters","hash":"parameters-17","id":209},{"text":"7.11.1.3. Example","hash":"example-18","id":210},{"text":"7.11.2. TO_NUMBER","hash":"to_number","id":211},{"text":"7.11.2.1. Purpose","hash":"purpose-13","id":212},{"text":"7.11.2.2. Parameters","hash":"parameters-18","id":213},{"text":"7.11.2.3. Example","hash":"example-19","id":214},{"text":"7.11.3. TO_DATE","hash":"to_date","id":215},{"text":"7.11.3.1. Purpose","hash":"purpose-14","id":216},{"text":"7.11.3.2. Parameters","hash":"parameters-19","id":217},{"text":"7.11.3.3. Example","hash":"example-20","id":218},{"text":"7.11.4. TO_TIMESTAMP","hash":"to_timestamp","id":219},{"text":"7.11.4.1. Purpose","hash":"purpose-15","id":220},{"text":"7.11.4.2. Parameters","hash":"parameters-20","id":221},{"text":"7.11.4.3. Example","hash":"example-21","id":222},{"text":"7.11.5. TO_YMINTERVAL","hash":"to_yminterval","id":223},{"text":"7.11.5.1. Purpose","hash":"purpose-16","id":224},{"text":"7.11.5.2. Parameters","hash":"parameters-21","id":225},{"text":"7.11.5.3. Example","hash":"example-22","id":226},{"text":"7.11.6. TO_DSINTERVAL","hash":"to_dsinterval","id":227},{"text":"7.11.6.1. Purpose","hash":"purpose-17","id":228},{"text":"7.11.6.2. Parameters","hash":"parameters-22","id":229},{"text":"7.11.6.3. Example","hash":"example-23","id":230},{"text":"7.11.7. TO_TIMESTAMP_TZ","hash":"to_timestamp_tz","id":231},{"text":"7.11.7.1. Purpose","hash":"purpose-18","id":232},{"text":"7.11.7.2. Parameters","hash":"parameters-23","id":233},{"text":"7.11.7.3. Example","hash":"example-24","id":234},{"text":"7.11.8. GREATEST","hash":"greatest","id":235},{"text":"7.11.8.1. Purpose","hash":"purpose-19","id":236},{"text":"7.11.8.2. Parameters","hash":"parameters-24","id":237},{"text":"7.11.8.3. Example","hash":"example-25","id":238},{"text":"7.11.9. LEAST","hash":"least","id":239},{"text":"7.11.9.1. Purpose","hash":"purpose-20","id":240},{"text":"7.11.9.2. Parameters","hash":"parameters-25","id":241},{"text":"7.11.9.3. Example","hash":"example-26","id":242},{"text":"7.12. NLS_LENGTH_SEMANTICSParameters","hash":"nls_length_semanticsparameters","id":243},{"text":"7.12.1. Overview","hash":"overview-3","id":244},{"text":"7.12.2. Syntax","hash":"syntax-6","id":245},{"text":"7.12.2.1. Note on the range of values","hash":"note-on-the-range-of-values","id":246},{"text":"7.12.3. Example","hash":"example-27","id":247},{"text":"7.12.3.1. --Test “CHAR”","hash":"test-char","id":248},{"text":"7.12.3.2. --Test “BYTE”","hash":"test-byte","id":249},{"text":"7.13. VARCHAR2(size)","hash":"varchar2size","id":250},{"text":"7.13.1. Overview","hash":"overview-4","id":251},{"text":"7.13.2. Syntax","hash":"syntax-7","id":252},{"text":"7.13.3. Example","hash":"example-28","id":253},{"text":"7.14. PL/iSQL","hash":"plisql","id":254},{"text":"7.14.1. Structure of PL/iSQL Programs","hash":"structure-of-plisql-programs","id":255},{"text":"7.14.2. psql support for PL/iSQL programs","hash":"psql-support-for-plisql-programs","id":256},{"text":"7.14.3. PL/iSQL Program Syntax","hash":"plisql-program-syntax","id":257},{"text":"7.14.3.1. PROCEDURES","hash":"procedures","id":258},{"text":"7.14.3.2. FUNCTIONS","hash":"functions","id":259},{"text":"7.14.3.3. PACKAGES","hash":"packages","id":260},{"text":"7.14.3.3.1. PACKAGE HEADER","hash":"package-header","id":261},{"text":"7.14.3.3.2. PACKAGE BODY","hash":"package-body","id":262},{"text":"7.15. Hierarchy Search","hash":"hierarchy-search","id":263},{"text":"7.15.1. Syntax","hash":"syntax-8","id":264},{"text":"7.15.2. ADDITIONAL COLUMN","hash":"additional-column","id":265},{"text":"7.15.3. Limitations","hash":"limitations","id":266},{"text":"8. Global Unique Index","hash":"global-unique-index","id":267},{"text":"8.1. Create global unique index","hash":"create-global-unique-index","id":268},{"text":"8.1.1. Syntax","hash":"syntax-9","id":269},{"text":"8.1.2. Example","hash":"example-29","id":270},{"text":"8.1.3. Global uniqueness assurance","hash":"global-uniqueness-assurance","id":271},{"text":"8.2. Insertions and updates","hash":"insertions-and-updates","id":272},{"text":"8.2.1. Global uniqueness guarantee for insertions and updates","hash":"global-uniqueness-guarantee-for-insertions-and-updates","id":273},{"text":"8.2.2. Example","hash":"example-30","id":274},{"text":"8.3. Append and detach","hash":"append-and-detach","id":275},{"text":"8.3.1. Global uniqueness guarantee for append statements","hash":"global-uniqueness-guarantee-for-append-statements","id":276},{"text":"8.3.2. Example","hash":"example-31","id":277}]},"28":{"id":28,"text":"Since IvorySQL is based on PostgreSQL, it is recommended that when reading and understanding this section, O&M staff also refer to doc。 The IvorySQL version number consists of a major version and a minor version. For example, 3 in IvorySQL 3.2 is the major version and 2 is the minor version. Releasing a minor version is not going to change the internal storage format, so it is always compatible with the same major version. For example, IvorySQL 3.4 is compatible with Ivory SQL 3.0 and the subsequent Ivory SQL 3.x. Upgrading for these compatible versions is as simple as shutting down the database service, installing a replacement binary executable, and restarting the service. ​ Next, we focus on cross-version upgrades of IvorySQL, for example, from IvorySQL 2.3 to IvorySQL 3.2. Major version upgrades may modify the internal data storage format and therefore require additional operations to be performed. The common cross-version upgrade methods and applicable scenarios are as follows. Upgrade method Applicable scenarios Shutdown time pg_dumpall Small to medium sized databases, e.g. less than 100GB to support cross-platform data migration Depends on the size of the database pg_upgrade Large and medium-sized databases, e.g., >100GB local upgrade A few minutes Logical Replication Large and medium-sized databases, e.g. >100GB cross-platform support A few seconds Attention： New major releases usually introduce some user-visible incompatibilities and may therefore require application programming changes. All user-visible changes are listed in description，Please pay special attention to the section labeled \"Migration\". Although you may upgrade from one major version to another without upgrading an intermediate version, you should read the major release notes for all intermediate versions. The traditional cross-version upgrade method uses pg_dump/pg_dumpall to logically backup the database and then restore it in the new version via pg_restore. It is recommended to use the new version of pg_dump/pg_dumpall tool when exporting the old version of the database. You can take advantage of its latest parallel export and restore features, while reducing database bloat problems. Logical backup and restore is very simple but slow. Downtime depends on the size of the database, so it is suitable for small to medium sized database upgrades. ​The following describes how this upgrade method works. If the current IvorySQL software installation directory is located in /usr/local/pgsql and the data directory is located in /usr/local/pgsql/data, we do the upgrade on the same server. 1.Stop the application before performing a logical backup and make sure that no data is updated, as updates after the backup has started will not be exported. If necessary, modify the /usr/local/pgsql/data/pg_hba.conf file to disable others from accessing the database. Then backup the database. pg_dumpall > outputfile If you have installed a new version of IvorySQL, you can use the new version of the pg_dumpall command to back up the old version of the database. 2.Stop the backend services of older versions. pg_ctl stop Or stop the background service by other means. 3.If the installation directory does not contain a specific version identifier, the directory can be renamed and modified back if necessary. Directories can be renamed using a command similar to the following. mv /usr/local/pgsql /usr/local/pgsql.old 4.Install the new version of IvorySQL software, if the installation directory is still /usr/local/pgsql. 5.Initializing a new database cluster requires the use of a database specific user (usually postgres; if upgrading the version, this user should already exist) to perform the operation. /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data 6.Change the old configuration file pg_hba.conf, postgresql.conf, etc. in the corresponding new configuration file. 7.To start a new version of the backend service using a dedicated database user. /usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data 8.Finally, using the new version of the psql command to restore the data. /usr/local/pqsql/bin/psql -d postgres -f outputfile To reduce downtime, you can install the new version of IvorySQL to another directory, while starting the service using a different port. Then perform both the export and import of the database. pg_dumpall -p 5432 | psql -d postgres -p 5433 When the above operation is executed, the old and new versions of the backend service run simultaneously, with the new version using port 5433 and the old version using port 5432. The pg_upgrade utility supports in-place upgrades of IvorySQL across versions. The upgrade can be performed in minutes, especially when using the --link mode. It requires similar steps as pg_dumpall above, such as starting/stopping the server and running initdb.pg_upgrade doc outlines the steps required. We can also create a fallback server using logical replication of an updated version of IvorySQL, which supports replication between different major versions of IvorySQL. The fallback server can be on the same computer or on a different computer. Once it is synchronized with the primary server (running an older version of IvorySQL), you can switch hosts and use the backup server as the host, and then shut down the older database instance. Such a switchover allows an upgrade with only a few seconds of downtime. This upgrade method can be used with built-in logical replication tools and external logical replication systems such as pglogical, Slony, Londiste, and Bucardo. IvorySQL is based on PostgreSQL and is updated at the same frequency as PostgreSQL, with one major release per year and one minor release per quarter. IvorySQL 4.2 is based on PostgreSQL 17.2, and all versions of IvorySQL are backward compatible.The relevant version features can be viewed by looking at Official Website。 IvorySQL uses the concept of Roles to manage database access rights. A role can be thought of as a database user or a group of database users, depending on how the role is set. Roles can own database objects (for example, tables and functions) and can delegate permissions on those objects to other roles to control who can access which objects. In addition, membership in one role can be granted to another role, allowing member roles to use the permissions granted to another role. The concept of roles encompasses the concepts of \"user\" and \"group\". The database roles are conceptually completely separate from the operating system users. It may in fact be easier to maintain a correspondence, but this is not necessary. Database roles are global within a database cluster installation (and not within a separate database). To create a role, use the CREATE ROLE SQL command. CREATE ROLE name; Name follows the rules of SQL identifiers: either unadorned with no special characters or surrounded by double quotes (in fact, you will always have to add additional options to the command, such as LOGIN. see below for more details). To remove an existing role, use the similar DROP ROLE command. DROP ROLE name; For convenience, the createuser and dropuser programs are provided as wrappers for these SQL commands, which can be invoked from the shell command line at createuser name dropuser name To determine the set of existing roles, check the pg_roles system directory, e.g. SELECT rolname FROM pg_roles; The \\du meta command of the psql program can also be used to list existing roles. To bootstrap a database system, a system that has just been initialized always contains a predefined role. This role is always a \"superuser\" and by default (unless changed when running initdb) it is named the same as the OS user who initialized the database cluster. By convention, this role will be named postgres. In order to create more roles, you must first connect as the initial role. Each connection to the database server is established using a particular role name, and this role determines the initial access rights to the command that initiates the connection. The role name to use for a particular database connection is indicated by the client, which initiates the connection request in an application-related style. For example, the psql program uses the -U command line option to specify which role to connect under. Many applications assume that this name is the current operating system user by default (including createuser and psql). Therefore it is often convenient to maintain a name correspondence between the role and the OS user. The set of database roles that a given client connection can use to connect to is determined by the authentication settings of that client, so a client is not limited to connecting with a role that matches its OS user, just as a person’s login name does not need to match her real name. Because role identity determines the set of permissions available to a connected client, be careful when setting up a multi-user environment to configure permissions. A database role can have a number of attributes that define the permissions of the role and interact with the client authentication system. It is often convenient to group users together to facilitate the management of permissions: in this way, permissions can be granted to or reclaimed from an entire group. This is done in IvorySQL by creating a role that represents a group, and then granting membership in that group role to individual user roles. Since roles can own database objects and hold privileges to access other objects, deleting a role is often not a one-time DROP ROLE solution. Any objects owned by that user must first be deleted or transferred to another owner, and any privileges that have been granted to that role must be withdrawn. For more details on database access management, refers to doc. IvorySQL is based on PostgreSQL and has a full SQL with defined data objects that can be referred to doc.On top of that, IvorySQL has done some Oracle proprietary data object compatibility for Oracle compatibility. Variable length strings with maximum length bytes or characters. You must specify the size for VARCHAR2. The minimum size is 1 byte or 1 character. VARCHAR2(size) create table test(a varchar2(5)); CREATE TABLE SET NLS_LENGTH_SEMANTICS TO CHAR; SET SHOW NLS_LENGTH_SEMANTICS; nls_length_semantics ---------------------- char (1 row) insert into test values ('Hello,Mr.li'); INSERT 0 1 IvorySQL is developed based on PostgreSQL, with full SQL, query data specific operations can be referred to doc. IvorySQL implements portions of the SQL/MED specification, allowing you to access data that resides outside IvorySQL using regular SQL queries. Such data is referred to as foreign data. (Note that this usage is not to be confused with foreign keys, which are a type of constraint within the database.) Foreign data is accessed with help from a foreign data wrapper. A foreign data wrapper is a library that can communicate with an external data source, hiding the details of connecting to the data source and obtaining data from it. There are some foreign data wrappers available as contrib modules;see Appendix F. Other kinds of foreign data wrappers might be found as third party products. If none of the existing foreign data wrappers suit your needs, you can write your own; see doc. To access foreign data, you need to create a foreign server object, which defines how to connect to a particular external data source according to the set of options used by its supporting foreign data wrapper. Then you need to create one or more foreign tables, which define the structure of the remote data. A foreign table can be used in queries just like a normal table, but a foreign table has no storage in the IvorySQL server. Whenever it is used, IvorySQL asks the foreign data wrapper to fetch data from the external source, or transmit data to the external source in the case of update commands. Accessing remote data may require authenticating to the external data source. This information can be provided by a user mapping, which can provide additional data such as user names and passwords based on the current IvorySQL role. As with everything that contains valuable data, IvorySQL databases should be backed up regularly. While the procedure is essentially simple, it is important to have a clear understanding of the underlying techniques and assumptions. There are three fundamentally different approaches to backing up IvorySQL data: SQL dump File system level backup Continuous archiving The idea behind this dump method is to generate a file with SQL commands that, when fed back to the server, will recreate the database in the same state as it was at the time of the dump. IvorySQL provides the utility program pg_dumpfor this purpose. The basic usage of this command is: pg_dump dbname > dumpfile As you see, pg_dump writes its result to the standard output. We will see below how this can be useful. While the above command creates a text file, pg_dump can create files in other formats that allow for parallelism and more fine-grained control of object restoration. pg_dump is a regular IvorySQL client application (albeit a particularly clever one). This means that you can perform this backup procedure from any remote host that has access to the database. pg_dump must have read access to all tables that you want to back up, so in order to back up the entire database you almost always have to run it as a database superuser. (If you do not have sufficient privileges to back up the entire database, you can still back up portions of the database to which you do have access using options such as -n `schema` or -t `table`.) ​To specify which database server pg_dump should contact, use the command line options -h `host` and -p `port. The default host is the local host or whatever your `HOST environment variable specifies. Similarly, the default port is indicated by the PORT environment variable or, failing that, by the compiled-in default. (Conveniently, the server will normally have the same compiled-in default.) pg_dump will by default connect with the database user name that is equal to the current operating system user name. To override this, either specify the -U option or set the environment variable PGUSER. Remember that pg_dump connections are subject to the normal client authentication mechanisms 。 ​ An important advantage of pg_dump over the other backup methods described later is that pg_dump’s output can generally be re-loaded into newer versions of IvorySQL, whereas file-level backups and continuous archiving are both extremely server-version-specific. pg_dump is also the only method that will work when transferring a database to a different machine architecture, such as going from a 32-bit to a 64-bit server. ​ Dumps created by pg_dump are internally consistent, meaning, the dump represents a snapshot of the database at the time pg_dump began running. pg_dump does not block other operations on the database while it is working. (Exceptions are those operations that need to operate with an exclusive lock, such as most forms of ALTER TABLE.) Text files created by pg_dump are intended to be read in by the psql program. The general command form to restore a dump is psql dbname dumpfile The resulting dump can be restored with psql: psql -f dumpfile ivorysql (Actually, you can specify any existing database name to start from, but if you are loading into an empty cluster then ivorysql should usually be used.) It is always necessary to have database superuser access when restoring a pg_dumpall dump, as that is required to restore the role and tablespace information. If you use tablespaces, make sure that the tablespace paths in the dump are appropriate for the new installation. pg_dumpall works by emitting commands to re-create roles, tablespaces, and empty databases, then invoking pg_dump for each database. This means that while each database will be internally consistent, the snapshots of different databases are not synchronized. Cluster-wide data can be dumped alone using the pg_dumpall --globals-only option. This is necessary to fully backup the cluster if running the pg_dump command on individual databases. Some operating systems have maximum file size limits that cause problems when creating large pg_dump output files. Fortunately, pg_dump can write to the standard output, so you can use standard Unix tools to work around this potential problem. There are several possible methods: Use compressed dumps. You can use your favorite compression program, for example gzip: pg_dump dbname | gzip > filename.gz Reload with： gunzip -c filename.gz | psql dbname or: cat filename.gz | gunzip | psql dbname Use split. The split command allows you to split the output into smaller files that are acceptable in size to the underlying file system. For example, to make 2 gigabyte chunks: pg_dump dbname | split -b 2G - filename Reload with: cat filename* | psql dbname If using GNU split, it is possible to use it and gzip together: pg_dump dbname | split -b 2G -−filter='gzip > $FILE.gz' It can be restored using zcat. Use pg_dump’s custom dump format. If IvorySQL was built on a system with the zlib compression library installed, the custom dump format will compress data as it writes it to the output file. This will produce dump file sizes similar to using gzip, but it has the added advantage that tables can be restored selectively. The following command dumps a database using the custom dump format: pg_dump -Fc dbname > filename A custom-format dump is not a script for psql, but instead must be restored with pg_restore, for example: pg_restore -d dbname filename See the pg_dump and pg_restore reference pages for details. For very large databases, you might need to combine split with one of the other two approaches. Use pg_dump’s parallel dump feature. To speed up the dump of a large database, you can use pg_dump’s parallel mode. This will dump multiple tables at the same time. You can control the degree of parallelism with the -j parameter. Parallel dumps are only supported for the \"directory\" archive format. pg_dump -j num -F d -f out.dir dbname You can use pg_restore -j to restore a dump in parallel. This will work for any archive of either the \"custom\" or the \"directory\" archive mode, whether or not it has been created with pg_dump -j. An alternative backup strategy is to directly copy the files that IvorySQL uses to store the data in the database，You can use whatever method you prefer for doing file system backups; for example: tar -cf backup.tar /usr/local/pgsql/data There are two restrictions, however, which make this method impractical, or at least inferior to the pg_dump method: The database server must be shut down in order to get a usable backup. Half-way measures such as disallowing all connections will not work (in part because tar and similar tools do not take an atomic snapshot of the state of the file system, but also because of internal buffering within the server).Needless to say, you also need to shut down the server before restoring the data. If you have dug into the details of the file system layout of the database, you might be tempted to try to back up or restore only certain individual tables or databases from their respective files or directories. This will not work because the information contained in these files is not usable without the commit log files, pg_xact/*, which contain the commit status of all transactions. A table file is only usable with this information. Of course it is also impossible to restore only a table and the associated pg_xact data because that would render all other tables in the database cluster useless. So file system backups only work for complete backup and restoration of an entire database cluster. ​ An alternative file-system backup approach is to make a “consistent snapshot” of the data directory, if the file system supports that functionality (and you are willing to trust that it is implemented correctly). The typical procedure is to make a “frozen snapshot” of the volume containing the database, then copy the whole data directory (not just parts, see above) from the snapshot to a backup device, then release the frozen snapshot. This will work even while the database server is running. However, a backup created in this way saves the database files in a state as if the database server was not properly shut down; therefore, when you start the database server on the backed-up data, it will think the previous server instance crashed and will replay the WAL log. This is not a problem; just be aware of it (and be sure to include the WAL files in your backup). You can perform a CHECKPOINT before taking the snapshot to reduce recovery time. ​ If your database is spread across multiple file systems, there might not be any way to obtain exactly-simultaneous frozen snapshots of all the volumes. For example, if your data files and WAL log are on different disks, or if tablespaces are on different file systems, it might not be possible to use snapshot backup because the snapshots must be simultaneous. Read your file system documentation very carefully before trusting the consistent-snapshot technique in such situations. ​ If simultaneous snapshots are not possible, one option is to shut down the database server long enough to establish all the frozen snapshots. Another option is to perform a continuous archiving base backup,because such backups are immune to file system changes during the backup. This requires enabling continuous archiving just during the backup process; restore is done using continuous archive recovery ​ Another option is to use rsync to perform a file system backup. This is done by first running rsync while the database server is running, then shutting down the database server long enough to do an rsync --checksum. (--checksum is necessary because rsync only has file modification-time granularity of one second.) The second rsync will be quicker than the first, because it has relatively little data to transfer, and the end result will be consistent because the server was down. This method allows a file system backup to be performed with minimal downtime. Note that a file system backup will typically be larger than an SQL dump. (pg_dump does not need to dump the contents of indexes for example, just the commands to recreate them.) However, taking a file system backup might be faster. At all times,IvorySQLmaintains a write ahead log (WAL) in the pg_wal/ subdirectory of the cluster’s data directory. The log records every change made to the database’s data files. This log exists primarily for crash-safety purposes: if the system crashes, the database can be restored to consistency by “replaying” the log entries made since the last checkpoint. However, the existence of the log makes it possible to use a third strategy for backing up databases: we can combine a file-system-level backup with backup of the WAL files. If recovery is needed, we restore the file system backup and then replay from the backed-up WAL files to bring the system to a current state. This approach is more complex to administer than either of the previous approaches, but it has some significant benefits: We do not need a perfectly consistent file system backup as the starting point. Any internal inconsistency in the backup will be corrected by log replay (this is not significantly different from what happens during crash recovery). So we do not need a file system snapshot capability, just tar or a similar archiving tool. Since we can combine an indefinitely long sequence of WAL files for replay, continuous backup can be achieved simply by continuing to archive the WAL files. This is particularly valuable for large databases, where it might not be convenient to take a full backup frequently. It is not necessary to replay the WAL entries all the way to the end. We could stop the replay at any point and have a consistent snapshot of the database as it was at that time. Thus, this technique supports point-in-time recovery: it is possible to restore the database to its state at any time since your base backup was taken. If we continuously feed the series of WAL files to another machine that has been loaded with the same base backup file, we have a warm standby system: at any point we can bring up the second machine and it will have a nearly-current copy of the database. Note: pg_dump and pg_dumpall do not produce file-system-level backups and cannot be used as part of a continuous-archiving solution. Such dumps are logical and do not contain enough information to be used by WAL replay. ​ As with the plain file-system-backup technique, this method can only support restoration of an entire database cluster, not a subset. Also, it requires a lot of archival storage: the base backup might be bulky, and a busy system will generate many megabytes of WAL traffic that have to be archived. Still, it is the preferred backup technique in many situations where high reliability is needed. ​ To recover successfully using continuous archiving (also called “online backup” by many database vendors), you need a continuous sequence of archived WAL files that extends back at least as far as the start time of your backup. So to get started, you should set up and test your procedure for archiving WAL files before you take your first base backup. Accordingly, we first discuss the mechanics of archiving WAL files.For more information on how to create archives and backups and the key points during operation, please refer to doc。 COPY moves data between IvorySQL tables and standard file-system files. COPY TO copies the contents of a table to a file, while COPY FROM copies data from a file to a table (appending the data to whatever is in the table already). COPY TO can also copy the results of a SELECT query. If a column list is specified, COPY TO copies only the data in the specified columns to the file. For COPY FROM, each field in the file is inserted, in order, into the specified column. Table columns not specified in the COPY FROM column list will receive their default values. COPY with a file name instructs the IvorySQL server to directly read from or write to a file. The file must be accessible by the IvorySQL user (the user ID the server runs as) and the name must be specified from the viewpoint of the server. When PROGRAM is specified, the server executes the given command and reads from the standard output of the program, or writes to the standard input of the program. The command must be specified from the viewpoint of the server, and be executable by the IvorySQL user. When STDIN or STDOUT is specified, data is transmitted via the connection between the client and the server. ​ Each backend running COPY will report its progress in the pg_stat_progress_copy view. COPY table_name [ ( column_name [, ...] ) ] FROM { 'filename' | PROGRAM 'command' | STDIN } [ [ WITH ] ( option [, ...] ) ] [ WHERE condition ] COPY { table_name [ ( column_name [, ...] ) ] | ( query ) } TO { 'filename' | PROGRAM 'command' | STDOUT } [ [ WITH ] ( option [, ...] ) ] where option can be one of: FORMAT format_name FREEZE [ boolean ] DELIMITER 'delimiter_character' NULL 'null_string' HEADER [ boolean ] QUOTE 'quote_character' ESCAPE 'escape_character' FORCE_QUOTE { ( column_name [, ...] ) | * } FORCE_NOT_NULL ( column_name [, ...] ) FORCE_NULL ( column_name [, ...] ) ENCODING 'encoding_name' For detailed parameter settings, please refer to doc. On successful completion, a COPY command returns a command tag of the form COPY count The count is the number of rows copied. Note： psql will print this command tag only if the command was not COPY …​ TO STDOUT, or the equivalent psql meta-command \\copy …​ to stdout. This is to prevent confusing the command tag with the data that was just printed. COPY TO can be used only with plain tables, not views, and does not copy rows from child tables or child partitions. For example, COPY `table TO` copies the same rows as SELECT * FROM ONLY `table. The syntax `COPY (SELECT * FROM `table) TO …​` can be used to dump all of the rows in an inheritance hierarchy, partitioned table, or view. COPY FROM can be used with plain, foreign, or partitioned tables or with views that have INSTEAD OF INSERT triggers. You must have select privilege on the table whose values are read by COPY TO, and insert privilege on the table into which values are inserted by COPY FROM. It is sufficient to have column privileges on the column(s) listed in the command. If row-level security is enabled for the table, the relevant SELECT policies will apply to COPY `table TO` statements. Currently, COPY FROM is not supported for tables with row-level security. Use equivalent INSERT statements instead. ​ Files named in a COPY command are read or written directly by the server, not by the client application. Therefore, they must reside on or be accessible to the database server machine, not the client. They must be accessible to and readable or writable by the IvorySQL user (the user ID the server runs as), not the client. Similarly, the command specified with PROGRAM is executed directly by the server, not by the client application, must be executable by the IvorySQL user. COPY naming a file or command is only allowed to database superusers or users who are granted one of the roles pg_read_server_files, pg_write_server_files, or pg_execute_server_program, since it allows reading or writing any file or running a program that the server has privileges to access. ​ Do not confuse COPY with the psql instruction \\copy. \\copy invokes COPY FROM STDIN or COPY TO STDOUT, and then fetches/stores the data in a file accessible to the psql client. Thus, file accessibility and access rights depend on the client rather than the server when \\copy is used. It is recommended that the file name used in COPY always be specified as an absolute path. This is enforced by the server in the case of COPY TO, but for COPY FROM you do have the option of reading from a file specified by a relative path. The path will be interpreted relative to the working directory of the server process (normally the cluster’s data directory), not the client’s working directory. Executing a command with PROGRAM might be restricted by the operating system’s access control mechanisms, such as SELinux. COPY FROM will invoke any triggers and check constraints on the destination table. However, it will not invoke rules. For identity columns, the COPY FROM command will always write the column values provided in the input data, like the INSERT option OVERRIDING SYSTEM VALUE. COPY input and output is affected by DateStyle. To ensure portability to other IvorySQL installations that might use non-default DateStyle settings, DateStyle should be set to ISO before using COPY TO. It is also a good idea to avoid dumping data with IntervalStyle set to sql_standard, because negative interval values might be misinterpreted by a server that has a different setting for IntervalStyle. Input data is interpreted according to ENCODING option or the current client encoding, and output data is encoded in ENCODING or the current client encoding, even if the data does not pass through the client but is read from or written to a file directly by the server. COPY stops operation at the first error. This should not lead to problems in the event of a COPY TO, but the target table will already have received earlier rows in a COPY FROM. These rows will not be visible or accessible, but they still occupy disk space. This might amount to a considerable amount of wasted disk space if the failure happened well into a large copy operation. You might wish to invoke VACUUM to recover the wasted space. FORCE_NULL and FORCE_NOT_NULL can be used simultaneously on the same column. This results in converting quoted null strings to null values and unquoted null strings to empty strings. When the text format is used, the data read or written is a text file with one line per table row. Columns in a row are separated by the delimiter character. The column values themselves are strings generated by the output function, or acceptable to the input function, of each attribute’s data type. The specified null string is used in place of columns that are null. COPY FROM will raise an error if any line of the input file contains more or fewer columns than are expected. End of data can be represented by a single line containing just backslash-period (\\.). An end-of-data marker is not necessary when reading from a file, since the end of file serves perfectly well; it is needed only when copying data to or from client applications using pre-3.0 client protocol. Backslash characters (\\) can be used in the COPY data to quote data characters that might otherwise be taken as row or column delimiters. In particular, the following characters must be preceded by a backslash if they appear as part of a column value: backslash itself, newline, carriage return, and the current delimiter character. The specified null string is sent by COPY TO without adding any backslashes; conversely, COPY FROM matches the input against the null string before removing backslashes. Therefore, a null string such as \\N cannot be confused with the actual data value \\N (which would be represented as \\\\N). The following special backslash sequences are recognized by COPY FROM: Sequence Represents \\b Backspace (ASCII 8) \\f Form feed (ASCII 12) \\n Newline (ASCII 10) \\r Carriage return (ASCII 13) \\t Tab (ASCII 9) \\v Vertical tab (ASCII 11) \\digits Backslash followed by one to three octal digits specifies the byte with that numeric code \\xdigits Backslash x followed by one or two hex digits specifies the byte with that numeric code Presently, COPY TO will never emit an octal or hex-digits backslash sequence, but it does use the other sequences listed above for those control characters. Any other backslashed character that is not mentioned in the above table will be taken to represent itself. However, beware of adding backslashes unnecessarily, since that might accidentally produce a string matching the end-of-data marker (\\.) or the null string (\\N by default). These strings will be recognized before any other backslash processing is done. It is strongly recommended that applications generating COPY data convert data newlines and carriage returns to the \\n and \\r sequences respectively. At present it is possible to represent a data carriage return by a backslash and carriage return, and to represent a data newline by a backslash and newline. However, these representations might not be accepted in future releases. They are also highly vulnerable to corruption if the COPY file is transferred across different machines (for example, from Unix to Windows or vice versa). All backslash sequences are interpreted after encoding conversion. The bytes specified with the octal and hex-digit backslash sequences must form valid characters in the database encoding. COPY TO will terminate each row with a Unix-style newline (“\\n”). Servers running on Microsoft Windows instead output carriage return/newline (“\\r\\n”), but only for COPY to a server file; for consistency across platforms, COPY TO STDOUT always sends “\\n” regardless of server platform. COPY FROM can handle lines ending with newlines, carriage returns, or carriage return/newlines. To reduce the risk of error due to un-backslashed newlines or carriage returns that were meant as data, COPY FROM will complain if the line endings in the input are not all alike. This format option is used for importing and exporting the Comma Separated Value (CSV) file format used by many other programs, such as spreadsheets. Instead of the escaping rules used by IvorySQL’s standard text format, it produces and recognizes the common CSV escaping mechanism. The values in each record are separated by the DELIMITER character. If the value contains the delimiter character, the QUOTE character, the NULL string, a carriage return, or line feed character, then the whole value is prefixed and suffixed by the QUOTE character, and any occurrence within the value of a QUOTE character or the ESCAPE character is preceded by the escape character. You can also use FORCE_QUOTE to force quotes when outputting non-NULL values in specific columns. The CSV format has no standard way to distinguish a NULL value from an empty string. IvorySQL’s COPY handles this by quoting. A NULL is output as the NULL parameter string and is not quoted, while a non-NULL value matching the NULL parameter string is quoted. For example, with the default settings, a NULL is written as an unquoted empty string, while an empty string data value is written with double quotes (\"\"). Reading values follows similar rules. You can use FORCE_NOT_NULL to prevent NULL input comparisons for specific columns. You can also use FORCE_NULL to convert quoted null string data values to NULL. Because backslash is not a special character in the CSV format, \\., the end-of-data marker, could also appear as a data value. To avoid any misinterpretation, a \\. data value appearing as a lone entry on a line is automatically quoted on output, and on input, if quoted, is not interpreted as the end-of-data marker. If you are loading a file created by another application that has a single unquoted column and might have a value of \\., you might need to quote that value in the input file. Note CSV format, all characters are significant. A quoted value surrounded by white space, or any characters other than DELIMITER, will include those characters. This can cause errors if you import data from a system that pads CSV lines with white space out to some fixed width. If such a situation arises you might need to preprocess the CSV file to remove the trailing white space, before importing the data into IvorySQL. Note CSV format will both recognize and produce CSV files with quoted values containing embedded carriage returns and line feeds. Thus the files are not strictly one line per table row like text-format files. Note Many programs produce strange and occasionally perverse CSV files, so the file format is more a convention than a standard. Thus you might encounter some files that cannot be imported using this mechanism, and COPY might produce files that other programs cannot process. The binary format option causes all data to be stored/read as binary format rather than as text. It is somewhat faster than the text and CSV formats, but a binary-format file is less portable across machine architectures and IvorySQL versions. Also, the binary format is very data type specific; for example it will not work to output binary data from a smallint column and read it into an integer column, even though that would work fine in text format. The binary file format consists of a file header, zero or more tuples containing the row data, and a file trailer. Headers and data are in network byte order. File Header The file header consists of 15 bytes of fixed fields, followed by a variable-length header extension area. The fixed fields are: Signature 11-byte sequence PGCOPY\\n\\377\\r\\n\\0 — note that the zero byte is a required part of the signature. (The signature is designed to allow easy identification of files that have been munged by a non-8-bit-clean transfer. This signature will be changed by end-of-line-translation filters, dropped zero bytes, dropped high bits, or parity changes.) Flags field 32-bit integer bit mask to denote important aspects of the file format. Bits are numbered from 0 (LSB) to 31 (MSB). Note that this field is stored in network byte order (most significant byte first), as are all the integer fields used in the file format. Bits 16–31 are reserved to denote critical file format issues; a reader should abort if it finds an unexpected bit set in this range. Bits 0–15 are reserved to signal backwards-compatible format issues; a reader should simply ignore any unexpected bits set in this range. Currently only one flag bit is defined, and the rest must be zero: Bit 16 If 1, OIDs are included in the data; if 0, not. Oid system columns are not supported in IvorySQL anymore, but the format still contains the indicator. Header extension area length 32-bit integer, length in bytes of remainder of header, not including self. Currently, this is zero, and the first tuple follows immediately. Future changes to the format might allow additional data to be present in the header. A reader should silently skip over any header extension data it does not know what to do with. ​The header extension area is envisioned to contain a sequence of self-identifying chunks. The flags field is not intended to tell readers what is in the extension area. Specific design of header extension contents is left for a later release. This design allows for both backwards-compatible header additions (add header extension chunks, or set low-order flag bits) and non-backwards-compatible changes (set high-order flag bits to signal such changes, and add supporting data to the extension area if needed). Tuples Each tuple begins with a 16-bit integer count of the number of fields in the tuple. (Presently, all tuples in a table will have the same count, but that might not always be true.) Then, repeated for each field in the tuple, there is a 32-bit length word followed by that many bytes of field data. (The length word does not include itself, and can be zero.) As a special case, -1 indicates a NULL field value. No value bytes follow in the NULL case. ​ There is no alignment padding or any other extra data between fields. Presently, all data values in a binary-format file are assumed to be in binary format (format code one). It is anticipated that a future extension might add a header field that allows per-column format codes to be specified. To determine the appropriate binary format for the actual tuple data you should consult the PostgreSQL source, in particular the *send and *recv functions for each column’s data type (typically these functions are found in the src/backend/utils/adt/ directory of the source distribution). If OIDs are included in the file, the OID field immediately follows the field-count word. It is a normal field except that it’s not included in the field-count. Note that oid system columns are not supported in current versions of IvorySQL. The file trailer consists of a 16-bit integer word containing -1. This is easily distinguished from a tuple’s field-count word. ​A reader should report an error if a field-count word is neither -1 nor the expected number of columns. This provides an extra check against somehow getting out of sync with the data. The following example copies a table to the client using the vertical bar (|) as the field delimiter: COPY country TO STDOUT (DELIMITER '|'); ​ To copy data from a file into the country table: COPY country TO STDOUT (DELIMITER '|'); To copy into a file just the countries whose names start with 'A': COPY (SELECT * FROM country WHERE country_name LIKE 'A%') TO '/usr1/proj/bray/sql/a_list_countries.copy'; ​ To copy into a compressed file, you can pipe the output through an external compression program: COPY country TO PROGRAM 'gzip > /usr1/proj/bray/sql/country_data.gz'; ​ Here is a sample of data suitable for copying into a table from STDIN: AF AFGHANISTAN AL ALBANIA DZ ALGERIA ZM ZAMBIA ZW ZIMBABWE Note that the white space on each line is actually a tab character. ​ The following is the same data, output in binary format. The data is shown after filtering through the Unix utility od -c. The table has three columns; the first has type char(2), the second has type text, and the third has type integer. All the rows have a null value in the third column. 0000000 P G C O P Y \\n 377 \\r \\n \\0 \\0 \\0 \\0 \\0 \\0 0000020 \\0 \\0 \\0 \\0 003 \\0 \\0 \\0 002 A F \\0 \\0 \\0 013 A 0000040 F G H A N I S T A N 377 377 377 377 \\0 003 0000060 \\0 \\0 \\0 002 A L \\0 \\0 \\0 007 A L B A N I 0000100 A 377 377 377 377 \\0 003 \\0 \\0 \\0 002 D Z \\0 \\0 \\0 0000120 007 A L G E R I A 377 377 377 377 \\0 003 \\0 \\0 0000140 \\0 002 Z M \\0 \\0 \\0 006 Z A M B I A 377 377 0000160 377 377 \\0 003 \\0 \\0 \\0 002 Z W \\0 \\0 \\0 \\b Z I 0000200 M B A B W E 377 377 377 377 377 377 The remaining details can see doc. Query performance can be affected by a variety of factors. Some of these factors can be controlled by the user, while others are fundamentals of the system’s lower-level design. IvorySQL devises a query plan for each query it receives. Choosing the right plan to match the query structure and the properties of the data is absolutely critical for good performance, so the system includes a complex planner that tries to choose good plans. You can use the EXPLAIN command to see what query plan the planner creates for any query. Plan-reading is an art that requires some experience to master, but this section attempts to cover the basics. ​ The examples use `EXPLAIN’s default “text” output format, which is compact and convenient for humans to read. If you want to feed `EXPLAIN’s output to a program for further analysis, you should use one of its machine-readable output formats (XML, JSON, or YAML) instead. The structure of a query plan is a tree of plan nodes. Nodes at the bottom level of the tree are scan nodes: they return raw rows from a table. There are different types of scan nodes for different table access methods: sequential scans, index scans, and bitmap index scans. There are also non-table row sources, such as VALUES clauses and set-returning functions in FROM, which have their own scan node types. If the query requires joining, aggregation, sorting, or other operations on the raw rows, then there will be additional nodes above the scan nodes to perform these operations. Again, there is usually more than one possible way to do these operations, so different node types can appear here too. The output of EXPLAIN has one line for each node in the plan tree, showing the basic node type plus the cost estimates that the planner made for the execution of that plan node. Additional lines might appear, indented from the node’s summary line, to show additional properties of the node. The very first line (the summary line for the topmost node) has the estimated total execution cost for the plan; it is this number that the planner seeks to minimize. Here is a trivial example, just to show what the output looks like: EXPLAIN SELECT * FROM tenk1; QUERY PLAN ------------------------------------------------------------- Seq Scan on tenk1 (cost=0.00..458.00 rows=10000 width=244) Since this query has no WHERE clause, it must scan all the rows of the table, so the planner has chosen to use a simple sequential scan plan. The numbers that are quoted in parentheses are (left to right): Estimated start-up cost. This is the time expended before the output phase can begin, e.g., time to do the sorting in a sort node. Estimated total cost. This is stated on the assumption that the plan node is run to completion, i.e., all available rows are retrieved. In practice a node’s parent node might stop short of reading all available rows (see the LIMIT example below). Estimated number of rows output by this plan node. Again, the node is assumed to be run to completion. Estimated average width of rows output by this plan node (in bytes). ​ The costs are measured in arbitrary units determined by the planner’s cost parameters .Traditional practice is to measure the costs in units of disk page fetches; that is, seq_page_cost is conventionally set to 1.0 and the other cost parameters are set relative to that. The examples in this section are run with the default cost parameters. ​ It’s important to understand that the cost of an upper-level node includes the cost of all its child nodes. It’s also important to realize that the cost only reflects things that the planner cares about. In particular, the cost does not consider the time spent transmitting result rows to the client, which could be an important factor in the real elapsed time; but the planner ignores it because it cannot change it by altering the plan. (Every correct plan will output the same row set, we trust.) The rows value is a little tricky because it is not the number of rows processed or scanned by the plan node, but rather the number emitted by the node. This is often less than the number scanned, as a result of filtering by any WHERE-clause conditions that are being applied at the node. Ideally the top-level rows estimate will approximate the number of rows actually returned, updated, or deleted by the query. Returning to our example: EXPLAIN SELECT * FROM tenk1; QUERY PLAN ------------------------------------------------------------- Seq Scan on tenk1 (cost=0.00..458.00 rows=10000 width=244) ​ These numbers are derived very straightforwardly. If you do: SELECT relpages, reltuples FROM pg_class WHERE relname = 'tenk1'; ​ you will find that tenk1 has 358 disk pages and 10000 rows. The estimated cost is computed as (disk pages read * seq_page_cost) + (rows scanned * cpu_tuple_cost). By default, seq_page_cost is 1.0 and cpu_tuple_cost is 0.01, so the estimated cost is (358 * 1.0) + (10000 * 0.01) = 458. Now let’s modify the query to add a WHERE condition: EXPLAIN SELECT * FROM tenk1 WHERE unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) Index Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) Index Cond: (unique1 Seq Scan on tenk1 (cost=0.00..445.00 rows=10000 width=244) If a part of the plan guarantees an ordering on a prefix of the required sort keys, then the planner may instead decide to use an `incremental sort` step: EXPLAIN SELECT * FROM tenk1 ORDER BY four, ten LIMIT 100; QUERY PLAN -------------------------------------------------------------------​----------------------------------- Limit (cost=521.06..538.05 rows=100 width=244) -> Incremental Sort (cost=521.06..2220.95 rows=10000 width=244) Sort Key: four, ten Presorted Key: four -> Index Scan using index_tenk1_on_four on tenk1 (cost=0.29..1510.08 rows=10000 width=244) ​ Compared to regular sorts, sorting incrementally allows returning tuples before the entire result set has been sorted, which particularly enables optimizations with LIMIT queries. It may also reduce memory usage and the likelihood of spilling sorts to disk, but it comes at the cost of the increased overhead of splitting the result set into multiple sorting batches. If there are separate indexes on several of the columns referenced in WHERE, the planner might choose to use an AND or OR combination of the indexes: EXPLAIN SELECT * FROM tenk1 WHERE unique1 9000; QUERY PLAN -------------------------------------------------------------------​------------------ Bitmap Heap Scan on tenk1 (cost=25.08..60.21 rows=10 width=244) Recheck Cond: ((unique1 9000)) -> BitmapAnd (cost=25.08..25.08 rows=10 width=0) -> Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) Index Cond: (unique1 Bitmap Index Scan on tenk1_unique2 (cost=0.00..19.78 rows=999 width=0) Index Cond: (unique2 > 9000) ​ But this requires visiting both indexes, so it’s not necessarily a win compared to using just one index and treating the other condition as a filter. If you vary the ranges involved you’ll see the plan change accordingly. Here is an example showing the effects of LIMIT: EXPLAIN SELECT * FROM tenk1 WHERE unique1 9000 LIMIT 2; QUERY PLAN -------------------------------------------------------------------​------------------ Limit (cost=0.29..14.48 rows=2 width=244) -> Index Scan using tenk1_unique2 on tenk1 (cost=0.29..71.27 rows=10 width=244) Index Cond: (unique2 > 9000) Filter: (unique1 Bitmap Heap Scan on tenk1 t1 (cost=4.36..39.47 rows=10 width=244) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..4.36 rows=10 width=0) Index Cond: (unique1 Index Scan using tenk2_unique2 on tenk2 t2 (cost=0.29..7.91 rows=1 width=244) Index Cond: (unique2 = t1.unique2) ​ In this plan, we have a nested-loop join node with two table scans as inputs, or children. The indentation of the node summary lines reflects the plan tree structure. The join’s first, or “outer”, child is a bitmap scan similar to those we saw before. Its cost and row count are the same as we’d get from SELECT …​ WHERE unique1 Bitmap Heap Scan on tenk1 t1 (cost=4.36..39.47 rows=10 width=244) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..4.36 rows=10 width=0) Index Cond: (unique1 Materialize (cost=0.29..8.51 rows=10 width=244) -> Index Scan using tenk2_unique2 on tenk2 t2 (cost=0.29..8.46 rows=10 width=244) Index Cond: (unique2 Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) -> Hash (cost=229.20..229.20 rows=101 width=244) -> Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) Index Cond: (unique1 Index Scan using tenk1_unique2 on tenk1 t1 (cost=0.29..656.28 rows=101 width=244) Filter: (unique1 Sort (cost=197.83..200.33 rows=1000 width=244) Sort Key: t2.unique2 -> Seq Scan on onek t2 (cost=0.00..148.00 rows=1000 width=244) ​ Merge join requires its input data to be sorted on the join keys. In this plan the tenk1 data is sorted by using an index scan to visit the rows in the correct order, but a sequential scan and sort is preferred for onek, because there are many more rows to be visited in that table. (Sequential-scan-and-sort frequently beats an index scan for sorting many rows, because of the nonsequential disk access required by the index scan.) One way to look at variant plans is to force the planner to disregard whatever strategy it thought was the cheapest, using the enable/disable flags .For example, if we’re unconvinced that sequential-scan-and-sort is the best way to deal with table onek in the previous example, we could try SET enable_sort = off; EXPLAIN SELECT * FROM tenk1 t1, onek t2 WHERE t1.unique1 Index Scan using tenk1_unique2 on tenk1 t1 (cost=0.29..656.28 rows=101 width=244) Filter: (unique1 Index Scan using onek_unique2 on onek t2 (cost=0.28..224.79 rows=1000 width=244) ​ which shows that the planner thinks that sorting onek by index-scanning is about 12% more expensive than sequential-scan-and-sort. Of course, the next question is whether it’s right about that. We can investigate that using EXPLAIN ANALYZE, as discussed below. It is possible to check the accuracy of the planner’s estimates by using EXPLAIN’s `ANALYZE option. With this option, EXPLAIN actually executes the query, and then displays the true row counts and true run time accumulated within each plan node, along with the same estimates that a plain EXPLAIN shows. For example, we might get a result like this: EXPLAIN ANALYZE SELECT * FROM tenk1 t1, tenk2 t2 WHERE t1.unique1 Bitmap Heap Scan on tenk1 t1 (cost=4.36..39.47 rows=10 width=244) (actual time=0.057..0.121 rows=10 loops=1) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..4.36 rows=10 width=0) (actual time=0.024..0.024 rows=10 loops=1) Index Cond: (unique1 Index Scan using tenk2_unique2 on tenk2 t2 (cost=0.29..7.91 rows=1 width=244) (actual time=0.021..0.022 rows=1 loops=10) Index Cond: (unique2 = t1.unique2) Planning time: 0.181 ms Execution time: 0.501 ms Note that the “actual time” values are in milliseconds of real time, whereas the cost estimates are expressed in arbitrary units; so they are unlikely to match up. The thing that’s usually most important to look for is whether the estimated row counts are reasonably close to reality. In this example the estimates were all dead-on, but that’s quite unusual in practice. ​ In some query plans, it is possible for a subplan node to be executed more than once. For example, the inner index scan will be executed once per outer row in the above nested-loop plan. In such cases, the loops value reports the total number of executions of the node, and the actual time and rows values shown are averages per-execution. This is done to make the numbers comparable with the way that the cost estimates are shown. Multiply by the loops value to get the total time actually spent in the node. In the above example, we spent a total of 0.220 milliseconds executing the index scans on tenk2. In some cases EXPLAIN ANALYZE shows additional execution statistics beyond the plan node execution times and row counts. For example, Sort and Hash nodes provide extra information: EXPLAIN ANALYZE SELECT * FROM tenk1 t1, tenk2 t2 WHERE t1.unique1 Hash Join (cost=230.47..713.98 rows=101 width=488) (actual time=0.711..7.427 rows=100 loops=1) Hash Cond: (t2.unique2 = t1.unique2) -> Seq Scan on tenk2 t2 (cost=0.00..445.00 rows=10000 width=244) (actual time=0.007..2.583 rows=10000 loops=1) -> Hash (cost=229.20..229.20 rows=101 width=244) (actual time=0.659..0.659 rows=100 loops=1) Buckets: 1024 Batches: 1 Memory Usage: 28kB -> Bitmap Heap Scan on tenk1 t1 (cost=5.07..229.20 rows=101 width=244) (actual time=0.080..0.526 rows=100 loops=1) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.049..0.049 rows=100 loops=1) Index Cond: (unique1 polygon '(0.5,2.0)'; QUERY PLAN -------------------------------------------------------------------​----------------------------------- Seq Scan on polygon_tbl (cost=0.00..1.05 rows=1 width=32) (actual time=0.044..0.044 rows=0 loops=1) Filter: (f1 @> '((0.5,2))'::polygon) Rows Removed by Filter: 4 Planning time: 0.040 ms Execution time: 0.083 ms The planner thinks (quite correctly) that this sample table is too small to bother with an index scan, so we have a plain sequential scan in which all the rows got rejected by the filter condition. But if we force an index scan to be used, we see: SET enable_seqscan TO off; EXPLAIN ANALYZE SELECT * FROM polygon_tbl WHERE f1 @> polygon '(0.5,2.0)'; QUERY PLAN -------------------------------------------------------------------​------------------------------------------------------- Index Scan using gpolygonind on polygon_tbl (cost=0.13..8.15 rows=1 width=32) (actual time=0.062..0.062 rows=0 loops=1) Index Cond: (f1 @> '((0.5,2))'::polygon) Rows Removed by Index Recheck: 1 Planning time: 0.034 ms Execution time: 0.144 ms ​ Here we can see that the index returned one candidate row, which was then rejected by a recheck of the index condition. This happens because a GiST index is “lossy” for polygon containment tests: it actually returns the rows with polygons that overlap the target, and then we have to do the exact containment test on those rows. EXPLAIN has a BUFFERS option that can be used with ANALYZE to get even more run time statistics: EXPLAIN (ANALYZE, BUFFERS) SELECT * FROM tenk1 WHERE unique1 9000; QUERY PLAN -------------------------------------------------------------------​-------------------------------------------------------------- Bitmap Heap Scan on tenk1 (cost=25.08..60.21 rows=10 width=244) (actual time=0.323..0.342 rows=10 loops=1) Recheck Cond: ((unique1 9000)) Buffers: shared hit=15 -> BitmapAnd (cost=25.08..25.08 rows=10 width=0) (actual time=0.309..0.309 rows=0 loops=1) Buffers: shared hit=7 -> Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.043..0.043 rows=100 loops=1) Index Cond: (unique1 Bitmap Index Scan on tenk1_unique2 (cost=0.00..19.78 rows=999 width=0) (actual time=0.227..0.227 rows=999 loops=1) Index Cond: (unique2 > 9000) Buffers: shared hit=5 Planning time: 0.088 ms Execution time: 0.423 ms ​ The numbers provided by BUFFERS help to identify which parts of the query are the most I/O-intensive. Keep in mind that because EXPLAIN ANALYZE actually runs the query, any side-effects will happen as usual, even though whatever results the query might output are discarded in favor of printing the EXPLAIN data. If you want to analyze a data-modifying query without changing your tables, you can roll the command back afterwards, for example: BEGIN; EXPLAIN ANALYZE UPDATE tenk1 SET hundred = hundred + 1 WHERE unique1 Bitmap Heap Scan on tenk1 (cost=5.07..229.46 rows=101 width=250) (actual time=0.101..0.439 rows=100 loops=1) Recheck Cond: (unique1 Bitmap Index Scan on tenk1_unique1 (cost=0.00..5.04 rows=101 width=0) (actual time=0.043..0.043 rows=100 loops=1) Index Cond: (unique1 Seq Scan on parent (cost=0.00..0.00 rows=1 width=14) Filter: (f1 = 101) -> Index Scan using child1_f1_key on child1 (cost=0.15..8.17 rows=1 width=14) Index Cond: (f1 = 101) -> Index Scan using child2_f1_key on child2 (cost=0.15..8.17 rows=1 width=14) Index Cond: (f1 = 101) -> Index Scan using child3_f1_key on child3 (cost=0.15..8.17 rows=1 width=14) Index Cond: (f1 = 101) ​ In this example the Update node needs to consider three child tables as well as the originally-mentioned parent table. So there are four input scanning subplans, one per table. For clarity, the Update node is annotated to show the specific target tables that will be updated, in the same order as the corresponding subplans. The Planning time shown by EXPLAIN ANALYZE is the time it took to generate the query plan from the parsed query and optimize it. It does not include parsing or rewriting. The Execution time shown by EXPLAIN ANALYZE includes executor start-up and shut-down time, as well as the time to run any triggers that are fired, but it does not include parsing, rewriting, or planning time. Time spent executing BEFORE triggers, if any, is included in the time for the related Insert, Update, or Delete node; but time spent executing AFTER triggers is not counted there because AFTER triggers are fired after completion of the whole plan. The total time spent in each trigger (either BEFORE or AFTER) is also shown separately. Note that deferred constraint triggers will not be executed until end of transaction and are thus not considered at all by EXPLAIN ANALYZE. There are two significant ways in which run times measured by EXPLAIN ANALYZE can deviate from normal execution of the same query. First, since no output rows are delivered to the client, network transmission costs and I/O conversion costs are not included. Second, the measurement overhead added by EXPLAIN ANALYZE can be significant, especially on machines with slow gettimeofday() operating-system calls. You can use the pg_test_timing tool to measure the overhead of timing on your system. EXPLAIN results should not be extrapolated to situations much different from the one you are actually testing; for example, results on a toy-sized table cannot be assumed to apply to large tables. The planner’s cost estimates are not linear and so it might choose a different plan for a larger or smaller table. An extreme example is that on a table that only occupies one disk page, you’ll nearly always get a sequential scan plan whether indexes are available or not. The planner realizes that it’s going to take one disk page read to process the table in any case, so there’s no value in expending additional page reads to look at an index. (We saw this happening in the polygon_tbl example above.) There are cases in which the actual and estimated values won’t match up well, but nothing is really wrong. One such case occurs when plan node execution is stopped short by a LIMIT or similar effect. For example, in the LIMIT query we used before, EXPLAIN ANALYZE SELECT * FROM tenk1 WHERE unique1 9000 LIMIT 2; QUERY PLAN -------------------------------------------------------------------​------------------------------------------------------------ Limit (cost=0.29..14.71 rows=2 width=244) (actual time=0.177..0.249 rows=2 loops=1) -> Index Scan using tenk1_unique2 on tenk1 (cost=0.29..72.42 rows=10 width=244) (actual time=0.174..0.244 rows=2 loops=1) Index Cond: (unique2 > 9000) Filter: (unique1 5\": 1.000000, \"5 => 1\": 0.423130} (1 row) ​ Here it can be seen that column 1 (zip code) fully determines column 5 (city) so the coefficient is 1.0, while city only determines zip code about 42% of the time, meaning that there are many cities (58%) that are represented by more than a single ZIP code. When computing the selectivity for a query involving functionally dependent columns, the planner adjusts the per-condition selectivity estimates using the dependency coefficients so as not to produce an underestimate. Functional dependencies are currently only applied when considering simple equality conditions that compare columns to constant values, and IN clauses with constant values. They are not used to improve estimates for equality conditions comparing two columns or comparing a column to an expression, nor for range clauses, LIKE or any other type of condition. When estimating with functional dependencies, the planner assumes that conditions on the involved columns are compatible and hence redundant. If they are incompatible, the correct estimate would be zero rows, but that possibility is not considered. For example, given a query like SELECT * FROM zipcodes WHERE city = 'San Francisco' AND zip = '94105'; ​ the planner will disregard the city clause as not changing the selectivity, which is correct. However, it will make the same assumption about SELECT * FROM zipcodes WHERE city = 'San Francisco' AND zip = '90210'; ​ even though there will really be zero rows satisfying this query. Functional dependency statistics do not provide enough information to conclude that, however. In many practical situations, this assumption is usually satisfied; for example, there might be a GUI in the application that only allows selecting compatible city and ZIP code values to use in a query. But if that’s not the case, functional dependencies may not be a viable option. Single-column statistics store the number of distinct values in each column. Estimates of the number of distinct values when combining more than one column (for example, for GROUP BY a, b) are frequently wrong when the planner only has single-column statistical data, causing it to select bad plans. To improve such estimates, ANALYZE can collect n-distinct statistics for groups of columns. As before, it’s impractical to do this for every possible column grouping, so data is collected only for those groups of columns appearing together in a statistics object defined with the ndistinct option. Data will be collected for each possible combination of two or more columns from the set of listed columns. Continuing the previous example, the n-distinct counts in a table of ZIP codes might look like the following: CREATE STATISTICS stts2 (ndistinct) ON city, state, zip FROM zipcodes; ANALYZE zipcodes; SELECT stxkeys AS k, stxdndistinct AS nd FROM pg_statistic_ext join pg_statistic_ext_data on (oid = stxoid) WHERE stxname = 'stts2'; -[ RECORD 1 ]------------------------------------------------------​-- k | 1 2 5 nd | {\"1, 2\": 33178, \"1, 5\": 33178, \"2, 5\": 27435, \"1, 2, 5\": 33178} (1 row) ​ This indicates that there are three combinations of columns that have 33178 distinct values: ZIP code and state; ZIP code and city; and ZIP code, city and state (the fact that they are all equal is expected given that ZIP code alone is unique in this table). On the other hand, the combination of city and state has only 27435 distinct values. It’s advisable to create ndistinct statistics objects only on combinations of columns that are actually used for grouping, and for which misestimation of the number of groups is resulting in bad plans. Otherwise, the ANALYZE cycles are just wasted. Another type of statistic stored for each column are most-common value lists. This allows very accurate estimates for individual columns, but may result in significant misestimates for queries with conditions on multiple columns. To improve such estimates, ANALYZE can collect MCV lists on combinations of columns. Similarly to functional dependencies and n-distinct coefficients, it’s impractical to do this for every possible column grouping. Even more so in this case, as the MCV list (unlike functional dependencies and n-distinct coefficients) does store the common column values. So data is collected only for those groups of columns appearing together in a statistics object defined with the mcv option. Continuing the previous example, the MCV list for a table of ZIP codes might look like the following (unlike for simpler types of statistics, a function is required for inspection of MCV contents): CREATE STATISTICS stts3 (mcv) ON city, state FROM zipcodes; ANALYZE zipcodes; SELECT m.* FROM pg_statistic_ext join pg_statistic_ext_data on (oid = stxoid), pg_mcv_list_items(stxdmcv) m WHERE stxname = 'stts3'; index | values | nulls | frequency | base_frequency -------+------------------------+-------+-----------+---------------- 0 | {Washington, DC} | {f,f} | 0.003467 | 2.7e-05 1 | {Apo, AE} | {f,f} | 0.003067 | 1.9e-05 2 | {Houston, TX} | {f,f} | 0.002167 | 0.000133 3 | {El Paso, TX} | {f,f} | 0.002 | 0.000113 4 | {New York, NY} | {f,f} | 0.001967 | 0.000114 5 | {Atlanta, GA} | {f,f} | 0.001633 | 3.3e-05 6 | {Sacramento, CA} | {f,f} | 0.001433 | 7.8e-05 7 | {Miami, FL} | {f,f} | 0.0014 | 6e-05 8 | {Dallas, TX} | {f,f} | 0.001367 | 8.8e-05 9 | {Chicago, IL} | {f,f} | 0.001333 | 5.1e-05 ... (99 rows) ​ This indicates that the most common combination of city and state is Washington in DC, with actual frequency (in the sample) about 0.35%. The base frequency of the combination (as computed from the simple per-column frequencies) is only 0.0027%, resulting in two orders of magnitude under-estimates. It’s advisable to create MCV statistics objects only on combinations of columns that are actually used in conditions together, and for which misestimation of the number of groups is resulting in bad plans. Otherwise, the ANALYZE and planning cycles are just wasted. It is possible to control the query planner to some extent by using the explicit JOIN syntax. To see why this matters, we first need some background. In a simple join query, such as: SELECT * FROM a, b, c WHERE a.id = b.id AND b.ref = c.id; ​ the planner is free to join the given tables in any order. For example, it could generate a query plan that joins A to B, using the WHERE condition a.id = b.id, and then joins C to this joined table, using the other WHERE condition. Or it could join B to C and then join A to that result. Or it could join A to C and then join them with B — but that would be inefficient, since the full Cartesian product of A and C would have to be formed, there being no applicable condition in the WHERE clause to allow optimization of the join. (All joins in the IvorySQL executor happen between two input tables, so it’s necessary to build up the result in one or another of these fashions.) The important point is that these different join possibilities give semantically equivalent results but might have hugely different execution costs. Therefore, the planner will explore all of them to try to find the most efficient query plan. When a query only involves two or three tables, there aren’t many join orders to worry about. But the number of possible join orders grows exponentially as the number of tables expands. Beyond ten or so input tables it’s no longer practical to do an exhaustive search of all the possibilities, and even for six or seven tables planning might take an annoyingly long time. When there are too many input tables, the IvorySQL planner will switch from exhaustive search to a genetic probabilistic search through a limited number of possibilities. (The switch-over threshold is set by the geqo_threshold run-time parameter.) The genetic search takes less time, but it won’t necessarily find the best possible plan. When the query involves outer joins, the planner has less freedom than it does for plain (inner) joins. For example, consider: SELECT * FROM a LEFT JOIN (b JOIN c ON (b.ref = c.id)) ON (a.id = b.id); ​ Although this query’s restrictions are superficially similar to the previous example, the semantics are different because a row must be emitted for each row of A that has no matching row in the join of B and C. Therefore the planner has no choice of join order here: it must join B to C and then join A to that result. Accordingly, this query takes less time to plan than the previous query. In other cases, the planner might be able to determine that more than one join order is safe. For example, given: SELECT * FROM a LEFT JOIN b ON (a.bid = b.id) LEFT JOIN c ON (a.cid = c.id); it is valid to join A to either B or C first. Currently, only FULL JOIN completely constrains the join order. Most practical cases involving LEFT JOIN or RIGHT JOIN can be rearranged to some extent. Explicit inner join syntax (INNER JOIN, CROSS JOIN, or unadorned JOIN) is semantically the same as listing the input relations in FROM, so it does not constrain the join order. Even though most kinds of JOIN don’t completely constrain the join order, it is possible to instruct the IvorySQL query planner to treat all JOIN clauses as constraining the join order anyway. For example, these three queries are logically equivalent: SELECT * FROM a, b, c WHERE a.id = b.id AND b.ref = c.id; SELECT * FROM a CROSS JOIN b CROSS JOIN c WHERE a.id = b.id AND b.ref = c.id; SELECT * FROM a JOIN (b JOIN c ON (b.ref = c.id)) ON (a.id = b.id); ​ But if we tell the planner to honor the JOIN order, the second and third take less time to plan than the first. This effect is not worth worrying about for only three tables, but it can be a lifesaver with many tables. To force the planner to follow the join order laid out by explicit `JOIN`s, set the join_collapse_limit run-time parameter to 1. (Other possible values are discussed below.) You do not need to constrain the join order completely in order to cut search time, because it’s OK to use JOIN operators within items of a plain FROM list. For example, consider: SELECT * FROM a CROSS JOIN b, c, d, e WHERE ...; ​ With join_collapse_limit = 1, this forces the planner to join A to B before joining them to other tables, but doesn’t constrain its choices otherwise. In this example, the number of possible join orders is reduced by a factor of 5. Constraining the planner’s search in this way is a useful technique both for reducing planning time and for directing the planner to a good query plan. If the planner chooses a bad join order by default, you can force it to choose a better order via JOIN syntax — assuming that you know of a better order, that is. Experimentation is recommended. A closely related issue that affects planning time is collapsing of subqueries into their parent query. For example, consider: SELECT * FROM x, y, (SELECT * FROM a, b, c WHERE something) AS ss WHERE somethingelse; This situation might arise from use of a view that contains a join; the view’s SELECT rule will be inserted in place of the view reference, yielding a query much like the above. Normally, the planner will try to collapse the subquery into the parent, yielding: SELECT * FROM x, y, a, b, c WHERE something AND somethingelse; ​ This usually results in a better plan than planning the subquery separately. (For example, the outer WHERE conditions might be such that joining X to A first eliminates many rows of A, thus avoiding the need to form the full logical output of the subquery.) But at the same time, we have increased the planning time; here, we have a five-way join problem replacing two separate three-way join problems. Because of the exponential growth of the number of possibilities, this makes a big difference. The planner tries to avoid getting stuck in huge join search problems by not collapsing a subquery if more than from_collapse_limit FROM items would result in the parent query. You can trade off planning time against quality of plan by adjusting this run-time parameter up or down. from_collapse_limit and join_collapse_limit are similarly named because they do almost the same thing: one controls when the planner will “flatten out” subqueries, and the other controls when it will flatten out explicit joins. Typically you would either set join_collapse_limit equal to from_collapse_limit (so that explicit joins and subqueries act similarly) or set join_collapse_limit to 1 (if you want to control join order with explicit joins). But you might set them differently if you are trying to fine-tune the trade-off between planning time and run time. One might need to insert a large amount of data when first populating a database. This section contains some suggestions on how to make this process as efficient as possible. When using multiple INSERT`s, turn off autocommit and just do one commit at the end. (In plain SQL, this means issuing `BEGIN at the start and COMMIT at the end. Some client libraries might do this behind your back, in which case you need to make sure the library does it when you want it done.) If you allow each insertion to be committed separately, IvorySQL is doing a lot of work for each row that is added. An additional benefit of doing all insertions in one transaction is that if the insertion of one row were to fail then the insertion of all rows inserted up to that point would be rolled back, so you won’t be stuck with partially loaded data. Use COPY to load all the rows in one command, instead of using a series of INSERT commands. The COPY command is optimized for loading large numbers of rows; it is less flexible than INSERT, but incurs significantly less overhead for large data loads. Since COPY is a single command, there is no need to disable autocommit if you use this method to populate a table. If you cannot use COPY, it might help to use PREPARE to create a prepared INSERT statement, and then use EXECUTE as many times as required. This avoids some of the overhead of repeatedly parsing and planning INSERT. Different interfaces provide this facility in different ways; look for “prepared statements” in the interface documentation. Note that loading a large number of rows using COPY is almost always faster than using INSERT, even if PREPARE is used and multiple insertions are batched into a single transaction. COPY is fastest when used within the same transaction as an earlier CREATE TABLE or TRUNCATE command. In such cases no WAL needs to be written, because in case of an error, the files containing the newly loaded data will be removed anyway. However, this consideration only applies when wal_level is minimal as all commands must write WAL otherwise. If you are loading a freshly created table, the fastest method is to create the table, bulk load the table’s data using COPY, then create any indexes needed for the table. Creating an index on pre-existing data is quicker than updating it incrementally as each row is loaded. If you are adding large amounts of data to an existing table, it might be a win to drop the indexes, load the table, and then recreate the indexes. Of course, the database performance for other users might suffer during the time the indexes are missing. One should also think twice before dropping a unique index, since the error checking afforded by the unique constraint will be lost while the index is missing. Just as with indexes, a foreign key constraint can be checked “in bulk” more efficiently than row-by-row. So it might be useful to drop foreign key constraints, load data, and re-create the constraints. Again, there is a trade-off between data load speed and loss of error checking while the constraint is missing. What’s more, when you load data into a table with existing foreign key constraints, each new row requires an entry in the server’s list of pending trigger events (since it is the firing of a trigger that checks the row’s foreign key constraint). Loading many millions of rows can cause the trigger event queue to overflow available memory, leading to intolerable swapping or even outright failure of the command. Therefore it may be necessary, not just desirable, to drop and re-apply foreign keys when loading large amounts of data. If temporarily removing the constraint isn’t accept. Temporarily increasing the maintenance_work_mem configuration variable when loading large amounts of data can lead to improved performance. This will help to speed up CREATE INDEX commands and ALTER TABLE ADD FOREIGN KEY commands. It won’t do much for COPY itself, so this advice is only useful when you are using one or both of the above techniques. Temporarily increasing the max_wal_size configuration variable can also make large data loads faster. This is because loading a large amount of data into IvorySQL will cause checkpoints to occur more often than the normal checkpoint frequency (specified by the checkpoint_timeout configuration variable). Whenever a checkpoint occurs, all dirty pages must be flushed to disk. By increasing max_wal_size temporarily during bulk data loads, the number of checkpoints that are required can be reduced. When loading large amounts of data into an installation that uses WAL archiving or streaming replication, it might be faster to take a new base backup after the load has completed than to process a large amount of incremental WAL data. To prevent incremental WAL logging while loading, disable archiving and streaming replication, by setting wal_level to minimal, archive_mode to off, and max_wal_senders to zero. But note that changing these settings requires a server restart, and makes any base backups taken before unavailable for archive recovery and standby server, which may lead to data loss. Aside from avoiding the time for the archiver or WAL sender to process the WAL data, doing this will actually make certain commands faster, because they do not to write WAL at all if wal_level is minimal and the current subtransaction (or top-level transaction) created or truncated the table or index they change. (They can guarantee crash safety more cheaply by doing an fsync at the end than by writing WAL.) Whenever you have significantly altered the distribution of data within a table, running ANALYZE is strongly recommended. This includes bulk loading large amounts of data into the table. Running ANALYZE (or VACUUM ANALYZE) ensures that the planner has up-to-date statistics about the table. With no statistics or obsolete statistics, the planner might make poor decisions during query planning, leading to poor performance on any tables with inaccurate or nonexistent statistics. Note that if the autovacuum daemon is enabled, it might run ANALYZE automatically. Dump scripts generated by pg_dump automatically apply several, but not all, of the above guidelines. To restore a pg_dump dump as quickly as possible, you need to do a few extra things manually. (Note that these points apply while restoring a dump, not while creating it. The same points apply whether loading a text dump with psql or using pg_restore to load from a pg_dump archive file.) By default, pg_dump uses COPY, and when it is generating a complete schema-and-data dump, it is careful to load data before creating indexes and foreign keys. So in this case several guidelines are handled automatically. What is left for you to do is to: Set appropriate (i.e., larger than normal) values for maintenance_work_mem and max_wal_size. If using WAL archiving or streaming replication, consider disabling them during the restore. To do that, set archive_mode to off, wal_level to minimal, and max_wal_senders to zero before loading the dump. Afterwards, set them back to the right values and take a fresh base backup. Experiment with the parallel dump and restore modes of both pg_dump and pg_restore and find the optimal number of concurrent jobs to use. Dumping and restoring in parallel by means of the -j option should give you a significantly higher performance over the serial mode. Consider whether the whole dump should be restored as a single transaction. To do that, pass the -1 or --single-transaction command-line option to psql or pg_restore. When using this mode, even the smallest of errors will rollback the entire restore, possibly discarding many hours of processing. Depending on how interrelated the data is, that might seem preferable to manual cleanup, or not. COPY commands will run fastest if you use a single transaction and have WAL archiving turned off. If multiple CPUs are available in the database server, consider using pg_restore’s --jobs option. This allows concurrent data loading and index creation. Run ANALYZE afterwards. Durability is a database feature that guarantees the recording of committed transactions even if the server crashes or loses power. However, durability adds significant database overhead, so if your site does not require such a guarantee, IvorySQL can be configured to run much faster. The following are configuration changes you can make to improve performance in such cases. Except as noted below, durability is still guaranteed in case of a crash of the database software; only an abrupt operating system crash creates a risk of data loss or corruption when these settings are used. Place the database cluster’s data directory in a memory-backed file system (i.e., RAM disk). This eliminates all database disk I/O, but limits data storage to the amount of available memory (and perhaps swap). Turn off fsync; there is no need to flush data to disk. Turn off synchronous_commit; there might be no need to force WAL writes to disk on every commit. This setting does risk transaction loss (though not data corruption) in case of a crash of the database. Turn off full_page_writes; there is no need to guard against partial page writes. Increase max_wal_size and checkpoint_timeout; this reduces the frequency of checkpoints, but increases the storage requirements of /pg_wal. Create unlogged tables to avoid WAL writes, though it makes the tables non-crash-safe.","title":"Operation and maintenance management guide","component":"ivorysql-doc","version":"v4.2","name":"9","url":"/ivorysql-doc/v4.2/v4.2/9.html","titles":[{"text":"1. Upgrade IvorySQL version","hash":"upgrade-ivorysql-version","id":1},{"text":"1.1. Overview of upgrade scheme","hash":"overview-of-upgrade-scheme","id":2},{"text":"1.2. Upgrade data via pg_dumpall","hash":"upgrade-data-via-pg_dumpall","id":3},{"text":"1.3. Upgrade with the pg_upgrade utility","hash":"upgrade-with-the-pg_upgrade-utility","id":4},{"text":"1.4. Upgrade data by copying","hash":"upgrade-data-by-copying","id":5},{"text":"2. Managing IvorySQL Versions","hash":"managing-ivorysql-versions","id":6},{"text":"3. Managing IvorySQL database access","hash":"managing-ivorysql-database-access","id":7},{"text":"4. Defining Data Objects","hash":"defining-data-objects","id":8},{"text":"4.1. VARCHAR2","hash":"varchar2","id":9},{"text":"4.1.1. Overview","hash":"overview","id":10},{"text":"4.1.2. Grammar","hash":"grammar","id":11},{"text":"4.1.3. Use Cases","hash":"use-cases","id":12},{"text":"5. Search Data","hash":"search-data","id":13},{"text":"6. Use of foreign data","hash":"use-of-foreign-data","id":14},{"text":"7. Backup and Restore","hash":"backup-and-restore","id":15},{"text":"7.1. SQL Dump","hash":"sql-dump","id":16},{"text":"7.1.1. Restoring the Dump","hash":"restoring-the-dump","id":17},{"text":"7.1.2. Using pg_dumpall","hash":"using-pg_dumpall","id":18},{"text":"7.1.3. Handling Large Databases","hash":"handling-large-databases","id":19},{"text":"7.2. File System Level Backup","hash":"file-system-level-backup","id":20},{"text":"7.3. Continuous Archiving and Point-in-Time Recovery (PITR)","hash":"continuous-archiving-and-point-in-time-recovery-pitr","id":21},{"text":"8. Loading and unloading data","hash":"loading-and-unloading-data","id":22},{"text":"8.1. Synopsis","hash":"synopsis","id":23},{"text":"8.2. Outputs","hash":"outputs","id":24},{"text":"8.3. Notes","hash":"notes","id":25},{"text":"8.4. File Formats","hash":"file-formats","id":26},{"text":"8.4.1. Text Format","hash":"text-format","id":27},{"text":"8.4.2. CSV Format","hash":"csv-format","id":28},{"text":"8.4.3. Binary Format","hash":"binary-format","id":29},{"text":"8.4.4. File Trailer","hash":"file-trailer","id":30},{"text":"8.5. Examples","hash":"examples","id":31},{"text":"9. Performance Tips","hash":"performance-tips","id":32},{"text":"9.1. Using EXPLAIN","hash":"using-explain","id":33},{"text":"9.1.1. EXPLAIN Basics","hash":"explain-basics","id":34},{"text":"9.1.2. EXPLAIN ANALYZE","hash":"explain-analyze","id":35},{"text":"9.1.3. Caveats","hash":"caveats","id":36},{"text":"9.2. Statistics Used by the Planner","hash":"statistics-used-by-the-planner","id":37},{"text":"9.2.1. Single-Column Statistics","hash":"single-column-statistics","id":38},{"text":"9.2.2. Extended Statistics","hash":"extended-statistics","id":39},{"text":"9.2.2.1. Functional Dependencies","hash":"functional-dependencies","id":40},{"text":"9.2.2.1.1. Limitations of Functional Dependencies","hash":"limitations-of-functional-dependencies","id":41},{"text":"9.2.2.2. Multivariate N-Distinct Counts","hash":"multivariate-n-distinct-counts","id":42},{"text":"9.2.2.3. Multivariate MCV Lists","hash":"multivariate-mcv-lists","id":43},{"text":"9.3. Controlling the Planner with Explicit JOIN Clauses","hash":"controlling-the-planner-with-explicit-join-clauses","id":44},{"text":"9.4. Populating a Database","hash":"populating-a-database","id":45},{"text":"9.4.1. Disable Autocommit","hash":"disable-autocommit","id":46},{"text":"9.4.2. Use COPY","hash":"use-copy","id":47},{"text":"9.4.3. Remove Indexes","hash":"remove-indexes","id":48},{"text":"9.4.4. Remove Foreign Key Constraints","hash":"remove-foreign-key-constraints","id":49},{"text":"9.4.5. Increase maintenance_work_mem","hash":"increase-maintenance_work_mem","id":50},{"text":"9.4.6. Increase max_wal_size","hash":"increase-max_wal_size","id":51},{"text":"9.4.7. Disable WAL Archival and Streaming Replication","hash":"disable-wal-archival-and-streaming-replication","id":52},{"text":"9.4.8. Run ANALYZE Afterwards","hash":"run-analyze-afterwards","id":53},{"text":"9.4.9. Some Notes about pg_dump","hash":"some-notes-about-pg_dump","id":54},{"text":"9.5. Non-Durable Settings","hash":"non-durable-settings","id":55}]},"29":{"id":29,"text":"IvorySQL is the only Oracle compatible open source PostgreSQL. Get started by downloading the code from Github. Go to IvorySQL Release Page. IvorySQL project is an open source project proposed by Highgo Software to add the Oracle compatibility features into the popular PostgreSQL database. It is Apache licensed Open Source and always free to use. Any comments please contact support@ivorysql.org IvorySQL v4.2 pdf documentation","title":"Welcome to IvorySQL","component":"ivorysql-doc","version":"v4.2","name":"welcome","url":"/ivorysql-doc/v4.2/v4.2/welcome.html","titles":[{"text":"Getting Started","hash":"getting-started","id":1},{"text":"Releases","hash":"releases","id":2},{"text":"About IvorySQL","hash":"about-ivorysql","id":3},{"text":"Docs Download","hash":"docs-download","id":4}]}},"components":{},"componentVersions":{"ivorysql-doc/v4.2":{"displayVersion":"v4.2","title":"IvorySQL","version":"v4.2","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v4.2/v4.2/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v4.2/v4.2/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v4.2/v4.2/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v4.2/v4.2/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v4.2/v4.2/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v4.2/v4.2/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v4.2/v4.2/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v4.2/v4.2/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v4.2/v4.2/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v4.2/v4.2/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v4.2/v4.2/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v4.2/v4.2/10.html","urlType":"internal"}]},{"content":"IvorySQL Ecosystem","items":[{"content":"PostGIS","url":"/ivorysql-doc/v4.2/v4.2/11.html","urlType":"internal"},{"content":"pgvector","url":"/ivorysql-doc/v4.2/v4.2/12.html","urlType":"internal"}]},{"content":"List of Oracle compatible features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v4.2/v4.2/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v4.2/v4.2/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v4.2/v4.2/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v4.2/v4.2/17.html","urlType":"internal"},{"content":"5、Compatible with Oracle like","url":"/ivorysql-doc/v4.2/v4.2/18.html","urlType":"internal"},{"content":"6、Compatible with Oracle anonymous block","url":"/ivorysql-doc/v4.2/v4.2/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v4.2/v4.2/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v4.2/v4.2/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v4.2/v4.2/22.html","urlType":"internal"},{"content":"10、XML Function","url":"/ivorysql-doc/v4.2/v4.2/26.html","urlType":"internal"},{"content":"11、Compatible with Oracle sequence","url":"/ivorysql-doc/v4.2/v4.2/27.html","urlType":"internal"},{"content":"12、Package","url":"/ivorysql-doc/v4.2/v4.2/28.html","urlType":"internal"},{"content":"13、Invisible Columns","url":"/ivorysql-doc/v4.2/v4.2/29.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v4.2/v4.2/23.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v4.2/v4.2/24.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v4.2/v4.2/25.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v4.0":{"displayVersion":"v4.0","title":"IvorySQL","version":"v4.0","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v4.0/v4.0/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v4.0/v4.0/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v4.0/v4.0/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v4.0/v4.0/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v4.0/v4.0/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v4.0/v4.0/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v4.0/v4.0/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v4.0/v4.0/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v4.0/v4.0/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v4.0/v4.0/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v4.0/v4.0/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v4.0/v4.0/10.html","urlType":"internal"}]},{"content":"IvorySQL Ecosystem","items":[{"content":"PostGIS","url":"/ivorysql-doc/v4.0/v4.0/11.html","urlType":"internal"},{"content":"pgvector","url":"/ivorysql-doc/v4.0/v4.0/12.html","urlType":"internal"}]},{"content":"List of Oracle compatible features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v4.0/v4.0/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v4.0/v4.0/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v4.0/v4.0/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v4.0/v4.0/17.html","urlType":"internal"},{"content":"5、Compatible with Oracle like","url":"/ivorysql-doc/v4.0/v4.0/18.html","urlType":"internal"},{"content":"6、Compatible with Oracle anonymous block","url":"/ivorysql-doc/v4.0/v4.0/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v4.0/v4.0/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v4.0/v4.0/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v4.0/v4.0/22.html","urlType":"internal"},{"content":"10、XML Function","url":"/ivorysql-doc/v4.0/v4.0/26.html","urlType":"internal"},{"content":"11、Compatible with Oracle sequence","url":"/ivorysql-doc/v4.0/v4.0/27.html","urlType":"internal"},{"content":"12、Package","url":"/ivorysql-doc/v4.0/v4.0/28.html","urlType":"internal"},{"content":"13、Invisible Columns","url":"/ivorysql-doc/v4.0/v4.0/29.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v4.0/v4.0/23.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v4.0/v4.0/24.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v4.0/v4.0/25.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v3.4":{"displayVersion":"v3.4","title":"IvorySQL","version":"v3.4","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v3.4/v3.4/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v3.4/v3.4/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v3.4/v3.4/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v3.4/v3.4/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v3.4/v3.4/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v3.4/v3.4/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v3.4/v3.4/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v3.4/v3.4/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v3.4/v3.4/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v3.4/v3.4/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v3.4/v3.4/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v3.4/v3.4/10.html","urlType":"internal"}]},{"content":"IvorySQL Ecosystem","items":[{"content":"PostGIS","url":"/ivorysql-doc/v3.4/v3.4/11.html","urlType":"internal"},{"content":"pgvector","url":"/ivorysql-doc/v3.4/v3.4/12.html","urlType":"internal"}]},{"content":"List of Oracle compatible features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v3.4/v3.4/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v3.4/v3.4/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v3.4/v3.4/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v3.4/v3.4/17.html","urlType":"internal"},{"content":"5、Compatible with Oracle like","url":"/ivorysql-doc/v3.4/v3.4/18.html","urlType":"internal"},{"content":"6、Compatible with Oracle anonymous block","url":"/ivorysql-doc/v3.4/v3.4/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v3.4/v3.4/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v3.4/v3.4/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v3.4/v3.4/22.html","urlType":"internal"},{"content":"10、XML Function","url":"/ivorysql-doc/v3.4/v3.4/26.html","urlType":"internal"},{"content":"11、Compatible with Oracle sequence","url":"/ivorysql-doc/v3.4/v3.4/27.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v3.4/v3.4/23.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v3.4/v3.4/24.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v3.4/v3.4/25.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v3.3":{"displayVersion":"v3.3","title":"IvorySQL","version":"v3.3","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v3.3/v3.3/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v3.3/v3.3/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v3.3/v3.3/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v3.3/v3.3/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v3.3/v3.3/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v3.3/v3.3/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v3.3/v3.3/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v3.3/v3.3/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v3.3/v3.3/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v3.3/v3.3/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v3.3/v3.3/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v3.3/v3.3/10.html","urlType":"internal"}]},{"content":"IvorySQL Ecosystem","items":[{"content":"PostGIS","url":"/ivorysql-doc/v3.3/v3.3/11.html","urlType":"internal"},{"content":"pgvector","url":"/ivorysql-doc/v3.3/v3.3/12.html","urlType":"internal"}]},{"content":"List of features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v3.3/v3.3/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v3.3/v3.3/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v3.3/v3.3/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v3.3/v3.3/17.html","urlType":"internal"},{"content":"5、Compatible with oracle like","url":"/ivorysql-doc/v3.3/v3.3/18.html","urlType":"internal"},{"content":"6、Compatible with oracle anonymous block","url":"/ivorysql-doc/v3.3/v3.3/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v3.3/v3.3/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v3.3/v3.3/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v3.3/v3.3/22.html","urlType":"internal"},{"content":"10、XML Function","url":"/ivorysql-doc/v3.3/v3.3/26.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v3.3/v3.3/23.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v3.3/v3.3/24.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v3.3/v3.3/25.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v3.2":{"displayVersion":"v3.2","title":"IvorySQL","version":"v3.2","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v3.2/v3.2/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v3.2/v3.2/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v3.2/v3.2/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v3.2/v3.2/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v3.2/v3.2/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v3.2/v3.2/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v3.2/v3.2/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v3.2/v3.2/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v3.2/v3.2/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v3.2/v3.2/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v3.2/v3.2/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v3.2/v3.2/10.html","urlType":"internal"}]},{"content":"IvorySQL Ecosystem","items":[{"content":"PostGIS","url":"/ivorysql-doc/v3.2/v3.2/11.html","urlType":"internal"},{"content":"pgvector","url":"/ivorysql-doc/v3.2/v3.2/12.html","urlType":"internal"}]},{"content":"List of features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v3.2/v3.2/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v3.2/v3.2/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v3.2/v3.2/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v3.2/v3.2/17.html","urlType":"internal"},{"content":"5、Compatible with oracle like","url":"/ivorysql-doc/v3.2/v3.2/18.html","urlType":"internal"},{"content":"6、Compatible with oracle anonymous block","url":"/ivorysql-doc/v3.2/v3.2/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v3.2/v3.2/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v3.2/v3.2/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v3.2/v3.2/22.html","urlType":"internal"},{"content":"10、XML Function","url":"/ivorysql-doc/v3.2/v3.2/26.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v3.2/v3.2/23.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v3.2/v3.2/24.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v3.2/v3.2/25.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v3.1":{"displayVersion":"v3.1","title":"IvorySQL","version":"v3.1","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v3.1/v3.1/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v3.1/v3.1/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v3.1/v3.1/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v3.1/v3.1/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Quick Start","url":"/ivorysql-doc/v3.1/v3.1/3.html","urlType":"internal"},{"content":"Monitoring","url":"/ivorysql-doc/v3.1/v3.1/4.html","urlType":"internal"},{"content":"Maintenance","url":"/ivorysql-doc/v3.1/v3.1/5.html","urlType":"internal"}]},{"content":"IvorySQL Advanced Feature","items":[{"content":"Installation","url":"/ivorysql-doc/v3.1/v3.1/6.html","urlType":"internal"},{"content":"Building Cluster","url":"/ivorysql-doc/v3.1/v3.1/7.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v3.1/v3.1/8.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v3.1/v3.1/9.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v3.1/v3.1/10.html","urlType":"internal"}]},{"content":"List of features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v3.1/v3.1/11.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v3.1/v3.1/12.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v3.1/v3.1/13.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v3.1/v3.1/14.html","urlType":"internal"},{"content":"5、Compatible with oracle like","url":"/ivorysql-doc/v3.1/v3.1/15.html","urlType":"internal"},{"content":"6、Compatible with oracle anonymous block","url":"/ivorysql-doc/v3.1/v3.1/16.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v3.1/v3.1/17.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v3.1/v3.1/18.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v3.1/v3.1/19.html","urlType":"internal"}]},{"content":"Community contribution","url":"/ivorysql-doc/v3.1/v3.1/20.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v3.1/v3.1/21.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v3.1/v3.1/22.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v3.0":{"displayVersion":"v3.0","title":"IvorySQL","version":"v3.0","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v3.0/v3.0/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v3.0/v3.0/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v3.0/v3.0/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v3.0/v3.0/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"User manual","url":"/ivorysql-doc/v3.0/v3.0/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v3.0/v3.0/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v3.0/v3.0/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v3.0/v3.0/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v3.0/v3.0/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v3.0/v3.0/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v3.0/v3.0/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v3.0/v3.0/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v3.0/v3.0/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v3.0/v3.0/12.html","urlType":"internal"},{"content":"List of features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v3.0/v3.0/14.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v3.0/v3.0/15.html","urlType":"internal"},{"content":"3、Case conversion","url":"/ivorysql-doc/v3.0/v3.0/16.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v3.0/v3.0/17.html","urlType":"internal"},{"content":"5、Compatible with oracle like","url":"/ivorysql-doc/v3.0/v3.0/18.html","urlType":"internal"},{"content":"6、Compatible with oracle anonymous block","url":"/ivorysql-doc/v3.0/v3.0/19.html","urlType":"internal"},{"content":"7、Compatible with Oracle functions and stored procedures","url":"/ivorysql-doc/v3.0/v3.0/20.html","urlType":"internal"},{"content":"8、Built-in data types and built-in functions","url":"/ivorysql-doc/v3.0/v3.0/21.html","urlType":"internal"},{"content":"9、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v3.0/v3.0/22.html","urlType":"internal"}]}],"root":true,"order":0}]},"ivorysql-doc/v2.3":{"displayVersion":"v2.3","title":"IvorySQL","version":"v2.3","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v2.3/v2.3/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v2.3/v2.3/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v2.3/v2.3/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v2.3/v2.3/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v2.3/v2.3/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v2.3/v2.3/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v2.3/v2.3/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v2.3/v2.3/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v2.3/v2.3/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v2.3/v2.3/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v2.3/v2.3/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v2.3/v2.3/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v2.3/v2.3/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v2.3/v2.3/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v2.2":{"displayVersion":"v2.2","title":"IvorySQL","version":"v2.2","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v2.2/v2.2/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v2.2/v2.2/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v2.2/v2.2/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v2.2/v2.2/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v2.2/v2.2/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v2.2/v2.2/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v2.2/v2.2/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v2.2/v2.2/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v2.2/v2.2/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v2.2/v2.2/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v2.2/v2.2/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v2.2/v2.2/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v2.2/v2.2/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v2.2/v2.2/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v2.1":{"displayVersion":"v2.1","title":"IvorySQL","version":"v2.1","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v2.1/v2.1/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v2.1/v2.1/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v2.1/v2.1/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v2.1/v2.1/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v2.1/v2.1/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v2.1/v2.1/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v2.1/v2.1/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v2.1/v2.1/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v2.1/v2.1/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v2.1/v2.1/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v2.1/v2.1/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v2.1/v2.1/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v2.1/v2.1/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v2.1/v2.1/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.8":{"displayVersion":"v1.8","title":"IvorySQL","version":"v1.8","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.8/v1.8/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.8/v1.8/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.8/v1.8/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.8/v1.8/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"User manual","url":"/ivorysql-doc/v1.8/v1.8/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.8/v1.8/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.8/v1.8/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.8/v1.8/6.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.8/v1.8/7.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.8/v1.8/8.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.8/v1.8/9.html","urlType":"internal"},{"content":"List of features","items":[{"content":"1、Ivorysql frame design","url":"/ivorysql-doc/v1.8/v1.8/10.html","urlType":"internal"},{"content":"2、GUC Framework","url":"/ivorysql-doc/v1.8/v1.8/11.html","urlType":"internal"},{"content":"3、Plugin adaptation","url":"/ivorysql-doc/v1.8/v1.8/12.html","urlType":"internal"},{"content":"4、Dual-mode design","url":"/ivorysql-doc/v1.8/v1.8/13.html","urlType":"internal"},{"content":"5、Added Oracle compatibility mode ports and IP","url":"/ivorysql-doc/v1.8/v1.8/14.html","urlType":"internal"}]}],"root":true,"order":0}]},"ivorysql-doc/v1.5":{"displayVersion":"v1.5","title":"IvorySQL","version":"v1.5","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.5/v1.5/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.5/v1.5/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.5/v1.5/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.5/v1.5/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.5/v1.5/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.5/v1.5/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.5/v1.5/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.5/v1.5/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.5/v1.5/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.5/v1.5/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.5/v1.5/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.5/v1.5/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.5/v1.5/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.5/v1.5/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.4":{"displayVersion":"v1.4","title":"IvorySQL","version":"v1.4","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.4/v1.4/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.4/v1.4/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.4/v1.4/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.4/v1.4/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.4/v1.4/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.4/v1.4/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.4/v1.4/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.4/v1.4/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.4/v1.4/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.4/v1.4/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.4/v1.4/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.4/v1.4/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.4/v1.4/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.4/v1.4/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.3":{"displayVersion":"v1.3","title":"IvorySQL","version":"v1.3","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.3/v1.3/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.3/v1.3/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.3/v1.3/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.3/v1.3/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.3/v1.3/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.3/v1.3/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.3/v1.3/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.3/v1.3/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.3/v1.3/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.3/v1.3/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.3/v1.3/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.3/v1.3/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.3/v1.3/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.3/v1.3/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.2":{"displayVersion":"v1.2","title":"IvorySQL","version":"v1.2","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.2/v1.2/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.2/v1.2/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.2/v1.2/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.2/v1.2/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.2/v1.2/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.2/v1.2/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.2/v1.2/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.2/v1.2/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.2/v1.2/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.2/v1.2/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.2/v1.2/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.2/v1.2/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.2/v1.2/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.2/v1.2/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.1":{"displayVersion":"v1.1","title":"IvorySQL","version":"v1.1","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.1/v1.1/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.1/v1.1/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.1/v1.1/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.1/v1.1/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.1/v1.1/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.1/v1.1/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.1/v1.1/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.1/v1.1/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.1/v1.1/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.1/v1.1/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.1/v1.1/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.1/v1.1/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.1/v1.1/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.1/v1.1/12.html","urlType":"internal"}],"root":true,"order":0}]},"ivorysql-doc/v1.0":{"displayVersion":"v1.0","title":"IvorySQL","version":"v1.0","name":"ivorysql-doc","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"IvorySQL Document Site","site-url":"https://docs.ivorysql.org","experimental":"","idprefix":"","idseparator":"-","page-pagination":"","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/ivorysql-doc/v1.0/v1.0/welcome.html","navigation":[{"items":[{"content":"Welcome","url":"/ivorysql-doc/v1.0/v1.0/welcome.html","urlType":"internal"},{"content":"Release","url":"/ivorysql-doc/v1.0/v1.0/1.html","urlType":"internal"},{"content":"About","url":"/ivorysql-doc/v1.0/v1.0/2.html","urlType":"internal"},{"content":"Getting Started with IvorySQL","items":[{"content":"Getting Started","url":"/ivorysql-doc/v1.0/v1.0/3.html","urlType":"internal"},{"content":"Administrator","url":"/ivorysql-doc/v1.0/v1.0/4.html","urlType":"internal"},{"content":"Operating personnel","url":"/ivorysql-doc/v1.0/v1.0/5.html","urlType":"internal"}]},{"content":"Installation Deployment","url":"/ivorysql-doc/v1.0/v1.0/6.html","urlType":"internal"},{"content":"Developer","url":"/ivorysql-doc/v1.0/v1.0/7.html","urlType":"internal"},{"content":"Operation Management","url":"/ivorysql-doc/v1.0/v1.0/8.html","urlType":"internal"},{"content":"Migration","url":"/ivorysql-doc/v1.0/v1.0/9.html","urlType":"internal"},{"content":"Community contribution","url":"/ivorysql-doc/v1.0/v1.0/10.html","urlType":"internal"},{"content":"Tool Reference","url":"/ivorysql-doc/v1.0/v1.0/11.html","urlType":"internal"},{"content":"FAQ","url":"/ivorysql-doc/v1.0/v1.0/12.html","urlType":"internal"}],"root":true,"order":0}]}}}})